.class public final Lcom/android/server/am/ActiveServices;
.super Ljava/lang/Object;
.source "qb/98832498 6c6e4010375fc1772bdd4e8a88b0896735443618f27021583382e8158243fc30"


# static fields
.field public static final DATE_FORMATTER:Ljava/text/SimpleDateFormat;

.field public static final sNumForegroundServices:Ljava/util/concurrent/atomic/AtomicReference;


# instance fields
.field public final mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

.field public final mAllowListWhileInUsePermissionInFgs:Landroid/util/ArraySet;

.field public final mAm:Lcom/android/server/am/ActivityManagerService;

.field public mAppStateTracker:Lcom/android/server/AppStateTracker;

.field public mBindServiceSeqCounter:J

.field public mCachedDeviceProvisioningPackage:Ljava/lang/String;

.field public final mDestroyingServices:Ljava/util/ArrayList;

.field public final mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

.field public final mFgsAppOpCallbacks:Landroid/util/SparseArray;

.field public final mFgsDeferralEligible:Landroid/util/SparseLongArray;

.field public mFgsDeferralRateLimited:Z

.field public final mFgsDelegations:Landroid/util/ArrayMap;

.field public final mFgsObservers:Landroid/os/RemoteCallbackList;

.field public mLastAnrDump:Ljava/lang/String;

.field public final mLastAnrDumpClearer:Lcom/android/server/am/ActiveServices$1;

.field public mMaxStartingBackground:I

.field public final mPendingBringups:Landroid/util/ArrayMap;

.field public final mPendingFgsNotifications:Ljava/util/ArrayList;

.field public final mPendingServices:Ljava/util/ArrayList;

.field public final mPostDeferredFGSNotifications:Lcom/android/server/am/ActiveServices$1;

.field public final mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

.field public final mRestartingServices:Ljava/util/ArrayList;

.field public final mRevivalServicesMessages:Ljava/util/List;

.field public mScreenOn:Z

.field public final mServiceConnections:Landroid/util/ArrayMap;

.field public final mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

.field public final mServiceMap:Landroid/util/SparseArray;

.field public final mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

.field public final mTimeLimitedFgsInfo:Landroid/util/SparseArray;

.field public mTmpCollectionResults:Ljava/util/ArrayList;


# direct methods
.method static constructor <clinit>()V
    .locals 3

    .line 1
    new-instance v0, Ljava/util/concurrent/atomic/AtomicReference;

    .line 2
    .line 3
    new-instance v1, Landroid/util/Pair;

    .line 4
    .line 5
    const/4 v2, 0x0

    .line 6
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 7
    .line 8
    .line 9
    move-result-object v2

    .line 10
    invoke-direct {v1, v2, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 11
    .line 12
    .line 13
    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicReference;-><init>(Ljava/lang/Object;)V

    .line 14
    .line 15
    .line 16
    sput-object v0, Lcom/android/server/am/ActiveServices;->sNumForegroundServices:Ljava/util/concurrent/atomic/AtomicReference;

    .line 17
    .line 18
    new-instance v0, Ljava/text/SimpleDateFormat;

    .line 19
    .line 20
    const-string/jumbo v1, "yyyy-MM-dd HH:mm:ss"

    .line 21
    .line 22
    .line 23
    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    .line 24
    .line 25
    .line 26
    sput-object v0, Lcom/android/server/am/ActiveServices;->DATE_FORMATTER:Ljava/text/SimpleDateFormat;

    .line 27
    .line 28
    return-void
.end method

.method public constructor <init>(Lcom/android/server/am/ActivityManagerService;)V
    .locals 5

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 2
    .line 3
    .line 4
    new-instance v0, Ljava/util/ArrayList;

    .line 5
    .line 6
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 7
    .line 8
    .line 9
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mRevivalServicesMessages:Ljava/util/List;

    .line 10
    .line 11
    new-instance v0, Landroid/util/SparseArray;

    .line 12
    .line 13
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    .line 14
    .line 15
    .line 16
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 17
    .line 18
    new-instance v0, Landroid/util/ArrayMap;

    .line 19
    .line 20
    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    .line 21
    .line 22
    .line 23
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    .line 24
    .line 25
    new-instance v0, Ljava/util/ArrayList;

    .line 26
    .line 27
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 28
    .line 29
    .line 30
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 31
    .line 32
    new-instance v0, Ljava/util/ArrayList;

    .line 33
    .line 34
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 35
    .line 36
    .line 37
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 38
    .line 39
    new-instance v0, Ljava/util/ArrayList;

    .line 40
    .line 41
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 42
    .line 43
    .line 44
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 45
    .line 46
    new-instance v0, Ljava/util/ArrayList;

    .line 47
    .line 48
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 49
    .line 50
    .line 51
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 52
    .line 53
    new-instance v0, Landroid/util/ArrayMap;

    .line 54
    .line 55
    invoke-direct {v0}, Landroid/util/ArrayMap;-><init>()V

    .line 56
    .line 57
    .line 58
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 59
    .line 60
    const-wide/16 v0, 0x0

    .line 61
    .line 62
    iput-wide v0, p0, Lcom/android/server/am/ActiveServices;->mBindServiceSeqCounter:J

    .line 63
    .line 64
    const/4 v0, 0x1

    .line 65
    iput-boolean v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDeferralRateLimited:Z

    .line 66
    .line 67
    new-instance v1, Landroid/util/SparseLongArray;

    .line 68
    .line 69
    invoke-direct {v1}, Landroid/util/SparseLongArray;-><init>()V

    .line 70
    .line 71
    .line 72
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mFgsDeferralEligible:Landroid/util/SparseLongArray;

    .line 73
    .line 74
    new-instance v1, Landroid/os/RemoteCallbackList;

    .line 75
    .line 76
    invoke-direct {v1}, Landroid/os/RemoteCallbackList;-><init>()V

    .line 77
    .line 78
    .line 79
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mFgsObservers:Landroid/os/RemoteCallbackList;

    .line 80
    .line 81
    new-instance v1, Landroid/util/ArrayMap;

    .line 82
    .line 83
    invoke-direct {v1}, Landroid/util/ArrayMap;-><init>()V

    .line 84
    .line 85
    .line 86
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 87
    .line 88
    const/4 v1, 0x0

    .line 89
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 90
    .line 91
    new-instance v1, Landroid/util/SparseArray;

    .line 92
    .line 93
    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    .line 94
    .line 95
    .line 96
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mFgsAppOpCallbacks:Landroid/util/SparseArray;

    .line 97
    .line 98
    new-instance v1, Landroid/util/ArraySet;

    .line 99
    .line 100
    invoke-direct {v1}, Landroid/util/ArraySet;-><init>()V

    .line 101
    .line 102
    .line 103
    iput-object v1, p0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 104
    .line 105
    iput-boolean v0, p0, Lcom/android/server/am/ActiveServices;->mScreenOn:Z

    .line 106
    .line 107
    new-instance v0, Landroid/util/SparseArray;

    .line 108
    .line 109
    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    .line 110
    .line 111
    .line 112
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 113
    .line 114
    new-instance v0, Landroid/util/ArraySet;

    .line 115
    .line 116
    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    .line 117
    .line 118
    .line 119
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mAllowListWhileInUsePermissionInFgs:Landroid/util/ArraySet;

    .line 120
    .line 121
    new-instance v0, Lcom/android/server/am/ActiveServices$1;

    .line 122
    .line 123
    const/4 v1, 0x0

    .line 124
    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActiveServices$1;-><init>(Lcom/android/server/am/ActiveServices;I)V

    .line 125
    .line 126
    .line 127
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mLastAnrDumpClearer:Lcom/android/server/am/ActiveServices$1;

    .line 128
    .line 129
    new-instance v0, Lcom/android/server/am/ActiveServices$1;

    .line 130
    .line 131
    const/4 v1, 0x1

    .line 132
    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActiveServices$1;-><init>(Lcom/android/server/am/ActiveServices;I)V

    .line 133
    .line 134
    .line 135
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mPostDeferredFGSNotifications:Lcom/android/server/am/ActiveServices$1;

    .line 136
    .line 137
    iput-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 138
    .line 139
    :try_start_0
    const-string/jumbo v0, "ro.config.max_starting_bg"

    .line 140
    .line 141
    .line 142
    const-string v1, "0"

    .line 143
    .line 144
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 145
    .line 146
    .line 147
    move-result-object v0

    .line 148
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 149
    .line 150
    .line 151
    move-result v0
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 152
    goto :goto_0

    .line 153
    :catch_0
    const/4 v0, 0x0

    .line 154
    :goto_0
    if-lez v0, :cond_0

    .line 155
    .line 156
    goto :goto_1

    .line 157
    :cond_0
    const/16 v0, 0x19

    .line 158
    .line 159
    :goto_1
    iput v0, p0, Lcom/android/server/am/ActiveServices;->mMaxStartingBackground:I

    .line 160
    .line 161
    const-string/jumbo v0, "platform_compat"

    .line 162
    .line 163
    .line 164
    invoke-static {v0}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 165
    .line 166
    .line 167
    new-instance v0, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 168
    .line 169
    invoke-direct {v0}, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;-><init>()V

    .line 170
    .line 171
    .line 172
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 173
    .line 174
    new-instance v0, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 175
    .line 176
    new-instance v1, Lcom/android/server/utils/AnrTimer$Args;

    .line 177
    .line 178
    invoke-direct {v1}, Lcom/android/server/utils/AnrTimer$Args;-><init>()V

    .line 179
    .line 180
    .line 181
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 182
    .line 183
    .line 184
    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 185
    .line 186
    const/16 v3, 0xc

    .line 187
    .line 188
    const-string v4, "SERVICE_TIMEOUT"

    .line 189
    .line 190
    invoke-direct {v0, v2, v3, v4, v1}, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;-><init>(Landroid/os/Handler;ILjava/lang/String;Lcom/android/server/utils/AnrTimer$Args;)V

    .line 191
    .line 192
    .line 193
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 194
    .line 195
    new-instance v0, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 196
    .line 197
    const/16 v1, 0x4e

    .line 198
    .line 199
    const-string v2, "SHORT_FGS_TIMEOUT"

    .line 200
    .line 201
    invoke-direct {v0, v1, p1, v2}, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;-><init>(ILcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    .line 202
    .line 203
    .line 204
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 205
    .line 206
    new-instance v0, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 207
    .line 208
    const/16 v1, 0x42

    .line 209
    .line 210
    const-string v2, "SERVICE_FOREGROUND_TIMEOUT"

    .line 211
    .line 212
    invoke-direct {v0, v1, p1, v2}, Lcom/android/server/am/ActiveServices$ProcessAnrTimer;-><init>(ILcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    .line 213
    .line 214
    .line 215
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 216
    .line 217
    return-void
.end method

.method public static generateAdditionalSeInfoFromService(Landroid/content/Intent;)Ljava/lang/String;
    .locals 2

    .line 1
    if-eqz p0, :cond_1

    .line 2
    .line 3
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    if-eqz v0, :cond_1

    .line 8
    .line 9
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 10
    .line 11
    .line 12
    move-result-object v0

    .line 13
    const-string v1, "android.service.voice.HotwordDetectionService"

    .line 14
    .line 15
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-nez v0, :cond_0

    .line 20
    .line 21
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 22
    .line 23
    .line 24
    move-result-object v0

    .line 25
    const-string v1, "android.service.voice.VisualQueryDetectionService"

    .line 26
    .line 27
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 28
    .line 29
    .line 30
    move-result v0

    .line 31
    if-nez v0, :cond_0

    .line 32
    .line 33
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 34
    .line 35
    .line 36
    move-result-object v0

    .line 37
    const-string v1, "android.service.wearable.WearableSensingService"

    .line 38
    .line 39
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v0

    .line 43
    if-nez v0, :cond_0

    .line 44
    .line 45
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 46
    .line 47
    .line 48
    move-result-object p0

    .line 49
    const-string v0, "android.service.ondeviceintelligence.OnDeviceSandboxedInferenceService"

    .line 50
    .line 51
    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 52
    .line 53
    .line 54
    move-result p0

    .line 55
    if-eqz p0, :cond_1

    .line 56
    .line 57
    :cond_0
    const-string p0, ":isolatedComputeApp"

    .line 58
    .line 59
    return-object p0

    .line 60
    :cond_1
    const-string p0, ""

    .line 61
    .line 62
    return-object p0
.end method

.method public static getProcessNameForService(Landroid/content/pm/ServiceInfo;Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;ZZZ)Ljava/lang/String;
    .locals 0

    .line 1
    if-eqz p4, :cond_0

    .line 2
    .line 3
    return-object p3

    .line 4
    :cond_0
    iget p4, p0, Landroid/content/pm/ServiceInfo;->flags:I

    .line 5
    .line 6
    and-int/lit8 p4, p4, 0x2

    .line 7
    .line 8
    if-eqz p4, :cond_3

    .line 9
    .line 10
    if-eqz p6, :cond_1

    .line 11
    .line 12
    iget-object p4, p0, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 13
    .line 14
    iget-object p4, p4, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    .line 15
    .line 16
    iget-object p6, p0, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 17
    .line 18
    invoke-virtual {p4, p6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 19
    .line 20
    .line 21
    move-result p4

    .line 22
    if-nez p4, :cond_1

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_1
    if-eqz p5, :cond_2

    .line 26
    .line 27
    const-string p0, ":ishared:"

    .line 28
    .line 29
    invoke-static {p2, p0, p3}, Lcom/android/server/AnyMotionDetector$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 30
    .line 31
    .line 32
    move-result-object p0

    .line 33
    return-object p0

    .line 34
    :cond_2
    new-instance p2, Ljava/lang/StringBuilder;

    .line 35
    .line 36
    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 37
    .line 38
    .line 39
    iget-object p0, p0, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 40
    .line 41
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    .line 43
    .line 44
    const-string p0, ":"

    .line 45
    .line 46
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 47
    .line 48
    .line 49
    invoke-virtual {p1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 50
    .line 51
    .line 52
    move-result-object p0

    .line 53
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 54
    .line 55
    .line 56
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 57
    .line 58
    .line 59
    move-result-object p0

    .line 60
    return-object p0

    .line 61
    :cond_3
    :goto_0
    iget-object p0, p0, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 62
    .line 63
    return-object p0
.end method

.method public static isServiceNeededLocked(Lcom/android/server/am/ServiceRecord;ZZ)Z
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    return v1

    .line 7
    :cond_0
    if-nez p1, :cond_1

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/am/ServiceRecord;->hasAutoCreateConnections()Z

    .line 10
    .line 11
    .line 12
    move-result p2

    .line 13
    :cond_1
    if-eqz p2, :cond_2

    .line 14
    .line 15
    return v1

    .line 16
    :cond_2
    const/4 p0, 0x0

    .line 17
    return p0
.end method

.method public static makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;
    .locals 6

    .line 1
    new-instance v0, Landroid/app/ActivityManager$RunningServiceInfo;

    .line 2
    .line 3
    invoke-direct {v0}, Landroid/app/ActivityManager$RunningServiceInfo;-><init>()V

    .line 4
    .line 5
    .line 6
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 7
    .line 8
    iput-object v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->service:Landroid/content/ComponentName;

    .line 9
    .line 10
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 11
    .line 12
    if-eqz v1, :cond_0

    .line 13
    .line 14
    iget v1, v1, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 15
    .line 16
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->pid:I

    .line 17
    .line 18
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 19
    .line 20
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 21
    .line 22
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->uid:I

    .line 23
    .line 24
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 25
    .line 26
    iput-object v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->process:Ljava/lang/String;

    .line 27
    .line 28
    iget-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 29
    .line 30
    iput-boolean v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->foreground:Z

    .line 31
    .line 32
    iget-wide v1, p0, Lcom/android/server/am/ServiceRecord;->createRealTime:J

    .line 33
    .line 34
    iput-wide v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->activeSince:J

    .line 35
    .line 36
    iget-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 37
    .line 38
    iput-boolean v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->started:Z

    .line 39
    .line 40
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 41
    .line 42
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 43
    .line 44
    .line 45
    move-result v1

    .line 46
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->clientCount:I

    .line 47
    .line 48
    iget v1, p0, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 49
    .line 50
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->crashCount:I

    .line 51
    .line 52
    iget-wide v1, p0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 53
    .line 54
    iput-wide v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->lastActivityTime:J

    .line 55
    .line 56
    iget-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 57
    .line 58
    if-eqz v1, :cond_1

    .line 59
    .line 60
    iget v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 61
    .line 62
    or-int/lit8 v1, v1, 0x2

    .line 63
    .line 64
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 65
    .line 66
    :cond_1
    iget-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 67
    .line 68
    if-eqz v1, :cond_2

    .line 69
    .line 70
    iget v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 71
    .line 72
    or-int/lit8 v1, v1, 0x1

    .line 73
    .line 74
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 75
    .line 76
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 77
    .line 78
    if-eqz v1, :cond_3

    .line 79
    .line 80
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 81
    .line 82
    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 83
    .line 84
    if-ne v2, v3, :cond_3

    .line 85
    .line 86
    iget v2, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 87
    .line 88
    or-int/lit8 v2, v2, 0x4

    .line 89
    .line 90
    iput v2, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 91
    .line 92
    :cond_3
    if-eqz v1, :cond_4

    .line 93
    .line 94
    iget-boolean v1, v1, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    .line 95
    .line 96
    if-eqz v1, :cond_4

    .line 97
    .line 98
    iget v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 99
    .line 100
    or-int/lit8 v1, v1, 0x8

    .line 101
    .line 102
    iput v1, v0, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I

    .line 103
    .line 104
    :cond_4
    iget-object p0, p0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 105
    .line 106
    invoke-virtual {p0}, Landroid/util/ArrayMap;->size()I

    .line 107
    .line 108
    .line 109
    move-result v1

    .line 110
    add-int/lit8 v1, v1, -0x1

    .line 111
    .line 112
    :goto_0
    if-ltz v1, :cond_7

    .line 113
    .line 114
    invoke-virtual {p0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 115
    .line 116
    .line 117
    move-result-object v2

    .line 118
    check-cast v2, Ljava/util/ArrayList;

    .line 119
    .line 120
    const/4 v3, 0x0

    .line 121
    :goto_1
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 122
    .line 123
    .line 124
    move-result v4

    .line 125
    if-ge v3, v4, :cond_6

    .line 126
    .line 127
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 128
    .line 129
    .line 130
    move-result-object v4

    .line 131
    check-cast v4, Lcom/android/server/am/ConnectionRecord;

    .line 132
    .line 133
    iget v5, v4, Lcom/android/server/am/ConnectionRecord;->clientLabel:I

    .line 134
    .line 135
    if-eqz v5, :cond_5

    .line 136
    .line 137
    iget-object p0, v4, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 138
    .line 139
    iget-object p0, p0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 140
    .line 141
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 142
    .line 143
    iget-object p0, p0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 144
    .line 145
    iput-object p0, v0, Landroid/app/ActivityManager$RunningServiceInfo;->clientPackage:Ljava/lang/String;

    .line 146
    .line 147
    iget p0, v4, Lcom/android/server/am/ConnectionRecord;->clientLabel:I

    .line 148
    .line 149
    iput p0, v0, Landroid/app/ActivityManager$RunningServiceInfo;->clientLabel:I

    .line 150
    .line 151
    return-object v0

    .line 152
    :cond_5
    add-int/lit8 v3, v3, 0x1

    .line 153
    .line 154
    goto :goto_1

    .line 155
    :cond_6
    add-int/lit8 v1, v1, -0x1

    .line 156
    .line 157
    goto :goto_0

    .line 158
    :cond_7
    return-object v0
.end method

.method public static requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V
    .locals 3

    .line 1
    const/4 v0, 0x2

    .line 2
    invoke-virtual {p0, v0}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 3
    .line 4
    .line 5
    move-result-object v0

    .line 6
    const-wide/16 v1, 0x0

    .line 7
    .line 8
    cmp-long v1, p1, v1

    .line 9
    .line 10
    if-eqz v1, :cond_0

    .line 11
    .line 12
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 13
    .line 14
    .line 15
    move-result-wide v1

    .line 16
    add-long/2addr v1, p1

    .line 17
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 18
    .line 19
    .line 20
    move-result-wide p1

    .line 21
    sub-long/2addr v1, p1

    .line 22
    invoke-virtual {p0, v0, v1, v2}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 23
    .line 24
    .line 25
    goto :goto_0

    .line 26
    :cond_0
    const/4 p1, 0x1

    .line 27
    iput-boolean p1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundAppsChanged:Z

    .line 28
    .line 29
    invoke-virtual {p0, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 30
    .line 31
    .line 32
    :goto_0
    return-void
.end method

.method public static resetFgsRestrictionLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 3

    .line 1
    const/4 v0, -0x1

    .line 2
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowWiu_noBinding:I

    .line 3
    .line 4
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowWiu_inBindService:I

    .line 5
    .line 6
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 7
    .line 8
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 9
    .line 10
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 11
    .line 12
    iput v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 13
    .line 14
    const/4 v1, 0x0

    .line 15
    iput-object v1, p0, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 16
    .line 17
    iput-object v1, p0, Lcom/android/server/am/ServiceRecord;->mInfoTempFgsAllowListReason:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 18
    .line 19
    const/4 v1, 0x0

    .line 20
    iput-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->mLoggedInfoAllowStartForeground:Z

    .line 21
    .line 22
    invoke-virtual {p0}, Lcom/android/server/am/ServiceRecord;->getFgsAllowWiu_forStart()I

    .line 23
    .line 24
    .line 25
    move-result v2

    .line 26
    if-eq v2, v0, :cond_0

    .line 27
    .line 28
    const/4 v1, 0x1

    .line 29
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    .line 30
    .line 31
    if-ne v0, v1, :cond_1

    .line 32
    .line 33
    goto :goto_0

    .line 34
    :cond_1
    iput-boolean v1, p0, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    .line 35
    .line 36
    :goto_0
    return-void
.end method

.method public static traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V
    .locals 3

    .line 1
    const-wide/16 v0, 0x40

    .line 2
    .line 3
    invoke-static {v0, v1}, Landroid/os/Trace;->isTagEnabled(J)Z

    .line 4
    .line 5
    .line 6
    move-result v2

    .line 7
    if-nez v2, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 11
    .line 12
    if-eqz p1, :cond_1

    .line 13
    .line 14
    invoke-virtual {p1}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    .line 15
    .line 16
    .line 17
    move-result-object p1

    .line 18
    goto :goto_0

    .line 19
    :cond_1
    const-string p1, "(?)"

    .line 20
    .line 21
    :goto_0
    new-instance v2, Ljava/lang/StringBuilder;

    .line 22
    .line 23
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 24
    .line 25
    .line 26
    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 27
    .line 28
    .line 29
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 30
    .line 31
    .line 32
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 33
    .line 34
    .line 35
    move-result-object p0

    .line 36
    invoke-static {v0, v1, p0}, Landroid/os/Trace;->instant(JLjava/lang/String;)V

    .line 37
    .line 38
    .line 39
    return-void
.end method

.method public static updateAllowlistManagerLocked(Lcom/android/server/am/ProcessServiceRecord;)V
    .locals 3

    .line 1
    const/4 v0, 0x0

    .line 2
    iput-boolean v0, p0, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 3
    .line 4
    iget-object v0, p0, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 5
    .line 6
    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    const/4 v1, 0x1

    .line 11
    sub-int/2addr v0, v1

    .line 12
    :goto_0
    if-ltz v0, :cond_1

    .line 13
    .line 14
    invoke-virtual {p0, v0}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    .line 15
    .line 16
    .line 17
    move-result-object v2

    .line 18
    iget-boolean v2, v2, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 19
    .line 20
    if-eqz v2, :cond_0

    .line 21
    .line 22
    iput-boolean v1, p0, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 23
    .line 24
    goto :goto_1

    .line 25
    :cond_0
    add-int/lit8 v0, v0, -0x1

    .line 26
    .line 27
    goto :goto_0

    .line 28
    :cond_1
    :goto_1
    return-void
.end method


# virtual methods
.method public final appRestrictedAnyInBackground(ILjava/lang/String;)Z
    .locals 3

    .line 1
    sget-boolean v0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    sget-object v0, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 7
    .line 8
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 9
    .line 10
    .line 11
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    .line 12
    .line 13
    .line 14
    move-result v2

    .line 15
    if-eqz v2, :cond_0

    .line 16
    .line 17
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    .line 18
    .line 19
    .line 20
    move-result v2

    .line 21
    invoke-virtual {v0, v2, p2}, Lcom/android/server/am/MARsPolicyManager;->isMARsTarget(ILjava/lang/String;)Z

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    if-eqz v0, :cond_0

    .line 26
    .line 27
    return v1

    .line 28
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAppStateTracker:Lcom/android/server/AppStateTracker;

    .line 29
    .line 30
    if-nez v0, :cond_1

    .line 31
    .line 32
    const-class v0, Lcom/android/server/AppStateTracker;

    .line 33
    .line 34
    invoke-static {v0}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 35
    .line 36
    .line 37
    move-result-object v0

    .line 38
    check-cast v0, Lcom/android/server/AppStateTracker;

    .line 39
    .line 40
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mAppStateTracker:Lcom/android/server/AppStateTracker;

    .line 41
    .line 42
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAppStateTracker:Lcom/android/server/AppStateTracker;

    .line 43
    .line 44
    if-eqz p0, :cond_2

    .line 45
    .line 46
    invoke-interface {p0, p1, p2}, Lcom/android/server/AppStateTracker;->isAppBackgroundRestricted(ILjava/lang/String;)Z

    .line 47
    .line 48
    .line 49
    move-result p0

    .line 50
    return p0

    .line 51
    :cond_2
    return v1
.end method

.method public final applyForegroundServiceNotificationLocked(Landroid/app/Notification;Ljava/lang/String;ILjava/lang/String;I)Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;
    .locals 4

    .line 1
    if-eqz p2, :cond_0

    .line 2
    .line 3
    sget-object p0, Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;->NOT_FOREGROUND_SERVICE:Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;

    .line 4
    .line 5
    return-object p0

    .line 6
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 7
    .line 8
    invoke-virtual {p2, p5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 9
    .line 10
    .line 11
    move-result-object p2

    .line 12
    check-cast p2, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 13
    .line 14
    if-nez p2, :cond_1

    .line 15
    .line 16
    sget-object p0, Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;->NOT_FOREGROUND_SERVICE:Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;

    .line 17
    .line 18
    return-object p0

    .line 19
    :cond_1
    const/4 p5, 0x0

    .line 20
    move v0, p5

    .line 21
    :goto_0
    iget-object v1, p2, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 22
    .line 23
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 24
    .line 25
    .line 26
    move-result v1

    .line 27
    if-ge v0, v1, :cond_13

    .line 28
    .line 29
    iget-object v1, p2, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 30
    .line 31
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 32
    .line 33
    .line 34
    move-result-object v1

    .line 35
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 36
    .line 37
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 38
    .line 39
    if-eqz v2, :cond_12

    .line 40
    .line 41
    iget v2, v1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 42
    .line 43
    if-ne p3, v2, :cond_12

    .line 44
    .line 45
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 46
    .line 47
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 48
    .line 49
    invoke-virtual {p4, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 50
    .line 51
    .line 52
    move-result v2

    .line 53
    if-nez v2, :cond_2

    .line 54
    .line 55
    goto/16 :goto_7

    .line 56
    .line 57
    :cond_2
    iget p2, p1, Landroid/app/Notification;->flags:I

    .line 58
    .line 59
    or-int/lit8 p2, p2, 0x40

    .line 60
    .line 61
    iput p2, p1, Landroid/app/Notification;->flags:I

    .line 62
    .line 63
    iput-object p1, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 64
    .line 65
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 66
    .line 67
    .line 68
    move-result-wide p1

    .line 69
    iget-object p3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 70
    .line 71
    iget-object p3, p3, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 72
    .line 73
    iget-boolean p3, p3, Lcom/android/server/am/ActivityManagerConstants;->mFlagFgsNotificationDeferralEnabled:Z

    .line 74
    .line 75
    if-nez p3, :cond_3

    .line 76
    .line 77
    goto :goto_2

    .line 78
    :cond_3
    iget-boolean p3, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationDeferred:Z

    .line 79
    .line 80
    if-eqz p3, :cond_4

    .line 81
    .line 82
    iget-wide p3, v1, Lcom/android/server/am/ServiceRecord;->fgDisplayTime:J

    .line 83
    .line 84
    cmp-long p3, p1, p3

    .line 85
    .line 86
    if-ltz p3, :cond_4

    .line 87
    .line 88
    goto :goto_2

    .line 89
    :cond_4
    iget-wide p3, v1, Lcom/android/server/am/ServiceRecord;->fgDisplayTime:J

    .line 90
    .line 91
    cmp-long p3, p1, p3

    .line 92
    .line 93
    if-gez p3, :cond_5

    .line 94
    .line 95
    goto :goto_1

    .line 96
    :cond_5
    iget-object p3, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 97
    .line 98
    iget p3, p3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 99
    .line 100
    iget-object p4, p0, Lcom/android/server/am/ActiveServices;->mFgsDeferralEligible:Landroid/util/SparseLongArray;

    .line 101
    .line 102
    const-wide/16 v2, 0x0

    .line 103
    .line 104
    invoke-virtual {p4, p3, v2, v3}, Landroid/util/SparseLongArray;->get(IJ)J

    .line 105
    .line 106
    .line 107
    move-result-wide p3

    .line 108
    cmp-long p1, p1, p3

    .line 109
    .line 110
    if-gez p1, :cond_6

    .line 111
    .line 112
    goto :goto_2

    .line 113
    :cond_6
    :goto_1
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 114
    .line 115
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 116
    .line 117
    iget-boolean p1, p1, Lcom/android/server/am/ActivityManagerConstants;->mFlagFgsNotificationDeferralApiGated:Z

    .line 118
    .line 119
    const/16 p2, 0x1f

    .line 120
    .line 121
    if-eqz p1, :cond_7

    .line 122
    .line 123
    iget-object p1, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 124
    .line 125
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 126
    .line 127
    if-ge p1, p2, :cond_7

    .line 128
    .line 129
    goto :goto_2

    .line 130
    :cond_7
    iget-boolean p1, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 131
    .line 132
    if-eqz p1, :cond_8

    .line 133
    .line 134
    goto :goto_2

    .line 135
    :cond_8
    iget-object p1, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 136
    .line 137
    invoke-virtual {p1}, Landroid/app/Notification;->isForegroundDisplayForceDeferred()Z

    .line 138
    .line 139
    .line 140
    move-result p1

    .line 141
    if-nez p1, :cond_a

    .line 142
    .line 143
    iget-object p1, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 144
    .line 145
    invoke-virtual {p1}, Landroid/app/Notification;->shouldShowForegroundImmediately()Z

    .line 146
    .line 147
    .line 148
    move-result p1

    .line 149
    if-eqz p1, :cond_9

    .line 150
    .line 151
    goto :goto_2

    .line 152
    :cond_9
    iget p1, v1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 153
    .line 154
    and-int/lit8 p1, p1, 0x36

    .line 155
    .line 156
    if-eqz p1, :cond_a

    .line 157
    .line 158
    :goto_2
    iput-boolean p5, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationDeferred:Z

    .line 159
    .line 160
    sget-object p0, Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;->SHOW_IMMEDIATELY:Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;

    .line 161
    .line 162
    return-object p0

    .line 163
    :cond_a
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 164
    .line 165
    .line 166
    move-result-wide p3

    .line 167
    iget-object p1, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 168
    .line 169
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 170
    .line 171
    invoke-virtual {v1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 172
    .line 173
    .line 174
    move-result v0

    .line 175
    if-eqz v0, :cond_b

    .line 176
    .line 177
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 178
    .line 179
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 180
    .line 181
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->mFgsNotificationDeferralIntervalForShort:J

    .line 182
    .line 183
    goto :goto_3

    .line 184
    :cond_b
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 185
    .line 186
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 187
    .line 188
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->mFgsNotificationDeferralInterval:J

    .line 189
    .line 190
    :goto_3
    add-long/2addr p3, v2

    .line 191
    move v0, p5

    .line 192
    :goto_4
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 193
    .line 194
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 195
    .line 196
    .line 197
    move-result v2

    .line 198
    if-ge v0, v2, :cond_e

    .line 199
    .line 200
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 201
    .line 202
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 203
    .line 204
    .line 205
    move-result-object v2

    .line 206
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 207
    .line 208
    if-ne v2, v1, :cond_c

    .line 209
    .line 210
    goto/16 :goto_6

    .line 211
    .line 212
    :cond_c
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 213
    .line 214
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 215
    .line 216
    if-ne p1, v3, :cond_d

    .line 217
    .line 218
    iget-wide v2, v2, Lcom/android/server/am/ServiceRecord;->fgDisplayTime:J

    .line 219
    .line 220
    invoke-static {p3, p4, v2, v3}, Ljava/lang/Math;->min(JJ)J

    .line 221
    .line 222
    .line 223
    move-result-wide p3

    .line 224
    :cond_d
    add-int/lit8 v0, v0, 0x1

    .line 225
    .line 226
    goto :goto_4

    .line 227
    :cond_e
    iget-boolean v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDeferralRateLimited:Z

    .line 228
    .line 229
    if-eqz v0, :cond_10

    .line 230
    .line 231
    invoke-virtual {v1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 232
    .line 233
    .line 234
    move-result v0

    .line 235
    if-eqz v0, :cond_f

    .line 236
    .line 237
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 238
    .line 239
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 240
    .line 241
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->mFgsNotificationDeferralExclusionTimeForShort:J

    .line 242
    .line 243
    goto :goto_5

    .line 244
    :cond_f
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 245
    .line 246
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 247
    .line 248
    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerConstants;->mFgsNotificationDeferralExclusionTime:J

    .line 249
    .line 250
    :goto_5
    add-long/2addr v2, p3

    .line 251
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDeferralEligible:Landroid/util/SparseLongArray;

    .line 252
    .line 253
    invoke-virtual {v0, p1, v2, v3}, Landroid/util/SparseLongArray;->put(IJ)V

    .line 254
    .line 255
    .line 256
    :cond_10
    iput-wide p3, v1, Lcom/android/server/am/ServiceRecord;->fgDisplayTime:J

    .line 257
    .line 258
    const/4 p1, 0x1

    .line 259
    iput-boolean p1, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationDeferred:Z

    .line 260
    .line 261
    iput-boolean p1, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationWasDeferred:Z

    .line 262
    .line 263
    iput-boolean p5, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 264
    .line 265
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 266
    .line 267
    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 268
    .line 269
    .line 270
    iget-object p1, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 271
    .line 272
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 273
    .line 274
    if-ge p1, p2, :cond_11

    .line 275
    .line 276
    new-instance p1, Ljava/lang/StringBuilder;

    .line 277
    .line 278
    const-string p2, "Deferring FGS notification in legacy app "

    .line 279
    .line 280
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 281
    .line 282
    .line 283
    iget-object p2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 284
    .line 285
    iget-object p2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 286
    .line 287
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 288
    .line 289
    .line 290
    const-string p2, "/"

    .line 291
    .line 292
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 293
    .line 294
    .line 295
    iget-object p2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 296
    .line 297
    iget p2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 298
    .line 299
    invoke-static {p2}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    .line 300
    .line 301
    .line 302
    move-result-object p2

    .line 303
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 304
    .line 305
    .line 306
    const-string p2, " : "

    .line 307
    .line 308
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 309
    .line 310
    .line 311
    iget-object p2, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 312
    .line 313
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 314
    .line 315
    .line 316
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 317
    .line 318
    .line 319
    move-result-object p1

    .line 320
    const-string p2, "ActivityManager"

    .line 321
    .line 322
    invoke-static {p2, p1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 323
    .line 324
    .line 325
    :cond_11
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 326
    .line 327
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 328
    .line 329
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mPostDeferredFGSNotifications:Lcom/android/server/am/ActiveServices$1;

    .line 330
    .line 331
    invoke-virtual {p1, p0, p3, p4}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 332
    .line 333
    .line 334
    :goto_6
    sget-object p0, Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;->UPDATE_ONLY:Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;

    .line 335
    .line 336
    return-object p0

    .line 337
    :cond_12
    :goto_7
    add-int/lit8 v0, v0, 0x1

    .line 338
    .line 339
    goto/16 :goto_0

    .line 340
    .line 341
    :cond_13
    sget-object p0, Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;->NOT_FOREGROUND_SERVICE:Landroid/app/ActivityManagerInternal$ServiceNotificationPolicy;

    .line 342
    .line 343
    return-object p0
.end method

.method public final attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v8, p1

    .line 4
    .line 5
    move-object/from16 v9, p2

    .line 6
    .line 7
    iget-object v1, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 8
    .line 9
    iget v2, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 10
    .line 11
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 12
    .line 13
    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 14
    .line 15
    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ActiveServices;->appRestrictedAnyInBackground(ILjava/lang/String;)Z

    .line 16
    .line 17
    .line 18
    move-result v2

    .line 19
    iput-boolean v2, v1, Lcom/android/server/am/ProcessStateRecord;->mBackgroundRestricted:Z

    .line 20
    .line 21
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 22
    .line 23
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 24
    .line 25
    .line 26
    move-result v1

    .line 27
    const/4 v10, 0x1

    .line 28
    const/4 v11, 0x0

    .line 29
    if-lez v1, :cond_4

    .line 30
    .line 31
    const/4 v1, 0x0

    .line 32
    move v2, v11

    .line 33
    move v3, v2

    .line 34
    :goto_0
    :try_start_0
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 35
    .line 36
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 37
    .line 38
    .line 39
    move-result v4

    .line 40
    if-ge v2, v4, :cond_5

    .line 41
    .line 42
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 43
    .line 44
    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 45
    .line 46
    .line 47
    move-result-object v4

    .line 48
    move-object v12, v4

    .line 49
    check-cast v12, Lcom/android/server/am/ServiceRecord;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 50
    .line 51
    :try_start_1
    iget-object v1, v12, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 52
    .line 53
    if-eq v8, v1, :cond_0

    .line 54
    .line 55
    iget v1, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 56
    .line 57
    iget-object v4, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 58
    .line 59
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 60
    .line 61
    if-ne v1, v4, :cond_3

    .line 62
    .line 63
    iget-object v1, v12, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 64
    .line 65
    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 66
    .line 67
    .line 68
    move-result v1

    .line 69
    if-nez v1, :cond_0

    .line 70
    .line 71
    goto :goto_2

    .line 72
    :catch_0
    move-exception v0

    .line 73
    move-object v1, v12

    .line 74
    goto :goto_4

    .line 75
    :cond_0
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 76
    .line 77
    iget v5, v8, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 78
    .line 79
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 80
    .line 81
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    add-int/lit8 v13, v2, -0x1

    .line 85
    .line 86
    iget-object v1, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 87
    .line 88
    iget-object v2, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 89
    .line 90
    iget-wide v6, v1, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    .line 91
    .line 92
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 93
    .line 94
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 95
    .line 96
    invoke-virtual {v8, v2, v6, v7, v1}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;JLcom/android/server/am/ProcessStatsService;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 97
    .line 98
    .line 99
    const-wide/16 v14, 0x40

    .line 100
    .line 101
    :try_start_2
    invoke-static {v14, v15}, Landroid/os/Trace;->isTagEnabled(J)Z

    .line 102
    .line 103
    .line 104
    move-result v1

    .line 105
    if-eqz v1, :cond_1

    .line 106
    .line 107
    new-instance v1, Ljava/lang/StringBuilder;

    .line 108
    .line 109
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 110
    .line 111
    .line 112
    const-string/jumbo v2, "realStartServiceLocked: "

    .line 113
    .line 114
    .line 115
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 116
    .line 117
    .line 118
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 119
    .line 120
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 121
    .line 122
    .line 123
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 124
    .line 125
    .line 126
    move-result-object v1

    .line 127
    invoke-static {v14, v15, v1}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 128
    .line 129
    .line 130
    goto :goto_1

    .line 131
    :catchall_0
    move-exception v0

    .line 132
    goto :goto_3

    .line 133
    :cond_1
    :goto_1
    iget-boolean v6, v12, Lcom/android/server/am/ServiceRecord;->createdFromFg:Z

    .line 134
    .line 135
    const/4 v7, 0x0

    .line 136
    move-object/from16 v1, p0

    .line 137
    .line 138
    move-object v2, v12

    .line 139
    move-object/from16 v3, p1

    .line 140
    .line 141
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;IZI)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 142
    .line 143
    .line 144
    :try_start_3
    invoke-static {v14, v15}, Landroid/os/Trace;->traceEnd(J)V

    .line 145
    .line 146
    .line 147
    invoke-static {v12, v11, v11}, Lcom/android/server/am/ActiveServices;->isServiceNeededLocked(Lcom/android/server/am/ServiceRecord;ZZ)Z

    .line 148
    .line 149
    .line 150
    move-result v1

    .line 151
    if-nez v1, :cond_2

    .line 152
    .line 153
    invoke-virtual {v0, v12, v10}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 154
    .line 155
    .line 156
    :cond_2
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 157
    .line 158
    const/4 v2, 0x6

    .line 159
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 160
    .line 161
    .line 162
    move v3, v10

    .line 163
    move v2, v13

    .line 164
    :cond_3
    :goto_2
    add-int/2addr v2, v10

    .line 165
    move-object v1, v12

    .line 166
    goto/16 :goto_0

    .line 167
    .line 168
    :goto_3
    invoke-static {v14, v15}, Landroid/os/Trace;->traceEnd(J)V

    .line 169
    .line 170
    .line 171
    throw v0
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    .line 172
    :catch_1
    move-exception v0

    .line 173
    :goto_4
    new-instance v2, Ljava/lang/StringBuilder;

    .line 174
    .line 175
    const-string v3, "Exception in new application when starting service "

    .line 176
    .line 177
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 178
    .line 179
    .line 180
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 181
    .line 182
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 183
    .line 184
    .line 185
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 186
    .line 187
    .line 188
    move-result-object v1

    .line 189
    const-string v2, "ActivityManager"

    .line 190
    .line 191
    invoke-static {v2, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 192
    .line 193
    .line 194
    throw v0

    .line 195
    :cond_4
    move v3, v11

    .line 196
    :cond_5
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 197
    .line 198
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 199
    .line 200
    .line 201
    move-result v1

    .line 202
    if-lez v1, :cond_9

    .line 203
    .line 204
    move v1, v11

    .line 205
    :goto_5
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 206
    .line 207
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 208
    .line 209
    .line 210
    move-result v2

    .line 211
    if-ge v11, v2, :cond_8

    .line 212
    .line 213
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 214
    .line 215
    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 216
    .line 217
    .line 218
    move-result-object v2

    .line 219
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 220
    .line 221
    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 222
    .line 223
    if-eq v8, v4, :cond_6

    .line 224
    .line 225
    iget v4, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 226
    .line 227
    iget-object v5, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 228
    .line 229
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 230
    .line 231
    if-ne v4, v5, :cond_7

    .line 232
    .line 233
    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 234
    .line 235
    invoke-virtual {v9, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 236
    .line 237
    .line 238
    move-result v4

    .line 239
    if-nez v4, :cond_6

    .line 240
    .line 241
    goto :goto_6

    .line 242
    :cond_6
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 243
    .line 244
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 245
    .line 246
    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 247
    .line 248
    invoke-virtual {v1, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 249
    .line 250
    .line 251
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 252
    .line 253
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 254
    .line 255
    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 256
    .line 257
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 258
    .line 259
    .line 260
    move v1, v10

    .line 261
    :cond_7
    :goto_6
    add-int/lit8 v11, v11, 0x1

    .line 262
    .line 263
    goto :goto_5

    .line 264
    :cond_8
    if-eqz v1, :cond_9

    .line 265
    .line 266
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 267
    .line 268
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 269
    .line 270
    new-instance v2, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;

    .line 271
    .line 272
    const/4 v4, 0x0

    .line 273
    invoke-direct {v2, v4, v0}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;-><init>(ILjava/lang/Object;)V

    .line 274
    .line 275
    .line 276
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 277
    .line 278
    .line 279
    :cond_9
    return v3
.end method

.method public final bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)I
    .locals 48

    move-object/from16 v15, p0

    move-object/from16 v0, p1

    move-object/from16 v14, p2

    move-object/from16 v1, p3

    move/from16 v13, p14

    const/4 v11, 0x4

    const/4 v9, 0x1

    .line 1
    const-string v8, "Failure sending service "

    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 2
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    .line 3
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 5
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v5

    if-eqz v5, :cond_61

    const/16 v20, 0x0

    const/4 v4, 0x0

    if-eqz v14, :cond_3

    .line 6
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    check-cast v2, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;

    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 7
    invoke-static/range {p2 .. p2}, Lcom/android/server/wm/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v2

    if-eqz v2, :cond_2

    .line 8
    iget-boolean v3, v2, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    if-nez v3, :cond_0

    goto :goto_2

    .line 9
    :cond_0
    monitor-enter v2

    .line 10
    :try_start_0
    iget-object v3, v2, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    if-nez v3, :cond_1

    .line 11
    new-instance v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    invoke-direct {v3, v2}, Lcom/android/server/wm/ActivityServiceConnectionsHolder;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    iput-object v3, v2, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    goto :goto_0

    :catchall_0
    move-exception v0

    goto :goto_1

    .line 12
    :cond_1
    :goto_0
    iget-object v3, v2, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    monitor-exit v2

    goto :goto_3

    .line 13
    :goto_1
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    :cond_2
    :goto_2
    move-object/from16 v3, v20

    :goto_3
    if-nez v3, :cond_4

    .line 14
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Binding with unknown activity: "

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v4

    :cond_3
    move-object/from16 v3, v20

    .line 15
    :cond_4
    iget-object v2, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v12, 0x3e8

    if-ne v2, v12, :cond_5

    move v2, v9

    goto :goto_4

    :cond_5
    move v2, v4

    :goto_4
    if-eqz v2, :cond_8

    .line 16
    invoke-virtual {v1, v9}, Landroid/content/Intent;->setDefusable(Z)V

    .line 17
    const-string v9, "android.intent.extra.client_intent"

    invoke-virtual {v1, v9}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v9

    check-cast v9, Landroid/app/PendingIntent;

    if-eqz v9, :cond_7

    .line 18
    const-string v10, "android.intent.extra.client_label"

    invoke-virtual {v1, v10, v4}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v10

    if-eqz v10, :cond_6

    .line 19
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;

    move-result-object v1

    :cond_6
    move-object/from16 v34, v9

    move/from16 v33, v10

    move-object v10, v1

    goto :goto_5

    :cond_7
    move-object v10, v1

    move/from16 v33, v4

    move-object/from16 v34, v9

    goto :goto_5

    :cond_8
    move-object v10, v1

    move/from16 v33, v4

    move-object/from16 v34, v20

    :goto_5
    const-wide/32 v21, 0x8000000

    and-long v21, p6, v21

    const-wide/16 v35, 0x0

    cmp-long v1, v21, v35

    if-eqz v1, :cond_9

    .line 20
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const-string v9, "android.permission.MANAGE_ACTIVITY_TASKS"

    const-string v4, "BIND_TREAT_LIKE_ACTIVITY"

    invoke-virtual {v1, v9, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_9
    const-wide/32 v21, 0x80000

    and-long v21, p6, v21

    cmp-long v1, v21, v35

    if-eqz v1, :cond_b

    if-eqz v2, :cond_a

    goto :goto_6

    .line 21
    :cond_a
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Non-system caller (pid="

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ") set BIND_SCHEDULE_LIKE_TOP_APP when binding service "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_b
    :goto_6
    const-wide/32 v21, 0x1000000

    and-long v21, p6, v21

    cmp-long v1, v21, v35

    if-eqz v1, :cond_d

    if-eqz v2, :cond_c

    goto :goto_7

    .line 22
    :cond_c
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Non-system caller "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " (pid="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") set BIND_ALLOW_WHITELIST_MANAGEMENT when binding service "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_d
    :goto_7
    const-wide/32 v21, 0x400000

    and-long v21, p6, v21

    cmp-long v1, v21, v35

    if-eqz v1, :cond_f

    if-eqz v2, :cond_e

    goto :goto_8

    .line 23
    :cond_e
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Non-system caller "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " (pid="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") set BIND_ALLOW_INSTANT when binding service "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_f
    :goto_8
    const-wide/32 v21, 0x10000

    and-long v21, p6, v21

    cmp-long v4, v21, v35

    if-eqz v4, :cond_11

    if-eqz v2, :cond_10

    goto :goto_9

    .line 24
    :cond_10
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "Non-system caller (pid="

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ") set BIND_ALMOST_PERCEPTIBLE when binding service "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_11
    :goto_9
    const-wide/32 v21, 0x100000

    and-long v21, p6, v21

    cmp-long v2, v21, v35

    if-eqz v2, :cond_12

    .line 25
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const-string v4, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    const-string v9, "BIND_ALLOW_BACKGROUND_ACTIVITY_STARTS"

    invoke-virtual {v2, v4, v9}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    :cond_12
    const-wide/32 v21, 0x40000

    and-long v21, p6, v21

    cmp-long v2, v21, v35

    if-eqz v2, :cond_13

    .line 26
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const-string v4, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    const-string v9, "BIND_ALLOW_FOREGROUND_SERVICE_STARTS_FROM_BACKGROUND"

    invoke-virtual {v2, v4, v9}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 27
    :cond_13
    iget-object v2, v5, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 28
    iget v2, v2, Lcom/android/server/am/ProcessStateRecord;->mSetSchedGroup:I

    if-eqz v2, :cond_14

    const/16 v37, 0x1

    goto :goto_a

    :cond_14
    const/16 v37, 0x0

    :goto_a
    const/high16 v2, -0x80000000

    .line 29
    invoke-static {v2}, Ljava/lang/Integer;->toUnsignedLong(I)J

    move-result-wide v21

    and-long v21, p6, v21

    cmp-long v2, v21, v35

    if-nez v2, :cond_16

    const-wide/high16 v21, 0x4000000000000000L    # 2.0

    and-long v21, p6, v21

    cmp-long v2, v21, v35

    if-eqz v2, :cond_15

    goto :goto_b

    :cond_15
    const/16 v21, 0x0

    goto :goto_c

    :cond_16
    :goto_b
    const/16 v21, 0x1

    :goto_c
    if-eqz v1, :cond_17

    const/16 v22, 0x1

    goto :goto_d

    :cond_17
    const/16 v22, 0x0

    :goto_d
    const-wide/16 v1, 0x2000

    and-long v1, p6, v1

    cmp-long v1, v1, v35

    if-eqz v1, :cond_18

    const/16 v23, 0x1

    goto :goto_e

    :cond_18
    const/16 v23, 0x0

    :goto_e
    const-wide/16 v1, 0x4000

    and-long v1, p6, v1

    cmp-long v1, v1, v35

    if-eqz v1, :cond_19

    .line 30
    invoke-static {}, Lcom/android/internal/hidden_from_bootclasspath/android/content/flags/Flags;->enableBindPackageIsolatedProcess()Z

    move-result v1

    if-eqz v1, :cond_19

    const/16 v24, 0x1

    goto :goto_f

    :cond_19
    const/16 v24, 0x0

    :goto_f
    const-wide v1, 0x200000000L

    and-long v1, p6, v1

    cmp-long v1, v1, v35

    if-eqz v1, :cond_1a

    const/16 v25, 0x1

    goto :goto_10

    :cond_1a
    const/16 v25, 0x0

    :goto_10
    if-lez p10, :cond_1b

    .line 31
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    move-object/from16 v9, p12

    invoke-virtual {v1, v9}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    move-object v4, v1

    goto :goto_11

    :cond_1b
    move-object/from16 v9, p12

    move-object/from16 v4, v20

    :goto_11
    const/4 v1, 0x1

    move v2, v12

    move v12, v1

    const/16 v16, 0x0

    move-object/from16 v1, p0

    move-object v2, v10

    move-object/from16 p3, v3

    move-object/from16 v3, p8

    move-object/from16 v38, v4

    move/from16 v4, p9

    move-object/from16 v39, v5

    move/from16 v5, p10

    move/from16 v40, v6

    move-object/from16 v6, p11

    move/from16 v41, v7

    move-object/from16 v7, p4

    move-object/from16 v42, v8

    move-object/from16 v8, p13

    move/from16 v9, v41

    move-object/from16 v43, v10

    move/from16 v10, v40

    move/from16 v11, p14

    move/from16 v13, v37

    move/from16 v14, v21

    move/from16 v15, v22

    move/from16 v17, v23

    move/from16 v18, v24

    move/from16 v19, v25

    .line 32
    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActiveServices;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    move-result-object v15

    if-nez v15, :cond_1c

    const/4 v14, 0x0

    return v14

    :cond_1c
    const/4 v14, 0x0

    .line 33
    iget-object v13, v15, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;

    const/4 v12, -0x1

    if-nez v13, :cond_1d

    return v12

    .line 34
    :cond_1d
    sget-boolean v1, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 35
    sget-object v1, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 36
    invoke-virtual {v1, v13}, Lcom/android/server/am/FreecessController;->shouldDelayService(Lcom/android/server/am/ServiceRecord;)Z

    move-result v1

    const/4 v11, 0x3

    if-eqz v1, :cond_22

    .line 37
    iget v1, v13, Lcom/android/server/am/ServiceRecord;->userId:I

    move-object/from16 v10, p0

    invoke-virtual {v10, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v9

    .line 38
    iget-boolean v1, v13, Lcom/android/server/am/ServiceRecord;->delayService:Z

    if-eqz v1, :cond_20

    .line 39
    iget v0, v13, Lcom/android/server/am/ServiceRecord;->delayCount:I

    if-ge v0, v11, :cond_1e

    const/4 v7, 0x1

    add-int/2addr v0, v7

    .line 40
    iput v0, v13, Lcom/android/server/am/ServiceRecord;->delayCount:I

    return v14

    :cond_1e
    const/4 v7, 0x1

    .line 41
    iput-boolean v14, v13, Lcom/android/server/am/ServiceRecord;->delayService:Z

    .line 42
    iget-object v0, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayServiceList:Ljava/util/ArrayList;

    invoke-virtual {v0, v13}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    :cond_1f
    :goto_12
    move v9, v14

    move-object v14, v13

    move v13, v7

    goto/16 :goto_13

    :cond_20
    const/4 v7, 0x1

    .line 43
    iget-boolean v1, v13, Lcom/android/server/am/ServiceRecord;->delayServiceStop:Z

    if-eqz v1, :cond_21

    .line 44
    iput-boolean v14, v13, Lcom/android/server/am/ServiceRecord;->delayServiceStop:Z

    goto :goto_12

    .line 45
    :cond_21
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 46
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 47
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 48
    iget-object v15, v13, Lcom/android/server/am/ServiceRecord;->pendingBinds:Ljava/util/ArrayList;

    new-instance v12, Lcom/android/server/am/ServiceRecord$BindItem;

    move-object v1, v12

    move-object/from16 v2, p1

    move-object/from16 v3, p2

    move-object/from16 v4, v43

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move v11, v7

    move-wide/from16 v7, p6

    move-object v0, v9

    move-object/from16 v9, p8

    move/from16 v10, p9

    move/from16 v11, p10

    move-object/from16 v16, v0

    move-object v0, v12

    move-object/from16 v12, p11

    move-object/from16 v44, v13

    move-object/from16 v13, p12

    move-object/from16 v14, p13

    move-object/from16 v45, v15

    move/from16 v15, p14

    invoke-direct/range {v1 .. v15}, Lcom/android/server/am/ServiceRecord$BindItem;-><init>(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;JLjava/lang/String;ZILjava/lang/String;Landroid/app/IApplicationThread;Ljava/lang/String;I)V

    move-object/from16 v1, v45

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    move-object/from16 v14, v44

    const/4 v13, 0x1

    .line 49
    iput-boolean v13, v14, Lcom/android/server/am/ServiceRecord;->delayService:Z

    .line 50
    iput-boolean v13, v14, Lcom/android/server/am/ServiceRecord;->serviceDelayed:Z

    .line 51
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v2, 0x1f4

    add-long/2addr v0, v2

    iput-wide v0, v14, Lcom/android/server/am/ServiceRecord;->delayTimeout:J

    .line 52
    iput v13, v14, Lcom/android/server/am/ServiceRecord;->delayCount:I

    move-object/from16 v0, v16

    .line 53
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayServiceList:Ljava/util/ArrayList;

    invoke-virtual {v1, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    const/16 v1, 0x65

    .line 54
    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x32

    .line 55
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    const/4 v9, 0x0

    return v9

    :cond_22
    move-object/from16 v10, p0

    move v9, v14

    move-object v14, v13

    const/4 v13, 0x1

    .line 56
    :goto_13
    new-instance v0, Landroid/content/Intent$FilterComparison;

    move-object/from16 v8, v43

    invoke-direct {v0, v8}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 57
    iget-object v1, v14, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/IntentBindRecord;

    if-nez v1, :cond_23

    .line 58
    new-instance v1, Lcom/android/server/am/IntentBindRecord;

    invoke-direct {v1, v14, v0}, Lcom/android/server/am/IntentBindRecord;-><init>(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent$FilterComparison;)V

    .line 59
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 60
    :cond_23
    iget-object v0, v1, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    move-object/from16 v7, v39

    invoke-virtual {v0, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/AppBindRecord;

    if-eqz v0, :cond_24

    :goto_14
    move-object v6, v0

    goto :goto_15

    .line 61
    :cond_24
    new-instance v0, Lcom/android/server/am/AppBindRecord;

    move-object/from16 v2, v38

    invoke-direct {v0, v14, v1, v7, v2}, Lcom/android/server/am/AppBindRecord;-><init>(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;)V

    .line 62
    iget-object v1, v1, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    invoke-virtual {v1, v7, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_14

    .line 63
    :goto_15
    iget-object v0, v6, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 64
    iget-object v1, v0, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 65
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    move-result v1

    .line 66
    iget-object v2, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->mMaxServiceConnectionsPerProcess:I

    if-lt v1, v2, :cond_25

    .line 67
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "bindService exceeded max service connection number per process, callerApp:"

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " intent:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v9

    .line 68
    :cond_25
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    monitor-enter v2

    .line 69
    :try_start_1
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    move/from16 v5, v41

    invoke-virtual {v1, v5}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 70
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_5

    if-eqz v1, :cond_26

    .line 71
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v16, v2

    goto :goto_16

    :cond_26
    move-object/from16 v16, p13

    :goto_16
    if-eqz v1, :cond_27

    .line 72
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_27

    .line 73
    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->mKilled:Z

    if-nez v2, :cond_27

    .line 74
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 75
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    move/from16 v17, v1

    goto :goto_17

    :cond_27
    move/from16 v17, v12

    .line 76
    :goto_17
    invoke-virtual {v14}, Lcom/android/server/am/ServiceRecord;->updateProcessStateOnRequest()V

    .line 77
    sget-boolean v1, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v1, :cond_2d

    .line 78
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getUserId()I

    move-result v1

    .line 79
    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v2, :cond_28

    .line 80
    iget-object v1, v7, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 81
    iget v2, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 82
    iget v4, v7, Lcom/android/server/am/ProcessRecord;->mPid:I

    move/from16 v24, v2

    move/from16 v31, v4

    goto :goto_18

    :cond_28
    move/from16 v24, v1

    move/from16 v31, v9

    move-object/from16 v1, v20

    .line 83
    :goto_18
    iget-object v2, v7, Lcom/android/server/am/ProcessRecord;->mHostingRecord:Lcom/android/server/am/HostingRecord;

    if-eqz v2, :cond_29

    .line 84
    invoke-virtual {v2}, Lcom/android/server/am/HostingRecord;->toStringForTracker()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v30, v2

    goto :goto_19

    :cond_29
    move-object/from16 v30, v20

    .line 85
    :goto_19
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    const-string v3, "android.permission.BIND_JOB_SERVICE"

    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2a

    iget v2, v14, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    const/16 v3, 0x3e8

    if-ne v2, v3, :cond_2a

    .line 86
    const-string/jumbo v2, "job"

    goto :goto_1a

    .line 87
    :cond_2a
    const-string/jumbo v2, "unknown"

    .line 88
    :goto_1a
    const-string/jumbo v3, "job"

    if-ne v2, v3, :cond_2b

    const-string/jumbo v2, "job"

    :goto_1b
    move-object/from16 v25, v2

    goto :goto_1c

    :cond_2b
    const-string v2, "bindService"

    goto :goto_1b

    .line 89
    :goto_1c
    sget-object v2, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 90
    iget-object v3, v14, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v8}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    iget v11, v14, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v2, v11, v3, v4, v1}, Lcom/android/server/am/MARsPolicyManager;->onSpecialBindServiceActions(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 91
    sget-object v21, Lcom/android/server/am/BaseRestrictionMgr$BaseRestrictionMgrHolder;->INSTANCE:Lcom/android/server/am/BaseRestrictionMgr;

    .line 92
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    iget v3, v14, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 93
    iget-object v4, v14, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_2c

    .line 94
    iget v4, v4, Lcom/android/server/am/ProcessRecord;->mPid:I

    move/from16 v32, v4

    goto :goto_1d

    :cond_2c
    move/from16 v32, v3

    :goto_1d
    const/16 v29, 0x0

    const/16 v28, 0x0

    move-object/from16 v22, v2

    move-object/from16 v23, v1

    move-object/from16 v26, v8

    move/from16 v27, v3

    .line 95
    invoke-virtual/range {v21 .. v32}, Lcom/android/server/am/BaseRestrictionMgr;->isRestrictedPackage(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;Landroid/content/Intent;IZLandroid/content/pm/ActivityInfo;Ljava/lang/String;II)Z

    move-result v1

    if-eqz v1, :cond_2d

    return v9

    .line 96
    :cond_2d
    sget-object v19, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    const/4 v11, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x1

    move-object/from16 v1, p0

    move-object v2, v14

    move-object v3, v8

    move-object/from16 v4, p13

    move/from16 v41, v5

    move-object v5, v11

    move-object v11, v6

    move/from16 v6, v40

    move-object/from16 v46, v7

    move/from16 v7, v41

    move-object/from16 v43, v8

    move-object/from16 v8, v16

    move/from16 v9, v17

    move/from16 v10, v21

    move-object/from16 p1, v11

    const/16 v16, 0x3

    move/from16 v11, v37

    move/from16 v12, p14

    move-object/from16 v13, v19

    move-object/from16 v44, v14

    move/from16 v14, v22

    move-object/from16 v17, v0

    move-object v0, v15

    move-object/from16 v15, p5

    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActiveServices;->deferServiceBringupIfFrozenLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;IZZILandroid/app/BackgroundStartPrivileges;ZLandroid/app/IServiceConnection;)Z

    move-result v12

    if-nez v12, :cond_2e

    const/4 v4, 0x0

    const/4 v9, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, v44

    move-object/from16 v3, p13

    move/from16 v5, v40

    move-object/from16 v6, v43

    move/from16 v7, v37

    move/from16 v8, p14

    move-object/from16 v10, p5

    .line 97
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActiveServices;->requestStartTargetPermissionsReviewIfNeededLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;ILandroid/content/Intent;ZIZLandroid/app/IServiceConnection;)Z

    move-result v1

    if-nez v1, :cond_2e

    const/4 v13, 0x1

    :goto_1e
    move-object/from16 v15, p0

    goto :goto_1f

    :cond_2e
    const/4 v13, 0x0

    goto :goto_1e

    .line 98
    :goto_1f
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 99
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v29

    move-object/from16 v14, v46

    .line 100
    :try_start_2
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const-string v2, "bind service"

    move-object/from16 v10, v44

    const/4 v11, 0x0

    invoke-virtual {v15, v1, v10, v2, v11}, Lcom/android/server/am/ActiveServices;->unscheduleServiceRestartLocked(ILcom/android/server/am/ServiceRecord;Ljava/lang/String;Z)V

    const-wide/16 v1, 0x1

    and-long v1, p6, v1

    cmp-long v1, v1, v35

    if-eqz v1, :cond_30

    .line 101
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v10, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 102
    invoke-virtual {v10}, Lcom/android/server/am/ServiceRecord;->hasAutoCreateConnections()Z

    move-result v1

    if-nez v1, :cond_30

    .line 103
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 104
    :try_start_3
    invoke-virtual {v10}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    move-result-object v2

    if-eqz v2, :cond_2f

    .line 105
    iget-object v3, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v3

    .line 106
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    const/4 v9, 0x1

    .line 107
    invoke-virtual {v2, v9, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setBound(ZIJ)V

    goto :goto_20

    :catchall_1
    move-exception v0

    goto :goto_21

    :cond_2f
    const/4 v9, 0x1

    .line 108
    :goto_20
    monitor-exit v1

    goto :goto_22

    :goto_21
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v0

    :catchall_2
    move-exception v0

    move-object v3, v15

    goto/16 :goto_3d

    :cond_30
    const/4 v9, 0x1

    :goto_22
    const-wide/32 v1, 0x200000

    and-long v1, p6, v1

    cmp-long v1, v1, v35

    if-eqz v1, :cond_31

    .line 109
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 110
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService;->ensureAllowedAssociations()V

    .line 111
    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    if-nez v3, :cond_31

    .line 112
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAllowedAssociations:Landroid/util/ArrayMap;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;

    new-instance v4, Landroid/util/ArraySet;

    invoke-direct {v4}, Landroid/util/ArraySet;-><init>()V

    invoke-direct {v3, v4, v11}, Lcom/android/server/am/ActivityManagerService$PackageAssociationInfo;-><init>(Landroid/util/ArraySet;Z)V

    invoke-virtual {v1, v2, v3}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 113
    :cond_31
    iget-boolean v8, v10, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 114
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 115
    invoke-virtual {v1}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    xor-int/lit8 v18, v1, 0x1

    .line 116
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget v2, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v3, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v4, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 117
    iget v4, v4, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 118
    iget-object v5, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v6, v10, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    iget-object v7, v10, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 119
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->startAssociationLocked(ILjava/lang/String;IILandroid/content/ComponentName;Ljava/lang/String;)V

    .line 120
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget v2, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    iget v3, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 121
    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    move-object/from16 v7, v43

    .line 122
    invoke-virtual {v1, v2, v7, v3, v4}, Lcom/android/server/am/ActivityManagerService;->grantImplicitAccess(ILandroid/content/Intent;II)V

    .line 123
    new-instance v6, Lcom/android/server/am/ConnectionRecord;

    iget v4, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v3, v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->aliasComponent:Landroid/content/ComponentName;

    move-object v2, v0

    move-object/from16 v1, v17

    move-object v0, v6

    move-object/from16 v39, v14

    move-object v14, v1

    move-object/from16 v1, p1

    move-object/from16 v47, v2

    move-object/from16 v2, p3

    move-object/from16 v17, v3

    move-object/from16 v3, p5

    move/from16 v21, v4

    move-object/from16 v22, v5

    move-wide/from16 v4, p6

    move/from16 p2, v13

    move-object v13, v6

    move/from16 v6, v33

    move-object/from16 v23, v7

    move-object/from16 v7, v34

    move/from16 v24, v8

    move/from16 v8, v21

    move/from16 p4, v12

    move v12, v9

    move-object/from16 v9, v22

    move-object v12, v10

    move-object/from16 v10, p13

    move-object/from16 v11, v17

    invoke-direct/range {v0 .. v11}, Lcom/android/server/am/ConnectionRecord;-><init>(Lcom/android/server/am/AppBindRecord;Lcom/android/server/wm/ActivityServiceConnectionsHolder;Landroid/app/IServiceConnection;JILandroid/app/PendingIntent;ILjava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 124
    invoke-interface/range {p5 .. p5}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 125
    invoke-virtual {v12, v0, v13}, Lcom/android/server/am/ServiceRecord;->addConnection(Landroid/os/IBinder;Lcom/android/server/am/ConnectionRecord;)V

    move-object/from16 v10, p1

    .line 126
    iget-object v1, v10, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {v1, v13}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    move-object/from16 v3, p3

    if-eqz v3, :cond_34

    .line 127
    iget-object v1, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mActivity:Lcom/android/server/wm/ActivityRecord;

    monitor-enter v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 128
    :try_start_5
    iget-boolean v2, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mIsDisconnecting:Z

    if-eqz v2, :cond_32

    .line 129
    monitor-exit v1

    goto :goto_24

    :catchall_3
    move-exception v0

    goto :goto_23

    .line 130
    :cond_32
    iget-object v2, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mConnections:Landroid/util/ArraySet;

    if-nez v2, :cond_33

    .line 131
    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    iput-object v2, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mConnections:Landroid/util/ArraySet;

    .line 132
    :cond_33
    iget-object v2, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mConnections:Landroid/util/ArraySet;

    invoke-virtual {v2, v13}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 133
    monitor-exit v1

    goto :goto_24

    :goto_23
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    :try_start_6
    throw v0

    .line 134
    :cond_34
    :goto_24
    iget-object v1, v14, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    invoke-virtual {v1, v13}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 135
    iget-object v1, v10, Lcom/android/server/am/AppBindRecord;->attributedClient:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_36

    .line 136
    iget-object v2, v10, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ServiceRecord;->isSdkSandbox:Z

    if-eqz v2, :cond_36

    .line 137
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    iget-object v2, v1, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    if-nez v2, :cond_35

    .line 138
    new-instance v2, Landroid/util/ArraySet;

    invoke-direct {v2}, Landroid/util/ArraySet;-><init>()V

    iput-object v2, v1, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    .line 139
    :cond_35
    iget-object v1, v1, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    invoke-virtual {v1, v13}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 140
    :cond_36
    invoke-virtual {v13}, Lcom/android/server/am/ConnectionRecord;->startAssociationIfNeeded()V

    .line 141
    iget-object v1, v10, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eq v1, v2, :cond_37

    const/16 v1, 0x8

    invoke-virtual {v13, v1}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v2

    if-eqz v2, :cond_38

    const/4 v2, 0x1

    .line 142
    iput-boolean v2, v14, Lcom/android/server/am/ProcessServiceRecord;->mHasAboveClient:Z

    goto :goto_25

    :cond_37
    const/16 v1, 0x8

    :cond_38
    :goto_25
    const/high16 v2, 0x1000000

    .line 143
    invoke-virtual {v13, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v2

    if-eqz v2, :cond_39

    const/4 v2, 0x1

    .line 144
    iput-boolean v2, v12, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    goto :goto_26

    :cond_39
    const/4 v2, 0x1

    :goto_26
    const/high16 v3, 0x100000

    .line 145
    invoke-virtual {v13, v3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v3

    if-eqz v3, :cond_3c

    .line 146
    iput-boolean v2, v12, Lcom/android/server/am/ServiceRecord;->mIsAllowedBgActivityStartsByBinding:Z

    .line 147
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v2, :cond_3a

    goto :goto_27

    .line 148
    :cond_3a
    invoke-virtual {v12}, Lcom/android/server/am/ServiceRecord;->getBackgroundStartPrivilegesWithExclusiveToken()Landroid/app/BackgroundStartPrivileges;

    move-result-object v2

    .line 149
    invoke-virtual {v2}, Landroid/app/BackgroundStartPrivileges;->allowsAny()Z

    move-result v3

    if-eqz v3, :cond_3b

    .line 150
    iget-object v3, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v3, v12, v2}, Lcom/android/server/am/ProcessRecord;->addOrUpdateBackgroundStartPrivileges(Landroid/os/Binder;Landroid/app/BackgroundStartPrivileges;)V

    goto :goto_27

    .line 151
    :cond_3b
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v2, v12}, Lcom/android/server/am/ProcessRecord;->removeBackgroundStartPrivileges(Landroid/os/Binder;)V

    :cond_3c
    :goto_27
    const v2, 0x8000

    .line 152
    invoke-virtual {v13, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v2

    if-eqz v2, :cond_3d

    const/4 v2, 0x1

    .line 153
    iput-boolean v2, v12, Lcom/android/server/am/ServiceRecord;->isNotAppComponentUsage:Z

    .line 154
    :cond_3d
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const/4 v11, 0x2

    if-eqz v2, :cond_3e

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    if-eqz v2, :cond_3e

    .line 155
    iget v2, v2, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    if-gt v2, v11, :cond_3e

    const/high16 v2, 0x10000

    .line 156
    invoke-virtual {v13, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v2

    if-eqz v2, :cond_3e

    .line 157
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v12, Lcom/android/server/am/ServiceRecord;->lastTopAlmostPerceptibleBindRequestUptimeMs:J

    .line 158
    :cond_3e
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_3f

    .line 159
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    const/4 v3, 0x1

    invoke-virtual {v15, v2, v13, v3}, Lcom/android/server/am/ActiveServices;->updateServiceClientActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;Lcom/android/server/am/ConnectionRecord;Z)V

    .line 160
    :cond_3f
    iget-object v2, v15, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/ArrayList;

    if-nez v2, :cond_40

    .line 161
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 162
    iget-object v3, v15, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    invoke-virtual {v3, v0, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 163
    :cond_40
    invoke-virtual {v2, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 164
    iget-object v0, v12, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget v0, v0, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/2addr v0, v11

    if-eqz v0, :cond_41

    move-object/from16 v0, v20

    goto :goto_28

    .line 165
    :cond_41
    iget-object v0, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    iget-object v3, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 166
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 167
    invoke-virtual {v0, v3, v2}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    :goto_28
    if-eqz v0, :cond_42

    .line 168
    iget-object v2, v10, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v15, v2, v0, v13}, Lcom/android/server/am/ActiveServices;->getServiceBindingOomAdjPolicyForAddLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ConnectionRecord;)I

    move-result v2

    move/from16 v31, v2

    goto :goto_29

    :cond_42
    const/16 v31, 0x0

    :goto_29
    if-nez p4, :cond_43

    if-nez p2, :cond_43

    and-int/lit8 v1, v31, 0x8

    if-eqz v1, :cond_43

    .line 169
    invoke-virtual/range {v39 .. v39}, Lcom/android/server/am/ProcessRecord;->isFreezable()Z

    move-result v1

    if-eqz v1, :cond_43

    .line 170
    iget-object v1, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    move-object/from16 v14, v39

    const/4 v2, 0x1

    const/4 v9, 0x4

    invoke-virtual {v1, v14, v9, v2}, Lcom/android/server/am/OomAdjuster;->updateAppFreezeStateLSP(Lcom/android/server/am/ProcessRecord;IZ)V

    goto :goto_2a

    :cond_43
    move-object/from16 v14, v39

    const/4 v9, 0x4

    :goto_2a
    if-nez v0, :cond_44

    .line 171
    iget-object v1, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v1}, Landroid/content/pm/ApplicationInfo;->isStopped()Z

    move-result v4

    move/from16 v17, v4

    goto :goto_2b

    :cond_44
    const/16 v17, 0x0

    :goto_2b
    if-nez v0, :cond_45

    .line 172
    iget-object v0, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v0}, Landroid/content/pm/ApplicationInfo;->isNotLaunched()Z

    move-result v0

    move/from16 v26, v0

    const/4 v1, 0x1

    goto :goto_2c

    :cond_45
    const/4 v1, 0x1

    const/16 v26, 0x0

    .line 173
    :goto_2c
    invoke-virtual {v13, v1}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v0

    if-eqz v0, :cond_48

    .line 174
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v12, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    and-int/lit8 v0, v31, 0x1

    if-nez v0, :cond_46

    const/4 v0, 0x1

    goto :goto_2d

    :cond_46
    const/4 v0, 0x0

    .line 175
    :goto_2d
    invoke-virtual/range {v23 .. v23}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/4 v5, 0x0

    move-object/from16 v1, p0

    move-object v2, v12

    move/from16 v4, v37

    move/from16 v6, p2

    move/from16 v7, p4

    move/from16 v8, v31

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_47

    .line 176
    iget-object v0, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 177
    iget-object v0, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 178
    invoke-static/range {v29 .. v30}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/4 v8, 0x0

    return v8

    :cond_47
    const/4 v8, 0x0

    goto :goto_2e

    :cond_48
    const/4 v8, 0x0

    move v0, v8

    :goto_2e
    const/16 v21, 0x0

    const/16 v22, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p13

    move/from16 v3, v41

    move/from16 v4, v40

    move-object/from16 v5, v23

    move-object v6, v12

    move-object/from16 v7, v19

    move/from16 v8, v22

    move/from16 v9, v21

    .line 179
    :try_start_7
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 180
    iget-object v1, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_4e

    .line 181
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    const/high16 v2, 0x8000000

    .line 182
    invoke-virtual {v13, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v3

    if-eqz v3, :cond_49

    const/4 v3, 0x1

    .line 183
    iput-boolean v3, v1, Lcom/android/server/am/ProcessServiceRecord;->mTreatLikeActivity:Z

    goto :goto_2f

    :cond_49
    const/4 v3, 0x1

    .line 184
    :goto_2f
    iget-boolean v4, v12, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    if-eqz v4, :cond_4a

    .line 185
    iput-boolean v3, v1, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 186
    :cond_4a
    iget-object v3, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v4, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v14}, Lcom/android/server/am/ProcessRecord;->hasActivitiesOrRecentTasks()Z

    move-result v5

    if-eqz v5, :cond_4b

    .line 187
    iget-boolean v1, v1, Lcom/android/server/am/ProcessServiceRecord;->mHasClientActivities:Z

    if-nez v1, :cond_4c

    .line 188
    :cond_4b
    iget-object v1, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 189
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    if-gt v1, v11, :cond_4d

    .line 190
    invoke-virtual {v13, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    move-result v1

    if-eqz v1, :cond_4d

    :cond_4c
    const/4 v9, 0x1

    goto :goto_30

    :cond_4d
    const/4 v9, 0x0

    :goto_30
    iget-object v1, v10, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 191
    invoke-virtual {v3, v4, v1, v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 192
    invoke-virtual {v12}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    move-result v1

    if-nez v1, :cond_4e

    const/4 v1, 0x4

    and-int/lit8 v2, v31, 0x4

    if-nez v2, :cond_4f

    .line 193
    iget-object v0, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    const/4 v9, 0x1

    goto :goto_31

    :cond_4e
    const/4 v1, 0x4

    :cond_4f
    move v9, v0

    :goto_31
    if-eqz v9, :cond_50

    .line 194
    iget-object v0, v15, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    :cond_50
    if-eqz v17, :cond_51

    move/from16 v21, v11

    goto :goto_32

    :cond_51
    const/16 v21, 0x1

    .line 195
    :goto_32
    iget-object v0, v12, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 196
    invoke-virtual/range {v23 .. v23}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    if-eqz v1, :cond_52

    const/16 v2, 0x2e

    .line 197
    invoke-virtual {v1, v2}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v2

    const/4 v3, -0x1

    if-eq v2, v3, :cond_52

    .line 198
    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v3

    const/4 v4, 0x1

    sub-int/2addr v3, v4

    if-eq v2, v3, :cond_53

    add-int/2addr v2, v4

    .line 199
    invoke-virtual {v1, v2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v1

    goto :goto_33

    :cond_52
    const/4 v4, 0x1

    .line 200
    :cond_53
    :goto_33
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_57

    .line 201
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_54

    goto :goto_35

    :cond_54
    if-nez v24, :cond_56

    if-eqz v18, :cond_55

    goto :goto_34

    :cond_55
    move/from16 v18, v4

    goto :goto_36

    :cond_56
    :goto_34
    move/from16 v18, v11

    goto :goto_36

    :cond_57
    :goto_35
    move/from16 v18, v16

    .line 202
    :goto_36
    iget-object v2, v14, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move/from16 v3, v40

    .line 203
    invoke-virtual {v15, v3, v2}, Lcom/android/server/am/ActiveServices;->getShortProcessNameForStats(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v19

    .line 204
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    if-eqz v2, :cond_58

    .line 205
    invoke-virtual {v2}, Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v20, v2

    .line 206
    :cond_58
    iget-object v2, v12, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, v14, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 207
    iget v6, v6, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 208
    iget v7, v12, Lcom/android/server/am/ServiceRecord;->mProcessStateOnRequest:I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    const/16 v16, 0x2

    const/16 v17, 0x0

    const-wide/16 v27, 0x0

    const/16 v8, 0x1dc

    move v9, v4

    move-object v4, v12

    move v12, v8

    move-object v8, v13

    move v13, v0

    move-object v11, v14

    move v14, v3

    move-object v3, v15

    move-object v15, v1

    move-object/from16 v22, v2

    move-object/from16 v23, v5

    move/from16 v24, v6

    move/from16 v25, v7

    .line 209
    :try_start_8
    invoke-static/range {v12 .. v28}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIILjava/lang/String;IZILjava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;IIZJ)V

    .line 210
    iget-object v0, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_5a

    iget-object v0, v10, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    iget-boolean v1, v0, Lcom/android/server/am/IntentBindRecord;->received:Z

    if-eqz v1, :cond_5a

    move-object/from16 v1, v47

    .line 211
    iget-object v1, v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->aliasComponent:Landroid/content/ComponentName;

    if-eqz v1, :cond_59

    goto :goto_37

    :cond_59
    iget-object v1, v4, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_4

    .line 212
    :goto_37
    :try_start_9
    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_1
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    move-object/from16 v2, p5

    const/4 v5, 0x0

    :try_start_a
    invoke-interface {v2, v1, v0, v5}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;Z)V
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    goto :goto_39

    :catchall_4
    move-exception v0

    goto/16 :goto_3d

    :catch_0
    move-exception v0

    goto :goto_38

    :catch_1
    move-exception v0

    const/4 v5, 0x0

    .line 213
    :goto_38
    :try_start_b
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    move-object/from16 v6, v42

    invoke-direct {v2, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v6, v4, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, " to connection "

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v8, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 214
    invoke-interface {v6}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v6, " (in "

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v6, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v6, v6, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v6, ")"

    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 215
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 216
    :goto_39
    iget-object v0, v10, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v0

    if-ne v0, v9, :cond_5b

    iget-object v0, v10, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    iget-boolean v1, v0, Lcom/android/server/am/IntentBindRecord;->doRebind:Z

    if-eqz v1, :cond_5b

    const/4 v1, 0x1

    move-object/from16 p1, p0

    move-object/from16 p2, v4

    move-object/from16 p3, v0

    move/from16 p4, v37

    move/from16 p5, v1

    move/from16 p6, v31

    .line 217
    invoke-virtual/range {p1 .. p6}, Lcom/android/server/am/ActiveServices;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;ZZI)Z

    goto :goto_3a

    :cond_5a
    const/4 v5, 0x0

    .line 218
    iget-object v0, v10, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    iget-boolean v1, v0, Lcom/android/server/am/IntentBindRecord;->requested:Z

    if-nez v1, :cond_5b

    const/4 v1, 0x0

    move-object/from16 p1, p0

    move-object/from16 p2, v4

    move-object/from16 p3, v0

    move/from16 p4, v37

    move/from16 p5, v1

    move/from16 p6, v31

    .line 219
    invoke-virtual/range {p1 .. p6}, Lcom/android/server/am/ActiveServices;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;ZZI)Z

    .line 220
    :cond_5b
    :goto_3a
    iget-object v0, v11, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 221
    invoke-static {v0}, Landroid/os/UserHandle;->isCore(I)Z

    move-result v1

    if-eqz v1, :cond_5c

    goto :goto_3b

    .line 222
    :cond_5c
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    move/from16 v1, p14

    if-eq v0, v1, :cond_5e

    .line 223
    iget-object v2, v3, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 224
    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/UserController;->isSameProfileGroup(II)Z

    move-result v0

    if-nez v0, :cond_5d

    goto :goto_3b

    :cond_5d
    const/16 v0, 0x97

    .line 225
    invoke-static {v0}, Landroid/app/admin/DevicePolicyEventLogger;->createEvent(I)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    filled-new-array/range {p13 .. p13}, [Ljava/lang/String;

    move-result-object v1

    .line 226
    invoke-virtual {v0, v1}, Landroid/app/admin/DevicePolicyEventLogger;->setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger;

    move-result-object v0

    .line 227
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyEventLogger;->write()V

    .line 228
    :cond_5e
    :goto_3b
    iget v0, v4, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActiveServices$ServiceMap;->ensureNotStartingBackgroundLocked(Lcom/android/server/am/ServiceRecord;)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_4

    .line 229
    iget-object v0, v3, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 230
    invoke-static/range {v29 .. v30}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 231
    iget-object v0, v11, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    if-eqz v0, :cond_5f

    .line 232
    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto :goto_3c

    :cond_5f
    move-object/from16 v0, p13

    :goto_3c
    if-eqz v0, :cond_60

    .line 233
    iget-object v1, v3, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    iget v2, v11, Lcom/android/server/am/ProcessRecord;->uid:I

    const/16 v3, 0x4b

    invoke-virtual {v1, v3, v2, v5, v0}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 234
    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    :cond_60
    return v9

    .line 235
    :goto_3d
    iget-object v1, v3, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 236
    invoke-static/range {v29 .. v30}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 237
    throw v0

    :catchall_5
    move-exception v0

    .line 238
    :try_start_c
    monitor-exit v2
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    throw v0

    :cond_61
    move/from16 v41, v7

    .line 239
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    const-string v4, "Unable to find app for caller "

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v0, " (pid="

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v0, v41

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ") when binding service "

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public final bringDownDisabledPackageServicesLocked(ILjava/lang/String;Ljava/util/Set;ZZZ)Z
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 6
    .line 7
    .line 8
    :cond_0
    const/4 v0, 0x1

    .line 9
    const/4 v1, -0x1

    .line 10
    const/4 v2, 0x0

    .line 11
    if-ne p1, v1, :cond_3

    .line 12
    .line 13
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 14
    .line 15
    invoke-virtual {p1}, Landroid/util/SparseArray;->size()I

    .line 16
    .line 17
    .line 18
    move-result p1

    .line 19
    sub-int/2addr p1, v0

    .line 20
    :goto_0
    if-ltz p1, :cond_5

    .line 21
    .line 22
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 23
    .line 24
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object v1

    .line 28
    check-cast v1, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 29
    .line 30
    iget-object v8, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 31
    .line 32
    move-object v3, p0

    .line 33
    move-object v4, p2

    .line 34
    move-object v5, p3

    .line 35
    move v6, p4

    .line 36
    move v7, p6

    .line 37
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActiveServices;->collectPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;ZZLandroid/util/ArrayMap;)Z

    .line 38
    .line 39
    .line 40
    move-result v1

    .line 41
    or-int/2addr v2, v1

    .line 42
    if-nez p6, :cond_1

    .line 43
    .line 44
    if-eqz v2, :cond_1

    .line 45
    .line 46
    return v0

    .line 47
    :cond_1
    if-eqz p6, :cond_2

    .line 48
    .line 49
    if-nez p3, :cond_2

    .line 50
    .line 51
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 52
    .line 53
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 54
    .line 55
    .line 56
    move-result-object v1

    .line 57
    check-cast v1, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 58
    .line 59
    iget v1, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mUserId:I

    .line 60
    .line 61
    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActiveServices;->forceStopPackageLocked(ILjava/lang/String;)V

    .line 62
    .line 63
    .line 64
    :cond_2
    add-int/lit8 p1, p1, -0x1

    .line 65
    .line 66
    goto :goto_0

    .line 67
    :cond_3
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 68
    .line 69
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 70
    .line 71
    .line 72
    move-result-object v1

    .line 73
    check-cast v1, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 74
    .line 75
    if-eqz v1, :cond_4

    .line 76
    .line 77
    iget-object v8, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 78
    .line 79
    move-object v3, p0

    .line 80
    move-object v4, p2

    .line 81
    move-object v5, p3

    .line 82
    move v6, p4

    .line 83
    move v7, p6

    .line 84
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActiveServices;->collectPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;ZZLandroid/util/ArrayMap;)Z

    .line 85
    .line 86
    .line 87
    move-result v2

    .line 88
    :cond_4
    if-eqz p6, :cond_5

    .line 89
    .line 90
    if-nez p3, :cond_5

    .line 91
    .line 92
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActiveServices;->forceStopPackageLocked(ILjava/lang/String;)V

    .line 93
    .line 94
    .line 95
    :cond_5
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 96
    .line 97
    if-eqz p1, :cond_9

    .line 98
    .line 99
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    .line 100
    .line 101
    .line 102
    move-result p1

    .line 103
    add-int/lit8 p2, p1, -0x1

    .line 104
    .line 105
    :goto_1
    if-ltz p2, :cond_6

    .line 106
    .line 107
    iget-object p3, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 108
    .line 109
    invoke-virtual {p3, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 110
    .line 111
    .line 112
    move-result-object p3

    .line 113
    check-cast p3, Lcom/android/server/am/ServiceRecord;

    .line 114
    .line 115
    invoke-virtual {p0, p3, v0}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 116
    .line 117
    .line 118
    add-int/lit8 p2, p2, -0x1

    .line 119
    .line 120
    goto :goto_1

    .line 121
    :cond_6
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 122
    .line 123
    if-lez p1, :cond_7

    .line 124
    .line 125
    const/16 p1, 0x16

    .line 126
    .line 127
    invoke-virtual {p2, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 128
    .line 129
    .line 130
    :cond_7
    if-eqz p5, :cond_8

    .line 131
    .line 132
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 133
    .line 134
    invoke-virtual {p1}, Ljava/util/ArrayList;->isEmpty()Z

    .line 135
    .line 136
    .line 137
    move-result p1

    .line 138
    if-nez p1, :cond_8

    .line 139
    .line 140
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 141
    .line 142
    invoke-virtual {p1}, Ljava/util/ArrayList;->clone()Ljava/lang/Object;

    .line 143
    .line 144
    .line 145
    move-result-object p1

    .line 146
    check-cast p1, Ljava/util/ArrayList;

    .line 147
    .line 148
    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 149
    .line 150
    new-instance p3, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;

    .line 151
    .line 152
    const/4 p4, 0x2

    .line 153
    invoke-direct {p3, p4, p1}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;-><init>(ILjava/lang/Object;)V

    .line 154
    .line 155
    .line 156
    const-wide/16 p4, 0xfa

    .line 157
    .line 158
    invoke-virtual {p2, p3, p4, p5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 159
    .line 160
    .line 161
    :cond_8
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 162
    .line 163
    invoke-virtual {p0}, Ljava/util/ArrayList;->clear()V

    .line 164
    .line 165
    .line 166
    :cond_9
    return v2
.end method

.method public final bringDownServiceIfNeededLocked(Lcom/android/server/am/ServiceRecord;ZZZ)V
    .locals 0

    .line 1
    invoke-static {p1, p2, p3}, Lcom/android/server/am/ActiveServices;->isServiceNeededLocked(Lcom/android/server/am/ServiceRecord;ZZ)Z

    .line 2
    .line 3
    .line 4
    move-result p2

    .line 5
    if-eqz p2, :cond_0

    .line 6
    .line 7
    return-void

    .line 8
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 9
    .line 10
    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 11
    .line 12
    .line 13
    move-result p2

    .line 14
    if-eqz p2, :cond_1

    .line 15
    .line 16
    return-void

    .line 17
    :cond_1
    invoke-virtual {p0, p1, p4}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 18
    .line 19
    .line 20
    return-void
.end method

.method public final bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
    .locals 18

    .line 1
    move-object/from16 v9, p0

    .line 2
    .line 3
    move-object/from16 v10, p1

    .line 4
    .line 5
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    const-string v0, "ActivityManager"

    .line 12
    .line 13
    new-instance v1, Ljava/lang/StringBuilder;

    .line 14
    .line 15
    const-string v2, "Short FGS brought down without stopping: "

    .line 16
    .line 17
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 18
    .line 19
    .line 20
    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 21
    .line 22
    .line 23
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object v1

    .line 27
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 28
    .line 29
    .line 30
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 31
    .line 32
    .line 33
    :cond_0
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 34
    .line 35
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 36
    .line 37
    .line 38
    move-result v0

    .line 39
    const/4 v11, 0x1

    .line 40
    sub-int/2addr v0, v11

    .line 41
    move v2, v0

    .line 42
    :goto_0
    const/4 v12, 0x0

    .line 43
    const/4 v13, 0x0

    .line 44
    if-ltz v2, :cond_3

    .line 45
    .line 46
    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 47
    .line 48
    .line 49
    move-result-object v0

    .line 50
    move-object v3, v0

    .line 51
    check-cast v3, Ljava/util/ArrayList;

    .line 52
    .line 53
    :goto_1
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 54
    .line 55
    .line 56
    move-result v0

    .line 57
    if-ge v13, v0, :cond_2

    .line 58
    .line 59
    invoke-virtual {v3, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 60
    .line 61
    .line 62
    move-result-object v0

    .line 63
    check-cast v0, Lcom/android/server/am/ConnectionRecord;

    .line 64
    .line 65
    iput-boolean v11, v0, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    .line 66
    .line 67
    invoke-virtual {v0}, Lcom/android/server/am/ConnectionRecord;->stopAssociation()V

    .line 68
    .line 69
    .line 70
    iget-object v4, v0, Lcom/android/server/am/ConnectionRecord;->aliasComponent:Landroid/content/ComponentName;

    .line 71
    .line 72
    if-eqz v4, :cond_1

    .line 73
    .line 74
    goto :goto_2

    .line 75
    :cond_1
    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 76
    .line 77
    :goto_2
    :try_start_0
    iget-object v0, v0, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 78
    .line 79
    invoke-interface {v0, v4, v12, v11}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;Z)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 80
    .line 81
    .line 82
    goto :goto_3

    .line 83
    :catch_0
    move-exception v0

    .line 84
    const-string v4, "ActivityManager"

    .line 85
    .line 86
    new-instance v5, Ljava/lang/StringBuilder;

    .line 87
    .line 88
    const-string v6, "Failure disconnecting service "

    .line 89
    .line 90
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 91
    .line 92
    .line 93
    iget-object v6, v10, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 94
    .line 95
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 96
    .line 97
    .line 98
    const-string v6, " to connection "

    .line 99
    .line 100
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 101
    .line 102
    .line 103
    invoke-virtual {v3, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 104
    .line 105
    .line 106
    move-result-object v6

    .line 107
    check-cast v6, Lcom/android/server/am/ConnectionRecord;

    .line 108
    .line 109
    iget-object v6, v6, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 110
    .line 111
    invoke-interface {v6}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 112
    .line 113
    .line 114
    move-result-object v6

    .line 115
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 116
    .line 117
    .line 118
    const-string v6, " (in "

    .line 119
    .line 120
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 121
    .line 122
    .line 123
    invoke-virtual {v3, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 124
    .line 125
    .line 126
    move-result-object v6

    .line 127
    check-cast v6, Lcom/android/server/am/ConnectionRecord;

    .line 128
    .line 129
    iget-object v6, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 130
    .line 131
    iget-object v6, v6, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 132
    .line 133
    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 134
    .line 135
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 136
    .line 137
    .line 138
    const-string v6, ")"

    .line 139
    .line 140
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 141
    .line 142
    .line 143
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 144
    .line 145
    .line 146
    move-result-object v5

    .line 147
    invoke-static {v4, v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 148
    .line 149
    .line 150
    :goto_3
    add-int/lit8 v13, v13, 0x1

    .line 151
    .line 152
    goto :goto_1

    .line 153
    :cond_2
    add-int/lit8 v2, v2, -0x1

    .line 154
    .line 155
    goto :goto_0

    .line 156
    :cond_3
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 157
    .line 158
    .line 159
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 160
    .line 161
    .line 162
    move-result v0

    .line 163
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 164
    .line 165
    if-eqz v1, :cond_5

    .line 166
    .line 167
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    .line 168
    .line 169
    .line 170
    move-result v1

    .line 171
    if-eqz v1, :cond_5

    .line 172
    .line 173
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 174
    .line 175
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 176
    .line 177
    .line 178
    move-result v1

    .line 179
    sub-int/2addr v1, v11

    .line 180
    move v7, v0

    .line 181
    move v0, v1

    .line 182
    :goto_4
    if-ltz v0, :cond_7

    .line 183
    .line 184
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 185
    .line 186
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 187
    .line 188
    .line 189
    move-result-object v1

    .line 190
    move-object v8, v1

    .line 191
    check-cast v8, Lcom/android/server/am/IntentBindRecord;

    .line 192
    .line 193
    iget-boolean v1, v8, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 194
    .line 195
    if-eqz v1, :cond_6

    .line 196
    .line 197
    :try_start_1
    const-string/jumbo v4, "bring down unbind"

    .line 198
    .line 199
    .line 200
    if-eqz v7, :cond_4

    .line 201
    .line 202
    move v5, v13

    .line 203
    goto :goto_5

    .line 204
    :cond_4
    const/4 v5, 0x5

    .line 205
    :goto_5
    const/4 v3, 0x0

    .line 206
    move-object/from16 v1, p0

    .line 207
    .line 208
    move-object/from16 v2, p1

    .line 209
    .line 210
    move v6, v7

    .line 211
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 212
    .line 213
    .line 214
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 215
    .line 216
    .line 217
    move-result v1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_2

    .line 218
    or-int/2addr v1, v7

    .line 219
    :try_start_2
    iput-boolean v13, v8, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 220
    .line 221
    iput-boolean v13, v8, Lcom/android/server/am/IntentBindRecord;->requested:Z

    .line 222
    .line 223
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 224
    .line 225
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 226
    .line 227
    iget-object v3, v8, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 228
    .line 229
    invoke-virtual {v3}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 230
    .line 231
    .line 232
    move-result-object v3

    .line 233
    invoke-interface {v2, v10, v3}, Landroid/app/IApplicationThread;->scheduleUnbindService(Landroid/os/IBinder;Landroid/content/Intent;)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 234
    .line 235
    .line 236
    move v7, v1

    .line 237
    goto :goto_7

    .line 238
    :catch_1
    move-exception v0

    .line 239
    move/from16 v17, v1

    .line 240
    .line 241
    move-object v1, v0

    .line 242
    move/from16 v0, v17

    .line 243
    .line 244
    goto :goto_6

    .line 245
    :catch_2
    move-exception v0

    .line 246
    move-object v1, v0

    .line 247
    move v0, v7

    .line 248
    :goto_6
    const-string v2, "ActivityManager"

    .line 249
    .line 250
    new-instance v3, Ljava/lang/StringBuilder;

    .line 251
    .line 252
    const-string v4, "Exception when unbinding service "

    .line 253
    .line 254
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 255
    .line 256
    .line 257
    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 258
    .line 259
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 260
    .line 261
    .line 262
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 263
    .line 264
    .line 265
    move-result-object v3

    .line 266
    invoke-static {v2, v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 267
    .line 268
    .line 269
    invoke-virtual/range {p0 .. p2}, Lcom/android/server/am/ActiveServices;->serviceProcessGoneLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 270
    .line 271
    .line 272
    :cond_5
    move v15, v0

    .line 273
    goto :goto_8

    .line 274
    :cond_6
    :goto_7
    add-int/lit8 v0, v0, -0x1

    .line 275
    .line 276
    goto :goto_4

    .line 277
    :cond_7
    move v15, v7

    .line 278
    :goto_8
    iget-boolean v0, v10, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 279
    .line 280
    if-eqz v0, :cond_9

    .line 281
    .line 282
    const-string v0, "ActivityManager"

    .line 283
    .line 284
    new-instance v1, Ljava/lang/StringBuilder;

    .line 285
    .line 286
    const-string v2, "Bringing down service while still waiting for start foreground: "

    .line 287
    .line 288
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 289
    .line 290
    .line 291
    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 292
    .line 293
    .line 294
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 295
    .line 296
    .line 297
    move-result-object v1

    .line 298
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 299
    .line 300
    .line 301
    iput-boolean v13, v10, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 302
    .line 303
    iput-boolean v13, v10, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 304
    .line 305
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 306
    .line 307
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 308
    .line 309
    iget-object v1, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 310
    .line 311
    monitor-enter v1

    .line 312
    :try_start_3
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 313
    .line 314
    .line 315
    move-result-object v0

    .line 316
    if-eqz v0, :cond_8

    .line 317
    .line 318
    iget-object v2, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 319
    .line 320
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 321
    .line 322
    invoke-virtual {v2}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 323
    .line 324
    .line 325
    move-result v2

    .line 326
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 327
    .line 328
    .line 329
    move-result-wide v3

    .line 330
    invoke-virtual {v0, v13, v2, v3, v4}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 331
    .line 332
    .line 333
    goto :goto_9

    .line 334
    :catchall_0
    move-exception v0

    .line 335
    goto :goto_a

    .line 336
    :cond_8
    :goto_9
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 337
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 338
    .line 339
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 340
    .line 341
    invoke-static {v1}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 342
    .line 343
    .line 344
    move-result-object v2

    .line 345
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 346
    .line 347
    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 348
    .line 349
    iget-object v5, v10, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 350
    .line 351
    const/4 v6, 0x0

    .line 352
    const/16 v3, 0x4c

    .line 353
    .line 354
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/appop/AppOpsService;->finishOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)V

    .line 355
    .line 356
    .line 357
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 358
    .line 359
    invoke-virtual {v0, v10}, Lcom/android/server/utils/AnrTimer;->cancel(Ljava/lang/Object;)V

    .line 360
    .line 361
    .line 362
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 363
    .line 364
    if-eqz v0, :cond_9

    .line 365
    .line 366
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 367
    .line 368
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 369
    .line 370
    const/16 v1, 0x45

    .line 371
    .line 372
    invoke-virtual {v0, v1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 373
    .line 374
    .line 375
    move-result-object v0

    .line 376
    invoke-static {}, Lcom/android/internal/os/SomeArgs;->obtain()Lcom/android/internal/os/SomeArgs;

    .line 377
    .line 378
    .line 379
    move-result-object v1

    .line 380
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 381
    .line 382
    iput-object v2, v1, Lcom/android/internal/os/SomeArgs;->arg1:Ljava/lang/Object;

    .line 383
    .line 384
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->toString()Ljava/lang/String;

    .line 385
    .line 386
    .line 387
    move-result-object v2

    .line 388
    iput-object v2, v1, Lcom/android/internal/os/SomeArgs;->arg2:Ljava/lang/Object;

    .line 389
    .line 390
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 391
    .line 392
    iput-object v2, v1, Lcom/android/internal/os/SomeArgs;->arg3:Ljava/lang/Object;

    .line 393
    .line 394
    iput-object v1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 395
    .line 396
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 397
    .line 398
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 399
    .line 400
    invoke-virtual {v1, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 401
    .line 402
    .line 403
    goto :goto_b

    .line 404
    :goto_a
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 405
    throw v0

    .line 406
    :cond_9
    :goto_b
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 407
    .line 408
    .line 409
    move-result-wide v0

    .line 410
    iput-wide v0, v10, Lcom/android/server/am/ServiceRecord;->destroyTime:J

    .line 411
    .line 412
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 413
    .line 414
    invoke-virtual {v9, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 415
    .line 416
    .line 417
    move-result-object v8

    .line 418
    iget-object v0, v8, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 419
    .line 420
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 421
    .line 422
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 423
    .line 424
    .line 425
    move-result-object v0

    .line 426
    check-cast v0, Lcom/android/server/am/ServiceRecord;

    .line 427
    .line 428
    if-eqz v0, :cond_b

    .line 429
    .line 430
    if-eq v0, v10, :cond_b

    .line 431
    .line 432
    iget-object v1, v8, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 433
    .line 434
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 435
    .line 436
    invoke-virtual {v1, v2, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 437
    .line 438
    .line 439
    iget-boolean v1, v10, Lcom/android/server/am/ServiceRecord;->destroying:Z

    .line 440
    .line 441
    if-eqz v1, :cond_a

    .line 442
    .line 443
    goto :goto_c

    .line 444
    :cond_a
    new-instance v1, Ljava/lang/IllegalStateException;

    .line 445
    .line 446
    new-instance v2, Ljava/lang/StringBuilder;

    .line 447
    .line 448
    const-string v3, "Bringing down "

    .line 449
    .line 450
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 451
    .line 452
    .line 453
    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 454
    .line 455
    .line 456
    const-string v3, " but actually running "

    .line 457
    .line 458
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 459
    .line 460
    .line 461
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 462
    .line 463
    .line 464
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 465
    .line 466
    .line 467
    move-result-object v0

    .line 468
    invoke-direct {v1, v0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 469
    .line 470
    .line 471
    throw v1

    .line 472
    :cond_b
    :goto_c
    iget-object v0, v8, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByIntent:Landroid/util/ArrayMap;

    .line 473
    .line 474
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 475
    .line 476
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 477
    .line 478
    .line 479
    const-string/jumbo v0, "bring down"

    .line 480
    .line 481
    .line 482
    invoke-virtual {v9, v13, v10, v0, v11}, Lcom/android/server/am/ActiveServices;->unscheduleServiceRestartLocked(ILcom/android/server/am/ServiceRecord;Ljava/lang/String;Z)V

    .line 483
    .line 484
    .line 485
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 486
    .line 487
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 488
    .line 489
    .line 490
    move-result v0

    .line 491
    sub-int/2addr v0, v11

    .line 492
    :goto_d
    if-ltz v0, :cond_d

    .line 493
    .line 494
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 495
    .line 496
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 497
    .line 498
    .line 499
    move-result-object v1

    .line 500
    if-ne v1, v10, :cond_c

    .line 501
    .line 502
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 503
    .line 504
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 505
    .line 506
    .line 507
    :cond_c
    add-int/lit8 v0, v0, -0x1

    .line 508
    .line 509
    goto :goto_d

    .line 510
    :cond_d
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 511
    .line 512
    invoke-virtual {v0, v10}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 513
    .line 514
    .line 515
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 516
    .line 517
    .line 518
    iget-boolean v0, v10, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 519
    .line 520
    if-eqz v0, :cond_10

    .line 521
    .line 522
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 523
    .line 524
    .line 525
    invoke-virtual {v9, v8, v10}, Lcom/android/server/am/ActiveServices;->decActiveForegroundAppLocked(Lcom/android/server/am/ActiveServices$ServiceMap;Lcom/android/server/am/ServiceRecord;)V

    .line 526
    .line 527
    .line 528
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 529
    .line 530
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 531
    .line 532
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 533
    .line 534
    monitor-enter v1

    .line 535
    :try_start_5
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 536
    .line 537
    .line 538
    move-result-object v2

    .line 539
    if-eqz v2, :cond_e

    .line 540
    .line 541
    iget-object v3, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 542
    .line 543
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 544
    .line 545
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 546
    .line 547
    .line 548
    move-result v3

    .line 549
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 550
    .line 551
    .line 552
    move-result-wide v4

    .line 553
    invoke-virtual {v2, v13, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 554
    .line 555
    .line 556
    goto :goto_e

    .line 557
    :catchall_1
    move-exception v0

    .line 558
    goto :goto_10

    .line 559
    :cond_e
    :goto_e
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 560
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 561
    .line 562
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 563
    .line 564
    invoke-static {v2}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 565
    .line 566
    .line 567
    move-result-object v3

    .line 568
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 569
    .line 570
    iget v5, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 571
    .line 572
    iget-object v6, v10, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 573
    .line 574
    const/4 v7, 0x0

    .line 575
    const/16 v4, 0x4c

    .line 576
    .line 577
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/appop/AppOpsService;->finishOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)V

    .line 578
    .line 579
    .line 580
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->unregisterAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 581
    .line 582
    .line 583
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 584
    .line 585
    .line 586
    move-result-wide v1

    .line 587
    iput-wide v1, v10, Lcom/android/server/am/ServiceRecord;->mFgsExitTime:J

    .line 588
    .line 589
    iget-wide v3, v10, Lcom/android/server/am/ServiceRecord;->mFgsEnterTime:J

    .line 590
    .line 591
    cmp-long v5, v1, v3

    .line 592
    .line 593
    if-lez v5, :cond_f

    .line 594
    .line 595
    sub-long/2addr v1, v3

    .line 596
    long-to-int v1, v1

    .line 597
    move v4, v1

    .line 598
    goto :goto_f

    .line 599
    :cond_f
    move v4, v13

    .line 600
    :goto_f
    const/4 v5, 0x2

    .line 601
    const/4 v6, 0x0

    .line 602
    const/4 v3, 0x2

    .line 603
    const/4 v7, 0x0

    .line 604
    const/16 v16, 0x0

    .line 605
    .line 606
    move-object/from16 v1, p0

    .line 607
    .line 608
    move-object/from16 v2, p1

    .line 609
    .line 610
    move-object v14, v8

    .line 611
    move/from16 v8, v16

    .line 612
    .line 613
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 614
    .line 615
    .line 616
    iget-object v2, v9, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 617
    .line 618
    monitor-enter v2

    .line 619
    :try_start_6
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 620
    .line 621
    iget-object v3, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 622
    .line 623
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 624
    .line 625
    invoke-virtual {v1, v3, v10}, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;->logForegroundServiceStop(ILcom/android/server/am/ServiceRecord;)V

    .line 626
    .line 627
    .line 628
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 629
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 630
    .line 631
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 632
    .line 633
    iget v3, v10, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 634
    .line 635
    invoke-virtual {v1, v3, v2, v13}, Lcom/android/server/am/ActivityManagerService;->updateForegroundServiceUsageStats(ILandroid/content/ComponentName;Z)V

    .line 636
    .line 637
    .line 638
    goto :goto_11

    .line 639
    :catchall_2
    move-exception v0

    .line 640
    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 641
    throw v0

    .line 642
    :goto_10
    :try_start_8
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 643
    throw v0

    .line 644
    :cond_10
    move-object v14, v8

    .line 645
    :goto_11
    iput-boolean v13, v10, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 646
    .line 647
    iput-boolean v13, v10, Lcom/android/server/am/ServiceRecord;->mFgsNotificationWasDeferred:Z

    .line 648
    .line 649
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->dropFgsNotificationStateLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 650
    .line 651
    .line 652
    iput v13, v10, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 653
    .line 654
    iput-object v12, v10, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 655
    .line 656
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActiveServices;->resetFgsRestrictionLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 657
    .line 658
    .line 659
    if-eqz v0, :cond_11

    .line 660
    .line 661
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->signalForegroundServiceObserversLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 662
    .line 663
    .line 664
    :cond_11
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 665
    .line 666
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 667
    .line 668
    .line 669
    move-result v0

    .line 670
    sub-int/2addr v0, v11

    .line 671
    :goto_12
    if-ltz v0, :cond_13

    .line 672
    .line 673
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 674
    .line 675
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 676
    .line 677
    .line 678
    move-result-object v1

    .line 679
    check-cast v1, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 680
    .line 681
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 682
    .line 683
    if-eqz v2, :cond_12

    .line 684
    .line 685
    const/4 v3, 0x3

    .line 686
    const/4 v4, -0x1

    .line 687
    invoke-virtual {v2, v3, v4, v12, v12}, Lcom/android/server/uri/UriPermissionOwner;->removeUriPermission(IILcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 688
    .line 689
    .line 690
    iput-object v12, v1, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 691
    .line 692
    :cond_12
    add-int/lit8 v0, v0, -0x1

    .line 693
    .line 694
    goto :goto_12

    .line 695
    :cond_13
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 696
    .line 697
    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 698
    .line 699
    .line 700
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 701
    .line 702
    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 703
    .line 704
    .line 705
    iget-object v0, v14, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayedStartList:Ljava/util/ArrayList;

    .line 706
    .line 707
    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 708
    .line 709
    .line 710
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 711
    .line 712
    if-eqz v0, :cond_18

    .line 713
    .line 714
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 715
    .line 716
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 717
    .line 718
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 719
    .line 720
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 721
    .line 722
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 723
    .line 724
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 725
    .line 726
    .line 727
    move-result-object v2

    .line 728
    iget-object v3, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 729
    .line 730
    invoke-virtual {v3}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 731
    .line 732
    .line 733
    move-result-object v3

    .line 734
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteServiceStopLaunch(ILjava/lang/String;Ljava/lang/String;)V

    .line 735
    .line 736
    .line 737
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->stopServiceAndUpdateAllowlistManagerLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 738
    .line 739
    .line 740
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 741
    .line 742
    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    .line 743
    .line 744
    .line 745
    move-result v0

    .line 746
    if-eqz v0, :cond_18

    .line 747
    .line 748
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 749
    .line 750
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 751
    .line 752
    invoke-virtual {v0, v1, v12, v13}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 753
    .line 754
    .line 755
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 756
    .line 757
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 758
    .line 759
    invoke-virtual {v9, v0, v13}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 760
    .line 761
    .line 762
    iget-boolean v0, v10, Lcom/android/server/am/ServiceRecord;->mIsFgsDelegate:Z

    .line 763
    .line 764
    if-eqz v0, :cond_16

    .line 765
    .line 766
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->mFgsDelegation:Lcom/android/server/am/ForegroundServiceDelegation;

    .line 767
    .line 768
    iget-object v0, v0, Lcom/android/server/am/ForegroundServiceDelegation;->mConnection:Landroid/content/ServiceConnection;

    .line 769
    .line 770
    if-eqz v0, :cond_14

    .line 771
    .line 772
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 773
    .line 774
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 775
    .line 776
    new-instance v1, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;

    .line 777
    .line 778
    const/4 v2, 0x1

    .line 779
    invoke-direct {v1, v2, v10}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda3;-><init>(ILjava/lang/Object;)V

    .line 780
    .line 781
    .line 782
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 783
    .line 784
    .line 785
    :cond_14
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 786
    .line 787
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 788
    .line 789
    .line 790
    move-result v0

    .line 791
    sub-int/2addr v0, v11

    .line 792
    :goto_13
    if-ltz v0, :cond_18

    .line 793
    .line 794
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 795
    .line 796
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 797
    .line 798
    .line 799
    move-result-object v1

    .line 800
    if-ne v1, v10, :cond_15

    .line 801
    .line 802
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 803
    .line 804
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 805
    .line 806
    .line 807
    goto :goto_15

    .line 808
    :cond_15
    add-int/lit8 v0, v0, -0x1

    .line 809
    .line 810
    goto :goto_13

    .line 811
    :cond_16
    :try_start_9
    const-string/jumbo v4, "destroy"

    .line 812
    .line 813
    .line 814
    if-eqz v15, :cond_17

    .line 815
    .line 816
    move v5, v13

    .line 817
    goto :goto_14

    .line 818
    :cond_17
    const/4 v5, 0x5

    .line 819
    :goto_14
    const/4 v3, 0x0

    .line 820
    move-object/from16 v1, p0

    .line 821
    .line 822
    move-object/from16 v2, p1

    .line 823
    .line 824
    move v6, v15

    .line 825
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 826
    .line 827
    .line 828
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 829
    .line 830
    invoke-virtual {v0, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 831
    .line 832
    .line 833
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 834
    .line 835
    .line 836
    move-result v0

    .line 837
    or-int/2addr v15, v0

    .line 838
    iput-boolean v11, v10, Lcom/android/server/am/ServiceRecord;->destroying:Z

    .line 839
    .line 840
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 841
    .line 842
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 843
    .line 844
    invoke-interface {v0, v10}, Landroid/app/IApplicationThread;->scheduleStopService(Landroid/os/IBinder;)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_3

    .line 845
    .line 846
    .line 847
    goto :goto_15

    .line 848
    :catch_3
    move-exception v0

    .line 849
    const-string v1, "ActivityManager"

    .line 850
    .line 851
    new-instance v2, Ljava/lang/StringBuilder;

    .line 852
    .line 853
    const-string v3, "Exception when destroying service "

    .line 854
    .line 855
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 856
    .line 857
    .line 858
    iget-object v3, v10, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 859
    .line 860
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 861
    .line 862
    .line 863
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 864
    .line 865
    .line 866
    move-result-object v2

    .line 867
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 868
    .line 869
    .line 870
    invoke-virtual/range {p0 .. p2}, Lcom/android/server/am/ActiveServices;->serviceProcessGoneLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 871
    .line 872
    .line 873
    :cond_18
    :goto_15
    if-nez v15, :cond_19

    .line 874
    .line 875
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 876
    .line 877
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 878
    .line 879
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 880
    .line 881
    .line 882
    if-nez p2, :cond_19

    .line 883
    .line 884
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 885
    .line 886
    const/16 v1, 0x13

    .line 887
    .line 888
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 889
    .line 890
    .line 891
    :cond_19
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 892
    .line 893
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 894
    .line 895
    .line 896
    move-result v0

    .line 897
    if-lez v0, :cond_1a

    .line 898
    .line 899
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 900
    .line 901
    invoke-virtual {v0}, Landroid/util/ArrayMap;->clear()V

    .line 902
    .line 903
    .line 904
    :cond_1a
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 905
    .line 906
    instance-of v1, v0, Lcom/android/server/am/ActiveServices$ServiceRestarter;

    .line 907
    .line 908
    if-eqz v1, :cond_1b

    .line 909
    .line 910
    check-cast v0, Lcom/android/server/am/ActiveServices$ServiceRestarter;

    .line 911
    .line 912
    iput-object v12, v0, Lcom/android/server/am/ActiveServices$ServiceRestarter;->mService:Lcom/android/server/am/ServiceRecord;

    .line 913
    .line 914
    :cond_1b
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 915
    .line 916
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 917
    .line 918
    iget-object v1, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 919
    .line 920
    monitor-enter v1

    .line 921
    :try_start_a
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 922
    .line 923
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 924
    .line 925
    invoke-virtual {v0}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 926
    .line 927
    .line 928
    move-result v0

    .line 929
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 930
    .line 931
    if-eqz v2, :cond_1c

    .line 932
    .line 933
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 934
    .line 935
    .line 936
    move-result-wide v2

    .line 937
    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 938
    .line 939
    invoke-virtual {v4, v13, v0, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    .line 940
    .line 941
    .line 942
    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 943
    .line 944
    invoke-virtual {v4, v13, v0, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setBound(ZIJ)V

    .line 945
    .line 946
    .line 947
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    .line 948
    .line 949
    if-nez v0, :cond_1c

    .line 950
    .line 951
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 952
    .line 953
    invoke-virtual {v0, v10, v13}, Lcom/android/internal/app/procstats/ServiceState;->clearCurrentOwner(Ljava/lang/Object;Z)V

    .line 954
    .line 955
    .line 956
    iput-object v12, v10, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 957
    .line 958
    goto :goto_16

    .line 959
    :catchall_3
    move-exception v0

    .line 960
    goto :goto_17

    .line 961
    :cond_1c
    :goto_16
    monitor-exit v1
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 962
    invoke-virtual {v14, v10}, Lcom/android/server/am/ActiveServices$ServiceMap;->ensureNotStartingBackgroundLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 963
    .line 964
    .line 965
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActiveServices;->updateNumForegroundServicesLocked()V

    .line 966
    .line 967
    .line 968
    return-void

    .line 969
    :goto_17
    :try_start_b
    monitor-exit v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 970
    throw v0
.end method

.method public final bringUpServiceInnerLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;
    .locals 46

    move-object/from16 v8, p0

    move-object/from16 v9, p1

    .line 1
    const-string v10, "Exception when starting service "

    const-string/jumbo v1, "realStartServiceLocked: "

    const-string v11, "Exception when starting service "

    const-string/jumbo v2, "realStartServiceLocked: "

    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const/4 v12, 0x0

    const/4 v13, 0x0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    move/from16 v6, p3

    .line 3
    invoke-virtual {v8, v9, v6, v12}, Lcom/android/server/am/ActiveServices;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;ZZ)V

    return-object v13

    :cond_0
    move/from16 v6, p3

    if-nez p4, :cond_1

    .line 4
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    return-object v13

    .line 5
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtimeNanos()J

    move-result-wide v14

    .line 6
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->clearRestartingIfNeededLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 8
    :cond_2
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->delayed:Z

    if-eqz v0, :cond_3

    .line 9
    iget v0, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v8, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayedStartList:Ljava/util/ArrayList;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 10
    iput-boolean v12, v9, Lcom/android/server/am/ServiceRecord;->delayed:Z

    .line 11
    :cond_3
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    iget v3, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v0, v3}, Lcom/android/server/am/UserController;->hasStartedUserState(I)Z

    move-result v0

    const/4 v7, 0x1

    if-nez v0, :cond_4

    .line 12
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v1, "Unable to launch app "

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "/"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " for service "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 13
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, ": user "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " is stopped"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 14
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15
    invoke-virtual {v8, v9, v7}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    return-object v0

    .line 16
    :cond_4
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->mRecentCallingPackage:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_5

    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->isNotAppComponentUsage:Z

    if-nez v0, :cond_5

    .line 17
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    iget v4, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    const/16 v5, 0x1f

    invoke-virtual {v0, v4, v5, v3}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(IILjava/lang/String;)V

    .line 18
    :cond_5
    :try_start_0
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPackageManagerInt:Landroid/content/pm/PackageManagerInternal;

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    iget v4, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->mRecentCallingPackage:Ljava/lang/String;

    .line 19
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->toString()Ljava/lang/String;

    move-result-object v7

    .line 20
    invoke-virtual {v0, v4, v3, v5, v7}, Landroid/content/pm/PackageManagerInternal;->notifyComponentUsed(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    .line 21
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    const-string v5, "Failed trying to unstop package "

    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ": "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 22
    :goto_0
    sget-boolean v0, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    if-eqz v0, :cond_7

    .line 23
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_6

    .line 24
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mHostingRecord:Lcom/android/server/am/HostingRecord;

    goto :goto_1

    :cond_6
    move-object v0, v13

    :goto_1
    if-eqz v0, :cond_7

    .line 25
    invoke-virtual {v0}, Lcom/android/server/am/HostingRecord;->toStringForTracker()Ljava/lang/String;

    .line 26
    :cond_7
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget v3, v0, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_8

    const/16 v25, 0x1

    goto :goto_2

    :cond_8
    move/from16 v25, v12

    .line 27
    :goto_2
    iget-object v7, v9, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 28
    new-instance v23, Lcom/android/server/am/HostingRecord;

    const-string/jumbo v17, "service"

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->definingPackageName:Ljava/lang/String;

    iget v5, v9, Lcom/android/server/am/ServiceRecord;->definingUid:I

    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 29
    iget-object v12, v9, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    const-string v13, "android.permission.BIND_JOB_SERVICE"

    invoke-virtual {v13, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_9

    iget v12, v9, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    const/16 v13, 0x3e8

    if-ne v12, v13, :cond_9

    .line 30
    const-string/jumbo v12, "job"

    :goto_3
    move-object/from16 v21, v12

    goto :goto_4

    .line 31
    :cond_9
    const-string/jumbo v12, "unknown"

    goto :goto_3

    .line 32
    :goto_4
    invoke-virtual {v3}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v18

    move-object/from16 v16, v23

    move-object/from16 v19, v4

    move-object/from16 v20, v0

    move/from16 v22, v5

    invoke-direct/range {v16 .. v22}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V

    const-wide/16 v12, 0x40

    if-nez v25, :cond_c

    .line 33
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 34
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 35
    invoke-virtual {v0, v1, v7}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v10

    if-eqz v10, :cond_b

    .line 36
    iget-object v4, v10, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 37
    iget v5, v10, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 38
    invoke-virtual {v10}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    move-result v0

    if-eqz v0, :cond_b

    .line 39
    :try_start_1
    invoke-static {v12, v13}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v0

    if-eqz v0, :cond_a

    .line 40
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v12, v13, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    goto :goto_5

    :catchall_0
    move-exception v0

    goto :goto_9

    :catch_1
    move-exception v0

    move-object/from16 v45, v7

    goto :goto_7

    :catch_2
    move-exception v0

    goto :goto_8

    .line 41
    :cond_a
    :goto_5
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-wide v2, v0, Landroid/content/pm/ApplicationInfo;->longVersionCode:J

    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v10, v1, v2, v3, v0}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;JLcom/android/server/am/ProcessStatsService;)V
    :try_end_1
    .catch Landroid/os/TransactionTooLargeException; {:try_start_1 .. :try_end_1} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object v3, v10

    move/from16 v6, p3

    move-object/from16 v45, v7

    move/from16 v7, p7

    .line 42
    :try_start_2
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;IZI)V
    :try_end_2
    .catch Landroid/os/TransactionTooLargeException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_3
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 43
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    :goto_6
    const/4 v1, 0x0

    return-object v1

    :catch_3
    move-exception v0

    .line 44
    :goto_7
    :try_start_3
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 45
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    goto :goto_a

    .line 46
    :goto_8
    :try_start_4
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 47
    :goto_9
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    .line 48
    throw v0

    :cond_b
    move-object/from16 v45, v7

    :goto_a
    move-object/from16 v31, v23

    move-object/from16 v11, v45

    goto/16 :goto_10

    :cond_c
    move-object/from16 v45, v7

    .line 49
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->inSharedIsolatedProcess:Z

    if-eqz v0, :cond_10

    .line 50
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v2, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v11, v45

    invoke-virtual {v0, v3, v11, v2}, Lcom/android/server/am/ProcessList;->getSharedIsolatedProcess(ILjava/lang/String;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    if-eqz v7, :cond_e

    .line 51
    iget-object v4, v7, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 52
    iget v5, v7, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 53
    iput-object v7, v9, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 54
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    move-result v0

    if-eqz v0, :cond_e

    .line 55
    :try_start_5
    invoke-static {v12, v13}, Landroid/os/Trace;->isTagEnabled(J)Z

    move-result v0

    if-eqz v0, :cond_d

    .line 56
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v12, v13, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V
    :try_end_5
    .catch Landroid/os/TransactionTooLargeException; {:try_start_5 .. :try_end_5} :catch_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_4
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto :goto_b

    :catchall_1
    move-exception v0

    goto :goto_e

    :catch_4
    move-exception v0

    move-object/from16 v16, v7

    goto :goto_c

    :catch_5
    move-exception v0

    goto :goto_d

    :cond_d
    :goto_b
    const/4 v0, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object v3, v7

    move/from16 v6, p3

    move-object/from16 v16, v7

    move v7, v0

    .line 57
    :try_start_6
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;IZI)V
    :try_end_6
    .catch Landroid/os/TransactionTooLargeException; {:try_start_6 .. :try_end_6} :catch_5
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 58
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    goto :goto_6

    :catch_6
    move-exception v0

    .line 59
    :goto_c
    :try_start_7
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 60
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    goto :goto_f

    .line 61
    :goto_d
    :try_start_8
    throw v0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 62
    :goto_e
    invoke-static {v12, v13}, Landroid/os/Trace;->traceEnd(J)V

    .line 63
    throw v0

    :cond_e
    move-object/from16 v16, v7

    :goto_f
    move-object/from16 v10, v16

    :cond_f
    move-object/from16 v31, v23

    goto :goto_10

    :cond_10
    move-object/from16 v11, v45

    .line 64
    iget-object v10, v9, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 65
    invoke-static {}, Landroid/webkit/WebViewZygote;->isMultiprocessEnabled()Z

    move-result v0

    if-eqz v0, :cond_11

    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 66
    invoke-static {}, Landroid/webkit/WebViewZygote;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    .line 67
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->definingPackageName:Ljava/lang/String;

    iget v2, v9, Lcom/android/server/am/ServiceRecord;->definingUid:I

    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v3, v3, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 68
    new-instance v23, Lcom/android/server/am/HostingRecord;

    invoke-virtual {v0}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v28

    const-string/jumbo v35, "unknown"

    const-string v27, ""

    const/16 v32, 0x0

    const/16 v34, 0x0

    const/16 v29, 0x1

    move-object/from16 v26, v23

    move-object/from16 v30, v1

    move/from16 v31, v2

    move-object/from16 v33, v3

    invoke-direct/range {v26 .. v35}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 69
    :cond_11
    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget v1, v0, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v1, v1, 0x8

    if-eqz v1, :cond_f

    .line 70
    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    iget-object v2, v9, Lcom/android/server/am/ServiceRecord;->definingPackageName:Ljava/lang/String;

    iget v3, v9, Lcom/android/server/am/ServiceRecord;->definingUid:I

    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 71
    new-instance v4, Lcom/android/server/am/HostingRecord;

    invoke-virtual {v1}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v28

    const-string/jumbo v35, "unknown"

    const-string v27, ""

    const/16 v32, 0x0

    const/16 v34, 0x0

    const/16 v29, 0x2

    move-object/from16 v26, v4

    move-object/from16 v30, v2

    move/from16 v31, v3

    move-object/from16 v33, v0

    invoke-direct/range {v26 .. v35}, Lcom/android/server/am/HostingRecord;-><init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;IZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    move-object/from16 v31, v4

    :goto_10
    if-nez v10, :cond_17

    if-nez p5, :cond_17

    if-nez p6, :cond_17

    .line 72
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->isSdkSandbox:Z

    if-eqz v0, :cond_12

    .line 73
    iget v0, v9, Lcom/android/server/am/ServiceRecord;->sdkSandboxClientAppUid:I

    invoke-static {v0}, Landroid/os/Process;->toSdkSandboxUid(I)I

    move-result v37

    .line 74
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v9, Lcom/android/server/am/ServiceRecord;->sdkSandboxClientAppPackage:Ljava/lang/String;

    .line 75
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v43, 0x0

    const/16 v44, -0x1

    const/16 v29, 0x1

    const/16 v32, 0x0

    const/16 v33, 0x0

    const/16 v34, 0x0

    const/16 v35, 0x0

    const/16 v36, 0x1

    const/16 v39, 0x0

    const/16 v40, 0x0

    const/16 v41, 0x0

    const/16 v42, 0x0

    move-object/from16 v26, v0

    move-object/from16 v27, v11

    move-object/from16 v28, v1

    move/from16 v30, p2

    move-object/from16 v38, v2

    .line 76
    invoke-virtual/range {v26 .. v44}, Lcom/android/server/am/ProcessList;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZIZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 77
    iput-object v0, v9, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    goto :goto_11

    .line 78
    :cond_12
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    const/16 v23, 0x0

    const/16 v19, 0x1

    const/16 v22, 0x0

    move-object/from16 v16, v0

    move-object/from16 v17, v11

    move-object/from16 v18, v1

    move/from16 v20, p2

    move-object/from16 v21, v31

    move/from16 v24, v25

    invoke-virtual/range {v16 .. v24}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILcom/android/server/am/HostingRecord;IZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    :goto_11
    if-nez v0, :cond_13

    .line 79
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v1, "Unable to launch app "

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v1, "/"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " for service "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 80
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, ": process is bad"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 81
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v1, 0x1

    .line 82
    invoke-virtual {v8, v9, v1}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    return-object v0

    :cond_13
    const/4 v1, 0x1

    .line 83
    iget-object v2, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 84
    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mAppStartInfoTracker:Lcom/android/server/am/AppStartInfoTracker;

    .line 85
    iget-object v3, v2, Lcom/android/server/am/AppStartInfoTracker;->mLock:Ljava/lang/Object;

    .line 86
    monitor-enter v3

    .line 87
    :try_start_9
    iget-boolean v4, v2, Lcom/android/server/am/AppStartInfoTracker;->mEnabled:Z

    if-nez v4, :cond_14

    .line 88
    monitor-exit v3

    goto :goto_13

    :catchall_2
    move-exception v0

    goto :goto_14

    .line 89
    :cond_14
    new-instance v4, Landroid/app/ApplicationStartInfo;

    invoke-direct {v4}, Landroid/app/ApplicationStartInfo;-><init>()V

    .line 90
    invoke-static {v4, v0}, Lcom/android/server/am/AppStartInfoTracker;->addBaseFieldsFromProcessRecord(Landroid/app/ApplicationStartInfo;Lcom/android/server/am/ProcessRecord;)V

    const/4 v5, 0x0

    .line 91
    invoke-virtual {v4, v5}, Landroid/app/ApplicationStartInfo;->setStartupState(I)V

    .line 92
    invoke-virtual {v4, v5, v14, v15}, Landroid/app/ApplicationStartInfo;->addStartupTimestamp(IJ)V

    .line 93
    invoke-virtual {v4, v1}, Landroid/app/ApplicationStartInfo;->setStartType(I)V

    .line 94
    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    if-eqz v5, :cond_15

    const-string v6, "android.permission.BIND_JOB_SERVICE"

    invoke-virtual {v5, v6}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v5

    if-eqz v5, :cond_15

    const/4 v5, 0x5

    goto :goto_12

    :cond_15
    const/16 v5, 0xa

    .line 95
    :goto_12
    invoke-virtual {v4, v5}, Landroid/app/ApplicationStartInfo;->setReason(I)V

    .line 96
    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    if-eqz v5, :cond_16

    .line 97
    invoke-virtual {v5}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    move-result-object v5

    invoke-virtual {v4, v5}, Landroid/app/ApplicationStartInfo;->setIntent(Landroid/content/Intent;)V

    .line 98
    :cond_16
    invoke-virtual {v2, v4}, Lcom/android/server/am/AppStartInfoTracker;->addStartInfoLocked(Landroid/app/ApplicationStartInfo;)Landroid/app/ApplicationStartInfo;

    .line 99
    monitor-exit v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    :goto_13
    if-eqz v25, :cond_18

    .line 100
    iput-object v0, v9, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    goto :goto_15

    .line 101
    :goto_14
    :try_start_a
    monitor-exit v3
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_2

    throw v0

    :cond_17
    const/4 v1, 0x1

    .line 102
    :cond_18
    :goto_15
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    if-eqz v0, :cond_19

    .line 103
    iget-object v10, v8, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v0, v10, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mServiceStartForegroundTimeoutMs:I

    int-to-long v2, v0

    const-string/jumbo v13, "fg-service-launch"

    iget v0, v9, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    const/16 v12, 0x12f

    const/4 v14, 0x0

    move-wide v15, v2

    move/from16 v17, v0

    invoke-virtual/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->tempAllowlistUidLocked(IILjava/lang/String;IJI)V

    .line 104
    :cond_19
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1a

    .line 105
    iget-object v0, v8, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 106
    :cond_1a
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->delayedStop:Z

    if-eqz v0, :cond_1b

    const/4 v2, 0x0

    .line 107
    iput-boolean v2, v9, Lcom/android/server/am/ServiceRecord;->delayedStop:Z

    .line 108
    iget-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v0, :cond_1b

    .line 109
    invoke-virtual {v8, v9, v1}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    :cond_1b
    const/4 v1, 0x0

    return-object v1
.end method

.method public final bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;
    .locals 4

    .line 1
    const-string/jumbo v0, "bringUpServiceLocked: "

    .line 2
    .line 3
    .line 4
    const-wide/16 v1, 0x40

    .line 5
    .line 6
    :try_start_0
    invoke-static {v1, v2}, Landroid/os/Trace;->isTagEnabled(J)Z

    .line 7
    .line 8
    .line 9
    move-result v3

    .line 10
    if-eqz v3, :cond_0

    .line 11
    .line 12
    new-instance v3, Ljava/lang/StringBuilder;

    .line 13
    .line 14
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 15
    .line 16
    .line 17
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 18
    .line 19
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    .line 21
    .line 22
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    .line 24
    .line 25
    move-result-object v0

    .line 26
    invoke-static {v1, v2, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 27
    .line 28
    .line 29
    goto :goto_0

    .line 30
    :catchall_0
    move-exception p0

    .line 31
    goto :goto_1

    .line 32
    :cond_0
    :goto_0
    invoke-virtual/range {p0 .. p7}, Lcom/android/server/am/ActiveServices;->bringUpServiceInnerLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;

    .line 33
    .line 34
    .line 35
    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 36
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 37
    .line 38
    .line 39
    return-object p0

    .line 40
    :goto_1
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 41
    .line 42
    .line 43
    throw p0
.end method

.method public final bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mBootPhase:I

    .line 4
    .line 5
    const/16 v1, 0x258

    .line 6
    .line 7
    const/4 v2, 0x0

    .line 8
    const/4 v3, 0x1

    .line 9
    if-ge v0, v1, :cond_0

    .line 10
    .line 11
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 12
    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget v0, v0, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 16
    .line 17
    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 18
    .line 19
    if-ne v0, v1, :cond_0

    .line 20
    .line 21
    const-string v0, "ActivityManager"

    .line 22
    .line 23
    new-instance v1, Ljava/lang/StringBuilder;

    .line 24
    .line 25
    const-string v4, "Too early to start/bind service in system_server: Phase="

    .line 26
    .line 27
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    .line 29
    .line 30
    iget-object v4, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 31
    .line 32
    iget v4, v4, Lcom/android/server/am/ActivityManagerService;->mBootPhase:I

    .line 33
    .line 34
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 35
    .line 36
    .line 37
    const-string v4, " "

    .line 38
    .line 39
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 40
    .line 41
    .line 42
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 43
    .line 44
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 45
    .line 46
    .line 47
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object v1

    .line 51
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    .line 53
    .line 54
    move v0, v2

    .line 55
    goto :goto_0

    .line 56
    :cond_0
    move v0, v3

    .line 57
    :goto_0
    if-eqz p1, :cond_9

    .line 58
    .line 59
    sget-boolean v1, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 60
    .line 61
    if-eqz v1, :cond_9

    .line 62
    .line 63
    sget-boolean v1, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 64
    .line 65
    sget-object v4, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 66
    .line 67
    iget-boolean v1, v4, Lcom/android/server/am/FreecessController;->mIsFreecessEnable:Z

    .line 68
    .line 69
    if-eqz v1, :cond_9

    .line 70
    .line 71
    sget-object v1, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 72
    .line 73
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 74
    .line 75
    .line 76
    sget-boolean v5, Lcom/android/server/am/MARsPolicyManager;->isChinaModel:Z

    .line 77
    .line 78
    const-wide/16 v6, 0x7d0

    .line 79
    .line 80
    if-eqz v5, :cond_7

    .line 81
    .line 82
    iget-boolean v5, v4, Lcom/android/server/am/FreecessController;->mPidUnfreezeEnabled:Z

    .line 83
    .line 84
    if-eqz v5, :cond_7

    .line 85
    .line 86
    const-string/jumbo v5, "unbind"

    .line 87
    .line 88
    .line 89
    invoke-virtual {v5, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 90
    .line 91
    .line 92
    move-result v5

    .line 93
    if-nez v5, :cond_1

    .line 94
    .line 95
    const-string/jumbo v5, "destroy"

    .line 96
    .line 97
    .line 98
    invoke-virtual {v5, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 99
    .line 100
    .line 101
    move-result p3

    .line 102
    if-eqz p3, :cond_7

    .line 103
    .line 104
    :cond_1
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 105
    .line 106
    iget v5, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 107
    .line 108
    sget-boolean v8, Lcom/android/server/am/MARsPolicyManager;->isChinaModel:Z

    .line 109
    .line 110
    if-eqz v8, :cond_3

    .line 111
    .line 112
    invoke-virtual {v1, p3, v5}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;I)Z

    .line 113
    .line 114
    .line 115
    move-result v1

    .line 116
    if-eqz v1, :cond_2

    .line 117
    .line 118
    goto :goto_1

    .line 119
    :cond_2
    move p3, v2

    .line 120
    goto :goto_3

    .line 121
    :cond_3
    :goto_1
    sget-object v1, Lcom/android/server/am/MARsPolicyManager;->MARsLock:Lcom/android/server/am/MARsPolicyManager$Lock;

    .line 122
    .line 123
    monitor-enter v1

    .line 124
    :try_start_0
    invoke-virtual {v4, v5, p3}, Lcom/android/server/am/FreecessController;->getPackageStatus(ILjava/lang/String;)Lcom/android/server/am/FreecessPkgStatus;

    .line 125
    .line 126
    .line 127
    move-result-object p3

    .line 128
    if-eqz p3, :cond_4

    .line 129
    .line 130
    iget-object p3, p3, Lcom/android/server/am/FreecessPkgStatus;->freezedRecord:Lcom/android/server/am/mars/MARsFreezeStateRecord;

    .line 131
    .line 132
    iget-boolean v5, p3, Lcom/android/server/am/mars/MARsFreezeStateRecord;->isFrozen:Z

    .line 133
    .line 134
    if-eqz v5, :cond_4

    .line 135
    .line 136
    iget-boolean p3, p3, Lcom/android/server/am/mars/MARsFreezeStateRecord;->isOLAFFreezed:Z

    .line 137
    .line 138
    if-nez p3, :cond_4

    .line 139
    .line 140
    move p3, v3

    .line 141
    goto :goto_2

    .line 142
    :catchall_0
    move-exception p0

    .line 143
    goto :goto_5

    .line 144
    :cond_4
    move p3, v2

    .line 145
    :goto_2
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 146
    :goto_3
    if-eqz p3, :cond_7

    .line 147
    .line 148
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 149
    .line 150
    if-eqz p3, :cond_9

    .line 151
    .line 152
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 153
    .line 154
    iget-boolean p3, p3, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 155
    .line 156
    if-nez p3, :cond_6

    .line 157
    .line 158
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 159
    .line 160
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 161
    .line 162
    invoke-virtual {p3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 163
    .line 164
    .line 165
    move-result p3

    .line 166
    if-nez p3, :cond_6

    .line 167
    .line 168
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 169
    .line 170
    invoke-static {p3}, Lcom/android/server/am/FreecessController;->isMainProcDepend(Lcom/android/server/am/ProcessRecord;)Z

    .line 171
    .line 172
    .line 173
    move-result p3

    .line 174
    if-eqz p3, :cond_5

    .line 175
    .line 176
    goto :goto_4

    .line 177
    :cond_5
    const-string p3, "ActivityManager"

    .line 178
    .line 179
    new-instance v1, Ljava/lang/StringBuilder;

    .line 180
    .line 181
    const-string/jumbo v4, "mars Chain destruct kill: uid="

    .line 182
    .line 183
    .line 184
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 185
    .line 186
    .line 187
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 188
    .line 189
    iget v4, v4, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 190
    .line 191
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 192
    .line 193
    .line 194
    const-string v4, ", pid="

    .line 195
    .line 196
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 197
    .line 198
    .line 199
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 200
    .line 201
    iget v4, v4, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 202
    .line 203
    invoke-static {v1, v4, p3}, Lcom/android/server/DeviceIdleController$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 204
    .line 205
    .line 206
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 207
    .line 208
    iget p3, p3, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 209
    .line 210
    invoke-static {p3}, Landroid/os/Process;->killProcess(I)V

    .line 211
    .line 212
    .line 213
    goto :goto_6

    .line 214
    :cond_6
    :goto_4
    const-string p3, "ActivityManager-MARs"

    .line 215
    .line 216
    new-instance v1, Ljava/lang/StringBuilder;

    .line 217
    .line 218
    const-string v5, "Frozen activity protection: uid="

    .line 219
    .line 220
    invoke-direct {v1, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 221
    .line 222
    .line 223
    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 224
    .line 225
    iget v5, v5, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 226
    .line 227
    invoke-static {v1, v5, p3}, Lcom/android/server/DeviceIdleController$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 228
    .line 229
    .line 230
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 231
    .line 232
    iget p3, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 233
    .line 234
    const-string v1, "ServiceANR"

    .line 235
    .line 236
    invoke-virtual {v4, p3, v1, v6, v7}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)V

    .line 237
    .line 238
    .line 239
    goto :goto_6

    .line 240
    :goto_5
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 241
    throw p0

    .line 242
    :cond_7
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 243
    .line 244
    if-eqz p3, :cond_8

    .line 245
    .line 246
    iget p3, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 247
    .line 248
    const-string v1, "ServiceANR"

    .line 249
    .line 250
    invoke-virtual {v4, p3, v1, v6, v7}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)V

    .line 251
    .line 252
    .line 253
    :cond_8
    iget-object v6, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 254
    .line 255
    iget v5, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 256
    .line 257
    const-string v9, "ServiceANR"

    .line 258
    .line 259
    const-wide/16 v7, 0x7d0

    .line 260
    .line 261
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;JLjava/lang/String;)Z

    .line 262
    .line 263
    .line 264
    :cond_9
    :goto_6
    if-eqz p5, :cond_b

    .line 265
    .line 266
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 267
    .line 268
    if-eqz p3, :cond_b

    .line 269
    .line 270
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mOptRecord:Lcom/android/server/am/ProcessCachedOptimizerRecord;

    .line 271
    .line 272
    iget-boolean p5, p3, Lcom/android/server/am/ProcessCachedOptimizerRecord;->mPendingFreeze:Z

    .line 273
    .line 274
    if-nez p5, :cond_a

    .line 275
    .line 276
    iget-boolean p3, p3, Lcom/android/server/am/ProcessCachedOptimizerRecord;->mFrozen:Z

    .line 277
    .line 278
    if-eqz p3, :cond_b

    .line 279
    .line 280
    :cond_a
    move p3, v3

    .line 281
    goto :goto_7

    .line 282
    :cond_b
    move p3, v2

    .line 283
    :goto_7
    iget p5, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    .line 284
    .line 285
    if-nez p5, :cond_10

    .line 286
    .line 287
    iput-boolean p2, p1, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    .line 288
    .line 289
    iget-object p5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 290
    .line 291
    iget-object p5, p5, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 292
    .line 293
    iget-object p5, p5, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 294
    .line 295
    monitor-enter p5

    .line 296
    :try_start_2
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 297
    .line 298
    .line 299
    move-result-object v1

    .line 300
    if-eqz v1, :cond_c

    .line 301
    .line 302
    iget-object v4, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 303
    .line 304
    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 305
    .line 306
    invoke-virtual {v4}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 307
    .line 308
    .line 309
    move-result v4

    .line 310
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 311
    .line 312
    .line 313
    move-result-wide v5

    .line 314
    invoke-virtual {v1, v3, v4, v5, v6}, Lcom/android/internal/app/procstats/ServiceState;->setExecuting(ZIJ)V

    .line 315
    .line 316
    .line 317
    goto :goto_8

    .line 318
    :catchall_1
    move-exception p0

    .line 319
    goto :goto_9

    .line 320
    :cond_c
    :goto_8
    monitor-exit p5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 321
    iget-object p5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 322
    .line 323
    if-eqz p5, :cond_12

    .line 324
    .line 325
    iget-object p5, p5, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 326
    .line 327
    iget-object v1, p5, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 328
    .line 329
    invoke-virtual {v1, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 330
    .line 331
    .line 332
    iget-boolean v1, p5, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 333
    .line 334
    if-nez v1, :cond_d

    .line 335
    .line 336
    if-eqz p2, :cond_e

    .line 337
    .line 338
    :cond_d
    move v2, v3

    .line 339
    :cond_e
    iput-boolean v2, p5, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 340
    .line 341
    if-eqz v0, :cond_12

    .line 342
    .line 343
    iget-object p5, p5, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 344
    .line 345
    invoke-virtual {p5}, Landroid/util/ArraySet;->size()I

    .line 346
    .line 347
    .line 348
    move-result p5

    .line 349
    if-ne p5, v3, :cond_12

    .line 350
    .line 351
    if-nez p3, :cond_f

    .line 352
    .line 353
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 354
    .line 355
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActiveServices;->scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 356
    .line 357
    .line 358
    goto :goto_a

    .line 359
    :cond_f
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 360
    .line 361
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 362
    .line 363
    iput-boolean v3, p3, Lcom/android/server/am/ProcessServiceRecord;->mScheduleServiceTimeoutPending:Z

    .line 364
    .line 365
    goto :goto_a

    .line 366
    :goto_9
    :try_start_3
    monitor-exit p5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 367
    throw p0

    .line 368
    :cond_10
    iget-object p5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 369
    .line 370
    if-eqz p5, :cond_12

    .line 371
    .line 372
    if-eqz p2, :cond_12

    .line 373
    .line 374
    iget-object v1, p5, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 375
    .line 376
    iget-boolean v2, v1, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 377
    .line 378
    if-nez v2, :cond_12

    .line 379
    .line 380
    iput-boolean v3, v1, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 381
    .line 382
    if-eqz v0, :cond_12

    .line 383
    .line 384
    if-nez p3, :cond_11

    .line 385
    .line 386
    invoke-virtual {p0, p5}, Lcom/android/server/am/ActiveServices;->scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 387
    .line 388
    .line 389
    goto :goto_a

    .line 390
    :cond_11
    iput-boolean v3, v1, Lcom/android/server/am/ProcessServiceRecord;->mScheduleServiceTimeoutPending:Z

    .line 391
    .line 392
    :cond_12
    :goto_a
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 393
    .line 394
    if-eqz p3, :cond_13

    .line 395
    .line 396
    iget-object p5, p3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 397
    .line 398
    iget p5, p5, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 399
    .line 400
    const/16 v0, 0xa

    .line 401
    .line 402
    if-le p5, v0, :cond_13

    .line 403
    .line 404
    iget-object p5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 405
    .line 406
    invoke-virtual {p5, p3}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 407
    .line 408
    .line 409
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    .line 410
    .line 411
    .line 412
    if-eqz p4, :cond_13

    .line 413
    .line 414
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 415
    .line 416
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 417
    .line 418
    .line 419
    :cond_13
    iget-boolean p0, p1, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    .line 420
    .line 421
    or-int/2addr p0, p2

    .line 422
    iput-boolean p0, p1, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    .line 423
    .line 424
    iget p0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    .line 425
    .line 426
    add-int/2addr p0, v3

    .line 427
    iput p0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    .line 428
    .line 429
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 430
    .line 431
    .line 432
    move-result-wide p2

    .line 433
    iput-wide p2, p1, Lcom/android/server/am/ServiceRecord;->executingStart:J

    .line 434
    .line 435
    return-void
.end method

.method public final canBindingClientStartFgsLocked(I)Ljava/lang/String;
    .locals 4

    .line 1
    new-instance v0, Landroid/util/ArraySet;

    .line 2
    .line 3
    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    .line 4
    .line 5
    .line 6
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 7
    .line 8
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 9
    .line 10
    new-instance v2, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda2;

    .line 11
    .line 12
    const/4 v3, 0x0

    .line 13
    invoke-direct {v2, p0, p1, v0, v3}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/am/ActiveServices;ILandroid/util/ArraySet;I)V

    .line 14
    .line 15
    .line 16
    const/4 p0, 0x0

    .line 17
    invoke-virtual {v1, v2, p0}, Lcom/android/server/am/ProcessList;->searchEachLruProcessesLOSP(Ljava/util/function/Function;Z)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    check-cast p0, Landroid/util/Pair;

    .line 22
    .line 23
    if-eqz p0, :cond_0

    .line 24
    .line 25
    iget-object p0, p0, Landroid/util/Pair;->second:Ljava/lang/Object;

    .line 26
    .line 27
    check-cast p0, Ljava/lang/String;

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_0
    const/4 p0, 0x0

    .line 31
    :goto_0
    return-object p0
.end method

.method public final canStartForegroundServiceLocked(IILjava/lang/String;)Z
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mFlagBackgroundFgsStartRestrictionEnabled:Z

    .line 6
    .line 7
    const/4 v1, 0x1

    .line 8
    if-nez v0, :cond_0

    .line 9
    .line 10
    return v1

    .line 11
    :cond_0
    sget-object v8, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    .line 12
    .line 13
    const/4 v6, 0x0

    .line 14
    move-object v2, p0

    .line 15
    move-object v3, p3

    .line 16
    move v4, p1

    .line 17
    move v5, p2

    .line 18
    move-object v7, v8

    .line 19
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActiveServices;->shouldAllowFgsWhileInUsePermissionLocked(Ljava/lang/String;IILcom/android/server/am/ProcessRecord;Landroid/app/BackgroundStartPrivileges;)I

    .line 20
    .line 21
    .line 22
    move-result v3

    .line 23
    const/4 v7, 0x0

    .line 24
    move-object v6, p3

    .line 25
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/am/ActiveServices;->shouldAllowFgsStartForegroundNoBindingCheckLocked(IIILjava/lang/String;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;)I

    .line 26
    .line 27
    .line 28
    move-result p1

    .line 29
    const/4 p3, -0x1

    .line 30
    if-ne p1, p3, :cond_1

    .line 31
    .line 32
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActiveServices;->canBindingClientStartFgsLocked(I)Ljava/lang/String;

    .line 33
    .line 34
    .line 35
    move-result-object p0

    .line 36
    if-eqz p0, :cond_1

    .line 37
    .line 38
    const/16 p1, 0x36

    .line 39
    .line 40
    :cond_1
    if-eq p1, p3, :cond_2

    .line 41
    .line 42
    goto :goto_0

    .line 43
    :cond_2
    const/4 v1, 0x0

    .line 44
    :goto_0
    return v1
.end method

.method public final cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 4

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 2
    .line 3
    if-eqz v0, :cond_2

    .line 4
    .line 5
    iget v0, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 6
    .line 7
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    iget-object v0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 12
    .line 13
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 14
    .line 15
    .line 16
    move-result v0

    .line 17
    add-int/lit8 v0, v0, -0x1

    .line 18
    .line 19
    :goto_0
    if-ltz v0, :cond_1

    .line 20
    .line 21
    iget-object v1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 22
    .line 23
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v1

    .line 27
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 28
    .line 29
    if-eq v1, p1, :cond_0

    .line 30
    .line 31
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 32
    .line 33
    if-eqz v2, :cond_0

    .line 34
    .line 35
    iget v2, v1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 36
    .line 37
    iget v3, p1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 38
    .line 39
    if-ne v2, v3, :cond_0

    .line 40
    .line 41
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 42
    .line 43
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 44
    .line 45
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 46
    .line 47
    .line 48
    move-result v1

    .line 49
    if-eqz v1, :cond_0

    .line 50
    .line 51
    return-void

    .line 52
    :cond_0
    add-int/lit8 v0, v0, -0x1

    .line 53
    .line 54
    goto :goto_0

    .line 55
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->cancelNotification()V

    .line 56
    .line 57
    .line 58
    :cond_2
    return-void
.end method

.method public final cleanUpServices(ILandroid/content/ComponentName;Landroid/content/Intent;)V
    .locals 19

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    new-instance v1, Ljava/util/ArrayList;

    .line 4
    .line 5
    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 6
    .line 7
    .line 8
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 9
    .line 10
    .line 11
    move-result-object v2

    .line 12
    iget-object v2, v2, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 13
    .line 14
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    .line 15
    .line 16
    .line 17
    move-result v3

    .line 18
    const/4 v4, 0x1

    .line 19
    sub-int/2addr v3, v4

    .line 20
    :goto_0
    if-ltz v3, :cond_1

    .line 21
    .line 22
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v5

    .line 26
    check-cast v5, Lcom/android/server/am/ServiceRecord;

    .line 27
    .line 28
    iget-object v6, v5, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 29
    .line 30
    invoke-virtual/range {p2 .. p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 31
    .line 32
    .line 33
    move-result-object v7

    .line 34
    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 35
    .line 36
    .line 37
    move-result v6

    .line 38
    if-eqz v6, :cond_0

    .line 39
    .line 40
    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 41
    .line 42
    .line 43
    :cond_0
    add-int/lit8 v3, v3, -0x1

    .line 44
    .line 45
    goto :goto_0

    .line 46
    :cond_1
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 47
    .line 48
    .line 49
    move-result v2

    .line 50
    sub-int/2addr v2, v4

    .line 51
    const/4 v5, 0x0

    .line 52
    :goto_1
    if-ltz v2, :cond_5

    .line 53
    .line 54
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 55
    .line 56
    .line 57
    move-result-object v6

    .line 58
    check-cast v6, Lcom/android/server/am/ServiceRecord;

    .line 59
    .line 60
    iget-boolean v7, v6, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 61
    .line 62
    if-eqz v7, :cond_4

    .line 63
    .line 64
    iget-object v7, v6, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 65
    .line 66
    iget v7, v7, Landroid/content/pm/ServiceInfo;->flags:I

    .line 67
    .line 68
    and-int/2addr v7, v4

    .line 69
    if-eqz v7, :cond_2

    .line 70
    .line 71
    new-instance v5, Ljava/lang/StringBuilder;

    .line 72
    .line 73
    const-string v7, "Stopping service "

    .line 74
    .line 75
    invoke-direct {v5, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 76
    .line 77
    .line 78
    iget-object v7, v6, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 79
    .line 80
    const-string v8, ": remove task"

    .line 81
    .line 82
    const-string v9, "ActivityManager"

    .line 83
    .line 84
    invoke-static {v5, v7, v8, v9}, Lcom/android/server/BootReceiver$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 85
    .line 86
    .line 87
    invoke-virtual {v0, v6, v4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 88
    .line 89
    .line 90
    move v3, v4

    .line 91
    move v5, v3

    .line 92
    :goto_2
    const/4 v4, 0x0

    .line 93
    goto :goto_3

    .line 94
    :cond_2
    iget-object v15, v6, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 95
    .line 96
    new-instance v14, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 97
    .line 98
    iget v10, v6, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 99
    .line 100
    const/4 v13, 0x0

    .line 101
    const/16 v16, 0x0

    .line 102
    .line 103
    const/4 v9, 0x1

    .line 104
    const/4 v12, 0x0

    .line 105
    const/16 v17, 0x0

    .line 106
    .line 107
    const/16 v18, -0x1

    .line 108
    .line 109
    move-object v7, v14

    .line 110
    move-object v8, v6

    .line 111
    move-object/from16 v11, p3

    .line 112
    .line 113
    move-object v3, v14

    .line 114
    move-object/from16 v14, v16

    .line 115
    .line 116
    move-object v4, v15

    .line 117
    move-object/from16 v15, v17

    .line 118
    .line 119
    move/from16 v16, v18

    .line 120
    .line 121
    invoke-direct/range {v7 .. v16}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;ILjava/lang/String;Ljava/lang/String;I)V

    .line 122
    .line 123
    .line 124
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 125
    .line 126
    .line 127
    iget-object v3, v6, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 128
    .line 129
    if-eqz v3, :cond_3

    .line 130
    .line 131
    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    .line 132
    .line 133
    .line 134
    move-result v3

    .line 135
    if-eqz v3, :cond_3

    .line 136
    .line 137
    const/4 v3, 0x1

    .line 138
    const/4 v4, 0x0

    .line 139
    :try_start_0
    invoke-virtual {v0, v6, v3, v4}, Lcom/android/server/am/ActiveServices;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;ZZ)V
    :try_end_0
    .catch Landroid/os/TransactionTooLargeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 140
    .line 141
    .line 142
    goto :goto_3

    .line 143
    :cond_3
    const/4 v3, 0x1

    .line 144
    goto :goto_2

    .line 145
    :cond_4
    move v3, v4

    .line 146
    goto :goto_2

    .line 147
    :catch_0
    :goto_3
    add-int/lit8 v2, v2, -0x1

    .line 148
    .line 149
    move v4, v3

    .line 150
    goto :goto_1

    .line 151
    :cond_5
    if-eqz v5, :cond_6

    .line 152
    .line 153
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 154
    .line 155
    const/16 v1, 0x11

    .line 156
    .line 157
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 158
    .line 159
    .line 160
    :cond_6
    return-void
.end method

.method public final clearRestartingIfNeededLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 5

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->restartTracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 2
    .line 3
    if-eqz v0, :cond_2

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 6
    .line 7
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    add-int/lit8 v0, v0, -0x1

    .line 12
    .line 13
    :goto_0
    if-ltz v0, :cond_1

    .line 14
    .line 15
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 16
    .line 17
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object v1

    .line 21
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 22
    .line 23
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->restartTracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 24
    .line 25
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->restartTracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 26
    .line 27
    if-ne v1, v2, :cond_0

    .line 28
    .line 29
    goto :goto_1

    .line 30
    :cond_0
    add-int/lit8 v0, v0, -0x1

    .line 31
    .line 32
    goto :goto_0

    .line 33
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 34
    .line 35
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 36
    .line 37
    iget-object v0, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 38
    .line 39
    monitor-enter v0

    .line 40
    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->restartTracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 41
    .line 42
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 43
    .line 44
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 45
    .line 46
    invoke-virtual {p0}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 47
    .line 48
    .line 49
    move-result p0

    .line 50
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 51
    .line 52
    .line 53
    move-result-wide v2

    .line 54
    const/4 v4, 0x0

    .line 55
    invoke-virtual {v1, v4, p0, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setRestarting(ZIJ)V

    .line 56
    .line 57
    .line 58
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 59
    const/4 p0, 0x0

    .line 60
    iput-object p0, p1, Lcom/android/server/am/ServiceRecord;->restartTracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 61
    .line 62
    goto :goto_1

    .line 63
    :catchall_0
    move-exception p0

    .line 64
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 65
    throw p0

    .line 66
    :cond_2
    :goto_1
    return-void
.end method

.method public final collectPackageServicesLocked(Ljava/lang/String;Ljava/util/Set;ZZLandroid/util/ArrayMap;)Z
    .locals 6

    .line 1
    invoke-virtual {p5}, Landroid/util/ArrayMap;->size()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x1

    .line 6
    sub-int/2addr v0, v1

    .line 7
    const/4 v2, 0x0

    .line 8
    :goto_0
    if-ltz v0, :cond_7

    .line 9
    .line 10
    invoke-virtual {p5, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 11
    .line 12
    .line 13
    move-result-object v3

    .line 14
    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 15
    .line 16
    if-eqz p1, :cond_0

    .line 17
    .line 18
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 19
    .line 20
    invoke-virtual {v4, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 21
    .line 22
    .line 23
    move-result v4

    .line 24
    if-eqz v4, :cond_6

    .line 25
    .line 26
    if-eqz p2, :cond_0

    .line 27
    .line 28
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 29
    .line 30
    invoke-virtual {v4}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 31
    .line 32
    .line 33
    move-result-object v4

    .line 34
    move-object v5, p2

    .line 35
    check-cast v5, Landroid/util/ArraySet;

    .line 36
    .line 37
    invoke-virtual {v5, v4}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 38
    .line 39
    .line 40
    move-result v4

    .line 41
    if-eqz v4, :cond_6

    .line 42
    .line 43
    :cond_0
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 44
    .line 45
    if-eqz v4, :cond_1

    .line 46
    .line 47
    if-nez p3, :cond_1

    .line 48
    .line 49
    iget-boolean v4, v4, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    .line 50
    .line 51
    if-nez v4, :cond_6

    .line 52
    .line 53
    :cond_1
    if-nez p4, :cond_2

    .line 54
    .line 55
    return v1

    .line 56
    :cond_2
    new-instance v2, Ljava/lang/StringBuilder;

    .line 57
    .line 58
    const-string v4, "  Force stopping service "

    .line 59
    .line 60
    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 61
    .line 62
    .line 63
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 64
    .line 65
    .line 66
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 67
    .line 68
    .line 69
    move-result-object v2

    .line 70
    const-string v4, "ActivityManager"

    .line 71
    .line 72
    invoke-static {v4, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 73
    .line 74
    .line 75
    iget-object v2, v3, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 76
    .line 77
    if-eqz v2, :cond_3

    .line 78
    .line 79
    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    .line 80
    .line 81
    if-nez v2, :cond_3

    .line 82
    .line 83
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActiveServices;->stopServiceAndUpdateAllowlistManagerLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 84
    .line 85
    .line 86
    :cond_3
    iget-object v2, v3, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 87
    .line 88
    if-eqz v2, :cond_4

    .line 89
    .line 90
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 91
    .line 92
    invoke-virtual {v2}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 93
    .line 94
    .line 95
    :cond_4
    const/4 v2, 0x0

    .line 96
    invoke-virtual {v3, v2}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 97
    .line 98
    .line 99
    iput-object v2, v3, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 100
    .line 101
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 102
    .line 103
    if-nez v2, :cond_5

    .line 104
    .line 105
    new-instance v2, Ljava/util/ArrayList;

    .line 106
    .line 107
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 108
    .line 109
    .line 110
    iput-object v2, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 111
    .line 112
    :cond_5
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mTmpCollectionResults:Ljava/util/ArrayList;

    .line 113
    .line 114
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 115
    .line 116
    .line 117
    move v2, v1

    .line 118
    :cond_6
    add-int/lit8 v0, v0, -0x1

    .line 119
    .line 120
    goto :goto_0

    .line 121
    :cond_7
    return v2
.end method

.method public final decActiveForegroundAppLocked(Lcom/android/server/am/ActiveServices$ServiceMap;Lcom/android/server/am/ServiceRecord;)V
    .locals 5

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 2
    .line 3
    iget-object v1, p2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 4
    .line 5
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    check-cast v0, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;

    .line 10
    .line 11
    if-eqz v0, :cond_1

    .line 12
    .line 13
    iget v1, v0, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mNumActive:I

    .line 14
    .line 15
    const/4 v2, 0x1

    .line 16
    sub-int/2addr v1, v2

    .line 17
    iput v1, v0, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mNumActive:I

    .line 18
    .line 19
    if-gtz v1, :cond_1

    .line 20
    .line 21
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 22
    .line 23
    .line 24
    move-result-wide v3

    .line 25
    iput-wide v3, v0, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mEndTime:J

    .line 26
    .line 27
    invoke-virtual {p0, v0, v3, v4}, Lcom/android/server/am/ActiveServices;->foregroundAppShownEnoughLocked(Lcom/android/server/am/ActiveServices$ActiveForegroundApp;J)Z

    .line 28
    .line 29
    .line 30
    move-result p0

    .line 31
    if-eqz p0, :cond_0

    .line 32
    .line 33
    iget-object p0, p1, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 34
    .line 35
    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 36
    .line 37
    invoke-virtual {p0, p2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 38
    .line 39
    .line 40
    iput-boolean v2, p1, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundAppsChanged:Z

    .line 41
    .line 42
    const-wide/16 v0, 0x0

    .line 43
    .line 44
    invoke-static {p1, v0, v1}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 45
    .line 46
    .line 47
    goto :goto_0

    .line 48
    :cond_0
    iget-wide v0, v0, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mHideTime:J

    .line 49
    .line 50
    const-wide v2, 0x7fffffffffffffffL

    .line 51
    .line 52
    .line 53
    .line 54
    .line 55
    cmp-long p0, v0, v2

    .line 56
    .line 57
    if-gez p0, :cond_1

    .line 58
    .line 59
    invoke-static {p1, v0, v1}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 60
    .line 61
    .line 62
    :cond_1
    :goto_0
    return-void
.end method

.method public final deferServiceBringupIfFrozenLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;IZZILandroid/app/BackgroundStartPrivileges;ZLandroid/app/IServiceConnection;)Z
    .locals 18

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    move-object/from16 v2, p1

    .line 4
    .line 5
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 12
    .line 13
    iget v4, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 14
    .line 15
    move/from16 v5, p5

    .line 16
    .line 17
    invoke-virtual {v0, v5, v4, v3}, Landroid/content/pm/PackageManagerInternal;->isPackageFrozen(IILjava/lang/String;)Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    if-nez v0, :cond_0

    .line 22
    .line 23
    const/4 v0, 0x0

    .line 24
    return v0

    .line 25
    :cond_0
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 26
    .line 27
    invoke-virtual {v0, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    check-cast v0, Ljava/util/ArrayList;

    .line 32
    .line 33
    if-nez v0, :cond_1

    .line 34
    .line 35
    new-instance v0, Ljava/util/ArrayList;

    .line 36
    .line 37
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 38
    .line 39
    .line 40
    iget-object v3, v1, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 41
    .line 42
    invoke-virtual {v3, v2, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 43
    .line 44
    .line 45
    :cond_1
    move-object v15, v0

    .line 46
    new-instance v14, Lcom/android/server/am/ActiveServices$4;

    .line 47
    .line 48
    move-object v0, v14

    .line 49
    move-object/from16 v1, p0

    .line 50
    .line 51
    move-object/from16 v2, p1

    .line 52
    .line 53
    move-object/from16 v3, p3

    .line 54
    .line 55
    move-object/from16 v4, p4

    .line 56
    .line 57
    move/from16 v5, p5

    .line 58
    .line 59
    move-object/from16 v6, p2

    .line 60
    .line 61
    move/from16 v7, p10

    .line 62
    .line 63
    move/from16 v8, p11

    .line 64
    .line 65
    move/from16 v9, p13

    .line 66
    .line 67
    move-object/from16 v10, p14

    .line 68
    .line 69
    move/from16 v11, p6

    .line 70
    .line 71
    move-object/from16 v12, p7

    .line 72
    .line 73
    move/from16 v13, p8

    .line 74
    .line 75
    move-object/from16 v16, v14

    .line 76
    .line 77
    move/from16 v14, p9

    .line 78
    .line 79
    move-object/from16 v17, v15

    .line 80
    .line 81
    move-object/from16 v15, p12

    .line 82
    .line 83
    invoke-direct/range {v0 .. v15}, Lcom/android/server/am/ActiveServices$4;-><init>(Lcom/android/server/am/ActiveServices;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;ILandroid/content/Intent;ZIZLandroid/app/IServiceConnection;ILjava/lang/String;IZLandroid/app/BackgroundStartPrivileges;)V

    .line 84
    .line 85
    .line 86
    move-object/from16 v1, v16

    .line 87
    .line 88
    move-object/from16 v0, v17

    .line 89
    .line 90
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 91
    .line 92
    .line 93
    const/4 v0, 0x1

    .line 94
    return v0
.end method

.method public final dropFgsNotificationStateLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 5

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 7
    .line 8
    iget v0, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 9
    .line 10
    invoke-virtual {p0, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 11
    .line 12
    .line 13
    move-result-object p0

    .line 14
    check-cast p0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 15
    .line 16
    if-eqz p0, :cond_3

    .line 17
    .line 18
    iget-object v0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 19
    .line 20
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 21
    .line 22
    .line 23
    move-result v0

    .line 24
    const/4 v1, 0x0

    .line 25
    :goto_0
    if-ge v1, v0, :cond_4

    .line 26
    .line 27
    iget-object v2, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 28
    .line 29
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 30
    .line 31
    .line 32
    move-result-object v2

    .line 33
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 34
    .line 35
    if-ne v2, p1, :cond_1

    .line 36
    .line 37
    goto :goto_1

    .line 38
    :cond_1
    iget-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 39
    .line 40
    if-eqz v3, :cond_2

    .line 41
    .line 42
    iget v3, p1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 43
    .line 44
    iget v4, v2, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 45
    .line 46
    if-ne v3, v4, :cond_2

    .line 47
    .line 48
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 49
    .line 50
    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 51
    .line 52
    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 53
    .line 54
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 55
    .line 56
    invoke-virtual {v3, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 57
    .line 58
    .line 59
    move-result v2

    .line 60
    if-eqz v2, :cond_2

    .line 61
    .line 62
    goto :goto_2

    .line 63
    :cond_2
    :goto_1
    add-int/lit8 v1, v1, 0x1

    .line 64
    .line 65
    goto :goto_0

    .line 66
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    .line 67
    .line 68
    const-string v0, "FGS "

    .line 69
    .line 70
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 74
    .line 75
    .line 76
    const-string v0, " not found!"

    .line 77
    .line 78
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    .line 83
    .line 84
    move-result-object p0

    .line 85
    const-string v0, "ActivityManager"

    .line 86
    .line 87
    invoke-static {v0, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 88
    .line 89
    .line 90
    :cond_4
    iget p0, p1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 91
    .line 92
    iget v0, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 93
    .line 94
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 95
    .line 96
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->ams:Lcom/android/server/am/ActivityManagerService;

    .line 97
    .line 98
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 99
    .line 100
    new-instance v2, Lcom/android/server/am/ServiceRecord$4;

    .line 101
    .line 102
    invoke-direct {v2, p0, v0, v1}, Lcom/android/server/am/ServiceRecord$4;-><init>(IILjava/lang/String;)V

    .line 103
    .line 104
    .line 105
    invoke-virtual {p1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 106
    .line 107
    .line 108
    :goto_2
    return-void
.end method

.method public final dumpDebug(Landroid/util/proto/ProtoOutputStream;)V
    .locals 13

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 4
    .line 5
    .line 6
    monitor-enter v0

    .line 7
    const-wide v1, 0x10b00000001L

    .line 8
    .line 9
    .line 10
    .line 11
    .line 12
    :try_start_0
    invoke-virtual {p1, v1, v2}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 13
    .line 14
    .line 15
    move-result-wide v1

    .line 16
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 17
    .line 18
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 19
    .line 20
    invoke-virtual {v3}, Lcom/android/server/am/UserController;->getUsers()[I

    .line 21
    .line 22
    .line 23
    move-result-object v3

    .line 24
    array-length v4, v3

    .line 25
    const/4 v5, 0x0

    .line 26
    move v6, v5

    .line 27
    :goto_0
    if-ge v6, v4, :cond_2

    .line 28
    .line 29
    aget v7, v3, v6

    .line 30
    .line 31
    iget-object v8, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 32
    .line 33
    invoke-virtual {v8, v7}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 34
    .line 35
    .line 36
    move-result-object v8

    .line 37
    check-cast v8, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 38
    .line 39
    if-nez v8, :cond_0

    .line 40
    .line 41
    goto :goto_2

    .line 42
    :cond_0
    const-wide v9, 0x20b00000001L

    .line 43
    .line 44
    .line 45
    .line 46
    .line 47
    invoke-virtual {p1, v9, v10}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 48
    .line 49
    .line 50
    move-result-wide v9

    .line 51
    const-wide v11, 0x10500000001L

    .line 52
    .line 53
    .line 54
    .line 55
    .line 56
    invoke-virtual {p1, v11, v12, v7}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 57
    .line 58
    .line 59
    iget-object v7, v8, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 60
    .line 61
    move v8, v5

    .line 62
    :goto_1
    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    .line 63
    .line 64
    .line 65
    move-result v11

    .line 66
    if-ge v8, v11, :cond_1

    .line 67
    .line 68
    invoke-virtual {v7, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 69
    .line 70
    .line 71
    move-result-object v11

    .line 72
    check-cast v11, Lcom/android/server/am/ServiceRecord;

    .line 73
    .line 74
    invoke-virtual {v11, p1}, Lcom/android/server/am/ServiceRecord;->dumpDebug(Landroid/util/proto/ProtoOutputStream;)V

    .line 75
    .line 76
    .line 77
    add-int/lit8 v8, v8, 0x1

    .line 78
    .line 79
    goto :goto_1

    .line 80
    :catchall_0
    move-exception p0

    .line 81
    goto :goto_3

    .line 82
    :cond_1
    invoke-virtual {p1, v9, v10}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 83
    .line 84
    .line 85
    :goto_2
    add-int/lit8 v6, v6, 0x1

    .line 86
    .line 87
    goto :goto_0

    .line 88
    :cond_2
    invoke-virtual {p1, v1, v2}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 89
    .line 90
    .line 91
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 92
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 93
    .line 94
    .line 95
    return-void

    .line 96
    :goto_3
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 97
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 98
    .line 99
    .line 100
    throw p0
.end method

.method public final dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ServiceRecord;[Ljava/lang/String;Z)V
    .locals 3

    const-string v0, ""

    .line 29
    const-string v1, "  "

    .line 30
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter p0

    .line 31
    :try_start_0
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v2, "SERVICE "

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 32
    iget-object v2, p3, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v2, " "

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 33
    invoke-static {p3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 34
    const-string v2, " pid="

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 35
    iget-object v2, p3, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_0

    .line 36
    iget v2, v2, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 37
    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(I)V

    .line 38
    const-string v2, " user="

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, p3, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(I)V

    goto :goto_0

    :catchall_0
    move-exception p1

    goto :goto_3

    .line 39
    :cond_0
    const-string v2, "(not running)"

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :goto_0
    if-eqz p5, :cond_1

    .line 40
    invoke-virtual {p3, p2, v1}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 41
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 42
    iget-object p0, p3, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p0, :cond_2

    .line 43
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    if-eqz p0, :cond_2

    .line 44
    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string p5, "  Client:"

    invoke-virtual {p2, p5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 45
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 46
    :try_start_1
    new-instance p5, Lcom/android/internal/os/TransferPipe;

    invoke-direct {p5}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 47
    :try_start_2
    invoke-virtual {p5}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v0

    invoke-interface {p0, v0, p3, p4}, Landroid/app/IApplicationThread;->dumpService(Landroid/os/ParcelFileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V

    .line 48
    const-string p0, "    "

    invoke-virtual {p5, p0}, Lcom/android/internal/os/TransferPipe;->setBufferPrefix(Ljava/lang/String;)V

    .line 49
    invoke-virtual {p5, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 50
    :try_start_3
    invoke-virtual {p5}, Lcom/android/internal/os/TransferPipe;->kill()V

    goto :goto_2

    :catch_0
    move-exception p0

    goto :goto_1

    :catchall_1
    move-exception p0

    invoke-virtual {p5}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 51
    throw p0
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 52
    :catch_1
    const-string p0, "    Got a RemoteException while dumping the service"

    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_2

    .line 53
    :goto_1
    new-instance p1, Ljava/lang/StringBuilder;

    const-string p3, "    Failure while dumping the service: "

    invoke-direct {p1, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_2
    :goto_2
    return-void

    .line 54
    :goto_3
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw p1
.end method

.method public final dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[I[Ljava/lang/String;Z)Z
    .locals 14

    move-object v7, p0

    move-object/from16 v0, p2

    const/4 v8, 0x1

    .line 1
    :try_start_0
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v1, v1, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    .line 2
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 3
    invoke-static/range {p3 .. p3}, Lcom/android/internal/util/DumpUtils;->filterRecord(Ljava/lang/String;)Ljava/util/function/Predicate;

    move-result-object v1

    .line 4
    iget-object v3, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez p4, :cond_0

    .line 5
    :try_start_1
    iget-object v4, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    invoke-virtual {v4}, Lcom/android/server/am/UserController;->getUsers()[I

    move-result-object v4

    goto :goto_0

    :catchall_0
    move-exception v0

    goto/16 :goto_6

    :cond_0
    move-object/from16 v4, p4

    .line 6
    :goto_0
    array-length v5, v4

    move v6, v2

    :goto_1
    if-ge v6, v5, :cond_4

    aget v10, v4, v6

    .line 7
    iget-object v11, v7, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    invoke-virtual {v11, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ActiveServices$ServiceMap;

    if-nez v10, :cond_1

    goto :goto_3

    .line 8
    :cond_1
    iget-object v10, v10, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    move v11, v2

    .line 9
    :goto_2
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    move-result v12

    if-ge v11, v12, :cond_3

    .line 10
    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ServiceRecord;

    .line 11
    invoke-interface {v1, v12}, Ljava/util/function/Predicate;->test(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_2

    .line 12
    invoke-virtual {v9, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_2
    add-int/lit8 v11, v11, 0x1

    goto :goto_2

    :cond_3
    :goto_3
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 13
    :cond_4
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 14
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    if-gtz v1, :cond_5

    .line 15
    iget-object v0, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v0, v8}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    return v2

    .line 16
    :cond_5
    :try_start_3
    new-instance v1, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda10;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    invoke-static {v1}, Ljava/util/Comparator;->comparing(Ljava/util/function/Function;)Ljava/util/Comparator;

    move-result-object v1

    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->sort(Ljava/util/Comparator;)V

    move v10, v2

    .line 17
    :goto_4
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-ge v10, v1, :cond_8

    if-eqz v2, :cond_6

    .line 18
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_5

    :catchall_1
    move-exception v0

    goto :goto_7

    .line 19
    :cond_6
    :goto_5
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ServiceRecord;

    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    const-string v2, "SystemUIService"

    invoke-virtual {v1, v2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 20
    const-string v1, "  SystemUI Revival Count:"

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mRevivalServicesMessages:Ljava/util/List;

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 22
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mRevivalServicesMessages:Ljava/util/List;

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-lez v1, :cond_7

    .line 23
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mRevivalServicesMessages:Ljava/util/List;

    new-instance v2, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda11;

    invoke-direct {v2, v0}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda11;-><init>(Ljava/io/PrintWriter;)V

    check-cast v1, Ljava/util/ArrayList;

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 24
    :cond_7
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v4, v1

    check-cast v4, Lcom/android/server/am/ServiceRecord;

    move-object v1, p0

    move-object v2, p1

    move-object/from16 v3, p2

    move-object/from16 v5, p5

    move/from16 v6, p6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ServiceRecord;[Ljava/lang/String;Z)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    add-int/lit8 v10, v10, 0x1

    move v2, v8

    goto :goto_4

    .line 25
    :cond_8
    iget-object v0, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v0, v0, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v0, v8}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    return v8

    .line 26
    :goto_6
    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 27
    :goto_7
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    iget-object v1, v1, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    invoke-virtual {v1, v8}, Lcom/android/server/am/CachedAppOptimizer;->enableFreezer(Z)Z

    .line 28
    throw v0
.end method

.method public final forceStopPackageLocked(ILjava/lang/String;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    check-cast v0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 8
    .line 9
    const/4 v1, 0x1

    .line 10
    if-eqz v0, :cond_2

    .line 11
    .line 12
    iget-object v2, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 13
    .line 14
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    .line 15
    .line 16
    .line 17
    move-result v2

    .line 18
    if-lez v2, :cond_2

    .line 19
    .line 20
    iget-object v2, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 21
    .line 22
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    .line 23
    .line 24
    .line 25
    move-result v2

    .line 26
    sub-int/2addr v2, v1

    .line 27
    :goto_0
    if-ltz v2, :cond_1

    .line 28
    .line 29
    iget-object v3, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 30
    .line 31
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 32
    .line 33
    .line 34
    move-result-object v3

    .line 35
    check-cast v3, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;

    .line 36
    .line 37
    iget-object v3, v3, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mPackageName:Ljava/lang/String;

    .line 38
    .line 39
    invoke-virtual {v3, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v3

    .line 43
    if-eqz v3, :cond_0

    .line 44
    .line 45
    iget-object v3, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 46
    .line 47
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    iput-boolean v1, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundAppsChanged:Z

    .line 51
    .line 52
    :cond_0
    add-int/lit8 v2, v2, -0x1

    .line 53
    .line 54
    goto :goto_0

    .line 55
    :cond_1
    iget-boolean v2, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundAppsChanged:Z

    .line 56
    .line 57
    if-eqz v2, :cond_2

    .line 58
    .line 59
    const-wide/16 v2, 0x0

    .line 60
    .line 61
    invoke-static {v0, v2, v3}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 62
    .line 63
    .line 64
    :cond_2
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 65
    .line 66
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 67
    .line 68
    .line 69
    move-result v0

    .line 70
    sub-int/2addr v0, v1

    .line 71
    :goto_1
    if-ltz v0, :cond_4

    .line 72
    .line 73
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 74
    .line 75
    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    .line 76
    .line 77
    .line 78
    move-result-object v2

    .line 79
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 80
    .line 81
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 82
    .line 83
    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 84
    .line 85
    .line 86
    move-result v3

    .line 87
    if-eqz v3, :cond_3

    .line 88
    .line 89
    iget v2, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 90
    .line 91
    if-ne v2, p1, :cond_3

    .line 92
    .line 93
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 94
    .line 95
    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 96
    .line 97
    .line 98
    :cond_3
    add-int/lit8 v0, v0, -0x1

    .line 99
    .line 100
    goto :goto_1

    .line 101
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 102
    .line 103
    invoke-virtual {v0, p2}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 104
    .line 105
    .line 106
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 107
    .line 108
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 109
    .line 110
    .line 111
    move-result v0

    .line 112
    sub-int/2addr v0, v1

    .line 113
    :goto_2
    if-ltz v0, :cond_6

    .line 114
    .line 115
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 116
    .line 117
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 118
    .line 119
    .line 120
    move-result-object v1

    .line 121
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 122
    .line 123
    iget v2, v1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 124
    .line 125
    if-ne p1, v2, :cond_5

    .line 126
    .line 127
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 128
    .line 129
    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 130
    .line 131
    invoke-virtual {v1, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 132
    .line 133
    .line 134
    move-result v1

    .line 135
    if-eqz v1, :cond_5

    .line 136
    .line 137
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 138
    .line 139
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 140
    .line 141
    .line 142
    :cond_5
    add-int/lit8 v0, v0, -0x1

    .line 143
    .line 144
    goto :goto_2

    .line 145
    :cond_6
    return-void
.end method

.method public final foregroundAppShownEnoughLocked(Lcom/android/server/am/ActiveServices$ActiveForegroundApp;J)Z
    .locals 7

    .line 1
    const-wide v0, 0x7fffffffffffffffL

    .line 2
    .line 3
    .line 4
    .line 5
    .line 6
    iput-wide v0, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mHideTime:J

    .line 7
    .line 8
    iget-boolean v0, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileTop:Z

    .line 9
    .line 10
    const/4 v1, 0x1

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    goto :goto_3

    .line 14
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/am/ActiveServices;->mScreenOn:Z

    .line 15
    .line 16
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 17
    .line 18
    const/4 v2, 0x0

    .line 19
    if-nez v0, :cond_3

    .line 20
    .line 21
    iget-boolean v0, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileScreenOn:Z

    .line 22
    .line 23
    if-eqz v0, :cond_1

    .line 24
    .line 25
    goto :goto_1

    .line 26
    :cond_1
    iget-wide v3, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mEndTime:J

    .line 27
    .line 28
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 29
    .line 30
    iget-wide v5, p0, Lcom/android/server/am/ActivityManagerConstants;->FGSERVICE_SCREEN_ON_BEFORE_TIME:J

    .line 31
    .line 32
    add-long/2addr v3, v5

    .line 33
    cmp-long p0, p2, v3

    .line 34
    .line 35
    if-ltz p0, :cond_2

    .line 36
    .line 37
    goto :goto_3

    .line 38
    :cond_2
    iput-wide v3, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mHideTime:J

    .line 39
    .line 40
    :goto_0
    move v1, v2

    .line 41
    goto :goto_3

    .line 42
    :cond_3
    :goto_1
    iget-wide v3, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartVisibleTime:J

    .line 43
    .line 44
    iget-wide v5, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartTime:J

    .line 45
    .line 46
    cmp-long v0, v5, v3

    .line 47
    .line 48
    if-eqz v0, :cond_4

    .line 49
    .line 50
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 51
    .line 52
    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerConstants;->FGSERVICE_SCREEN_ON_AFTER_TIME:J

    .line 53
    .line 54
    goto :goto_2

    .line 55
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 56
    .line 57
    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerConstants;->FGSERVICE_MIN_SHOWN_TIME:J

    .line 58
    .line 59
    :goto_2
    add-long/2addr v3, v5

    .line 60
    cmp-long v0, p2, v3

    .line 61
    .line 62
    if-ltz v0, :cond_5

    .line 63
    .line 64
    goto :goto_3

    .line 65
    :cond_5
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 66
    .line 67
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerConstants;->FGSERVICE_MIN_REPORT_TIME:J

    .line 68
    .line 69
    add-long/2addr p2, v0

    .line 70
    cmp-long p0, p2, v3

    .line 71
    .line 72
    if-lez p0, :cond_6

    .line 73
    .line 74
    move-wide v3, p2

    .line 75
    :cond_6
    iput-wide v3, p1, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mHideTime:J

    .line 76
    .line 77
    goto :goto_0

    .line 78
    :goto_3
    return v1
.end method

.method public final getClientPackagesLocked(Ljava/lang/String;)Landroid/util/ArraySet;
    .locals 13

    .line 1
    new-instance v0, Landroid/util/ArraySet;

    .line 2
    .line 3
    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    .line 4
    .line 5
    .line 6
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 7
    .line 8
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 9
    .line 10
    invoke-virtual {v1}, Lcom/android/server/am/UserController;->getUsers()[I

    .line 11
    .line 12
    .line 13
    move-result-object v1

    .line 14
    const/4 v2, 0x0

    .line 15
    move v3, v2

    .line 16
    :goto_0
    array-length v4, v1

    .line 17
    if-ge v3, v4, :cond_4

    .line 18
    .line 19
    aget v4, v1, v3

    .line 20
    .line 21
    invoke-virtual {p0, v4}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 22
    .line 23
    .line 24
    move-result-object v4

    .line 25
    iget-object v4, v4, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 26
    .line 27
    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    .line 28
    .line 29
    .line 30
    move-result v5

    .line 31
    move v6, v2

    .line 32
    :goto_1
    if-ge v6, v5, :cond_3

    .line 33
    .line 34
    invoke-virtual {v4, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 35
    .line 36
    .line 37
    move-result-object v7

    .line 38
    check-cast v7, Lcom/android/server/am/ServiceRecord;

    .line 39
    .line 40
    iget-object v8, v7, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 41
    .line 42
    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 43
    .line 44
    .line 45
    move-result-object v8

    .line 46
    invoke-virtual {v8, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 47
    .line 48
    .line 49
    move-result v8

    .line 50
    if-eqz v8, :cond_2

    .line 51
    .line 52
    iget-object v7, v7, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 53
    .line 54
    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    .line 55
    .line 56
    .line 57
    move-result v8

    .line 58
    add-int/lit8 v8, v8, -0x1

    .line 59
    .line 60
    :goto_2
    if-ltz v8, :cond_2

    .line 61
    .line 62
    invoke-virtual {v7, v8}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 63
    .line 64
    .line 65
    move-result-object v9

    .line 66
    check-cast v9, Ljava/util/ArrayList;

    .line 67
    .line 68
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    .line 69
    .line 70
    .line 71
    move-result v10

    .line 72
    move v11, v2

    .line 73
    :goto_3
    if-ge v11, v10, :cond_1

    .line 74
    .line 75
    invoke-virtual {v9, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 76
    .line 77
    .line 78
    move-result-object v12

    .line 79
    check-cast v12, Lcom/android/server/am/ConnectionRecord;

    .line 80
    .line 81
    iget-object v12, v12, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 82
    .line 83
    iget-object v12, v12, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 84
    .line 85
    if-eqz v12, :cond_0

    .line 86
    .line 87
    iget-object v12, v12, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 88
    .line 89
    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 90
    .line 91
    invoke-virtual {v0, v12}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 92
    .line 93
    .line 94
    :cond_0
    add-int/lit8 v11, v11, 0x1

    .line 95
    .line 96
    goto :goto_3

    .line 97
    :cond_1
    add-int/lit8 v8, v8, -0x1

    .line 98
    .line 99
    goto :goto_2

    .line 100
    :cond_2
    add-int/lit8 v6, v6, 0x1

    .line 101
    .line 102
    goto :goto_1

    .line 103
    :cond_3
    add-int/lit8 v3, v3, 0x1

    .line 104
    .line 105
    goto :goto_0

    .line 106
    :cond_4
    return-object v0
.end method

.method public final getExtraRestartTimeInBetweenLocked()J
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mEnableExtraServiceRestartDelayOnMemPressure:Z

    .line 6
    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    const-wide/16 v0, 0x0

    .line 10
    .line 11
    return-wide v0

    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppProfiler:Lcom/android/server/am/AppProfiler;

    .line 13
    .line 14
    invoke-virtual {v0}, Lcom/android/server/am/AppProfiler;->getLastMemoryLevelLocked()I

    .line 15
    .line 16
    .line 17
    move-result v0

    .line 18
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 19
    .line 20
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mExtraServiceRestartDelayOnMemPressure:[J

    .line 21
    .line 22
    aget-wide v0, p0, v0

    .line 23
    .line 24
    return-wide v0
.end method

.method public final getFgsTimeLimitedInfo(II)Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object p0

    .line 7
    check-cast p0, Landroid/util/SparseArray;

    .line 8
    .line 9
    if-eqz p0, :cond_0

    .line 10
    .line 11
    invoke-virtual {p0, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 12
    .line 13
    .line 14
    move-result-object p0

    .line 15
    check-cast p0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 16
    .line 17
    return-object p0

    .line 18
    :cond_0
    const/4 p0, 0x0

    .line 19
    return-object p0
.end method

.method public final getForegroundServiceTypeLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)I
    .locals 4

    .line 1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 8
    .line 9
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    .line 11
    .line 12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 13
    .line 14
    .line 15
    move-result-wide v2

    .line 16
    :try_start_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 17
    .line 18
    .line 19
    move-result-object p0

    .line 20
    iget-object p0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 21
    .line 22
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object p0

    .line 26
    check-cast p0, Lcom/android/server/am/ServiceRecord;

    .line 27
    .line 28
    if-ne p0, p2, :cond_0

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const/4 p0, 0x0

    .line 32
    :goto_0
    if-eqz p0, :cond_1

    .line 33
    .line 34
    iget p0, p0, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 35
    .line 36
    goto :goto_1

    .line 37
    :catchall_0
    move-exception p0

    .line 38
    goto :goto_2

    .line 39
    :cond_1
    const/4 p0, 0x0

    .line 40
    :goto_1
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 41
    .line 42
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 43
    .line 44
    .line 45
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 46
    .line 47
    .line 48
    return p0

    .line 49
    :goto_2
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 50
    .line 51
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 52
    .line 53
    .line 54
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 55
    .line 56
    .line 57
    throw p0
.end method

.method public final getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    .line 7
    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 9
    .line 10
    .line 11
    move-result v0

    .line 12
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 17
    .line 18
    .line 19
    move-result-object p0

    .line 20
    iget-object p0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 21
    .line 22
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object p0

    .line 26
    check-cast p0, Lcom/android/server/am/ServiceRecord;

    .line 27
    .line 28
    if-eqz p0, :cond_2

    .line 29
    .line 30
    iget-object p0, p0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 31
    .line 32
    invoke-virtual {p0}, Landroid/util/ArrayMap;->size()I

    .line 33
    .line 34
    .line 35
    move-result p1

    .line 36
    add-int/lit8 p1, p1, -0x1

    .line 37
    .line 38
    :goto_0
    if-ltz p1, :cond_2

    .line 39
    .line 40
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 41
    .line 42
    .line 43
    move-result-object v0

    .line 44
    check-cast v0, Ljava/util/ArrayList;

    .line 45
    .line 46
    const/4 v1, 0x0

    .line 47
    :goto_1
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 48
    .line 49
    .line 50
    move-result v2

    .line 51
    if-ge v1, v2, :cond_1

    .line 52
    .line 53
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 54
    .line 55
    .line 56
    move-result-object v2

    .line 57
    check-cast v2, Lcom/android/server/am/ConnectionRecord;

    .line 58
    .line 59
    iget-object v2, v2, Lcom/android/server/am/ConnectionRecord;->clientIntent:Landroid/app/PendingIntent;

    .line 60
    .line 61
    if-eqz v2, :cond_0

    .line 62
    .line 63
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 64
    .line 65
    .line 66
    move-result-object p0

    .line 67
    check-cast p0, Lcom/android/server/am/ConnectionRecord;

    .line 68
    .line 69
    iget-object p0, p0, Lcom/android/server/am/ConnectionRecord;->clientIntent:Landroid/app/PendingIntent;

    .line 70
    .line 71
    return-object p0

    .line 72
    :cond_0
    add-int/lit8 v1, v1, 0x1

    .line 73
    .line 74
    goto :goto_1

    .line 75
    :cond_1
    add-int/lit8 p1, p1, -0x1

    .line 76
    .line 77
    goto :goto_0

    .line 78
    :cond_2
    const/4 p0, 0x0

    .line 79
    return-object p0
.end method

.method public final getRunningServiceInfoLocked(IIZZ)Ljava/util/List;
    .locals 9

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 4
    .line 5
    .line 6
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 7
    .line 8
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 9
    .line 10
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    .line 12
    .line 13
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 14
    .line 15
    .line 16
    move-result-wide v2

    .line 17
    const/4 v4, 0x0

    .line 18
    if-eqz p4, :cond_2

    .line 19
    .line 20
    :try_start_0
    iget-object p2, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 21
    .line 22
    invoke-virtual {p2}, Lcom/android/server/am/UserController;->getUsers()[I

    .line 23
    .line 24
    .line 25
    move-result-object p2

    .line 26
    move p3, v4

    .line 27
    :goto_0
    array-length p4, p2

    .line 28
    if-ge p3, p4, :cond_1

    .line 29
    .line 30
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 31
    .line 32
    .line 33
    move-result p4

    .line 34
    if-ge p4, p1, :cond_1

    .line 35
    .line 36
    aget p4, p2, p3

    .line 37
    .line 38
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 39
    .line 40
    .line 41
    move-result-object p4

    .line 42
    iget-object p4, p4, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 43
    .line 44
    move v5, v4

    .line 45
    :goto_1
    invoke-virtual {p4}, Landroid/util/ArrayMap;->size()I

    .line 46
    .line 47
    .line 48
    move-result v6

    .line 49
    if-ge v5, v6, :cond_0

    .line 50
    .line 51
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 52
    .line 53
    .line 54
    move-result v6

    .line 55
    if-ge v6, p1, :cond_0

    .line 56
    .line 57
    invoke-virtual {p4, v5}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 58
    .line 59
    .line 60
    move-result-object v6

    .line 61
    check-cast v6, Lcom/android/server/am/ServiceRecord;

    .line 62
    .line 63
    invoke-static {v6}, Lcom/android/server/am/ActiveServices;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;

    .line 64
    .line 65
    .line 66
    move-result-object v6

    .line 67
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 68
    .line 69
    .line 70
    add-int/lit8 v5, v5, 0x1

    .line 71
    .line 72
    goto :goto_1

    .line 73
    :catchall_0
    move-exception p0

    .line 74
    goto/16 :goto_5

    .line 75
    .line 76
    :cond_0
    add-int/lit8 p3, p3, 0x1

    .line 77
    .line 78
    goto :goto_0

    .line 79
    :cond_1
    :goto_2
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 80
    .line 81
    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    .line 82
    .line 83
    .line 84
    move-result p2

    .line 85
    if-ge v4, p2, :cond_8

    .line 86
    .line 87
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 88
    .line 89
    .line 90
    move-result p2

    .line 91
    if-ge p2, p1, :cond_8

    .line 92
    .line 93
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 94
    .line 95
    invoke-virtual {p2, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 96
    .line 97
    .line 98
    move-result-object p2

    .line 99
    check-cast p2, Lcom/android/server/am/ServiceRecord;

    .line 100
    .line 101
    invoke-static {p2}, Lcom/android/server/am/ActiveServices;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;

    .line 102
    .line 103
    .line 104
    move-result-object p3

    .line 105
    iget-wide v5, p2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 106
    .line 107
    iput-wide v5, p3, Landroid/app/ActivityManager$RunningServiceInfo;->restarting:J

    .line 108
    .line 109
    invoke-virtual {v0, p3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 110
    .line 111
    .line 112
    add-int/lit8 v4, v4, 0x1

    .line 113
    .line 114
    goto :goto_2

    .line 115
    :cond_2
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    .line 116
    .line 117
    .line 118
    move-result p4

    .line 119
    invoke-virtual {p0, p4}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 120
    .line 121
    .line 122
    move-result-object v5

    .line 123
    iget-object v5, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 124
    .line 125
    move v6, v4

    .line 126
    :goto_3
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    .line 127
    .line 128
    .line 129
    move-result v7

    .line 130
    if-ge v6, v7, :cond_5

    .line 131
    .line 132
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 133
    .line 134
    .line 135
    move-result v7

    .line 136
    if-ge v7, p1, :cond_5

    .line 137
    .line 138
    invoke-virtual {v5, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 139
    .line 140
    .line 141
    move-result-object v7

    .line 142
    check-cast v7, Lcom/android/server/am/ServiceRecord;

    .line 143
    .line 144
    if-nez p3, :cond_3

    .line 145
    .line 146
    iget-object v8, v7, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 147
    .line 148
    if-eqz v8, :cond_4

    .line 149
    .line 150
    iget v8, v8, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 151
    .line 152
    if-ne v8, p2, :cond_4

    .line 153
    .line 154
    :cond_3
    invoke-static {v7}, Lcom/android/server/am/ActiveServices;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;

    .line 155
    .line 156
    .line 157
    move-result-object v7

    .line 158
    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 159
    .line 160
    .line 161
    :cond_4
    add-int/lit8 v6, v6, 0x1

    .line 162
    .line 163
    goto :goto_3

    .line 164
    :cond_5
    :goto_4
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 165
    .line 166
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 167
    .line 168
    .line 169
    move-result v5

    .line 170
    if-ge v4, v5, :cond_8

    .line 171
    .line 172
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 173
    .line 174
    .line 175
    move-result v5

    .line 176
    if-ge v5, p1, :cond_8

    .line 177
    .line 178
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 179
    .line 180
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 181
    .line 182
    .line 183
    move-result-object v5

    .line 184
    check-cast v5, Lcom/android/server/am/ServiceRecord;

    .line 185
    .line 186
    iget v6, v5, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 187
    .line 188
    if-ne v6, p4, :cond_7

    .line 189
    .line 190
    if-nez p3, :cond_6

    .line 191
    .line 192
    iget-object v6, v5, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 193
    .line 194
    if-eqz v6, :cond_7

    .line 195
    .line 196
    iget v6, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 197
    .line 198
    if-ne v6, p2, :cond_7

    .line 199
    .line 200
    :cond_6
    invoke-static {v5}, Lcom/android/server/am/ActiveServices;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;

    .line 201
    .line 202
    .line 203
    move-result-object v6

    .line 204
    iget-wide v7, v5, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 205
    .line 206
    iput-wide v7, v6, Landroid/app/ActivityManager$RunningServiceInfo;->restarting:J

    .line 207
    .line 208
    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 209
    .line 210
    .line 211
    :cond_7
    add-int/lit8 v4, v4, 0x1

    .line 212
    .line 213
    goto :goto_4

    .line 214
    :cond_8
    iget-object p0, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 215
    .line 216
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 217
    .line 218
    .line 219
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 220
    .line 221
    .line 222
    return-object v0

    .line 223
    :goto_5
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 224
    .line 225
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 226
    .line 227
    .line 228
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 229
    .line 230
    .line 231
    throw p0
.end method

.method public final getServiceBindingOomAdjPolicyForAddLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ConnectionRecord;)I
    .locals 17

    .line 1
    move-object/from16 v3, p1

    .line 2
    .line 3
    move-object/from16 v2, p2

    .line 4
    .line 5
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 6
    .line 7
    .line 8
    const/4 v0, 0x0

    .line 9
    if-eqz v3, :cond_9

    .line 10
    .line 11
    iget-object v1, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 12
    .line 13
    const/4 v14, 0x7

    .line 14
    if-ne v3, v2, :cond_1

    .line 15
    .line 16
    :cond_0
    move v15, v14

    .line 17
    goto :goto_0

    .line 18
    :cond_1
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStateRecord;->isCached()Z

    .line 19
    .line 20
    .line 21
    move-result v4

    .line 22
    if-eqz v4, :cond_2

    .line 23
    .line 24
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isFreezable()Z

    .line 25
    .line 26
    .line 27
    move-result v4

    .line 28
    if-eqz v4, :cond_0

    .line 29
    .line 30
    const/16 v4, 0xf

    .line 31
    .line 32
    move v15, v4

    .line 33
    goto :goto_0

    .line 34
    :cond_2
    move v15, v0

    .line 35
    :goto_0
    and-int/lit8 v4, v15, 0x4

    .line 36
    .line 37
    if-nez v4, :cond_8

    .line 38
    .line 39
    move-object/from16 v4, p0

    .line 40
    .line 41
    iget-object v4, v4, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 42
    .line 43
    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 44
    .line 45
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 46
    .line 47
    .line 48
    invoke-static/range {p1 .. p2}, Lcom/android/server/am/OomAdjuster;->evaluateConnectionPrelude(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;)Z

    .line 49
    .line 50
    .line 51
    move-result v5

    .line 52
    const/4 v6, 0x1

    .line 53
    if-eqz v5, :cond_3

    .line 54
    .line 55
    move v0, v6

    .line 56
    goto :goto_2

    .line 57
    :cond_3
    iget-object v5, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 58
    .line 59
    iget v7, v5, Lcom/android/server/am/ProcessStateRecord;->mSetAdj:I

    .line 60
    .line 61
    iget v8, v1, Lcom/android/server/am/ProcessStateRecord;->mSetAdj:I

    .line 62
    .line 63
    if-gt v7, v8, :cond_5

    .line 64
    .line 65
    iget v7, v5, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    .line 66
    .line 67
    iget v8, v1, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    .line 68
    .line 69
    if-gt v7, v8, :cond_5

    .line 70
    .line 71
    iget v5, v5, Lcom/android/server/am/ProcessStateRecord;->mSetCapability:I

    .line 72
    .line 73
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mSetCapability:I

    .line 74
    .line 75
    and-int/2addr v5, v1

    .line 76
    if-eq v5, v1, :cond_7

    .line 77
    .line 78
    move-object/from16 v1, p3

    .line 79
    .line 80
    iget-wide v7, v1, Lcom/android/server/am/ConnectionRecord;->flags:J

    .line 81
    .line 82
    const-wide v9, 0x100001000L

    .line 83
    .line 84
    .line 85
    .line 86
    .line 87
    and-long/2addr v7, v9

    .line 88
    const-wide/16 v9, 0x0

    .line 89
    .line 90
    cmp-long v5, v7, v9

    .line 91
    .line 92
    if-eqz v5, :cond_4

    .line 93
    .line 94
    move v5, v6

    .line 95
    goto :goto_1

    .line 96
    :cond_4
    move v5, v0

    .line 97
    :goto_1
    xor-int/2addr v5, v6

    .line 98
    if-eqz v5, :cond_6

    .line 99
    .line 100
    goto :goto_2

    .line 101
    :cond_5
    move-object/from16 v1, p3

    .line 102
    .line 103
    :cond_6
    iget-object v0, v4, Lcom/android/server/am/OomAdjuster;->mInjector:Lcom/android/server/am/OomAdjuster$Injector;

    .line 104
    .line 105
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 106
    .line 107
    .line 108
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 109
    .line 110
    .line 111
    move-result-wide v5

    .line 112
    iget-object v0, v4, Lcom/android/server/am/OomAdjuster;->mService:Lcom/android/server/am/ActivityManagerService;

    .line 113
    .line 114
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService;->getTopApp()Lcom/android/server/am/ProcessRecord;

    .line 115
    .line 116
    .line 117
    move-result-object v7

    .line 118
    const/4 v12, 0x0

    .line 119
    const/4 v13, 0x1

    .line 120
    const/4 v8, 0x0

    .line 121
    const/4 v9, 0x0

    .line 122
    const/4 v10, 0x0

    .line 123
    const/4 v11, 0x0

    .line 124
    const/16 v16, 0x384

    .line 125
    .line 126
    move-object v0, v4

    .line 127
    move-object/from16 v1, p3

    .line 128
    .line 129
    move-object/from16 v2, p2

    .line 130
    .line 131
    move-object/from16 v3, p1

    .line 132
    .line 133
    move-wide v4, v5

    .line 134
    move-object v6, v7

    .line 135
    move v7, v8

    .line 136
    move v8, v9

    .line 137
    move v9, v10

    .line 138
    move v10, v11

    .line 139
    move/from16 v11, v16

    .line 140
    .line 141
    invoke-virtual/range {v0 .. v13}, Lcom/android/server/am/OomAdjuster;->computeServiceHostOomAdjLSP(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;JLcom/android/server/am/ProcessRecord;ZZZIIZZ)Z

    .line 142
    .line 143
    .line 144
    move-result v0

    .line 145
    :cond_7
    :goto_2
    if-nez v0, :cond_8

    .line 146
    .line 147
    move v0, v14

    .line 148
    goto :goto_3

    .line 149
    :cond_8
    move v0, v15

    .line 150
    :cond_9
    :goto_3
    return v0
.end method

.method public final getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    check-cast v0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 8
    .line 9
    if-nez v0, :cond_0

    .line 10
    .line 11
    new-instance v0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 12
    .line 13
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 14
    .line 15
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 16
    .line 17
    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 18
    .line 19
    .line 20
    move-result-object v1

    .line 21
    invoke-direct {v0, p0, v1, p1}, Lcom/android/server/am/ActiveServices$ServiceMap;-><init>(Lcom/android/server/am/ActiveServices;Landroid/os/Looper;I)V

    .line 22
    .line 23
    .line 24
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 25
    .line 26
    invoke-virtual {p0, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 27
    .line 28
    .line 29
    :cond_0
    return-object v0
.end method

.method public final getShortProcessNameForStats(ILjava/lang/String;)Ljava/lang/String;
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 4
    .line 5
    invoke-virtual {p0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 6
    .line 7
    .line 8
    move-result-object p0

    .line 9
    invoke-virtual {p0, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    if-eqz p0, :cond_1

    .line 14
    .line 15
    array-length p1, p0

    .line 16
    const/4 v0, 0x1

    .line 17
    if-ne p1, v0, :cond_1

    .line 18
    .line 19
    const/4 p1, 0x0

    .line 20
    aget-object v0, p0, p1

    .line 21
    .line 22
    invoke-static {v0, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 23
    .line 24
    .line 25
    move-result v0

    .line 26
    if-eqz v0, :cond_0

    .line 27
    .line 28
    const/4 p0, 0x0

    .line 29
    return-object p0

    .line 30
    :cond_0
    if-eqz p2, :cond_1

    .line 31
    .line 32
    aget-object v0, p0, p1

    .line 33
    .line 34
    invoke-virtual {p2, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 35
    .line 36
    .line 37
    move-result v0

    .line 38
    if-eqz v0, :cond_1

    .line 39
    .line 40
    aget-object p0, p0, p1

    .line 41
    .line 42
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    .line 43
    .line 44
    .line 45
    move-result p0

    .line 46
    invoke-virtual {p2, p0}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    move-result-object p0

    .line 50
    return-object p0

    .line 51
    :cond_1
    return-object p2
.end method

.method public final getTimeLimitedFgsType(I)I
    .locals 6

    .line 1
    and-int/lit16 v0, p1, 0x2000

    .line 2
    .line 3
    const-wide/16 v1, 0x0

    .line 4
    .line 5
    const/16 v3, 0x2000

    .line 6
    .line 7
    if-ne v0, v3, :cond_0

    .line 8
    .line 9
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 10
    .line 11
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 12
    .line 13
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerConstants;->mMediaProcessingFgsTimeoutDuration:J

    .line 14
    .line 15
    goto :goto_0

    .line 16
    :cond_0
    const/4 v3, 0x0

    .line 17
    move-wide v4, v1

    .line 18
    :goto_0
    const/4 v0, 0x1

    .line 19
    and-int/2addr p1, v0

    .line 20
    if-ne p1, v0, :cond_2

    .line 21
    .line 22
    cmp-long p1, v4, v1

    .line 23
    .line 24
    if-eqz p1, :cond_1

    .line 25
    .line 26
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 27
    .line 28
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 29
    .line 30
    iget-wide v1, p1, Lcom/android/server/am/ActivityManagerConstants;->mDataSyncFgsTimeoutDuration:J

    .line 31
    .line 32
    cmp-long p1, v1, v4

    .line 33
    .line 34
    if-lez p1, :cond_2

    .line 35
    .line 36
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 37
    .line 38
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 39
    .line 40
    iget-wide p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mDataSyncFgsTimeoutDuration:J

    .line 41
    .line 42
    move v3, v0

    .line 43
    :cond_2
    return v3
.end method

.method public final hasForegroundServiceNotificationLocked(ILjava/lang/String;Ljava/lang/String;)Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object p0

    .line 7
    check-cast p0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 8
    .line 9
    const/4 p1, 0x0

    .line 10
    if-eqz p0, :cond_1

    .line 11
    .line 12
    move v0, p1

    .line 13
    :goto_0
    iget-object v1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 14
    .line 15
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 16
    .line 17
    .line 18
    move-result v1

    .line 19
    if-ge v0, v1, :cond_1

    .line 20
    .line 21
    iget-object v1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 22
    .line 23
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v1

    .line 27
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 28
    .line 29
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 30
    .line 31
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 32
    .line 33
    invoke-virtual {v2, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 34
    .line 35
    .line 36
    move-result v2

    .line 37
    if-eqz v2, :cond_0

    .line 38
    .line 39
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 40
    .line 41
    if-eqz v2, :cond_0

    .line 42
    .line 43
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 44
    .line 45
    if-eqz v1, :cond_0

    .line 46
    .line 47
    invoke-virtual {v1}, Landroid/app/Notification;->getChannelId()Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object v1

    .line 51
    invoke-static {v1, p3}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 52
    .line 53
    .line 54
    move-result v1

    .line 55
    if-eqz v1, :cond_0

    .line 56
    .line 57
    const/4 p0, 0x1

    .line 58
    return p0

    .line 59
    :cond_0
    add-int/lit8 v0, v0, 0x1

    .line 60
    .line 61
    goto :goto_0

    .line 62
    :cond_1
    return p1
.end method

.method public final hasServiceTimedOutLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Z
    .locals 4

    .line 1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 8
    .line 9
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    .line 11
    .line 12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 13
    .line 14
    .line 15
    move-result-wide v2

    .line 16
    :try_start_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 21
    .line 22
    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object p1

    .line 26
    check-cast p1, Lcom/android/server/am/ServiceRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27
    .line 28
    if-ne p1, p2, :cond_0

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const/4 p1, 0x0

    .line 32
    :goto_0
    const/4 p2, 0x0

    .line 33
    if-nez p1, :cond_1

    .line 34
    .line 35
    iget-object p0, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 36
    .line 37
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 38
    .line 39
    .line 40
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 41
    .line 42
    .line 43
    return p2

    .line 44
    :cond_1
    :try_start_1
    iget p1, p1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 45
    .line 46
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 47
    .line 48
    .line 49
    move-result p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 50
    if-eqz p0, :cond_2

    .line 51
    .line 52
    const/4 p2, 0x1

    .line 53
    :cond_2
    iget-object p0, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 54
    .line 55
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 56
    .line 57
    .line 58
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 59
    .line 60
    .line 61
    return p2

    .line 62
    :catchall_0
    move-exception p0

    .line 63
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 64
    .line 65
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 66
    .line 67
    .line 68
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 69
    .line 70
    .line 71
    throw p0
.end method

.method public final isBgFgsRestrictionEnabled(ILcom/android/server/am/ServiceRecord;)Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mFlagFgsStartRestrictionEnabled:Z

    .line 6
    .line 7
    const/4 v1, 0x0

    .line 8
    if-nez v0, :cond_0

    .line 9
    .line 10
    return v1

    .line 11
    :cond_0
    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 12
    .line 13
    iget p2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 14
    .line 15
    const-wide/32 v2, 0xa2c30a7

    .line 16
    .line 17
    .line 18
    invoke-static {v2, v3, p2}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 19
    .line 20
    .line 21
    move-result p2

    .line 22
    if-nez p2, :cond_1

    .line 23
    .line 24
    return v1

    .line 25
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 26
    .line 27
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 28
    .line 29
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mFgsStartRestrictionCheckCallerTargetSdk:Z

    .line 30
    .line 31
    const/4 p2, 0x1

    .line 32
    if-nez p0, :cond_2

    .line 33
    .line 34
    return p2

    .line 35
    :cond_2
    invoke-static {}, Lcom/android/server/am/Flags;->newFgsRestrictionLogic()Z

    .line 36
    .line 37
    .line 38
    const/16 p0, 0x3e8

    .line 39
    .line 40
    if-ne p1, p0, :cond_3

    .line 41
    .line 42
    return p2

    .line 43
    :cond_3
    invoke-static {v2, v3, p1}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 44
    .line 45
    .line 46
    move-result p0

    .line 47
    if-nez p0, :cond_4

    .line 48
    .line 49
    return v1

    .line 50
    :cond_4
    return p2
.end method

.method public final isDeviceProvisioningPackage(Ljava/lang/String;)Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mCachedDeviceProvisioningPackage:Ljava/lang/String;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 8
    .line 9
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 10
    .line 11
    .line 12
    move-result-object v0

    .line 13
    const v1, 0x104033f

    .line 14
    .line 15
    .line 16
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    iput-object v0, p0, Lcom/android/server/am/ActiveServices;->mCachedDeviceProvisioningPackage:Ljava/lang/String;

    .line 21
    .line 22
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mCachedDeviceProvisioningPackage:Ljava/lang/String;

    .line 23
    .line 24
    if-eqz p0, :cond_1

    .line 25
    .line 26
    invoke-virtual {p0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 27
    .line 28
    .line 29
    move-result p0

    .line 30
    if-eqz p0, :cond_1

    .line 31
    .line 32
    const/4 p0, 0x1

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    const/4 p0, 0x0

    .line 35
    :goto_0
    return p0
.end method

.method public final isForegroundServiceAllowedInBackgroundRestricted(ILjava/lang/String;)Z
    .locals 4

    .line 6
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 7
    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    .line 8
    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    move-result-object p1

    if-eqz p1, :cond_2

    .line 9
    iget-object v0, p1, Lcom/android/server/am/UidRecord;->mProcRecords:Landroid/util/ArraySet;

    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    move-result v0

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    :goto_0
    if-ltz v0, :cond_1

    .line 10
    iget-object v2, p1, Lcom/android/server/am/UidRecord;->mProcRecords:Landroid/util/ArraySet;

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_0

    .line 11
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_0

    goto :goto_1

    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    :goto_1
    if-eqz v2, :cond_2

    .line 12
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActiveServices;->isForegroundServiceAllowedInBackgroundRestricted(Lcom/android/server/am/ProcessRecord;)Z

    move-result p0

    if-eqz p0, :cond_2

    goto :goto_2

    :cond_2
    const/4 v1, 0x0

    :goto_2
    return v1
.end method

.method public final isForegroundServiceAllowedInBackgroundRestricted(Lcom/android/server/am/ProcessRecord;)Z
    .locals 2

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 2
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object p1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->isDeviceProvisioningPackage(Ljava/lang/String;)Z

    move-result p0

    const/4 p1, 0x1

    if-eqz p0, :cond_0

    return p1

    .line 3
    :cond_0
    iget-boolean p0, v0, Lcom/android/server/am/ProcessStateRecord;->mBackgroundRestricted:Z

    if-eqz p0, :cond_3

    .line 4
    iget p0, v0, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    const/4 v1, 0x3

    if-gt p0, v1, :cond_1

    goto :goto_0

    :cond_1
    const/4 v1, 0x4

    if-ne p0, v1, :cond_2

    .line 5
    iget-boolean p0, v0, Lcom/android/server/am/ProcessStateRecord;->mSetBoundByNonBgRestrictedApp:Z

    if-eqz p0, :cond_2

    return p1

    :cond_2
    const/4 p0, 0x0

    return p0

    :cond_3
    :goto_0
    return p1
.end method

.method public final isTempAllowedByAlarmClock(I)Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->isAllowlistedForFgsStartLOSP(I)Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 4
    .line 5
    .line 6
    move-result-object p0

    .line 7
    const/4 p1, 0x0

    .line 8
    if-eqz p0, :cond_0

    .line 9
    .line 10
    iget p0, p0, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mReasonCode:I

    .line 11
    .line 12
    const/16 v0, 0x12d

    .line 13
    .line 14
    if-ne p0, v0, :cond_0

    .line 15
    .line 16
    const/4 p1, 0x1

    .line 17
    :cond_0
    return p1
.end method

.method public final killServicesLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    const/4 v2, 0x1

    .line 6
    const/4 v3, -0x1

    .line 7
    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 8
    .line 9
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 10
    .line 11
    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    .line 12
    .line 13
    .line 14
    move-result v5

    .line 15
    sub-int/2addr v5, v2

    .line 16
    :goto_0
    const/4 v6, 0x0

    .line 17
    if-ltz v5, :cond_0

    .line 18
    .line 19
    iget-object v7, v4, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 20
    .line 21
    invoke-virtual {v7, v5}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v7

    .line 25
    check-cast v7, Lcom/android/server/am/ConnectionRecord;

    .line 26
    .line 27
    invoke-virtual {v0, v7, v1, v6, v2}, Lcom/android/server/am/ActiveServices;->removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/wm/ActivityServiceConnectionsHolder;Z)I

    .line 28
    .line 29
    .line 30
    add-int/2addr v5, v3

    .line 31
    goto :goto_0

    .line 32
    :cond_0
    invoke-virtual {v0, v4}, Lcom/android/server/am/ActiveServices;->updateServiceConnectionActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;)V

    .line 33
    .line 34
    .line 35
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 36
    .line 37
    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    .line 38
    .line 39
    .line 40
    move-result v5

    .line 41
    const/4 v7, 0x0

    .line 42
    move v8, v7

    .line 43
    :goto_1
    if-ge v8, v5, :cond_2

    .line 44
    .line 45
    iget-object v9, v4, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 46
    .line 47
    invoke-virtual {v9, v8}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    move-result-object v9

    .line 51
    check-cast v9, Lcom/android/server/am/ConnectionRecord;

    .line 52
    .line 53
    iget-object v10, v9, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 54
    .line 55
    iget-object v11, v10, Lcom/android/server/am/AppBindRecord;->attributedClient:Lcom/android/server/am/ProcessRecord;

    .line 56
    .line 57
    if-eqz v11, :cond_1

    .line 58
    .line 59
    iget-object v10, v10, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 60
    .line 61
    iget-boolean v10, v10, Lcom/android/server/am/ServiceRecord;->isSdkSandbox:Z

    .line 62
    .line 63
    if-eqz v10, :cond_1

    .line 64
    .line 65
    iget-object v10, v11, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 66
    .line 67
    iget-object v10, v10, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    .line 68
    .line 69
    if-eqz v10, :cond_1

    .line 70
    .line 71
    invoke-virtual {v10, v9}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 72
    .line 73
    .line 74
    :cond_1
    add-int/2addr v8, v2

    .line 75
    goto :goto_1

    .line 76
    :cond_2
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 77
    .line 78
    invoke-virtual {v5}, Landroid/util/ArraySet;->clear()V

    .line 79
    .line 80
    .line 81
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    .line 82
    .line 83
    if-eqz v5, :cond_3

    .line 84
    .line 85
    invoke-virtual {v5}, Landroid/util/ArraySet;->clear()V

    .line 86
    .line 87
    .line 88
    :cond_3
    iput-boolean v7, v4, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 89
    .line 90
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 91
    .line 92
    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    .line 93
    .line 94
    .line 95
    move-result v5

    .line 96
    sub-int/2addr v5, v2

    .line 97
    :goto_2
    if-ltz v5, :cond_b

    .line 98
    .line 99
    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    .line 100
    .line 101
    .line 102
    move-result-object v8

    .line 103
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 104
    .line 105
    iget-object v9, v9, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 106
    .line 107
    iget-object v10, v8, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 108
    .line 109
    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 110
    .line 111
    iget-object v11, v8, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 112
    .line 113
    invoke-virtual {v11}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 114
    .line 115
    .line 116
    move-result-object v11

    .line 117
    iget-object v12, v8, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 118
    .line 119
    invoke-virtual {v12}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 120
    .line 121
    .line 122
    move-result-object v12

    .line 123
    invoke-virtual {v9, v10, v11, v12}, Lcom/android/server/am/BatteryStatsService;->noteServiceStopLaunch(ILjava/lang/String;Ljava/lang/String;)V

    .line 124
    .line 125
    .line 126
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 127
    .line 128
    if-eq v9, v1, :cond_4

    .line 129
    .line 130
    if-eqz v9, :cond_4

    .line 131
    .line 132
    iget-boolean v9, v9, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    .line 133
    .line 134
    if-nez v9, :cond_4

    .line 135
    .line 136
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 137
    .line 138
    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 139
    .line 140
    invoke-virtual {v9, v8}, Lcom/android/server/am/ProcessServiceRecord;->stopService(Lcom/android/server/am/ServiceRecord;)V

    .line 141
    .line 142
    .line 143
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 144
    .line 145
    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 146
    .line 147
    invoke-virtual {v9}, Lcom/android/server/am/ProcessServiceRecord;->updateBoundClientUids()V

    .line 148
    .line 149
    .line 150
    :cond_4
    invoke-virtual {v8, v6}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 151
    .line 152
    .line 153
    iput-object v6, v8, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 154
    .line 155
    iput v7, v8, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    .line 156
    .line 157
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 158
    .line 159
    iget-object v9, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 160
    .line 161
    iget-object v9, v9, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 162
    .line 163
    monitor-enter v9

    .line 164
    :try_start_0
    iget-object v10, v8, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 165
    .line 166
    if-eqz v10, :cond_5

    .line 167
    .line 168
    invoke-virtual {v10, v8, v2}, Lcom/android/internal/app/procstats/ServiceState;->clearCurrentOwner(Ljava/lang/Object;Z)V

    .line 169
    .line 170
    .line 171
    iput-object v6, v8, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 172
    .line 173
    :cond_5
    monitor-exit v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 174
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 175
    .line 176
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 177
    .line 178
    .line 179
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 180
    .line 181
    invoke-virtual {v9}, Landroid/util/ArrayMap;->size()I

    .line 182
    .line 183
    .line 184
    move-result v9

    .line 185
    sub-int/2addr v9, v2

    .line 186
    :goto_3
    if-ltz v9, :cond_a

    .line 187
    .line 188
    iget-object v10, v8, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 189
    .line 190
    invoke-virtual {v10, v9}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 191
    .line 192
    .line 193
    move-result-object v10

    .line 194
    check-cast v10, Lcom/android/server/am/IntentBindRecord;

    .line 195
    .line 196
    iput-object v6, v10, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;

    .line 197
    .line 198
    iput-boolean v7, v10, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 199
    .line 200
    iput-boolean v7, v10, Lcom/android/server/am/IntentBindRecord;->received:Z

    .line 201
    .line 202
    iput-boolean v7, v10, Lcom/android/server/am/IntentBindRecord;->requested:Z

    .line 203
    .line 204
    iget-object v11, v10, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 205
    .line 206
    invoke-virtual {v11}, Landroid/util/ArrayMap;->size()I

    .line 207
    .line 208
    .line 209
    move-result v11

    .line 210
    sub-int/2addr v11, v2

    .line 211
    :goto_4
    if-ltz v11, :cond_9

    .line 212
    .line 213
    iget-object v12, v10, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 214
    .line 215
    invoke-virtual {v12, v11}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    .line 216
    .line 217
    .line 218
    move-result-object v12

    .line 219
    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 220
    .line 221
    iget-boolean v13, v12, Lcom/android/server/am/ProcessRecord;->mKilledByAm:Z

    .line 222
    .line 223
    if-nez v13, :cond_8

    .line 224
    .line 225
    iget-object v12, v12, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 226
    .line 227
    if-nez v12, :cond_6

    .line 228
    .line 229
    goto :goto_6

    .line 230
    :cond_6
    iget-object v12, v10, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 231
    .line 232
    invoke-virtual {v12, v11}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 233
    .line 234
    .line 235
    move-result-object v12

    .line 236
    check-cast v12, Lcom/android/server/am/AppBindRecord;

    .line 237
    .line 238
    iget-object v13, v12, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 239
    .line 240
    invoke-virtual {v13}, Landroid/util/ArraySet;->size()I

    .line 241
    .line 242
    .line 243
    move-result v13

    .line 244
    sub-int/2addr v13, v2

    .line 245
    :goto_5
    if-ltz v13, :cond_8

    .line 246
    .line 247
    iget-object v14, v12, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 248
    .line 249
    invoke-virtual {v14, v13}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 250
    .line 251
    .line 252
    move-result-object v14

    .line 253
    check-cast v14, Lcom/android/server/am/ConnectionRecord;

    .line 254
    .line 255
    invoke-virtual {v14, v2}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 256
    .line 257
    .line 258
    move-result v15

    .line 259
    if-eqz v15, :cond_7

    .line 260
    .line 261
    const/16 v15, 0x30

    .line 262
    .line 263
    invoke-virtual {v14, v15}, Lcom/android/server/am/ConnectionRecord;->notHasFlag(I)Z

    .line 264
    .line 265
    .line 266
    move-result v14

    .line 267
    if-eqz v14, :cond_7

    .line 268
    .line 269
    goto :goto_6

    .line 270
    :cond_7
    add-int/2addr v13, v3

    .line 271
    goto :goto_5

    .line 272
    :cond_8
    :goto_6
    add-int/2addr v11, v3

    .line 273
    goto :goto_4

    .line 274
    :cond_9
    add-int/2addr v9, v3

    .line 275
    goto :goto_3

    .line 276
    :cond_a
    add-int/2addr v5, v3

    .line 277
    goto/16 :goto_2

    .line 278
    .line 279
    :catchall_0
    move-exception v0

    .line 280
    :try_start_1
    monitor-exit v9
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 281
    throw v0

    .line 282
    :cond_b
    iget v5, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 283
    .line 284
    invoke-virtual {v0, v5}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 285
    .line 286
    .line 287
    move-result-object v5

    .line 288
    iget-object v8, v4, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 289
    .line 290
    invoke-virtual {v8}, Landroid/util/ArraySet;->size()I

    .line 291
    .line 292
    .line 293
    move-result v8

    .line 294
    sub-int/2addr v8, v2

    .line 295
    :goto_7
    if-ltz v8, :cond_18

    .line 296
    .line 297
    invoke-virtual {v4, v8}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    .line 298
    .line 299
    .line 300
    move-result-object v9

    .line 301
    iget-boolean v10, v1, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    .line 302
    .line 303
    if-nez v10, :cond_c

    .line 304
    .line 305
    invoke-virtual {v4, v9}, Lcom/android/server/am/ProcessServiceRecord;->stopService(Lcom/android/server/am/ServiceRecord;)V

    .line 306
    .line 307
    .line 308
    invoke-virtual {v4}, Lcom/android/server/am/ProcessServiceRecord;->updateBoundClientUids()V

    .line 309
    .line 310
    .line 311
    :cond_c
    iget-object v10, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 312
    .line 313
    iget-object v11, v9, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 314
    .line 315
    invoke-virtual {v10, v11}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 316
    .line 317
    .line 318
    move-result-object v10

    .line 319
    check-cast v10, Lcom/android/server/am/ServiceRecord;

    .line 320
    .line 321
    if-eq v10, v9, :cond_d

    .line 322
    .line 323
    if-eqz v10, :cond_17

    .line 324
    .line 325
    const-string v11, "ActivityManager"

    .line 326
    .line 327
    new-instance v12, Ljava/lang/StringBuilder;

    .line 328
    .line 329
    const-string v13, "Service "

    .line 330
    .line 331
    invoke-direct {v12, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 332
    .line 333
    .line 334
    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 335
    .line 336
    .line 337
    const-string v9, " in process "

    .line 338
    .line 339
    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 340
    .line 341
    .line 342
    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 343
    .line 344
    .line 345
    const-string v9, " not same as in map: "

    .line 346
    .line 347
    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 348
    .line 349
    .line 350
    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 351
    .line 352
    .line 353
    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 354
    .line 355
    .line 356
    move-result-object v9

    .line 357
    invoke-static {v11, v9}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 358
    .line 359
    .line 360
    goto/16 :goto_e

    .line 361
    .line 362
    :cond_d
    if-eqz p2, :cond_f

    .line 363
    .line 364
    iget v10, v9, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 365
    .line 366
    int-to-long v10, v10

    .line 367
    iget-object v12, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 368
    .line 369
    iget-object v12, v12, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 370
    .line 371
    iget-wide v12, v12, Lcom/android/server/am/ActivityManagerConstants;->BOUND_SERVICE_MAX_CRASH_RETRY:J

    .line 372
    .line 373
    cmp-long v10, v10, v12

    .line 374
    .line 375
    if-ltz v10, :cond_f

    .line 376
    .line 377
    iget-object v10, v9, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 378
    .line 379
    iget-object v10, v10, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 380
    .line 381
    iget v10, v10, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 382
    .line 383
    and-int/lit8 v10, v10, 0x8

    .line 384
    .line 385
    if-nez v10, :cond_f

    .line 386
    .line 387
    const-string v10, "ActivityManager"

    .line 388
    .line 389
    new-instance v11, Ljava/lang/StringBuilder;

    .line 390
    .line 391
    const-string v12, "Service crashed "

    .line 392
    .line 393
    invoke-direct {v11, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 394
    .line 395
    .line 396
    iget v12, v9, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 397
    .line 398
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 399
    .line 400
    .line 401
    const-string v12, " times, stopping: "

    .line 402
    .line 403
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 404
    .line 405
    .line 406
    invoke-virtual {v11, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 407
    .line 408
    .line 409
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 410
    .line 411
    .line 412
    move-result-object v11

    .line 413
    invoke-static {v10, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 414
    .line 415
    .line 416
    iget v10, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 417
    .line 418
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 419
    .line 420
    .line 421
    move-result-object v10

    .line 422
    iget v11, v9, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 423
    .line 424
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 425
    .line 426
    .line 427
    move-result-object v11

    .line 428
    iget-object v12, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 429
    .line 430
    iget-object v13, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 431
    .line 432
    if-eqz v13, :cond_e

    .line 433
    .line 434
    iget v13, v13, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 435
    .line 436
    goto :goto_8

    .line 437
    :cond_e
    move v13, v3

    .line 438
    :goto_8
    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 439
    .line 440
    .line 441
    move-result-object v13

    .line 442
    filled-new-array {v10, v11, v12, v13}, [Ljava/lang/Object;

    .line 443
    .line 444
    .line 445
    move-result-object v10

    .line 446
    const/16 v11, 0x7552

    .line 447
    .line 448
    invoke-static {v11, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 449
    .line 450
    .line 451
    invoke-virtual {v0, v9, v2}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 452
    .line 453
    .line 454
    goto/16 :goto_e

    .line 455
    .line 456
    :cond_f
    if-eqz p2, :cond_16

    .line 457
    .line 458
    iget-object v10, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 459
    .line 460
    iget-object v10, v10, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 461
    .line 462
    iget v11, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 463
    .line 464
    invoke-virtual {v10, v11, v7}, Lcom/android/server/am/UserController;->isUserRunning(II)Z

    .line 465
    .line 466
    .line 467
    move-result v10

    .line 468
    if-nez v10, :cond_10

    .line 469
    .line 470
    goto :goto_d

    .line 471
    :cond_10
    if-eqz p3, :cond_15

    .line 472
    .line 473
    sget-boolean v10, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 474
    .line 475
    sget-object v10, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 476
    .line 477
    iget-object v11, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 478
    .line 479
    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 480
    .line 481
    iget v12, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 482
    .line 483
    invoke-virtual {v10}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 484
    .line 485
    .line 486
    sget-boolean v13, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 487
    .line 488
    sget-object v13, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 489
    .line 490
    invoke-virtual {v13}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 491
    .line 492
    .line 493
    sget-boolean v14, Lcom/android/server/am/MARsPolicyManager;->isChinaModel:Z

    .line 494
    .line 495
    if-eqz v14, :cond_12

    .line 496
    .line 497
    invoke-virtual {v13, v11, v12}, Lcom/android/server/am/MARsPolicyManager;->isAutoRunBlockedApp(Ljava/lang/String;I)Z

    .line 498
    .line 499
    .line 500
    move-result v13

    .line 501
    if-eqz v13, :cond_11

    .line 502
    .line 503
    goto :goto_9

    .line 504
    :cond_11
    move v10, v7

    .line 505
    goto :goto_b

    .line 506
    :cond_12
    :goto_9
    sget-object v13, Lcom/android/server/am/MARsPolicyManager;->MARsLock:Lcom/android/server/am/MARsPolicyManager$Lock;

    .line 507
    .line 508
    monitor-enter v13

    .line 509
    :try_start_2
    invoke-virtual {v10, v12, v11}, Lcom/android/server/am/FreecessController;->getPackageStatus(ILjava/lang/String;)Lcom/android/server/am/FreecessPkgStatus;

    .line 510
    .line 511
    .line 512
    move-result-object v10

    .line 513
    if-eqz v10, :cond_13

    .line 514
    .line 515
    iget-object v10, v10, Lcom/android/server/am/FreecessPkgStatus;->freezedRecord:Lcom/android/server/am/mars/MARsFreezeStateRecord;

    .line 516
    .line 517
    iget-boolean v11, v10, Lcom/android/server/am/mars/MARsFreezeStateRecord;->isFrozen:Z

    .line 518
    .line 519
    if-nez v11, :cond_13

    .line 520
    .line 521
    const-string v11, "Signal"

    .line 522
    .line 523
    iget-object v10, v10, Lcom/android/server/am/mars/MARsFreezeStateRecord;->unfreezedReason:Ljava/lang/String;

    .line 524
    .line 525
    invoke-virtual {v11, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 526
    .line 527
    .line 528
    move-result v10

    .line 529
    if-eqz v10, :cond_13

    .line 530
    .line 531
    move v10, v2

    .line 532
    goto :goto_a

    .line 533
    :catchall_1
    move-exception v0

    .line 534
    goto :goto_c

    .line 535
    :cond_13
    move v10, v7

    .line 536
    :goto_a
    monitor-exit v13
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 537
    :goto_b
    if-nez v10, :cond_14

    .line 538
    .line 539
    iget-object v10, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 540
    .line 541
    iget v11, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 542
    .line 543
    invoke-virtual {v10, v11, v9}, Lcom/android/server/am/ActivityManagerService;->pendingScheduleServiceRestart(ILcom/android/server/am/ServiceRecord;)V

    .line 544
    .line 545
    .line 546
    goto :goto_e

    .line 547
    :cond_14
    invoke-virtual {v0, v9, v2}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 548
    .line 549
    .line 550
    goto :goto_e

    .line 551
    :goto_c
    :try_start_3
    monitor-exit v13
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 552
    throw v0

    .line 553
    :cond_15
    invoke-virtual {v0, v9}, Lcom/android/server/am/ActiveServices;->tryScheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 554
    .line 555
    .line 556
    goto :goto_e

    .line 557
    :cond_16
    :goto_d
    invoke-virtual {v0, v9, v2}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 558
    .line 559
    .line 560
    :cond_17
    :goto_e
    add-int/2addr v8, v3

    .line 561
    goto/16 :goto_7

    .line 562
    .line 563
    :cond_18
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 564
    .line 565
    const/16 v8, 0x13

    .line 566
    .line 567
    invoke-virtual {v5, v8}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 568
    .line 569
    .line 570
    if-eqz p2, :cond_19

    .line 571
    .line 572
    if-eqz p3, :cond_1f

    .line 573
    .line 574
    :cond_19
    iget-object v5, v4, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 575
    .line 576
    invoke-virtual {v5}, Landroid/util/ArraySet;->clear()V

    .line 577
    .line 578
    .line 579
    invoke-virtual {v4}, Lcom/android/server/am/ProcessServiceRecord;->updateHasTopStartedAlmostPerceptibleServices()V

    .line 580
    .line 581
    .line 582
    invoke-virtual {v4}, Lcom/android/server/am/ProcessServiceRecord;->clearBoundClientUids()V

    .line 583
    .line 584
    .line 585
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 586
    .line 587
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 588
    .line 589
    .line 590
    move-result v5

    .line 591
    sub-int/2addr v5, v2

    .line 592
    :goto_f
    if-ltz v5, :cond_1b

    .line 593
    .line 594
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 595
    .line 596
    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 597
    .line 598
    .line 599
    move-result-object v8

    .line 600
    check-cast v8, Lcom/android/server/am/ServiceRecord;

    .line 601
    .line 602
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 603
    .line 604
    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 605
    .line 606
    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 607
    .line 608
    .line 609
    move-result v9

    .line 610
    if-eqz v9, :cond_1a

    .line 611
    .line 612
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 613
    .line 614
    iget-object v9, v9, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 615
    .line 616
    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 617
    .line 618
    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 619
    .line 620
    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 621
    .line 622
    if-ne v9, v10, :cond_1a

    .line 623
    .line 624
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 625
    .line 626
    invoke-virtual {v9, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 627
    .line 628
    .line 629
    invoke-virtual {v0, v8}, Lcom/android/server/am/ActiveServices;->clearRestartingIfNeededLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 630
    .line 631
    .line 632
    :cond_1a
    add-int/2addr v5, v3

    .line 633
    goto :goto_f

    .line 634
    :cond_1b
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 635
    .line 636
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 637
    .line 638
    .line 639
    move-result v5

    .line 640
    sub-int/2addr v5, v2

    .line 641
    :goto_10
    if-ltz v5, :cond_1d

    .line 642
    .line 643
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 644
    .line 645
    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 646
    .line 647
    .line 648
    move-result-object v8

    .line 649
    check-cast v8, Lcom/android/server/am/ServiceRecord;

    .line 650
    .line 651
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 652
    .line 653
    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 654
    .line 655
    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 656
    .line 657
    .line 658
    move-result v9

    .line 659
    if-eqz v9, :cond_1c

    .line 660
    .line 661
    iget-object v8, v8, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 662
    .line 663
    iget-object v8, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 664
    .line 665
    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 666
    .line 667
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 668
    .line 669
    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 670
    .line 671
    if-ne v8, v9, :cond_1c

    .line 672
    .line 673
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 674
    .line 675
    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 676
    .line 677
    .line 678
    :cond_1c
    add-int/2addr v5, v3

    .line 679
    goto :goto_10

    .line 680
    :cond_1d
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 681
    .line 682
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    .line 683
    .line 684
    .line 685
    move-result v5

    .line 686
    sub-int/2addr v5, v2

    .line 687
    :goto_11
    if-ltz v5, :cond_1f

    .line 688
    .line 689
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 690
    .line 691
    invoke-virtual {v8, v5}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    .line 692
    .line 693
    .line 694
    move-result-object v8

    .line 695
    check-cast v8, Lcom/android/server/am/ServiceRecord;

    .line 696
    .line 697
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 698
    .line 699
    iget-object v10, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 700
    .line 701
    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 702
    .line 703
    .line 704
    move-result v9

    .line 705
    if-eqz v9, :cond_1e

    .line 706
    .line 707
    iget-object v8, v8, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 708
    .line 709
    iget-object v8, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 710
    .line 711
    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 712
    .line 713
    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 714
    .line 715
    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 716
    .line 717
    if-ne v8, v9, :cond_1e

    .line 718
    .line 719
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 720
    .line 721
    invoke-virtual {v8, v5}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 722
    .line 723
    .line 724
    :cond_1e
    add-int/2addr v5, v3

    .line 725
    goto :goto_11

    .line 726
    :cond_1f
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 727
    .line 728
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 729
    .line 730
    .line 731
    move-result v5

    .line 732
    :cond_20
    :goto_12
    if-lez v5, :cond_22

    .line 733
    .line 734
    add-int/2addr v5, v3

    .line 735
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 736
    .line 737
    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 738
    .line 739
    .line 740
    move-result-object v8

    .line 741
    check-cast v8, Lcom/android/server/am/ServiceRecord;

    .line 742
    .line 743
    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 744
    .line 745
    if-ne v9, v1, :cond_20

    .line 746
    .line 747
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 748
    .line 749
    iget-object v9, v9, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 750
    .line 751
    iget-object v9, v9, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 752
    .line 753
    monitor-enter v9

    .line 754
    :try_start_4
    iget-object v10, v8, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 755
    .line 756
    if-eqz v10, :cond_21

    .line 757
    .line 758
    invoke-virtual {v10, v8, v2}, Lcom/android/internal/app/procstats/ServiceState;->clearCurrentOwner(Ljava/lang/Object;Z)V

    .line 759
    .line 760
    .line 761
    iput-object v6, v8, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 762
    .line 763
    :cond_21
    monitor-exit v9
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 764
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 765
    .line 766
    invoke-virtual {v8, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 767
    .line 768
    .line 769
    goto :goto_12

    .line 770
    :catchall_2
    move-exception v0

    .line 771
    :try_start_5
    monitor-exit v9
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 772
    throw v0

    .line 773
    :cond_22
    iget-object v0, v4, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 774
    .line 775
    invoke-virtual {v0}, Landroid/util/ArraySet;->clear()V

    .line 776
    .line 777
    .line 778
    iput-boolean v7, v4, Lcom/android/server/am/ProcessServiceRecord;->mScheduleServiceTimeoutPending:Z

    .line 779
    .line 780
    return-void
.end method

.method public final logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V
    .locals 45

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    move/from16 v15, p2

    .line 6
    .line 7
    move/from16 v14, p4

    .line 8
    .line 9
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 10
    .line 11
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 12
    .line 13
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 14
    .line 15
    iget v3, v3, Lcom/android/server/am/ActivityManagerConstants;->mFgsAtomSampleRate:F

    .line 16
    .line 17
    invoke-static {v3, v2}, Lcom/android/server/am/ActivityManagerUtils;->shouldSamplePackageForAtom(FLjava/lang/String;)Z

    .line 18
    .line 19
    .line 20
    move-result v2

    .line 21
    if-nez v2, :cond_0

    .line 22
    .line 23
    return-void

    .line 24
    :cond_0
    const/4 v13, 0x5

    .line 25
    const/4 v12, 0x2

    .line 26
    const/4 v11, 0x1

    .line 27
    if-eq v15, v11, :cond_2

    .line 28
    .line 29
    if-eq v15, v12, :cond_2

    .line 30
    .line 31
    if-ne v15, v13, :cond_1

    .line 32
    .line 33
    goto :goto_1

    .line 34
    :cond_1
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedWiu_forCapabilities()Z

    .line 35
    .line 36
    .line 37
    move-result v2

    .line 38
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getFgsAllowStart()I

    .line 39
    .line 40
    .line 41
    move-result v3

    .line 42
    :goto_0
    move/from16 v42, v2

    .line 43
    .line 44
    move/from16 v43, v3

    .line 45
    .line 46
    goto :goto_2

    .line 47
    :cond_2
    :goto_1
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->mAllowWhileInUsePermissionInFgsAtEntering:Z

    .line 48
    .line 49
    iget v3, v1, Lcom/android/server/am/ServiceRecord;->mAllowStartForegroundAtEntering:I

    .line 50
    .line 51
    goto :goto_0

    .line 52
    :goto_2
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallerApplicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 53
    .line 54
    if-eqz v2, :cond_3

    .line 55
    .line 56
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 57
    .line 58
    move/from16 v44, v2

    .line 59
    .line 60
    goto :goto_3

    .line 61
    :cond_3
    const/16 v44, 0x0

    .line 62
    .line 63
    :goto_3
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 64
    .line 65
    iget v4, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 66
    .line 67
    iget-object v5, v1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 68
    .line 69
    iget v8, v2, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 70
    .line 71
    iget v9, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    .line 72
    .line 73
    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->mInfoTempFgsAllowListReason:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 74
    .line 75
    const/4 v6, -0x1

    .line 76
    if-eqz v2, :cond_4

    .line 77
    .line 78
    iget v2, v2, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mCallingUid:I

    .line 79
    .line 80
    move/from16 v17, v2

    .line 81
    .line 82
    goto :goto_4

    .line 83
    :cond_4
    move/from16 v17, v6

    .line 84
    .line 85
    :goto_4
    iget-boolean v10, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationWasDeferred:Z

    .line 86
    .line 87
    iget-boolean v7, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 88
    .line 89
    iget v2, v1, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 90
    .line 91
    move/from16 v16, v2

    .line 92
    .line 93
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->mFgsHasNotificationPermission:Z

    .line 94
    .line 95
    move/from16 v18, v2

    .line 96
    .line 97
    iget v2, v1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 98
    .line 99
    move/from16 v19, v2

    .line 100
    .line 101
    iget-boolean v2, v1, Lcom/android/server/am/ServiceRecord;->mIsFgsDelegate:Z

    .line 102
    .line 103
    iget-object v3, v1, Lcom/android/server/am/ServiceRecord;->mFgsDelegation:Lcom/android/server/am/ForegroundServiceDelegation;

    .line 104
    .line 105
    if-eqz v3, :cond_5

    .line 106
    .line 107
    iget-object v6, v3, Lcom/android/server/am/ForegroundServiceDelegation;->mOptions:Landroid/app/ForegroundServiceDelegationOptions;

    .line 108
    .line 109
    iget v6, v6, Landroid/app/ForegroundServiceDelegationOptions;->mClientUid:I

    .line 110
    .line 111
    :cond_5
    move/from16 v21, v6

    .line 112
    .line 113
    if-eqz v3, :cond_6

    .line 114
    .line 115
    iget-object v3, v3, Lcom/android/server/am/ForegroundServiceDelegation;->mOptions:Landroid/app/ForegroundServiceDelegationOptions;

    .line 116
    .line 117
    iget v3, v3, Landroid/app/ForegroundServiceDelegationOptions;->mDelegationService:I

    .line 118
    .line 119
    move/from16 v22, v3

    .line 120
    .line 121
    goto :goto_5

    .line 122
    :cond_6
    const/16 v22, 0x0

    .line 123
    .line 124
    :goto_5
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 125
    .line 126
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 127
    .line 128
    invoke-virtual {v3, v4}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    .line 129
    .line 130
    .line 131
    move-result v26

    .line 132
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 133
    .line 134
    iget-object v6, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 135
    .line 136
    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 137
    .line 138
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 139
    .line 140
    invoke-virtual {v3, v6}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    .line 141
    .line 142
    .line 143
    move-result v27

    .line 144
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 145
    .line 146
    iget v6, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    .line 147
    .line 148
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 149
    .line 150
    invoke-virtual {v3, v6}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    .line 151
    .line 152
    .line 153
    move-result v28

    .line 154
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 155
    .line 156
    iget v3, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    .line 157
    .line 158
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 159
    .line 160
    invoke-virtual {v0, v3}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    .line 161
    .line 162
    .line 163
    move-result v29

    .line 164
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowWiu_noBinding:I

    .line 165
    .line 166
    move/from16 v34, v0

    .line 167
    .line 168
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowWiu_inBindService:I

    .line 169
    .line 170
    move/from16 v35, v0

    .line 171
    .line 172
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 173
    .line 174
    move/from16 v36, v0

    .line 175
    .line 176
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 177
    .line 178
    move/from16 v37, v0

    .line 179
    .line 180
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 181
    .line 182
    move/from16 v38, v0

    .line 183
    .line 184
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 185
    .line 186
    move/from16 v39, v0

    .line 187
    .line 188
    const-wide/16 v30, 0x0

    .line 189
    .line 190
    const-wide/16 v32, 0x0

    .line 191
    .line 192
    const/16 v0, 0x3c

    .line 193
    .line 194
    move/from16 v40, v2

    .line 195
    .line 196
    move/from16 v20, v19

    .line 197
    .line 198
    move/from16 v19, v18

    .line 199
    .line 200
    move/from16 v18, v16

    .line 201
    .line 202
    move v2, v0

    .line 203
    const/16 v16, 0x0

    .line 204
    .line 205
    const/16 v23, 0x0

    .line 206
    .line 207
    const/16 v24, 0x0

    .line 208
    .line 209
    const/16 v25, 0x0

    .line 210
    .line 211
    move v3, v4

    .line 212
    move-object v4, v5

    .line 213
    move/from16 v5, p2

    .line 214
    .line 215
    move/from16 v6, v42

    .line 216
    .line 217
    move v0, v7

    .line 218
    move/from16 v7, v43

    .line 219
    .line 220
    move/from16 v41, v10

    .line 221
    .line 222
    move/from16 v10, v44

    .line 223
    .line 224
    move/from16 v11, v17

    .line 225
    .line 226
    move/from16 v12, v41

    .line 227
    .line 228
    move v13, v0

    .line 229
    move v0, v14

    .line 230
    move/from16 v14, p3

    .line 231
    .line 232
    move/from16 v15, v18

    .line 233
    .line 234
    move/from16 v17, v19

    .line 235
    .line 236
    move/from16 v18, v20

    .line 237
    .line 238
    move/from16 v19, p5

    .line 239
    .line 240
    move/from16 v20, v40

    .line 241
    .line 242
    move/from16 v40, p6

    .line 243
    .line 244
    move/from16 v41, p7

    .line 245
    .line 246
    invoke-static/range {v2 .. v41}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;IZIIIIIZZIIIZIIZIII[I[JIIIIJJIIIIIIIZ)V

    .line 247
    .line 248
    .line 249
    move/from16 v2, p2

    .line 250
    .line 251
    const/4 v3, 0x1

    .line 252
    if-ne v2, v3, :cond_7

    .line 253
    .line 254
    const/16 v2, 0x7594

    .line 255
    .line 256
    const/4 v4, 0x2

    .line 257
    goto :goto_6

    .line 258
    :cond_7
    const/4 v4, 0x2

    .line 259
    if-ne v2, v4, :cond_8

    .line 260
    .line 261
    const/16 v2, 0x7596

    .line 262
    .line 263
    goto :goto_6

    .line 264
    :cond_8
    const/4 v5, 0x3

    .line 265
    if-ne v2, v5, :cond_9

    .line 266
    .line 267
    const/16 v2, 0x7595

    .line 268
    .line 269
    goto :goto_6

    .line 270
    :cond_9
    const/4 v5, 0x5

    .line 271
    if-ne v2, v5, :cond_c

    .line 272
    .line 273
    const/16 v2, 0x7597

    .line 274
    .line 275
    :goto_6
    iget v5, v1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 276
    .line 277
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 278
    .line 279
    .line 280
    move-result-object v6

    .line 281
    iget-object v7, v1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 282
    .line 283
    invoke-static/range {v42 .. v42}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 284
    .line 285
    .line 286
    move-result-object v8

    .line 287
    invoke-static/range {v43 .. v43}, Landroid/os/PowerExemptionManager;->reasonCodeToString(I)Ljava/lang/String;

    .line 288
    .line 289
    .line 290
    move-result-object v9

    .line 291
    iget-object v5, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 292
    .line 293
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 294
    .line 295
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 296
    .line 297
    .line 298
    move-result-object v10

    .line 299
    invoke-static/range {v44 .. v44}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 300
    .line 301
    .line 302
    move-result-object v11

    .line 303
    iget-boolean v5, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationWasDeferred:Z

    .line 304
    .line 305
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 306
    .line 307
    .line 308
    move-result-object v12

    .line 309
    iget-boolean v5, v1, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 310
    .line 311
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 312
    .line 313
    .line 314
    move-result-object v13

    .line 315
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 316
    .line 317
    .line 318
    move-result-object v14

    .line 319
    iget v5, v1, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 320
    .line 321
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 322
    .line 323
    .line 324
    move-result-object v15

    .line 325
    if-eq v0, v3, :cond_b

    .line 326
    .line 327
    if-eq v0, v4, :cond_a

    .line 328
    .line 329
    const-string v0, "UNKNOWN"

    .line 330
    .line 331
    :goto_7
    move-object/from16 v16, v0

    .line 332
    .line 333
    goto :goto_8

    .line 334
    :cond_a
    const-string v0, "STOP_SERVICE"

    .line 335
    .line 336
    goto :goto_7

    .line 337
    :cond_b
    const-string v0, "STOP_FOREGROUND"

    .line 338
    .line 339
    goto :goto_7

    .line 340
    :goto_8
    iget v0, v1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 341
    .line 342
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 343
    .line 344
    .line 345
    move-result-object v17

    .line 346
    filled-new-array/range {v6 .. v17}, [Ljava/lang/Object;

    .line 347
    .line 348
    .line 349
    move-result-object v0

    .line 350
    invoke-static {v2, v0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 351
    .line 352
    .line 353
    :cond_c
    return-void
.end method

.method public final logFgsBackgroundStart(Lcom/android/server/am/ServiceRecord;)V
    .locals 3

    .line 1
    iget-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->mLoggedInfoAllowStartForeground:Z

    .line 2
    .line 3
    if-nez v0, :cond_4

    .line 4
    .line 5
    new-instance v0, Ljava/lang/StringBuilder;

    .line 6
    .line 7
    const-string v1, "Background started FGS: "

    .line 8
    .line 9
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 10
    .line 11
    .line 12
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 13
    .line 14
    .line 15
    move-result v1

    .line 16
    if-eqz v1, :cond_0

    .line 17
    .line 18
    const-string v1, "Allowed "

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :cond_0
    const-string v1, "Disallowed "

    .line 22
    .line 23
    :goto_0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 27
    .line 28
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 29
    .line 30
    .line 31
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 32
    .line 33
    .line 34
    move-result v1

    .line 35
    if-eqz v1, :cond_1

    .line 36
    .line 37
    const-string v1, " (Called on SHORT_SERVICE)"

    .line 38
    .line 39
    goto :goto_1

    .line 40
    :cond_1
    const-string v1, ""

    .line 41
    .line 42
    :goto_1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 43
    .line 44
    .line 45
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 46
    .line 47
    .line 48
    move-result-object v0

    .line 49
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 50
    .line 51
    .line 52
    move-result v1

    .line 53
    const-string v2, "ActivityManager"

    .line 54
    .line 55
    if-eqz v1, :cond_3

    .line 56
    .line 57
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 58
    .line 59
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 60
    .line 61
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 62
    .line 63
    iget p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mFgsStartAllowedLogSampleRate:F

    .line 64
    .line 65
    invoke-static {p0, v1}, Lcom/android/server/am/ActivityManagerUtils;->shouldSamplePackageForAtom(FLjava/lang/String;)Z

    .line 66
    .line 67
    .line 68
    move-result p0

    .line 69
    if-eqz p0, :cond_2

    .line 70
    .line 71
    invoke-static {v2, v0}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 72
    .line 73
    .line 74
    :cond_2
    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 75
    .line 76
    .line 77
    goto :goto_2

    .line 78
    :cond_3
    invoke-static {v2, v0}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 79
    .line 80
    .line 81
    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 82
    .line 83
    .line 84
    :goto_2
    const/4 p0, 0x1

    .line 85
    iput-boolean p0, p1, Lcom/android/server/am/ServiceRecord;->mLoggedInfoAllowStartForeground:Z

    .line 86
    .line 87
    :cond_4
    return-void
.end method

.method public final maybeStopFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 7

    .line 1
    iget v0, p1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 2
    .line 3
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 11
    .line 12
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 13
    .line 14
    invoke-virtual {p0, v1, v0}, Lcom/android/server/am/ActiveServices;->getFgsTimeLimitedInfo(II)Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 15
    .line 16
    .line 17
    move-result-object v0

    .line 18
    if-eqz v0, :cond_1

    .line 19
    .line 20
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 21
    .line 22
    .line 23
    move-result-wide v1

    .line 24
    iget-wide v3, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 25
    .line 26
    iget-wide v5, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 27
    .line 28
    sub-long v5, v1, v5

    .line 29
    .line 30
    add-long/2addr v5, v3

    .line 31
    iput-wide v5, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 32
    .line 33
    iput-wide v1, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 34
    .line 35
    invoke-virtual {v0}, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->decNumParallelServices()V

    .line 36
    .line 37
    .line 38
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 39
    .line 40
    const-string v1, "Stop FGS timeout: "

    .line 41
    .line 42
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 43
    .line 44
    .line 45
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 46
    .line 47
    .line 48
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 49
    .line 50
    .line 51
    move-result-object v0

    .line 52
    const-string v1, "ActivityManager"

    .line 53
    .line 54
    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 55
    .line 56
    .line 57
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 58
    .line 59
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 60
    .line 61
    const/16 v1, 0x54

    .line 62
    .line 63
    invoke-virtual {v0, v1, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 64
    .line 65
    .line 66
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 67
    .line 68
    const/16 v0, 0x55

    .line 69
    .line 70
    invoke-virtual {p0, v0, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 71
    .line 72
    .line 73
    return-void
.end method

.method public final maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 1

    .line 1
    const/4 v0, 0x0

    .line 2
    iput-object v0, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 3
    .line 4
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 5
    .line 6
    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 9
    .line 10
    return-void

    .line 11
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->unscheduleShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 12
    .line 13
    .line 14
    return-void
.end method

.method public final maybeUpdateFgsTrackingLocked(ILcom/android/server/am/ServiceRecord;)V
    .locals 12

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 2
    .line 3
    .line 4
    move-result p1

    .line 5
    if-nez p1, :cond_1

    .line 6
    .line 7
    iget-boolean v0, p2, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 8
    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    iget-boolean v0, p2, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 12
    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget-object v0, p2, Lcom/android/server/am/ServiceRecord;->ams:Lcom/android/server/am/ActivityManagerService;

    .line 16
    .line 17
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 18
    .line 19
    iget v1, p2, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 20
    .line 21
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    if-eqz v0, :cond_0

    .line 26
    .line 27
    goto :goto_0

    .line 28
    :cond_0
    return-void

    .line 29
    :cond_1
    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 30
    .line 31
    const/16 v1, 0x55

    .line 32
    .line 33
    const/16 v2, 0x54

    .line 34
    .line 35
    if-eqz p1, :cond_4

    .line 36
    .line 37
    iget-object v3, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 38
    .line 39
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 40
    .line 41
    invoke-virtual {p0, v3, p1}, Lcom/android/server/am/ActiveServices;->getFgsTimeLimitedInfo(II)Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 42
    .line 43
    .line 44
    move-result-object p1

    .line 45
    if-eqz p1, :cond_2

    .line 46
    .line 47
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 48
    .line 49
    .line 50
    move-result-wide v3

    .line 51
    iget-wide v5, p1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 52
    .line 53
    iget-wide v7, p1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 54
    .line 55
    sub-long v7, v3, v7

    .line 56
    .line 57
    add-long/2addr v7, v5

    .line 58
    iput-wide v7, p1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 59
    .line 60
    iput-wide v3, p1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 61
    .line 62
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->decNumParallelServices()V

    .line 63
    .line 64
    .line 65
    :cond_2
    iget-boolean p1, p2, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 66
    .line 67
    if-eqz p1, :cond_3

    .line 68
    .line 69
    iget-boolean p1, p2, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 70
    .line 71
    if-eqz p1, :cond_3

    .line 72
    .line 73
    iget-object p1, p2, Lcom/android/server/am/ServiceRecord;->ams:Lcom/android/server/am/ActivityManagerService;

    .line 74
    .line 75
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 76
    .line 77
    iget v3, p2, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 78
    .line 79
    invoke-virtual {p1, v3}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 80
    .line 81
    .line 82
    move-result p1

    .line 83
    if-eqz p1, :cond_3

    .line 84
    .line 85
    goto :goto_1

    .line 86
    :cond_3
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 87
    .line 88
    invoke-virtual {p0, v2, p2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 89
    .line 90
    .line 91
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 92
    .line 93
    invoke-virtual {p0, v1, p2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 94
    .line 95
    .line 96
    return-void

    .line 97
    :cond_4
    :goto_1
    const-string p1, "FGS start: "

    .line 98
    .line 99
    invoke-static {p1, p2}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 100
    .line 101
    .line 102
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 103
    .line 104
    .line 105
    move-result-wide v3

    .line 106
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 107
    .line 108
    iget-object v5, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 109
    .line 110
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 111
    .line 112
    invoke-virtual {p1, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 113
    .line 114
    .line 115
    move-result-object p1

    .line 116
    check-cast p1, Landroid/util/SparseArray;

    .line 117
    .line 118
    if-nez p1, :cond_5

    .line 119
    .line 120
    new-instance p1, Landroid/util/SparseArray;

    .line 121
    .line 122
    invoke-direct {p1}, Landroid/util/SparseArray;-><init>()V

    .line 123
    .line 124
    .line 125
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 126
    .line 127
    iget-object v6, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 128
    .line 129
    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 130
    .line 131
    invoke-virtual {v5, v6, p1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 132
    .line 133
    .line 134
    :cond_5
    iget v5, p2, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 135
    .line 136
    invoke-virtual {p0, v5}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 137
    .line 138
    .line 139
    move-result v5

    .line 140
    invoke-virtual {p1, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 141
    .line 142
    .line 143
    move-result-object v6

    .line 144
    check-cast v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 145
    .line 146
    const-wide/16 v7, 0x0

    .line 147
    .line 148
    if-nez v6, :cond_6

    .line 149
    .line 150
    new-instance v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 151
    .line 152
    invoke-direct {v6}, Ljava/lang/Object;-><init>()V

    .line 153
    .line 154
    .line 155
    const-wide/high16 v9, -0x8000000000000000L

    .line 156
    .line 157
    iput-wide v9, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTimeLimitExceededAt:J

    .line 158
    .line 159
    iput-wide v7, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 160
    .line 161
    const/4 v9, 0x0

    .line 162
    iput v9, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mNumParallelServices:I

    .line 163
    .line 164
    invoke-virtual {p1, v5, v6}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 165
    .line 166
    .line 167
    :cond_6
    iget p1, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mNumParallelServices:I

    .line 168
    .line 169
    const/4 v9, 0x1

    .line 170
    add-int/2addr p1, v9

    .line 171
    iput p1, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mNumParallelServices:I

    .line 172
    .line 173
    if-ne p1, v9, :cond_7

    .line 174
    .line 175
    iput-wide v3, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartUptime:J

    .line 176
    .line 177
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 178
    .line 179
    .line 180
    move-result-wide v10

    .line 181
    iput-wide v10, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartRealtime:J

    .line 182
    .line 183
    :cond_7
    iput-wide v3, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 184
    .line 185
    iget-object p1, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 186
    .line 187
    invoke-virtual {p1, v2, p2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 188
    .line 189
    .line 190
    iget-object p1, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 191
    .line 192
    invoke-virtual {p1, v1, p2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 193
    .line 194
    .line 195
    iget-object p1, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 196
    .line 197
    invoke-virtual {p1, v2, p2}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 198
    .line 199
    .line 200
    move-result-object p1

    .line 201
    const-wide v1, 0x7fffffffffffffffL

    .line 202
    .line 203
    .line 204
    .line 205
    .line 206
    if-eq v5, v9, :cond_9

    .line 207
    .line 208
    const/16 v3, 0x2000

    .line 209
    .line 210
    if-eq v5, v3, :cond_8

    .line 211
    .line 212
    move-wide v3, v1

    .line 213
    goto :goto_2

    .line 214
    :cond_8
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 215
    .line 216
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 217
    .line 218
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerConstants;->mMediaProcessingFgsTimeoutDuration:J

    .line 219
    .line 220
    goto :goto_2

    .line 221
    :cond_9
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 222
    .line 223
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 224
    .line 225
    iget-wide v3, p0, Lcom/android/server/am/ActivityManagerConstants;->mDataSyncFgsTimeoutDuration:J

    .line 226
    .line 227
    :goto_2
    cmp-long p0, v3, v1

    .line 228
    .line 229
    if-nez p0, :cond_a

    .line 230
    .line 231
    move-wide v3, v1

    .line 232
    goto :goto_3

    .line 233
    :cond_a
    iget-wide v9, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 234
    .line 235
    iget-wide v5, v6, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 236
    .line 237
    sub-long/2addr v3, v5

    .line 238
    invoke-static {v7, v8, v3, v4}, Ljava/lang/Math;->max(JJ)J

    .line 239
    .line 240
    .line 241
    move-result-wide v3

    .line 242
    add-long/2addr v3, v9

    .line 243
    :goto_3
    cmp-long p0, v3, v1

    .line 244
    .line 245
    if-nez p0, :cond_b

    .line 246
    .line 247
    new-instance p0, Ljava/lang/StringBuilder;

    .line 248
    .line 249
    const-string p1, "Couldn\'t calculate timeout for time-limited fgs: "

    .line 250
    .line 251
    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 252
    .line 253
    .line 254
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 255
    .line 256
    .line 257
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 258
    .line 259
    .line 260
    move-result-object p0

    .line 261
    const-string p1, "ActivityManager"

    .line 262
    .line 263
    invoke-static {p1, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 264
    .line 265
    .line 266
    return-void

    .line 267
    :cond_b
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 268
    .line 269
    invoke-virtual {p0, p1, v3, v4}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 270
    .line 271
    .line 272
    return-void
.end method

.method public final maybeUpdateShortFgsTrackingLocked(Lcom/android/server/am/ServiceRecord;Z)V
    .locals 2

    .line 1
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_0

    .line 6
    .line 7
    const/4 p2, 0x0

    .line 8
    iput-object p2, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 9
    .line 10
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->unscheduleShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 11
    .line 12
    .line 13
    return-void

    .line 14
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 15
    .line 16
    if-eqz v0, :cond_1

    .line 17
    .line 18
    const/4 v0, 0x1

    .line 19
    goto :goto_0

    .line 20
    :cond_1
    const/4 v0, 0x0

    .line 21
    :goto_0
    if-nez p2, :cond_3

    .line 22
    .line 23
    if-nez v0, :cond_2

    .line 24
    .line 25
    goto :goto_1

    .line 26
    :cond_2
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getShortFgsInfo()Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 27
    .line 28
    .line 29
    move-result-object p0

    .line 30
    iget-object p1, p0, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->this$0:Lcom/android/server/am/ServiceRecord;

    .line 31
    .line 32
    iget p2, p1, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 33
    .line 34
    iput p2, p0, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->mStartForegroundCount:I

    .line 35
    .line 36
    iget p1, p1, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 37
    .line 38
    iput p1, p0, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->mStartId:I

    .line 39
    .line 40
    goto :goto_2

    .line 41
    :cond_3
    :goto_1
    const-string/jumbo p2, "short FGS start/extend: "

    .line 42
    .line 43
    .line 44
    invoke-static {p2, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 45
    .line 46
    .line 47
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 48
    .line 49
    .line 50
    move-result-wide v0

    .line 51
    new-instance p2, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 52
    .line 53
    invoke-direct {p2, p1, v0, v1}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;-><init>(Lcom/android/server/am/ServiceRecord;J)V

    .line 54
    .line 55
    .line 56
    iput-object p2, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 57
    .line 58
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->unscheduleShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 59
    .line 60
    .line 61
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 62
    .line 63
    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 64
    .line 65
    const/16 v0, 0x4c

    .line 66
    .line 67
    invoke-virtual {p2, v0, p1}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 68
    .line 69
    .line 70
    move-result-object p2

    .line 71
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 72
    .line 73
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getShortFgsInfo()Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 74
    .line 75
    .line 76
    move-result-object p1

    .line 77
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getTimeoutTime()J

    .line 78
    .line 79
    .line 80
    move-result-wide v0

    .line 81
    invoke-virtual {p0, p2, v0, v1}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 82
    .line 83
    .line 84
    :goto_2
    return-void
.end method

.method public final onFgsCrashTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 14

    .line 1
    const-string v0, "FGS Crashed: "

    .line 2
    .line 3
    const-string v1, "A foreground service of type "

    .line 4
    .line 5
    iget v2, p1, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 6
    .line 7
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 8
    .line 9
    .line 10
    move-result v2

    .line 11
    if-nez v2, :cond_0

    .line 12
    .line 13
    return-void

    .line 14
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 15
    .line 16
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 17
    .line 18
    .line 19
    monitor-enter v3

    .line 20
    :try_start_0
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 21
    .line 22
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 23
    .line 24
    invoke-virtual {p0, v4, v2}, Lcom/android/server/am/ActiveServices;->getFgsTimeLimitedInfo(II)Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 25
    .line 26
    .line 27
    move-result-object v4

    .line 28
    if-eqz v4, :cond_1

    .line 29
    .line 30
    invoke-virtual {v4}, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->decNumParallelServices()V

    .line 31
    .line 32
    .line 33
    goto :goto_0

    .line 34
    :catchall_0
    move-exception p0

    .line 35
    goto :goto_2

    .line 36
    :cond_1
    :goto_0
    new-instance v4, Ljava/lang/StringBuilder;

    .line 37
    .line 38
    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 39
    .line 40
    .line 41
    invoke-static {v2}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 42
    .line 43
    .line 44
    move-result-object v1

    .line 45
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    .line 47
    .line 48
    const-string v1, " did not stop within its timeout: "

    .line 49
    .line 50
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 51
    .line 52
    .line 53
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 54
    .line 55
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 56
    .line 57
    .line 58
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 59
    .line 60
    .line 61
    move-result-object v10

    .line 62
    invoke-static {}, Landroid/app/Flags;->enableFgsTimeoutCrashBehavior()Z

    .line 63
    .line 64
    .line 65
    move-result v1

    .line 66
    if-eqz v1, :cond_2

    .line 67
    .line 68
    const-string v1, "ActivityManager"

    .line 69
    .line 70
    new-instance v2, Ljava/lang/StringBuilder;

    .line 71
    .line 72
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 73
    .line 74
    .line 75
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 76
    .line 77
    .line 78
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 79
    .line 80
    .line 81
    move-result-object v0

    .line 82
    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 83
    .line 84
    .line 85
    const-string v0, "FGS Crash: "

    .line 86
    .line 87
    invoke-static {v0, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 88
    .line 89
    .line 90
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 91
    .line 92
    if-eqz v0, :cond_3

    .line 93
    .line 94
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 95
    .line 96
    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 97
    .line 98
    iget v7, v0, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 99
    .line 100
    iget-object p0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 101
    .line 102
    iget-object v8, p0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 103
    .line 104
    iget-object p0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 105
    .line 106
    iget v9, p0, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 107
    .line 108
    iget-object p0, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 109
    .line 110
    invoke-static {p0}, Landroid/app/RemoteServiceException$ForegroundServiceDidNotStopInTimeException;->createExtrasForService(Landroid/content/ComponentName;)Landroid/os/Bundle;

    .line 111
    .line 112
    .line 113
    move-result-object v13

    .line 114
    const/4 v11, 0x0

    .line 115
    const/4 v12, 0x7

    .line 116
    invoke-virtual/range {v5 .. v13}, Lcom/android/server/am/ActivityManagerService;->crashApplicationWithTypeWithExtras(IILjava/lang/String;ILjava/lang/String;ZILandroid/os/Bundle;)V

    .line 117
    .line 118
    .line 119
    goto :goto_1

    .line 120
    :cond_2
    const-string p0, "ActivityManager"

    .line 121
    .line 122
    invoke-static {p0, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 123
    .line 124
    .line 125
    :cond_3
    :goto_1
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 126
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 127
    .line 128
    .line 129
    return-void

    .line 130
    :goto_2
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 131
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 132
    .line 133
    .line 134
    throw p0
.end method

.method public final onFgsTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 17

    .line 1
    move-object/from16 v9, p0

    .line 2
    .line 3
    move-object/from16 v10, p1

    .line 4
    .line 5
    const-string v11, "Exception from scheduleTimeoutServiceForType: "

    .line 6
    .line 7
    const-string v0, "FGS ("

    .line 8
    .line 9
    iget-object v12, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 10
    .line 11
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 12
    .line 13
    .line 14
    monitor-enter v12

    .line 15
    :try_start_0
    iget v1, v10, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 16
    .line 17
    invoke-virtual {v9, v1}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 18
    .line 19
    .line 20
    move-result v13

    .line 21
    const/16 v14, 0x55

    .line 22
    .line 23
    if-eqz v13, :cond_8

    .line 24
    .line 25
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 26
    .line 27
    if-nez v1, :cond_0

    .line 28
    .line 29
    goto/16 :goto_4

    .line 30
    .line 31
    :cond_0
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 32
    .line 33
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 34
    .line 35
    const/4 v2, 0x1

    .line 36
    const/4 v3, 0x2

    .line 37
    const/4 v4, 0x0

    .line 38
    if-gt v1, v3, :cond_1

    .line 39
    .line 40
    move v1, v2

    .line 41
    goto :goto_0

    .line 42
    :cond_1
    move v1, v4

    .line 43
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 44
    .line 45
    .line 46
    move-result-wide v5

    .line 47
    if-eqz v1, :cond_2

    .line 48
    .line 49
    move-wide v7, v5

    .line 50
    goto :goto_1

    .line 51
    :cond_2
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 52
    .line 53
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 54
    .line 55
    iget-wide v7, v1, Lcom/android/server/am/ProcessStateRecord;->mLastTopTime:J

    .line 56
    .line 57
    :goto_1
    if-eq v13, v2, :cond_4

    .line 58
    .line 59
    const/16 v1, 0x2000

    .line 60
    .line 61
    if-eq v13, v1, :cond_3

    .line 62
    .line 63
    const-wide v1, 0x7fffffffffffffffL

    .line 64
    .line 65
    .line 66
    .line 67
    .line 68
    goto :goto_2

    .line 69
    :cond_3
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 70
    .line 71
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 72
    .line 73
    iget-wide v1, v1, Lcom/android/server/am/ActivityManagerConstants;->mMediaProcessingFgsTimeoutDuration:J

    .line 74
    .line 75
    goto :goto_2

    .line 76
    :cond_4
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 77
    .line 78
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 79
    .line 80
    iget-wide v1, v1, Lcom/android/server/am/ActivityManagerConstants;->mDataSyncFgsTimeoutDuration:J

    .line 81
    .line 82
    :goto_2
    const-wide/high16 v15, -0x8000000000000000L

    .line 83
    .line 84
    cmp-long v3, v7, v15

    .line 85
    .line 86
    if-eqz v3, :cond_5

    .line 87
    .line 88
    sub-long v15, v5, v7

    .line 89
    .line 90
    cmp-long v3, v1, v15

    .line 91
    .line 92
    if-lez v3, :cond_5

    .line 93
    .line 94
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 95
    .line 96
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 97
    .line 98
    const/16 v3, 0x54

    .line 99
    .line 100
    invoke-virtual {v0, v3, v10}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 101
    .line 102
    .line 103
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 104
    .line 105
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 106
    .line 107
    invoke-virtual {v0, v14, v10}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 108
    .line 109
    .line 110
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 111
    .line 112
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 113
    .line 114
    invoke-virtual {v0, v3, v10}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 115
    .line 116
    .line 117
    move-result-object v0

    .line 118
    iget-object v3, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 119
    .line 120
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 121
    .line 122
    add-long/2addr v7, v1

    .line 123
    invoke-virtual {v3, v0, v7, v8}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 124
    .line 125
    .line 126
    monitor-exit v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 127
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 128
    .line 129
    .line 130
    return-void

    .line 131
    :catchall_0
    move-exception v0

    .line 132
    goto/16 :goto_5

    .line 133
    .line 134
    :cond_5
    :try_start_1
    const-string v1, "ActivityManager"

    .line 135
    .line 136
    new-instance v2, Ljava/lang/StringBuilder;

    .line 137
    .line 138
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 139
    .line 140
    .line 141
    invoke-static {v13}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 142
    .line 143
    .line 144
    move-result-object v0

    .line 145
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 146
    .line 147
    .line 148
    const-string v0, ") timed out: "

    .line 149
    .line 150
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 151
    .line 152
    .line 153
    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 154
    .line 155
    .line 156
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 157
    .line 158
    .line 159
    move-result-object v0

    .line 160
    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 161
    .line 162
    .line 163
    const-string v0, "FGS timed out: "

    .line 164
    .line 165
    invoke-static {v0, v10}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 166
    .line 167
    .line 168
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 169
    .line 170
    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 171
    .line 172
    invoke-virtual {v9, v0, v13}, Lcom/android/server/am/ActiveServices;->getFgsTimeLimitedInfo(II)Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 173
    .line 174
    .line 175
    move-result-object v0

    .line 176
    if-eqz v0, :cond_7

    .line 177
    .line 178
    iget-wide v1, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 179
    .line 180
    iget-wide v7, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 181
    .line 182
    sub-long v7, v5, v7

    .line 183
    .line 184
    add-long/2addr v7, v1

    .line 185
    iput-wide v7, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 186
    .line 187
    iput-wide v5, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 188
    .line 189
    iput-wide v5, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTimeLimitExceededAt:J

    .line 190
    .line 191
    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartUptime:J

    .line 192
    .line 193
    cmp-long v2, v5, v0

    .line 194
    .line 195
    if-lez v2, :cond_6

    .line 196
    .line 197
    sub-long/2addr v5, v0

    .line 198
    long-to-int v0, v5

    .line 199
    move v4, v0

    .line 200
    :cond_6
    const/4 v5, 0x0

    .line 201
    const/4 v6, 0x0

    .line 202
    const/4 v7, 0x0

    .line 203
    const/4 v8, 0x0

    .line 204
    const/4 v3, 0x5

    .line 205
    move-object/from16 v1, p0

    .line 206
    .line 207
    move-object/from16 v2, p1

    .line 208
    .line 209
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 210
    .line 211
    .line 212
    :cond_7
    :try_start_2
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 213
    .line 214
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 215
    .line 216
    iget v1, v10, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 217
    .line 218
    invoke-interface {v0, v10, v1, v13}, Landroid/app/IApplicationThread;->scheduleTimeoutServiceForType(Landroid/os/IBinder;II)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 219
    .line 220
    .line 221
    goto :goto_3

    .line 222
    :catch_0
    move-exception v0

    .line 223
    :try_start_3
    const-string v1, "ActivityManager"

    .line 224
    .line 225
    new-instance v2, Ljava/lang/StringBuilder;

    .line 226
    .line 227
    invoke-direct {v2, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 228
    .line 229
    .line 230
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 231
    .line 232
    .line 233
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 234
    .line 235
    .line 236
    move-result-object v0

    .line 237
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 238
    .line 239
    .line 240
    :goto_3
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 241
    .line 242
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 243
    .line 244
    invoke-virtual {v0, v14, v10}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 245
    .line 246
    .line 247
    move-result-object v0

    .line 248
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 249
    .line 250
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 251
    .line 252
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 253
    .line 254
    iget-wide v3, v1, Lcom/android/server/am/ActivityManagerConstants;->mFgsCrashExtraWaitDuration:J

    .line 255
    .line 256
    invoke-virtual {v2, v0, v3, v4}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 257
    .line 258
    .line 259
    monitor-exit v12
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 260
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 261
    .line 262
    .line 263
    return-void

    .line 264
    :cond_8
    :goto_4
    :try_start_4
    iget-object v0, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 265
    .line 266
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 267
    .line 268
    invoke-virtual {v0, v14, v10}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 269
    .line 270
    .line 271
    monitor-exit v12
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 272
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 273
    .line 274
    .line 275
    return-void

    .line 276
    :goto_5
    :try_start_5
    monitor-exit v12
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 277
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 278
    .line 279
    .line 280
    throw v0
.end method

.method public final onForegroundServiceNotificationUpdateLocked(ZLandroid/app/Notification;ILjava/lang/String;I)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x1

    .line 8
    sub-int/2addr v0, v1

    .line 9
    :goto_0
    const/4 v2, 0x0

    .line 10
    if-ltz v0, :cond_1

    .line 11
    .line 12
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 13
    .line 14
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object v3

    .line 18
    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 19
    .line 20
    iget v4, v3, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 21
    .line 22
    if-ne p5, v4, :cond_0

    .line 23
    .line 24
    iget v4, v3, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 25
    .line 26
    if-ne p3, v4, :cond_0

    .line 27
    .line 28
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 29
    .line 30
    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 31
    .line 32
    invoke-virtual {v4, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 33
    .line 34
    .line 35
    move-result v4

    .line 36
    if-eqz v4, :cond_0

    .line 37
    .line 38
    if-eqz p1, :cond_0

    .line 39
    .line 40
    iput-boolean v1, v3, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 41
    .line 42
    iput-boolean v2, v3, Lcom/android/server/am/ServiceRecord;->mFgsNotificationDeferred:Z

    .line 43
    .line 44
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingFgsNotifications:Ljava/util/ArrayList;

    .line 45
    .line 46
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 47
    .line 48
    .line 49
    :cond_0
    add-int/lit8 v0, v0, -0x1

    .line 50
    .line 51
    goto :goto_0

    .line 52
    :cond_1
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 53
    .line 54
    invoke-virtual {p0, p5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 55
    .line 56
    .line 57
    move-result-object p0

    .line 58
    check-cast p0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 59
    .line 60
    if-eqz p0, :cond_3

    .line 61
    .line 62
    :goto_1
    iget-object p1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 63
    .line 64
    invoke-virtual {p1}, Landroid/util/ArrayMap;->size()I

    .line 65
    .line 66
    .line 67
    move-result p1

    .line 68
    if-ge v2, p1, :cond_3

    .line 69
    .line 70
    iget-object p1, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 71
    .line 72
    invoke-virtual {p1, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 73
    .line 74
    .line 75
    move-result-object p1

    .line 76
    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .line 77
    .line 78
    iget-boolean p5, p1, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 79
    .line 80
    if-eqz p5, :cond_2

    .line 81
    .line 82
    iget p5, p1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 83
    .line 84
    if-ne p3, p5, :cond_2

    .line 85
    .line 86
    iget-object p5, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 87
    .line 88
    iget-object p5, p5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 89
    .line 90
    invoke-virtual {p5, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 91
    .line 92
    .line 93
    move-result p5

    .line 94
    if-eqz p5, :cond_2

    .line 95
    .line 96
    iput-object p2, p1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 97
    .line 98
    :cond_2
    add-int/lit8 v2, v2, 0x1

    .line 99
    .line 100
    goto :goto_1

    .line 101
    :cond_3
    return-void
.end method

.method public final onShortFgsAnrTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 7

    .line 1
    const-string v0, "Short FGS ANR\'ed: "

    .line 2
    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 4
    .line 5
    const-string v2, "A foreground service of FOREGROUND_SERVICE_TYPE_SHORT_SERVICE did not stop within a timeout: "

    .line 6
    .line 7
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 8
    .line 9
    .line 10
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 11
    .line 12
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 13
    .line 14
    .line 15
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 16
    .line 17
    .line 18
    move-result-object v1

    .line 19
    invoke-static {v1}, Lcom/android/internal/os/TimeoutRecord;->forShortFgsTimeout(Ljava/lang/String;)Lcom/android/internal/os/TimeoutRecord;

    .line 20
    .line 21
    .line 22
    move-result-object v1

    .line 23
    iget-object v2, v1, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 24
    .line 25
    invoke-virtual {v2}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockStarted()V

    .line 26
    .line 27
    .line 28
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 29
    .line 30
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 31
    .line 32
    .line 33
    monitor-enter v2

    .line 34
    :try_start_0
    iget-object v3, v1, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 35
    .line 36
    invoke-virtual {v3}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockEnded()V

    .line 37
    .line 38
    .line 39
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 40
    .line 41
    .line 42
    move-result-wide v3

    .line 43
    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 44
    .line 45
    if-nez v5, :cond_0

    .line 46
    .line 47
    const-wide/16 v5, 0x0

    .line 48
    .line 49
    goto :goto_0

    .line 50
    :cond_0
    invoke-virtual {v5}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getAnrTime()J

    .line 51
    .line 52
    .line 53
    move-result-wide v5

    .line 54
    :goto_0
    invoke-virtual {p1, v5, v6, v3, v4}, Lcom/android/server/am/ServiceRecord;->shouldTriggerShortFgsTimedEvent(JJ)Z

    .line 55
    .line 56
    .line 57
    move-result v3

    .line 58
    if-nez v3, :cond_1

    .line 59
    .line 60
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 61
    .line 62
    invoke-virtual {p0}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 63
    .line 64
    .line 65
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 66
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 67
    .line 68
    .line 69
    return-void

    .line 70
    :catchall_0
    move-exception p0

    .line 71
    goto :goto_1

    .line 72
    :cond_1
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 73
    .line 74
    iget-object v3, v3, Lcom/android/server/utils/AnrTimer;->mFeature:Lcom/android/server/utils/AnrTimer$FeatureDisabled;

    .line 75
    .line 76
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 77
    .line 78
    .line 79
    new-instance v3, Ljava/lang/StringBuilder;

    .line 80
    .line 81
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 82
    .line 83
    .line 84
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 85
    .line 86
    .line 87
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 88
    .line 89
    .line 90
    move-result-object v0

    .line 91
    const-string v3, "ActivityManager"

    .line 92
    .line 93
    invoke-static {v3, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 94
    .line 95
    .line 96
    const-string/jumbo v0, "short FGS ANR: "

    .line 97
    .line 98
    .line 99
    invoke-static {v0, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 100
    .line 101
    .line 102
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 103
    .line 104
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 105
    .line 106
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 107
    .line 108
    invoke-virtual {p0, p1, v1}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/internal/os/TimeoutRecord;)V

    .line 109
    .line 110
    .line 111
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 112
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 113
    .line 114
    .line 115
    return-void

    .line 116
    :goto_1
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 117
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 118
    .line 119
    .line 120
    throw p0
.end method

.method public final onShortFgsProcstateTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 6

    .line 1
    const-string v0, "Short FGS procstate demoted: "

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 4
    .line 5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 6
    .line 7
    .line 8
    monitor-enter v1

    .line 9
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 10
    .line 11
    .line 12
    move-result-wide v2

    .line 13
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 14
    .line 15
    if-nez v4, :cond_0

    .line 16
    .line 17
    const-wide/16 v4, 0x0

    .line 18
    .line 19
    goto :goto_0

    .line 20
    :cond_0
    invoke-virtual {v4}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getProcStateDemoteTime()J

    .line 21
    .line 22
    .line 23
    move-result-wide v4

    .line 24
    :goto_0
    invoke-virtual {p1, v4, v5, v2, v3}, Lcom/android/server/am/ServiceRecord;->shouldTriggerShortFgsTimedEvent(JJ)Z

    .line 25
    .line 26
    .line 27
    move-result v2

    .line 28
    if-nez v2, :cond_1

    .line 29
    .line 30
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 31
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 32
    .line 33
    .line 34
    return-void

    .line 35
    :catchall_0
    move-exception p0

    .line 36
    goto :goto_1

    .line 37
    :cond_1
    :try_start_1
    const-string v2, "ActivityManager"

    .line 38
    .line 39
    new-instance v3, Ljava/lang/StringBuilder;

    .line 40
    .line 41
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 42
    .line 43
    .line 44
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 45
    .line 46
    .line 47
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object v0

    .line 51
    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    .line 53
    .line 54
    const-string/jumbo v0, "short FGS demote: "

    .line 55
    .line 56
    .line 57
    invoke-static {v0, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 58
    .line 59
    .line 60
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 61
    .line 62
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 63
    .line 64
    const/16 v0, 0xd

    .line 65
    .line 66
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(ILcom/android/server/am/ProcessRecord;)Z

    .line 67
    .line 68
    .line 69
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 70
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 71
    .line 72
    .line 73
    return-void

    .line 74
    :goto_1
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 75
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 76
    .line 77
    .line 78
    throw p0
.end method

.method public final onShortFgsTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 11

    .line 1
    const-string v0, "Exception from scheduleTimeoutService: "

    .line 2
    .line 3
    const-string v1, "Short FGS timed out: "

    .line 4
    .line 5
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 8
    .line 9
    .line 10
    monitor-enter v2

    .line 11
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 12
    .line 13
    .line 14
    move-result-wide v3

    .line 15
    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 16
    .line 17
    if-nez v5, :cond_0

    .line 18
    .line 19
    const-wide/16 v5, 0x0

    .line 20
    .line 21
    goto :goto_0

    .line 22
    :cond_0
    invoke-virtual {v5}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getTimeoutTime()J

    .line 23
    .line 24
    .line 25
    move-result-wide v5

    .line 26
    :goto_0
    invoke-virtual {p1, v5, v6, v3, v4}, Lcom/android/server/am/ServiceRecord;->shouldTriggerShortFgsTimedEvent(JJ)Z

    .line 27
    .line 28
    .line 29
    move-result v5

    .line 30
    if-nez v5, :cond_1

    .line 31
    .line 32
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 33
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 34
    .line 35
    .line 36
    return-void

    .line 37
    :catchall_0
    move-exception p0

    .line 38
    goto/16 :goto_4

    .line 39
    .line 40
    :cond_1
    :try_start_1
    const-string v5, "ActivityManager"

    .line 41
    .line 42
    new-instance v6, Ljava/lang/StringBuilder;

    .line 43
    .line 44
    invoke-direct {v6, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 45
    .line 46
    .line 47
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 48
    .line 49
    .line 50
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 51
    .line 52
    .line 53
    move-result-object v1

    .line 54
    invoke-static {v5, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 55
    .line 56
    .line 57
    const-string/jumbo v1, "short FGS timeout: "

    .line 58
    .line 59
    .line 60
    invoke-static {v1, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 61
    .line 62
    .line 63
    iget-wide v5, p1, Lcom/android/server/am/ServiceRecord;->mFgsEnterTime:J

    .line 64
    .line 65
    cmp-long v1, v3, v5

    .line 66
    .line 67
    if-lez v1, :cond_2

    .line 68
    .line 69
    sub-long/2addr v3, v5

    .line 70
    long-to-int v1, v3

    .line 71
    :goto_1
    move v6, v1

    .line 72
    goto :goto_2

    .line 73
    :cond_2
    const/4 v1, 0x0

    .line 74
    goto :goto_1

    .line 75
    :goto_2
    const/4 v7, 0x0

    .line 76
    const/4 v8, 0x0

    .line 77
    const/4 v9, 0x0

    .line 78
    const/4 v10, 0x0

    .line 79
    const/4 v5, 0x5

    .line 80
    move-object v3, p0

    .line 81
    move-object v4, p1

    .line 82
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 83
    .line 84
    .line 85
    :try_start_2
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 86
    .line 87
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 88
    .line 89
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getShortFgsInfo()Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 90
    .line 91
    .line 92
    move-result-object v3

    .line 93
    iget v3, v3, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->mStartId:I

    .line 94
    .line 95
    invoke-interface {v1, p1, v3}, Landroid/app/IApplicationThread;->scheduleTimeoutService(Landroid/os/IBinder;I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 96
    .line 97
    .line 98
    goto :goto_3

    .line 99
    :catch_0
    move-exception v1

    .line 100
    :try_start_3
    const-string v3, "ActivityManager"

    .line 101
    .line 102
    new-instance v4, Ljava/lang/StringBuilder;

    .line 103
    .line 104
    invoke-direct {v4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 105
    .line 106
    .line 107
    invoke-virtual {v1}, Landroid/os/RemoteException;->toString()Ljava/lang/String;

    .line 108
    .line 109
    .line 110
    move-result-object v0

    .line 111
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 112
    .line 113
    .line 114
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 115
    .line 116
    .line 117
    move-result-object v0

    .line 118
    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 119
    .line 120
    .line 121
    :goto_3
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 122
    .line 123
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 124
    .line 125
    const/16 v1, 0x4d

    .line 126
    .line 127
    invoke-virtual {v0, v1, p1}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 128
    .line 129
    .line 130
    move-result-object v0

    .line 131
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 132
    .line 133
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 134
    .line 135
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getShortFgsInfo()Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 136
    .line 137
    .line 138
    move-result-object v3

    .line 139
    invoke-virtual {v3}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getProcStateDemoteTime()J

    .line 140
    .line 141
    .line 142
    move-result-wide v3

    .line 143
    invoke-virtual {v1, v0, v3, v4}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 144
    .line 145
    .line 146
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 147
    .line 148
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getShortFgsInfo()Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 149
    .line 150
    .line 151
    move-result-object v0

    .line 152
    invoke-virtual {v0}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getAnrTime()J

    .line 153
    .line 154
    .line 155
    move-result-wide v0

    .line 156
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 157
    .line 158
    .line 159
    move-result-wide v3

    .line 160
    sub-long/2addr v0, v3

    .line 161
    invoke-virtual {p0, v0, v1, p1}, Lcom/android/server/utils/AnrTimer;->start(JLjava/lang/Object;)V

    .line 162
    .line 163
    .line 164
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 165
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 166
    .line 167
    .line 168
    return-void

    .line 169
    :goto_4
    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 170
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 171
    .line 172
    .line 173
    throw p0
.end method

.method public final peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 21

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    iget-object v10, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 4
    .line 5
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 6
    .line 7
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 8
    .line 9
    .line 10
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 11
    .line 12
    .line 13
    move-result v8

    .line 14
    iget-object v1, v10, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 15
    .line 16
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 17
    .line 18
    .line 19
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 20
    .line 21
    .line 22
    move-result v9

    .line 23
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 24
    .line 25
    .line 26
    move-result v19

    .line 27
    const/16 v17, 0x0

    .line 28
    .line 29
    const/16 v18, 0x0

    .line 30
    .line 31
    const/4 v2, 0x0

    .line 32
    const/4 v3, 0x0

    .line 33
    const/4 v4, -0x1

    .line 34
    const/4 v5, 0x0

    .line 35
    const/4 v11, 0x0

    .line 36
    const/4 v12, 0x0

    .line 37
    const/4 v13, 0x0

    .line 38
    const/4 v14, 0x0

    .line 39
    const/4 v15, 0x0

    .line 40
    const/16 v16, 0x0

    .line 41
    .line 42
    move-object/from16 v0, p0

    .line 43
    .line 44
    move-object/from16 v1, p1

    .line 45
    .line 46
    move-object/from16 v6, p2

    .line 47
    .line 48
    move-object/from16 v7, p3

    .line 49
    .line 50
    move-object/from16 v20, v10

    .line 51
    .line 52
    move/from16 v10, v19

    .line 53
    .line 54
    invoke-virtual/range {v0 .. v18}, Lcom/android/server/am/ActiveServices;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    .line 55
    .line 56
    .line 57
    move-result-object v0

    .line 58
    if-eqz v0, :cond_1

    .line 59
    .line 60
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;

    .line 61
    .line 62
    if-eqz v1, :cond_0

    .line 63
    .line 64
    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 65
    .line 66
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 67
    .line 68
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 69
    .line 70
    .line 71
    move-result-object v0

    .line 72
    check-cast v0, Lcom/android/server/am/IntentBindRecord;

    .line 73
    .line 74
    if-eqz v0, :cond_1

    .line 75
    .line 76
    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;

    .line 77
    .line 78
    goto :goto_0

    .line 79
    :cond_0
    new-instance v1, Ljava/lang/SecurityException;

    .line 80
    .line 81
    new-instance v2, Ljava/lang/StringBuilder;

    .line 82
    .line 83
    const-string v3, "Permission Denial: Accessing service from pid="

    .line 84
    .line 85
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 86
    .line 87
    .line 88
    move-object/from16 v3, v20

    .line 89
    .line 90
    iget-object v4, v3, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 91
    .line 92
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 93
    .line 94
    .line 95
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 96
    .line 97
    .line 98
    move-result v4

    .line 99
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 100
    .line 101
    .line 102
    const-string v4, ", uid="

    .line 103
    .line 104
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 105
    .line 106
    .line 107
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 108
    .line 109
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 110
    .line 111
    .line 112
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 113
    .line 114
    .line 115
    move-result v3

    .line 116
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 117
    .line 118
    .line 119
    const-string v3, " requires "

    .line 120
    .line 121
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 122
    .line 123
    .line 124
    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->permission:Ljava/lang/String;

    .line 125
    .line 126
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 127
    .line 128
    .line 129
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 130
    .line 131
    .line 132
    move-result-object v0

    .line 133
    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 134
    .line 135
    .line 136
    throw v1

    .line 137
    :cond_1
    const/4 v0, 0x0

    .line 138
    :goto_0
    return-object v0
.end method

.method public final performRescheduleServiceRestartOnMemoryPressureLocked(JJJLjava/lang/String;)V
    .locals 16

    .line 1
    move-object/from16 v6, p0

    .line 2
    .line 3
    move-wide/from16 v7, p5

    .line 4
    .line 5
    sub-long v0, p3, p1

    .line 6
    .line 7
    const-wide/16 v2, 0x0

    .line 8
    .line 9
    cmp-long v0, v0, v2

    .line 10
    .line 11
    if-nez v0, :cond_0

    .line 12
    .line 13
    return-void

    .line 14
    :cond_0
    iget-object v1, v6, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 15
    .line 16
    if-lez v0, :cond_6

    .line 17
    .line 18
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 19
    .line 20
    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_MIN_RESTART_TIME_BETWEEN:J

    .line 21
    .line 22
    add-long v9, v0, p3

    .line 23
    .line 24
    iget-object v0, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 25
    .line 26
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 27
    .line 28
    .line 29
    move-result v11

    .line 30
    const/4 v12, 0x0

    .line 31
    move-wide v0, v7

    .line 32
    move v13, v12

    .line 33
    :goto_0
    if-ge v13, v11, :cond_7

    .line 34
    .line 35
    iget-object v2, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 36
    .line 37
    invoke-virtual {v2, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 38
    .line 39
    .line 40
    move-result-object v2

    .line 41
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 42
    .line 43
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 44
    .line 45
    iget-object v3, v3, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 46
    .line 47
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 48
    .line 49
    and-int/lit8 v3, v3, 0x8

    .line 50
    .line 51
    if-nez v3, :cond_5

    .line 52
    .line 53
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 54
    .line 55
    iget-object v4, v6, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 56
    .line 57
    invoke-virtual {v4, v3}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 58
    .line 59
    .line 60
    move-result v3

    .line 61
    const/4 v4, 0x1

    .line 62
    xor-int/2addr v3, v4

    .line 63
    if-nez v3, :cond_1

    .line 64
    .line 65
    goto :goto_3

    .line 66
    :cond_1
    cmp-long v3, v0, v7

    .line 67
    .line 68
    if-gtz v3, :cond_2

    .line 69
    .line 70
    iget-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 71
    .line 72
    iget-wide v14, v2, Lcom/android/server/am/ServiceRecord;->mEarliestRestartTime:J

    .line 73
    .line 74
    iget-wide v4, v2, Lcom/android/server/am/ServiceRecord;->mRestartSchedulingTime:J

    .line 75
    .line 76
    add-long v4, v4, p3

    .line 77
    .line 78
    invoke-static {v14, v15, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 79
    .line 80
    .line 81
    move-result-wide v3

    .line 82
    invoke-static {v7, v8, v3, v4}, Ljava/lang/Math;->max(JJ)J

    .line 83
    .line 84
    .line 85
    move-result-wide v3

    .line 86
    iput-wide v3, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 87
    .line 88
    cmp-long v0, v3, v0

    .line 89
    .line 90
    if-eqz v0, :cond_3

    .line 91
    .line 92
    goto :goto_1

    .line 93
    :cond_2
    iget-wide v3, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 94
    .line 95
    sub-long/2addr v3, v0

    .line 96
    cmp-long v3, v3, v9

    .line 97
    .line 98
    if-gez v3, :cond_3

    .line 99
    .line 100
    add-long/2addr v0, v9

    .line 101
    invoke-static {v0, v1, v7, v8}, Ljava/lang/Math;->max(JJ)J

    .line 102
    .line 103
    .line 104
    move-result-wide v0

    .line 105
    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 106
    .line 107
    :goto_1
    const/4 v4, 0x1

    .line 108
    goto :goto_2

    .line 109
    :cond_3
    move v4, v12

    .line 110
    :goto_2
    iget-wide v14, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 111
    .line 112
    sub-long v0, v14, v7

    .line 113
    .line 114
    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 115
    .line 116
    if-eqz v4, :cond_4

    .line 117
    .line 118
    const-string v3, "Rescheduling"

    .line 119
    .line 120
    move-object/from16 v0, p0

    .line 121
    .line 122
    move-object v1, v2

    .line 123
    move-object v2, v3

    .line 124
    move-object/from16 v3, p7

    .line 125
    .line 126
    move-wide/from16 v4, p5

    .line 127
    .line 128
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->performScheduleRestartLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;J)V

    .line 129
    .line 130
    .line 131
    :cond_4
    move-wide v0, v14

    .line 132
    goto :goto_4

    .line 133
    :cond_5
    :goto_3
    iget-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 134
    .line 135
    :goto_4
    add-int/lit8 v13, v13, 0x1

    .line 136
    .line 137
    goto :goto_0

    .line 138
    :cond_6
    if-gez v0, :cond_7

    .line 139
    .line 140
    iget-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 141
    .line 142
    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_MIN_RESTART_TIME_BETWEEN:J

    .line 143
    .line 144
    move-object/from16 v0, p0

    .line 145
    .line 146
    move-wide/from16 v1, p3

    .line 147
    .line 148
    move-wide/from16 v5, p5

    .line 149
    .line 150
    move-object/from16 v7, p7

    .line 151
    .line 152
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActiveServices;->rescheduleServiceRestartIfPossibleLocked(JJJLjava/lang/String;)V

    .line 153
    .line 154
    .line 155
    :cond_7
    return-void
.end method

.method public final performScheduleRestartLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;J)V
    .locals 3

    .line 1
    iget-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 10
    .line 11
    invoke-virtual {v0, p1}, Lcom/android/server/utils/AnrTimer;->cancel(Ljava/lang/Object;)V

    .line 12
    .line 13
    .line 14
    const/4 v0, 0x0

    .line 15
    iput-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 16
    .line 17
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 18
    .line 19
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 20
    .line 21
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 22
    .line 23
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 24
    .line 25
    .line 26
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 27
    .line 28
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 29
    .line 30
    iget-wide v1, p1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 31
    .line 32
    invoke-virtual {p0, v0, v1, v2}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 33
    .line 34
    .line 35
    iget-wide v0, p1, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 36
    .line 37
    add-long/2addr p4, v0

    .line 38
    iput-wide p4, p1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 39
    .line 40
    const-string p0, " restart of crashed service "

    .line 41
    .line 42
    invoke-static {p2, p0}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 43
    .line 44
    .line 45
    move-result-object p0

    .line 46
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 47
    .line 48
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 49
    .line 50
    .line 51
    const-string p2, " in "

    .line 52
    .line 53
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 54
    .line 55
    .line 56
    iget-wide p4, p1, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 57
    .line 58
    invoke-virtual {p0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    const-string/jumbo p2, "ms for "

    .line 62
    .line 63
    .line 64
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 65
    .line 66
    .line 67
    invoke-virtual {p0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 68
    .line 69
    .line 70
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 71
    .line 72
    .line 73
    move-result-object p0

    .line 74
    const-string p2, "ActivityManager"

    .line 75
    .line 76
    invoke-static {p2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    .line 78
    .line 79
    iget p0, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 80
    .line 81
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 82
    .line 83
    .line 84
    move-result-object p0

    .line 85
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 86
    .line 87
    iget-wide p3, p1, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 88
    .line 89
    invoke-static {p3, p4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 90
    .line 91
    .line 92
    move-result-object p1

    .line 93
    filled-new-array {p0, p2, p1}, [Ljava/lang/Object;

    .line 94
    .line 95
    .line 96
    move-result-object p0

    .line 97
    const/16 p1, 0x7553

    .line 98
    .line 99
    invoke-static {p1, p0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 100
    .line 101
    .line 102
    return-void
.end method

.method public final performServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 4
    .line 5
    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result v1

    .line 9
    if-nez v1, :cond_0

    .line 10
    .line 11
    return-void

    .line 12
    :cond_0
    const/4 v1, 0x0

    .line 13
    invoke-static {p1, v1, v1}, Lcom/android/server/am/ActiveServices;->isServiceNeededLocked(Lcom/android/server/am/ServiceRecord;ZZ)Z

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    if-nez v1, :cond_1

    .line 18
    .line 19
    new-instance p0, Ljava/lang/StringBuilder;

    .line 20
    .line 21
    const-string v0, "Restarting service that is not needed: "

    .line 22
    .line 23
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 24
    .line 25
    .line 26
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 27
    .line 28
    .line 29
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 30
    .line 31
    .line 32
    move-result-object p0

    .line 33
    const-string p1, "ActivityManager"

    .line 34
    .line 35
    invoke-static {p1, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 36
    .line 37
    .line 38
    return-void

    .line 39
    :cond_1
    const/4 v1, 0x6

    .line 40
    :try_start_0
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 41
    .line 42
    invoke-virtual {v2}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 43
    .line 44
    .line 45
    move-result-object v2

    .line 46
    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    .line 47
    .line 48
    .line 49
    move-result v5

    .line 50
    iget-boolean v6, p1, Lcom/android/server/am/ServiceRecord;->createdFromFg:Z

    .line 51
    .line 52
    const/4 v8, 0x0

    .line 53
    const/4 v9, 0x0

    .line 54
    const/4 v10, 0x0

    .line 55
    const/4 v7, 0x1

    .line 56
    move-object v3, p0

    .line 57
    move-object v4, p1

    .line 58
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ActiveServices;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;
    :try_end_0
    .catch Landroid/os/TransactionTooLargeException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 59
    .line 60
    .line 61
    :catch_0
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 62
    .line 63
    .line 64
    goto :goto_0

    .line 65
    :catchall_0
    move-exception p0

    .line 66
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 67
    .line 68
    .line 69
    throw p0

    .line 70
    :goto_0
    return-void
.end method

.method public final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    move v2, v1

    .line 9
    :goto_0
    if-ge v1, v0, :cond_4

    .line 10
    .line 11
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 12
    .line 13
    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    move-result-object v3

    .line 17
    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 18
    .line 19
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 20
    .line 21
    const-string/jumbo v5, "com.android.systemui"

    .line 22
    .line 23
    .line 24
    invoke-virtual {v5, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 25
    .line 26
    .line 27
    move-result v4

    .line 28
    const-string v5, "ActivityManager"

    .line 29
    .line 30
    const/4 v6, 0x1

    .line 31
    if-eqz v4, :cond_0

    .line 32
    .line 33
    new-instance v4, Ljava/lang/StringBuilder;

    .line 34
    .line 35
    const-string v7, "Do not bringing down SystemUI services : "

    .line 36
    .line 37
    invoke-direct {v4, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 38
    .line 39
    .line 40
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 41
    .line 42
    .line 43
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 44
    .line 45
    .line 46
    move-result-object v3

    .line 47
    invoke-static {v5, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 48
    .line 49
    .line 50
    new-instance v4, Ljava/lang/StringBuilder;

    .line 51
    .line 52
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 53
    .line 54
    .line 55
    sget-object v5, Lcom/android/server/am/ActiveServices;->DATE_FORMATTER:Ljava/text/SimpleDateFormat;

    .line 56
    .line 57
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 58
    .line 59
    .line 60
    move-result-wide v7

    .line 61
    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 62
    .line 63
    .line 64
    move-result-object v7

    .line 65
    invoke-virtual {v5, v7}, Ljava/text/SimpleDateFormat;->format(Ljava/lang/Object;)Ljava/lang/String;

    .line 66
    .line 67
    .line 68
    move-result-object v5

    .line 69
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 70
    .line 71
    .line 72
    const-string v5, " "

    .line 73
    .line 74
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 75
    .line 76
    .line 77
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 78
    .line 79
    .line 80
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 81
    .line 82
    .line 83
    move-result-object v3

    .line 84
    iget-object v4, p0, Lcom/android/server/am/ActiveServices;->mRevivalServicesMessages:Ljava/util/List;

    .line 85
    .line 86
    check-cast v4, Ljava/util/ArrayList;

    .line 87
    .line 88
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 89
    .line 90
    .line 91
    goto :goto_1

    .line 92
    :cond_0
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 93
    .line 94
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 95
    .line 96
    iget v7, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 97
    .line 98
    if-ne v7, v4, :cond_1

    .line 99
    .line 100
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 101
    .line 102
    iget-object v7, v3, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 103
    .line 104
    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 105
    .line 106
    .line 107
    move-result v4

    .line 108
    if-nez v4, :cond_2

    .line 109
    .line 110
    :cond_1
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 111
    .line 112
    if-ne v4, p1, :cond_3

    .line 113
    .line 114
    :cond_2
    new-instance v0, Ljava/lang/StringBuilder;

    .line 115
    .line 116
    const-string v2, "Forcing bringing down service: "

    .line 117
    .line 118
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 119
    .line 120
    .line 121
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 122
    .line 123
    .line 124
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 125
    .line 126
    .line 127
    move-result-object v0

    .line 128
    invoke-static {v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 129
    .line 130
    .line 131
    const/4 v0, 0x0

    .line 132
    iput-object v0, v3, Lcom/android/server/am/ServiceRecord;->isolationHostProc:Lcom/android/server/am/ProcessRecord;

    .line 133
    .line 134
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 135
    .line 136
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 137
    .line 138
    .line 139
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 140
    .line 141
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 142
    .line 143
    .line 144
    move-result v0

    .line 145
    add-int/lit8 v1, v1, -0x1

    .line 146
    .line 147
    invoke-virtual {p0, v3, v6}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 148
    .line 149
    .line 150
    move v2, v6

    .line 151
    :cond_3
    :goto_1
    add-int/2addr v1, v6

    .line 152
    goto/16 :goto_0

    .line 153
    .line 154
    :cond_4
    if-eqz v2, :cond_5

    .line 155
    .line 156
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 157
    .line 158
    const/16 p1, 0xc

    .line 159
    .line 160
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 161
    .line 162
    .line 163
    :cond_5
    return-void
.end method

.method public final publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 16

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    move-object/from16 v2, p1

    .line 4
    .line 5
    move-object/from16 v3, p3

    .line 6
    .line 7
    iget-object v7, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 8
    .line 9
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 10
    .line 11
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 12
    .line 13
    .line 14
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 15
    .line 16
    .line 17
    move-result-wide v8

    .line 18
    if-eqz v2, :cond_5

    .line 19
    .line 20
    :try_start_0
    new-instance v4, Landroid/content/Intent$FilterComparison;

    .line 21
    .line 22
    move-object/from16 v0, p2

    .line 23
    .line 24
    invoke-direct {v4, v0}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 25
    .line 26
    .line 27
    iget-object v0, v2, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 28
    .line 29
    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 30
    .line 31
    .line 32
    move-result-object v0

    .line 33
    check-cast v0, Lcom/android/server/am/IntentBindRecord;

    .line 34
    .line 35
    const/4 v5, 0x0

    .line 36
    if-eqz v0, :cond_3

    .line 37
    .line 38
    iget-boolean v6, v0, Lcom/android/server/am/IntentBindRecord;->received:Z

    .line 39
    .line 40
    if-nez v6, :cond_3

    .line 41
    .line 42
    iput-object v3, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;

    .line 43
    .line 44
    const/4 v6, 0x1

    .line 45
    iput-boolean v6, v0, Lcom/android/server/am/IntentBindRecord;->requested:Z

    .line 46
    .line 47
    iput-boolean v6, v0, Lcom/android/server/am/IntentBindRecord;->received:Z

    .line 48
    .line 49
    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 50
    .line 51
    invoke-virtual {v10}, Landroid/util/ArrayMap;->size()I

    .line 52
    .line 53
    .line 54
    move-result v0

    .line 55
    sub-int/2addr v0, v6

    .line 56
    move v6, v0

    .line 57
    :goto_0
    if-ltz v6, :cond_3

    .line 58
    .line 59
    invoke-virtual {v10, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 60
    .line 61
    .line 62
    move-result-object v0

    .line 63
    move-object v11, v0

    .line 64
    check-cast v11, Ljava/util/ArrayList;

    .line 65
    .line 66
    move v12, v5

    .line 67
    :goto_1
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    .line 68
    .line 69
    .line 70
    move-result v0

    .line 71
    if-ge v12, v0, :cond_2

    .line 72
    .line 73
    invoke-virtual {v11, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 74
    .line 75
    .line 76
    move-result-object v0

    .line 77
    move-object v13, v0

    .line 78
    check-cast v13, Lcom/android/server/am/ConnectionRecord;

    .line 79
    .line 80
    iget-object v0, v13, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 81
    .line 82
    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 83
    .line 84
    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 85
    .line 86
    invoke-virtual {v4, v0}, Landroid/content/Intent$FilterComparison;->equals(Ljava/lang/Object;)Z

    .line 87
    .line 88
    .line 89
    move-result v0

    .line 90
    if-nez v0, :cond_0

    .line 91
    .line 92
    goto :goto_3

    .line 93
    :cond_0
    iget-object v0, v13, Lcom/android/server/am/ConnectionRecord;->aliasComponent:Landroid/content/ComponentName;

    .line 94
    .line 95
    if-eqz v0, :cond_1

    .line 96
    .line 97
    goto :goto_2

    .line 98
    :cond_1
    iget-object v0, v2, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 99
    .line 100
    :goto_2
    :try_start_1
    iget-object v14, v13, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 101
    .line 102
    invoke-interface {v14, v0, v3, v5}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;Z)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 103
    .line 104
    .line 105
    goto :goto_3

    .line 106
    :catchall_0
    move-exception v0

    .line 107
    goto :goto_5

    .line 108
    :catch_0
    move-exception v0

    .line 109
    :try_start_2
    const-string v14, "ActivityManager"

    .line 110
    .line 111
    new-instance v15, Ljava/lang/StringBuilder;

    .line 112
    .line 113
    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    .line 114
    .line 115
    .line 116
    const-string v5, "Failure sending service "

    .line 117
    .line 118
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 119
    .line 120
    .line 121
    iget-object v5, v2, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 122
    .line 123
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 124
    .line 125
    .line 126
    const-string v5, " to connection "

    .line 127
    .line 128
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 129
    .line 130
    .line 131
    iget-object v5, v13, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 132
    .line 133
    invoke-interface {v5}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 134
    .line 135
    .line 136
    move-result-object v5

    .line 137
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 138
    .line 139
    .line 140
    const-string v5, " (in "

    .line 141
    .line 142
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 143
    .line 144
    .line 145
    iget-object v5, v13, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 146
    .line 147
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 148
    .line 149
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 150
    .line 151
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 152
    .line 153
    .line 154
    const-string v5, ")"

    .line 155
    .line 156
    invoke-virtual {v15, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 157
    .line 158
    .line 159
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 160
    .line 161
    .line 162
    move-result-object v5

    .line 163
    invoke-static {v14, v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 164
    .line 165
    .line 166
    :goto_3
    add-int/lit8 v12, v12, 0x1

    .line 167
    .line 168
    const/4 v5, 0x0

    .line 169
    goto :goto_1

    .line 170
    :cond_2
    add-int/lit8 v6, v6, -0x1

    .line 171
    .line 172
    const/4 v5, 0x0

    .line 173
    goto :goto_0

    .line 174
    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 175
    .line 176
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 177
    .line 178
    .line 179
    move-result v3

    .line 180
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 181
    .line 182
    .line 183
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 184
    .line 185
    .line 186
    move-result v0

    .line 187
    if-eqz v0, :cond_4

    .line 188
    .line 189
    const/16 v0, 0x14

    .line 190
    .line 191
    move v6, v0

    .line 192
    goto :goto_4

    .line 193
    :cond_4
    const/4 v6, 0x0

    .line 194
    :goto_4
    const/4 v4, 0x0

    .line 195
    const/4 v5, 0x0

    .line 196
    move-object/from16 v1, p0

    .line 197
    .line 198
    move-object/from16 v2, p1

    .line 199
    .line 200
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 201
    .line 202
    .line 203
    goto :goto_6

    .line 204
    :goto_5
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 205
    .line 206
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 207
    .line 208
    .line 209
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 210
    .line 211
    .line 212
    throw v0

    .line 213
    :cond_5
    :goto_6
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 214
    .line 215
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 216
    .line 217
    .line 218
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 219
    .line 220
    .line 221
    return-void
.end method

.method public final realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;Landroid/app/IApplicationThread;IZI)V
    .locals 18

    .line 1
    move-object/from16 v7, p0

    .line 2
    .line 3
    move-object/from16 v15, p1

    .line 4
    .line 5
    move-object/from16 v8, p2

    .line 6
    .line 7
    move-object/from16 v0, p3

    .line 8
    .line 9
    const-string v9, "Application dead when creating service "

    .line 10
    .line 11
    if-eqz v0, :cond_e

    .line 12
    .line 13
    invoke-virtual/range {p1 .. p2}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 14
    .line 15
    .line 16
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 17
    .line 18
    .line 19
    move-result-wide v1

    .line 20
    iput-wide v1, v15, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    .line 21
    .line 22
    iput-wide v1, v15, Lcom/android/server/am/ServiceRecord;->restartTime:J

    .line 23
    .line 24
    and-int/lit8 v1, p6, 0x1

    .line 25
    .line 26
    const/4 v14, 0x1

    .line 27
    const/4 v13, 0x0

    .line 28
    if-eqz v1, :cond_0

    .line 29
    .line 30
    move v10, v14

    .line 31
    goto :goto_0

    .line 32
    :cond_0
    move v10, v13

    .line 33
    :goto_0
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 34
    .line 35
    invoke-virtual {v11, v15}, Lcom/android/server/am/ProcessServiceRecord;->startService(Lcom/android/server/am/ServiceRecord;)Z

    .line 36
    .line 37
    .line 38
    move-result v12

    .line 39
    const-string/jumbo v4, "create"

    .line 40
    .line 41
    .line 42
    const/4 v5, 0x0

    .line 43
    move-object/from16 v1, p0

    .line 44
    .line 45
    move-object/from16 v2, p1

    .line 46
    .line 47
    move/from16 v3, p5

    .line 48
    .line 49
    move v6, v10

    .line 50
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 51
    .line 52
    .line 53
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 54
    .line 55
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 56
    .line 57
    const/4 v6, 0x0

    .line 58
    invoke-virtual {v2, v8, v6, v13}, Lcom/android/server/am/ProcessList;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 59
    .line 60
    .line 61
    invoke-virtual {v7, v11, v13}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 62
    .line 63
    .line 64
    if-nez v10, :cond_1

    .line 65
    .line 66
    invoke-virtual {v1, v8}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 67
    .line 68
    .line 69
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    .line 70
    .line 71
    .line 72
    const/4 v2, 0x6

    .line 73
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 74
    .line 75
    .line 76
    :cond_1
    :try_start_0
    iget-object v2, v15, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 77
    .line 78
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 79
    .line 80
    iget-object v3, v15, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 81
    .line 82
    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 83
    .line 84
    .line 85
    move-result-object v3

    .line 86
    iget-object v4, v15, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 87
    .line 88
    invoke-virtual {v4}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 89
    .line 90
    .line 91
    move-result-object v4

    .line 92
    const/16 v5, 0x64

    .line 93
    .line 94
    invoke-static {v5, v2, v3, v4}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;)V

    .line 95
    .line 96
    .line 97
    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 98
    .line 99
    invoke-virtual {v5, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteServiceStartLaunch(ILjava/lang/String;Ljava/lang/String;)V

    .line 100
    .line 101
    .line 102
    iget-object v2, v15, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 103
    .line 104
    iget-object v2, v2, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 105
    .line 106
    invoke-virtual {v1, v2, v14}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 107
    .line 108
    .line 109
    iget-object v2, v15, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 110
    .line 111
    iget-object v3, v8, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;
    :try_end_0
    .catch Landroid/os/DeadObjectException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 112
    .line 113
    :try_start_1
    iget v3, v3, Lcom/android/server/am/ProcessStateRecord;->mRepProcState:I
    :try_end_1
    .catch Landroid/os/DeadObjectException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 114
    .line 115
    :try_start_2
    invoke-interface {v0, v15, v2, v6, v3}, Landroid/app/IApplicationThread;->scheduleCreateService(Landroid/os/IBinder;Landroid/content/pm/ServiceInfo;Landroid/content/res/CompatibilityInfo;I)V

    .line 116
    .line 117
    .line 118
    invoke-virtual {v15, v13}, Lcom/android/server/am/ServiceRecord;->postNotification(Z)V
    :try_end_2
    .catch Landroid/os/DeadObjectException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 119
    .line 120
    .line 121
    iget-boolean v0, v15, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 122
    .line 123
    if-eqz v0, :cond_2

    .line 124
    .line 125
    iput-boolean v14, v11, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 126
    .line 127
    :cond_2
    iget-object v0, v15, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 128
    .line 129
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 130
    .line 131
    .line 132
    move-result v0

    .line 133
    sub-int/2addr v0, v14

    .line 134
    :goto_1
    if-ltz v0, :cond_4

    .line 135
    .line 136
    iget-object v1, v15, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 137
    .line 138
    invoke-virtual {v1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 139
    .line 140
    .line 141
    move-result-object v1

    .line 142
    move-object v3, v1

    .line 143
    check-cast v3, Lcom/android/server/am/IntentBindRecord;

    .line 144
    .line 145
    const/4 v5, 0x0

    .line 146
    move-object/from16 v1, p0

    .line 147
    .line 148
    move-object/from16 v2, p1

    .line 149
    .line 150
    move/from16 v4, p5

    .line 151
    .line 152
    move-object v10, v6

    .line 153
    move/from16 v6, p6

    .line 154
    .line 155
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;ZZI)Z

    .line 156
    .line 157
    .line 158
    move-result v1

    .line 159
    if-nez v1, :cond_3

    .line 160
    .line 161
    goto :goto_2

    .line 162
    :cond_3
    add-int/lit8 v0, v0, -0x1

    .line 163
    .line 164
    move-object v6, v10

    .line 165
    goto :goto_1

    .line 166
    :cond_4
    move-object v10, v6

    .line 167
    :goto_2
    invoke-virtual {v7, v11, v10, v14}, Lcom/android/server/am/ActiveServices;->updateServiceClientActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;Lcom/android/server/am/ConnectionRecord;Z)V

    .line 168
    .line 169
    .line 170
    if-eqz v12, :cond_6

    .line 171
    .line 172
    iget-object v0, v15, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 173
    .line 174
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 175
    .line 176
    .line 177
    move-result v1

    .line 178
    sub-int/2addr v1, v14

    .line 179
    :goto_3
    if-ltz v1, :cond_6

    .line 180
    .line 181
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 182
    .line 183
    .line 184
    move-result-object v2

    .line 185
    check-cast v2, Ljava/util/ArrayList;

    .line 186
    .line 187
    move v3, v13

    .line 188
    :goto_4
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 189
    .line 190
    .line 191
    move-result v4

    .line 192
    if-ge v3, v4, :cond_5

    .line 193
    .line 194
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 195
    .line 196
    .line 197
    move-result-object v4

    .line 198
    check-cast v4, Lcom/android/server/am/ConnectionRecord;

    .line 199
    .line 200
    iget-object v5, v11, Lcom/android/server/am/ProcessServiceRecord;->mBoundClientUids:Landroid/util/ArraySet;

    .line 201
    .line 202
    iget v6, v4, Lcom/android/server/am/ConnectionRecord;->clientUid:I

    .line 203
    .line 204
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 205
    .line 206
    .line 207
    move-result-object v6

    .line 208
    invoke-virtual {v5, v6}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 209
    .line 210
    .line 211
    iget-object v5, v11, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 212
    .line 213
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 214
    .line 215
    iget-wide v8, v4, Lcom/android/server/am/ConnectionRecord;->flags:J

    .line 216
    .line 217
    iget v6, v4, Lcom/android/server/am/ConnectionRecord;->clientUid:I

    .line 218
    .line 219
    iget-object v4, v4, Lcom/android/server/am/ConnectionRecord;->clientPackageName:Ljava/lang/String;

    .line 220
    .line 221
    invoke-virtual {v5, v6, v4, v8, v9}, Lcom/android/server/wm/WindowProcessController;->addBoundClientUid(ILjava/lang/String;J)V

    .line 222
    .line 223
    .line 224
    add-int/lit8 v3, v3, 0x1

    .line 225
    .line 226
    goto :goto_4

    .line 227
    :cond_5
    add-int/lit8 v1, v1, -0x1

    .line 228
    .line 229
    goto :goto_3

    .line 230
    :cond_6
    iget-boolean v0, v15, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 231
    .line 232
    if-eqz v0, :cond_8

    .line 233
    .line 234
    iget-boolean v0, v15, Lcom/android/server/am/ServiceRecord;->callStart:Z

    .line 235
    .line 236
    if-eqz v0, :cond_8

    .line 237
    .line 238
    iget-object v0, v15, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 239
    .line 240
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 241
    .line 242
    .line 243
    move-result v0

    .line 244
    if-nez v0, :cond_8

    .line 245
    .line 246
    iget-object v0, v15, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 247
    .line 248
    new-instance v1, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 249
    .line 250
    iget v2, v15, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 251
    .line 252
    add-int/2addr v2, v14

    .line 253
    iput v2, v15, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 254
    .line 255
    if-ge v2, v14, :cond_7

    .line 256
    .line 257
    iput v14, v15, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 258
    .line 259
    :cond_7
    iget v11, v15, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 260
    .line 261
    const/4 v2, 0x0

    .line 262
    const/4 v3, 0x0

    .line 263
    const/4 v10, 0x0

    .line 264
    const/4 v12, 0x0

    .line 265
    const/4 v4, 0x0

    .line 266
    const/16 v16, 0x0

    .line 267
    .line 268
    const/16 v17, -0x1

    .line 269
    .line 270
    move-object v8, v1

    .line 271
    move-object/from16 v9, p1

    .line 272
    .line 273
    move v6, v13

    .line 274
    move-object v13, v4

    .line 275
    move v4, v14

    .line 276
    move v14, v2

    .line 277
    move-object v5, v15

    .line 278
    move-object v15, v3

    .line 279
    invoke-direct/range {v8 .. v17}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;ILjava/lang/String;Ljava/lang/String;I)V

    .line 280
    .line 281
    .line 282
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 283
    .line 284
    .line 285
    goto :goto_5

    .line 286
    :cond_8
    move v6, v13

    .line 287
    move v4, v14

    .line 288
    move-object v5, v15

    .line 289
    :goto_5
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 290
    .line 291
    .line 292
    move-result v0

    .line 293
    move/from16 v1, p5

    .line 294
    .line 295
    invoke-virtual {v7, v5, v1, v0}, Lcom/android/server/am/ActiveServices;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;ZZ)V

    .line 296
    .line 297
    .line 298
    iget-boolean v0, v5, Lcom/android/server/am/ServiceRecord;->delayed:Z

    .line 299
    .line 300
    if-eqz v0, :cond_9

    .line 301
    .line 302
    iget v0, v5, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 303
    .line 304
    invoke-virtual {v7, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 305
    .line 306
    .line 307
    move-result-object v0

    .line 308
    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayedStartList:Ljava/util/ArrayList;

    .line 309
    .line 310
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 311
    .line 312
    .line 313
    iput-boolean v6, v5, Lcom/android/server/am/ServiceRecord;->delayed:Z

    .line 314
    .line 315
    :cond_9
    iget-boolean v0, v5, Lcom/android/server/am/ServiceRecord;->delayedStop:Z

    .line 316
    .line 317
    if-eqz v0, :cond_a

    .line 318
    .line 319
    iput-boolean v6, v5, Lcom/android/server/am/ServiceRecord;->delayedStop:Z

    .line 320
    .line 321
    iget-boolean v0, v5, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 322
    .line 323
    if-eqz v0, :cond_a

    .line 324
    .line 325
    invoke-virtual {v7, v5, v4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 326
    .line 327
    .line 328
    :cond_a
    return-void

    .line 329
    :catchall_0
    move-exception v0

    .line 330
    move-object v10, v6

    .line 331
    move v6, v13

    .line 332
    move-object v5, v15

    .line 333
    move-object v8, v5

    .line 334
    goto :goto_8

    .line 335
    :catch_0
    move-exception v0

    .line 336
    move-object v10, v6

    .line 337
    move v6, v13

    .line 338
    move-object v5, v15

    .line 339
    goto :goto_7

    .line 340
    :catchall_1
    move-exception v0

    .line 341
    move-object v10, v6

    .line 342
    move v6, v13

    .line 343
    move-object v5, v15

    .line 344
    :goto_6
    move-object v8, v5

    .line 345
    move v13, v6

    .line 346
    goto :goto_8

    .line 347
    :goto_7
    :try_start_3
    const-string v2, "ActivityManager"

    .line 348
    .line 349
    new-instance v3, Ljava/lang/StringBuilder;

    .line 350
    .line 351
    invoke-direct {v3, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 352
    .line 353
    .line 354
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 355
    .line 356
    .line 357
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 358
    .line 359
    .line 360
    move-result-object v3

    .line 361
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 362
    .line 363
    .line 364
    const-string v9, "Died when creating service"

    .line 365
    .line 366
    iget v3, v8, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 367
    .line 368
    iget-object v4, v8, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 369
    .line 370
    const/4 v13, 0x0

    .line 371
    move-object/from16 v2, p2

    .line 372
    .line 373
    move-object v8, v5

    .line 374
    move v5, v13

    .line 375
    move v13, v6

    .line 376
    move-object v6, v9

    .line 377
    :try_start_4
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;ZLjava/lang/String;)V

    .line 378
    .line 379
    .line 380
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 381
    :catchall_2
    move-exception v0

    .line 382
    goto :goto_8

    .line 383
    :catchall_3
    move-exception v0

    .line 384
    goto :goto_6

    .line 385
    :goto_8
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 386
    .line 387
    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 388
    .line 389
    .line 390
    move-result v9

    .line 391
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 392
    .line 393
    .line 394
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 395
    .line 396
    .line 397
    move-result v1

    .line 398
    if-eqz v1, :cond_b

    .line 399
    .line 400
    const/16 v1, 0x13

    .line 401
    .line 402
    move v6, v1

    .line 403
    goto :goto_9

    .line 404
    :cond_b
    move v6, v13

    .line 405
    :goto_9
    const/4 v5, 0x0

    .line 406
    move-object/from16 v1, p0

    .line 407
    .line 408
    move-object/from16 v2, p1

    .line 409
    .line 410
    move v3, v9

    .line 411
    move v4, v9

    .line 412
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 413
    .line 414
    .line 415
    if-eqz v12, :cond_c

    .line 416
    .line 417
    invoke-virtual {v11, v8}, Lcom/android/server/am/ProcessServiceRecord;->stopService(Lcom/android/server/am/ServiceRecord;)V

    .line 418
    .line 419
    .line 420
    invoke-virtual {v8, v10}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 421
    .line 422
    .line 423
    :cond_c
    if-nez v9, :cond_d

    .line 424
    .line 425
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 426
    .line 427
    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 428
    .line 429
    .line 430
    move-result v1

    .line 431
    if-nez v1, :cond_d

    .line 432
    .line 433
    invoke-virtual {v7, v8, v13}, Lcom/android/server/am/ActiveServices;->scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z

    .line 434
    .line 435
    .line 436
    :cond_d
    throw v0

    .line 437
    :cond_e
    new-instance v0, Landroid/os/RemoteException;

    .line 438
    .line 439
    invoke-direct {v0}, Landroid/os/RemoteException;-><init>()V

    .line 440
    .line 441
    .line 442
    throw v0
.end method

.method public final registerAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 3

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 7
    .line 8
    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9
    .line 10
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mFgsAppOpCallbacks:Landroid/util/SparseArray;

    .line 11
    .line 12
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 13
    .line 14
    .line 15
    move-result-object v1

    .line 16
    check-cast v1, Lcom/android/server/am/ActiveServices$AppOpCallback;

    .line 17
    .line 18
    if-nez v1, :cond_1

    .line 19
    .line 20
    new-instance v1, Lcom/android/server/am/ActiveServices$AppOpCallback;

    .line 21
    .line 22
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 23
    .line 24
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 25
    .line 26
    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 27
    .line 28
    .line 29
    move-result-object v2

    .line 30
    invoke-direct {v1, p1, v2}, Lcom/android/server/am/ActiveServices$AppOpCallback;-><init>(Lcom/android/server/am/ProcessRecord;Landroid/app/AppOpsManager;)V

    .line 31
    .line 32
    .line 33
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mFgsAppOpCallbacks:Landroid/util/SparseArray;

    .line 34
    .line 35
    invoke-virtual {p0, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 36
    .line 37
    .line 38
    :cond_1
    iget-boolean p0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mDestroyed:Z

    .line 39
    .line 40
    if-eqz p0, :cond_2

    .line 41
    .line 42
    const-string p0, "ActivityManager"

    .line 43
    .line 44
    const-string p1, "Trying to register on a stale AppOpCallback."

    .line 45
    .line 46
    invoke-static {p0, p1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    .line 48
    .line 49
    goto :goto_0

    .line 50
    :cond_2
    iget p0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mNumFgs:I

    .line 51
    .line 52
    const/4 p1, 0x1

    .line 53
    add-int/2addr p0, p1

    .line 54
    iput p0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mNumFgs:I

    .line 55
    .line 56
    if-ne p0, p1, :cond_3

    .line 57
    .line 58
    iget-object p0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 59
    .line 60
    sget-object p1, Lcom/android/server/am/ActiveServices$AppOpCallback;->LOGGED_AP_OPS:[I

    .line 61
    .line 62
    iget-object v0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mOpNotedCallback:Lcom/android/server/am/ActiveServices$AppOpCallback$1;

    .line 63
    .line 64
    invoke-virtual {p0, p1, v0}, Landroid/app/AppOpsManager;->startWatchingNoted([ILandroid/app/AppOpsManager$OnOpNotedListener;)V

    .line 65
    .line 66
    .line 67
    iget-object p0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 68
    .line 69
    iget-object v0, v1, Lcom/android/server/am/ActiveServices$AppOpCallback;->mOpStartedCallback:Lcom/android/server/am/ActiveServices$AppOpCallback$2;

    .line 70
    .line 71
    invoke-virtual {p0, p1, v0}, Landroid/app/AppOpsManager;->startWatchingStarted([ILandroid/app/AppOpsManager$OnOpStartedListener;)V

    .line 72
    .line 73
    .line 74
    :cond_3
    :goto_0
    return-void
.end method

.method public final registerForegroundServiceObserverLocked(ILandroid/app/IForegroundServiceObserver;)Z
    .locals 10

    .line 1
    const/4 v0, 0x0

    .line 2
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 3
    .line 4
    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    .line 5
    .line 6
    .line 7
    move-result v1

    .line 8
    move v2, v0

    .line 9
    :goto_0
    const/4 v3, 0x1

    .line 10
    if-ge v2, v1, :cond_2

    .line 11
    .line 12
    iget-object v4, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 13
    .line 14
    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object v4

    .line 18
    check-cast v4, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 19
    .line 20
    if-eqz v4, :cond_1

    .line 21
    .line 22
    iget-object v5, v4, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 23
    .line 24
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    .line 25
    .line 26
    .line 27
    move-result v5

    .line 28
    move v6, v0

    .line 29
    :goto_1
    if-ge v6, v5, :cond_1

    .line 30
    .line 31
    iget-object v7, v4, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 32
    .line 33
    invoke-virtual {v7, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 34
    .line 35
    .line 36
    move-result-object v7

    .line 37
    check-cast v7, Lcom/android/server/am/ServiceRecord;

    .line 38
    .line 39
    iget-boolean v8, v7, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 40
    .line 41
    if-eqz v8, :cond_0

    .line 42
    .line 43
    iget-object v8, v7, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 44
    .line 45
    iget v9, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 46
    .line 47
    if-ne p1, v9, :cond_0

    .line 48
    .line 49
    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 50
    .line 51
    iget v9, v7, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 52
    .line 53
    invoke-interface {p2, v7, v8, v9, v3}, Landroid/app/IForegroundServiceObserver;->onForegroundStateChanged(Landroid/os/IBinder;Ljava/lang/String;IZ)V

    .line 54
    .line 55
    .line 56
    :cond_0
    add-int/lit8 v6, v6, 0x1

    .line 57
    .line 58
    goto :goto_1

    .line 59
    :cond_1
    add-int/lit8 v2, v2, 0x1

    .line 60
    .line 61
    goto :goto_0

    .line 62
    :cond_2
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mFgsObservers:Landroid/os/RemoteCallbackList;

    .line 63
    .line 64
    invoke-virtual {p0, p2}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 65
    .line 66
    .line 67
    return v3

    .line 68
    :catch_0
    const-string p0, "Bad FGS observer from uid "

    .line 69
    .line 70
    const-string p2, "ActivityManager"

    .line 71
    .line 72
    invoke-static {p1, p0, p2}, Lcom/android/server/NandswapManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 73
    .line 74
    .line 75
    return v0
.end method

.method public final removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/wm/ActivityServiceConnectionsHolder;Z)I
    .locals 11

    .line 1
    const/4 v0, 0x1

    .line 2
    iget-object v1, p1, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;

    .line 3
    .line 4
    invoke-interface {v1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 5
    .line 6
    .line 7
    move-result-object v1

    .line 8
    iget-object v2, p1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 9
    .line 10
    iget-object v9, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 11
    .line 12
    const-string/jumbo v3, "unbind"

    .line 13
    .line 14
    .line 15
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 16
    .line 17
    const/4 v10, 0x0

    .line 18
    if-eqz v4, :cond_0

    .line 19
    .line 20
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 21
    .line 22
    if-eqz v4, :cond_0

    .line 23
    .line 24
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 25
    .line 26
    if-eqz v4, :cond_0

    .line 27
    .line 28
    sget-boolean v4, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 29
    .line 30
    sget-object v4, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 31
    .line 32
    iget-boolean v5, v4, Lcom/android/server/am/FreecessController;->mIsFreecessEnable:Z

    .line 33
    .line 34
    if-eqz v5, :cond_0

    .line 35
    .line 36
    sget-boolean v5, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 37
    .line 38
    sget-object v5, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 39
    .line 40
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 41
    .line 42
    .line 43
    invoke-static {}, Lcom/android/server/am/MARsPolicyManager;->isChinaPolicyEnabled()Z

    .line 44
    .line 45
    .line 46
    move-result v5

    .line 47
    if-eqz v5, :cond_0

    .line 48
    .line 49
    sget-boolean v5, Lcom/android/server/am/FreecessController;->FEATURE_SERVICE_GUARD:Z

    .line 50
    .line 51
    if-eqz v5, :cond_0

    .line 52
    .line 53
    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 54
    .line 55
    iget v6, v9, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 56
    .line 57
    invoke-virtual {v4, v6, v5}, Lcom/android/server/am/FreecessController;->isFreezedPackage(ILjava/lang/String;)Z

    .line 58
    .line 59
    .line 60
    move-result v4

    .line 61
    if-eqz v4, :cond_0

    .line 62
    .line 63
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 64
    .line 65
    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->clientPackageName:Ljava/lang/String;

    .line 66
    .line 67
    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 68
    .line 69
    .line 70
    move-result v4

    .line 71
    if-nez v4, :cond_1

    .line 72
    .line 73
    const-string/jumbo v3, "externalUnbind"

    .line 74
    .line 75
    .line 76
    :cond_0
    move-object v6, v3

    .line 77
    goto :goto_1

    .line 78
    :cond_1
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 79
    .line 80
    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 81
    .line 82
    iget-boolean v4, v4, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 83
    .line 84
    if-nez v4, :cond_2

    .line 85
    .line 86
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    .line 87
    .line 88
    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 89
    .line 90
    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 91
    .line 92
    .line 93
    move-result v4

    .line 94
    if-nez v4, :cond_2

    .line 95
    .line 96
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 97
    .line 98
    invoke-static {v4}, Lcom/android/server/am/FreecessController;->isMainProcDepend(Lcom/android/server/am/ProcessRecord;)Z

    .line 99
    .line 100
    .line 101
    move-result v4

    .line 102
    if-eqz v4, :cond_0

    .line 103
    .line 104
    :cond_2
    const-string p0, "ActivityManager"

    .line 105
    .line 106
    new-instance v0, Ljava/lang/StringBuilder;

    .line 107
    .line 108
    const-string/jumbo v1, "pendingRemoveConnectionLocked: s="

    .line 109
    .line 110
    .line 111
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 112
    .line 113
    .line 114
    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 115
    .line 116
    .line 117
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 118
    .line 119
    .line 120
    move-result-object v0

    .line 121
    invoke-static {p0, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 122
    .line 123
    .line 124
    iget-object p0, v9, Lcom/android/server/am/ServiceRecord;->pendingRemoveConnections:Ljava/util/ArrayList;

    .line 125
    .line 126
    new-instance v0, Lcom/android/server/am/ServiceRecord$removeConnectionItem;

    .line 127
    .line 128
    invoke-direct {v0, p1, p2, p3, p4}, Lcom/android/server/am/ServiceRecord$removeConnectionItem;-><init>(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/wm/ActivityServiceConnectionsHolder;Z)V

    .line 129
    .line 130
    .line 131
    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 132
    .line 133
    .line 134
    sget-object p0, Lcom/android/server/am/FreecessHandler$FreecessHandlerHolder;->INSTANCE:Lcom/android/server/am/FreecessHandler;

    .line 135
    .line 136
    iget-object p1, p0, Lcom/android/server/am/FreecessHandler;->mHandleAmsLockHandler:Lcom/android/server/am/FreecessHandler$HandleAmsLockHandler;

    .line 137
    .line 138
    if-nez p1, :cond_3

    .line 139
    .line 140
    goto :goto_0

    .line 141
    :cond_3
    const/16 p2, 0x21

    .line 142
    .line 143
    invoke-virtual {p1, p2, v9}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 144
    .line 145
    .line 146
    move-result-object p1

    .line 147
    iget-object p0, p0, Lcom/android/server/am/FreecessHandler;->mHandleAmsLockHandler:Lcom/android/server/am/FreecessHandler$HandleAmsLockHandler;

    .line 148
    .line 149
    invoke-virtual {p0, p1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 150
    .line 151
    .line 152
    :goto_0
    return v10

    .line 153
    :goto_1
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 154
    .line 155
    invoke-virtual {v3, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 156
    .line 157
    .line 158
    move-result-object v3

    .line 159
    check-cast v3, Ljava/util/ArrayList;

    .line 160
    .line 161
    if-eqz v3, :cond_4

    .line 162
    .line 163
    invoke-virtual {v3, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 164
    .line 165
    .line 166
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 167
    .line 168
    .line 169
    move-result v3

    .line 170
    if-nez v3, :cond_4

    .line 171
    .line 172
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 173
    .line 174
    invoke-virtual {v3, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 175
    .line 176
    .line 177
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 178
    .line 179
    if-eqz v3, :cond_4

    .line 180
    .line 181
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 182
    .line 183
    invoke-virtual {v3}, Lcom/android/server/am/ProcessServiceRecord;->updateBoundClientUids()V

    .line 184
    .line 185
    .line 186
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 187
    .line 188
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 189
    .line 190
    invoke-virtual {v3}, Lcom/android/server/am/ProcessServiceRecord;->updateHostingComonentTypeForBindingsLocked()V

    .line 191
    .line 192
    .line 193
    :cond_4
    iget-object v3, v2, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 194
    .line 195
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    .line 196
    .line 197
    .line 198
    move-result v3

    .line 199
    const/16 v4, 0x64

    .line 200
    .line 201
    if-le v3, v4, :cond_5

    .line 202
    .line 203
    const-string v3, "ActivityManager"

    .line 204
    .line 205
    new-instance v4, Ljava/lang/StringBuilder;

    .line 206
    .line 207
    const-string v5, "Too many connections("

    .line 208
    .line 209
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 210
    .line 211
    .line 212
    iget-object v5, v2, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 213
    .line 214
    invoke-virtual {v5}, Landroid/util/ArraySet;->size()I

    .line 215
    .line 216
    .line 217
    move-result v5

    .line 218
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 219
    .line 220
    .line 221
    const-string v5, ") owned by"

    .line 222
    .line 223
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 224
    .line 225
    .line 226
    iget-object v5, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 227
    .line 228
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 229
    .line 230
    .line 231
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 232
    .line 233
    .line 234
    move-result-object v4

    .line 235
    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 236
    .line 237
    .line 238
    :cond_5
    iget-object v3, v2, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 239
    .line 240
    invoke-virtual {v3, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 241
    .line 242
    .line 243
    invoke-virtual {p1}, Lcom/android/server/am/ConnectionRecord;->stopAssociation()V

    .line 244
    .line 245
    .line 246
    iget-object v3, p1, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    .line 247
    .line 248
    if-eqz v3, :cond_7

    .line 249
    .line 250
    if-eq v3, p3, :cond_7

    .line 251
    .line 252
    iget-object p3, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mActivity:Lcom/android/server/wm/ActivityRecord;

    .line 253
    .line 254
    monitor-enter p3

    .line 255
    :try_start_0
    iget-object v3, v3, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mConnections:Landroid/util/ArraySet;

    .line 256
    .line 257
    if-nez v3, :cond_6

    .line 258
    .line 259
    monitor-exit p3

    .line 260
    goto :goto_3

    .line 261
    :catchall_0
    move-exception p0

    .line 262
    goto :goto_2

    .line 263
    :cond_6
    invoke-virtual {v3, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 264
    .line 265
    .line 266
    monitor-exit p3

    .line 267
    goto :goto_3

    .line 268
    :goto_2
    monitor-exit p3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 269
    throw p0

    .line 270
    :cond_7
    :goto_3
    iget-object p3, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 271
    .line 272
    if-eq p3, p2, :cond_18

    .line 273
    .line 274
    iget-object p2, p3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 275
    .line 276
    iget-object p3, p2, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 277
    .line 278
    invoke-virtual {p3, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 279
    .line 280
    .line 281
    iget-object p3, p1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 282
    .line 283
    iget-object v3, p3, Lcom/android/server/am/AppBindRecord;->attributedClient:Lcom/android/server/am/ProcessRecord;

    .line 284
    .line 285
    if-eqz v3, :cond_8

    .line 286
    .line 287
    iget-object p3, p3, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 288
    .line 289
    iget-boolean p3, p3, Lcom/android/server/am/ServiceRecord;->isSdkSandbox:Z

    .line 290
    .line 291
    if-eqz p3, :cond_8

    .line 292
    .line 293
    iget-object p3, v3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 294
    .line 295
    iget-object p3, p3, Lcom/android/server/am/ProcessServiceRecord;->mSdkSandboxConnections:Landroid/util/ArraySet;

    .line 296
    .line 297
    if-eqz p3, :cond_8

    .line 298
    .line 299
    invoke-virtual {p3, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 300
    .line 301
    .line 302
    :cond_8
    const/16 p3, 0x8

    .line 303
    .line 304
    invoke-virtual {p1, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 305
    .line 306
    .line 307
    move-result v3

    .line 308
    if-eqz v3, :cond_b

    .line 309
    .line 310
    iput-boolean v10, p2, Lcom/android/server/am/ProcessServiceRecord;->mHasAboveClient:Z

    .line 311
    .line 312
    iget-object v3, p2, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 313
    .line 314
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    .line 315
    .line 316
    .line 317
    move-result v3

    .line 318
    sub-int/2addr v3, v0

    .line 319
    :goto_4
    if-ltz v3, :cond_b

    .line 320
    .line 321
    iget-object v4, p2, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 322
    .line 323
    invoke-virtual {v4, v3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 324
    .line 325
    .line 326
    move-result-object v4

    .line 327
    check-cast v4, Lcom/android/server/am/ConnectionRecord;

    .line 328
    .line 329
    iget-object v5, v4, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 330
    .line 331
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 332
    .line 333
    iget-object v5, v5, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 334
    .line 335
    if-eqz v5, :cond_9

    .line 336
    .line 337
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 338
    .line 339
    if-ne v5, p2, :cond_9

    .line 340
    .line 341
    goto :goto_5

    .line 342
    :cond_9
    invoke-virtual {v4, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 343
    .line 344
    .line 345
    move-result v4

    .line 346
    if-eqz v4, :cond_a

    .line 347
    .line 348
    iput-boolean v0, p2, Lcom/android/server/am/ProcessServiceRecord;->mHasAboveClient:Z

    .line 349
    .line 350
    goto :goto_6

    .line 351
    :cond_a
    :goto_5
    add-int/lit8 v3, v3, -0x1

    .line 352
    .line 353
    goto :goto_4

    .line 354
    :cond_b
    :goto_6
    const/high16 p3, 0x1000000

    .line 355
    .line 356
    invoke-virtual {p1, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 357
    .line 358
    .line 359
    move-result v3

    .line 360
    if-eqz v3, :cond_f

    .line 361
    .line 362
    iput-boolean v10, v9, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 363
    .line 364
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 365
    .line 366
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    .line 367
    .line 368
    .line 369
    move-result v3

    .line 370
    sub-int/2addr v3, v0

    .line 371
    :goto_7
    if-ltz v3, :cond_e

    .line 372
    .line 373
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 374
    .line 375
    invoke-virtual {v4, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 376
    .line 377
    .line 378
    move-result-object v4

    .line 379
    check-cast v4, Ljava/util/ArrayList;

    .line 380
    .line 381
    move v5, v10

    .line 382
    :goto_8
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 383
    .line 384
    .line 385
    move-result v7

    .line 386
    if-ge v5, v7, :cond_d

    .line 387
    .line 388
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 389
    .line 390
    .line 391
    move-result-object v7

    .line 392
    check-cast v7, Lcom/android/server/am/ConnectionRecord;

    .line 393
    .line 394
    invoke-virtual {v7, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 395
    .line 396
    .line 397
    move-result v7

    .line 398
    if-eqz v7, :cond_c

    .line 399
    .line 400
    iput-boolean v0, v9, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 401
    .line 402
    goto :goto_9

    .line 403
    :cond_c
    add-int/2addr v5, v0

    .line 404
    goto :goto_8

    .line 405
    :cond_d
    add-int/lit8 v3, v3, -0x1

    .line 406
    .line 407
    goto :goto_7

    .line 408
    :cond_e
    :goto_9
    iget-boolean p3, v9, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 409
    .line 410
    if-nez p3, :cond_f

    .line 411
    .line 412
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 413
    .line 414
    if-eqz p3, :cond_f

    .line 415
    .line 416
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 417
    .line 418
    invoke-static {p3}, Lcom/android/server/am/ActiveServices;->updateAllowlistManagerLocked(Lcom/android/server/am/ProcessServiceRecord;)V

    .line 419
    .line 420
    .line 421
    :cond_f
    const/high16 p3, 0x100000

    .line 422
    .line 423
    invoke-virtual {p1, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 424
    .line 425
    .line 426
    move-result v3

    .line 427
    if-eqz v3, :cond_16

    .line 428
    .line 429
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 430
    .line 431
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    .line 432
    .line 433
    .line 434
    move-result v3

    .line 435
    sub-int/2addr v3, v0

    .line 436
    move v4, v10

    .line 437
    :goto_a
    if-ltz v3, :cond_13

    .line 438
    .line 439
    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 440
    .line 441
    invoke-virtual {v5, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 442
    .line 443
    .line 444
    move-result-object v5

    .line 445
    check-cast v5, Ljava/util/ArrayList;

    .line 446
    .line 447
    move v7, v10

    .line 448
    :goto_b
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 449
    .line 450
    .line 451
    move-result v8

    .line 452
    if-ge v7, v8, :cond_11

    .line 453
    .line 454
    invoke-virtual {v5, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 455
    .line 456
    .line 457
    move-result-object v8

    .line 458
    check-cast v8, Lcom/android/server/am/ConnectionRecord;

    .line 459
    .line 460
    invoke-virtual {v8, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 461
    .line 462
    .line 463
    move-result v8

    .line 464
    if-eqz v8, :cond_10

    .line 465
    .line 466
    move v4, v0

    .line 467
    goto :goto_c

    .line 468
    :cond_10
    add-int/2addr v7, v0

    .line 469
    goto :goto_b

    .line 470
    :cond_11
    :goto_c
    if-eqz v4, :cond_12

    .line 471
    .line 472
    goto :goto_d

    .line 473
    :cond_12
    add-int/lit8 v3, v3, -0x1

    .line 474
    .line 475
    goto :goto_a

    .line 476
    :cond_13
    :goto_d
    iput-boolean v4, v9, Lcom/android/server/am/ServiceRecord;->mIsAllowedBgActivityStartsByBinding:Z

    .line 477
    .line 478
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 479
    .line 480
    if-nez p3, :cond_14

    .line 481
    .line 482
    goto :goto_e

    .line 483
    :cond_14
    invoke-virtual {v9}, Lcom/android/server/am/ServiceRecord;->getBackgroundStartPrivilegesWithExclusiveToken()Landroid/app/BackgroundStartPrivileges;

    .line 484
    .line 485
    .line 486
    move-result-object p3

    .line 487
    invoke-virtual {p3}, Landroid/app/BackgroundStartPrivileges;->allowsAny()Z

    .line 488
    .line 489
    .line 490
    move-result v3

    .line 491
    if-eqz v3, :cond_15

    .line 492
    .line 493
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 494
    .line 495
    invoke-virtual {v3, v9, p3}, Lcom/android/server/am/ProcessRecord;->addOrUpdateBackgroundStartPrivileges(Landroid/os/Binder;Landroid/app/BackgroundStartPrivileges;)V

    .line 496
    .line 497
    .line 498
    goto :goto_e

    .line 499
    :cond_15
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 500
    .line 501
    invoke-virtual {p3, v9}, Lcom/android/server/am/ProcessRecord;->removeBackgroundStartPrivileges(Landroid/os/Binder;)V

    .line 502
    .line 503
    .line 504
    :cond_16
    :goto_e
    const/high16 p3, 0x10000

    .line 505
    .line 506
    invoke-virtual {p1, p3}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 507
    .line 508
    .line 509
    move-result p3

    .line 510
    if-eqz p3, :cond_17

    .line 511
    .line 512
    invoke-virtual {p2}, Lcom/android/server/am/ProcessServiceRecord;->updateHasTopStartedAlmostPerceptibleServices()V

    .line 513
    .line 514
    .line 515
    :cond_17
    iget-object p2, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 516
    .line 517
    if-eqz p2, :cond_18

    .line 518
    .line 519
    iget-object p2, p2, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 520
    .line 521
    invoke-virtual {p0, p2, p1, v0}, Lcom/android/server/am/ActiveServices;->updateServiceClientActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;Lcom/android/server/am/ConnectionRecord;Z)V

    .line 522
    .line 523
    .line 524
    :cond_18
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    .line 525
    .line 526
    invoke-virtual {p2, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 527
    .line 528
    .line 529
    move-result-object p2

    .line 530
    check-cast p2, Ljava/util/ArrayList;

    .line 531
    .line 532
    if-eqz p2, :cond_19

    .line 533
    .line 534
    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 535
    .line 536
    .line 537
    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    .line 538
    .line 539
    .line 540
    move-result p2

    .line 541
    if-nez p2, :cond_19

    .line 542
    .line 543
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    .line 544
    .line 545
    invoke-virtual {p2, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 546
    .line 547
    .line 548
    :cond_19
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 549
    .line 550
    iget-object p3, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 551
    .line 552
    iget v1, p3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 553
    .line 554
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 555
    .line 556
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 557
    .line 558
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 559
    .line 560
    iget-object v4, v9, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 561
    .line 562
    invoke-virtual {p2, v4, p3, v1, v3}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(Landroid/content/ComponentName;Ljava/lang/String;II)V

    .line 563
    .line 564
    .line 565
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->connections:Landroid/util/ArraySet;

    .line 566
    .line 567
    invoke-virtual {p2}, Landroid/util/ArraySet;->size()I

    .line 568
    .line 569
    .line 570
    move-result p2

    .line 571
    if-nez p2, :cond_1a

    .line 572
    .line 573
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 574
    .line 575
    iget-object p2, p2, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 576
    .line 577
    iget-object p3, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 578
    .line 579
    invoke-virtual {p2, p3}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 580
    .line 581
    .line 582
    :cond_1a
    iget-boolean p2, p1, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    .line 583
    .line 584
    if-nez p2, :cond_27

    .line 585
    .line 586
    iget-object p2, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 587
    .line 588
    if-eqz p2, :cond_23

    .line 589
    .line 590
    invoke-virtual {p2}, Lcom/android/server/am/ProcessRecord;->isThreadReady()Z

    .line 591
    .line 592
    .line 593
    move-result p2

    .line 594
    if-eqz p2, :cond_23

    .line 595
    .line 596
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 597
    .line 598
    iget-object p2, p2, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 599
    .line 600
    invoke-virtual {p2}, Landroid/util/ArrayMap;->size()I

    .line 601
    .line 602
    .line 603
    move-result p2

    .line 604
    if-nez p2, :cond_23

    .line 605
    .line 606
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 607
    .line 608
    iget-boolean p2, p2, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 609
    .line 610
    if-eqz p2, :cond_23

    .line 611
    .line 612
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 613
    .line 614
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 615
    .line 616
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 617
    .line 618
    .line 619
    if-eqz p2, :cond_1e

    .line 620
    .line 621
    if-eqz p3, :cond_1e

    .line 622
    .line 623
    const/4 v1, 0x7

    .line 624
    if-ne p2, p3, :cond_1b

    .line 625
    .line 626
    goto :goto_11

    .line 627
    :cond_1b
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 628
    .line 629
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 630
    .line 631
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 632
    .line 633
    .line 634
    invoke-static {p2, p3}, Lcom/android/server/am/OomAdjuster;->evaluateConnectionPrelude(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;)Z

    .line 635
    .line 636
    .line 637
    move-result v3

    .line 638
    if-eqz v3, :cond_1c

    .line 639
    .line 640
    goto :goto_10

    .line 641
    :cond_1c
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 642
    .line 643
    iget v3, p3, Lcom/android/server/am/ProcessStateRecord;->mSetAdj:I

    .line 644
    .line 645
    iget-object p2, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 646
    .line 647
    iget v4, p2, Lcom/android/server/am/ProcessStateRecord;->mSetAdj:I

    .line 648
    .line 649
    if-ge v3, v4, :cond_1e

    .line 650
    .line 651
    iget v3, p3, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    .line 652
    .line 653
    iget v4, p2, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    .line 654
    .line 655
    if-ge v3, v4, :cond_1e

    .line 656
    .line 657
    iget p3, p3, Lcom/android/server/am/ProcessStateRecord;->mSetCapability:I

    .line 658
    .line 659
    iget p2, p2, Lcom/android/server/am/ProcessStateRecord;->mSetCapability:I

    .line 660
    .line 661
    and-int/2addr p2, p3

    .line 662
    if-eqz p2, :cond_1f

    .line 663
    .line 664
    iget-wide p2, p1, Lcom/android/server/am/ConnectionRecord;->flags:J

    .line 665
    .line 666
    const-wide v3, 0x100001000L

    .line 667
    .line 668
    .line 669
    .line 670
    .line 671
    and-long/2addr p2, v3

    .line 672
    const-wide/16 v3, 0x0

    .line 673
    .line 674
    cmp-long p2, p2, v3

    .line 675
    .line 676
    if-eqz p2, :cond_1d

    .line 677
    .line 678
    move p2, v0

    .line 679
    goto :goto_f

    .line 680
    :cond_1d
    move p2, v10

    .line 681
    :goto_f
    xor-int/2addr p2, v0

    .line 682
    if-eqz p2, :cond_1e

    .line 683
    .line 684
    goto :goto_11

    .line 685
    :cond_1e
    :goto_10
    move v1, v10

    .line 686
    :cond_1f
    :goto_11
    and-int/lit8 p2, v1, 0x4

    .line 687
    .line 688
    if-eqz p2, :cond_20

    .line 689
    .line 690
    move v8, v0

    .line 691
    goto :goto_12

    .line 692
    :cond_20
    move v8, v10

    .line 693
    :goto_12
    if-eqz v8, :cond_21

    .line 694
    .line 695
    move v7, v10

    .line 696
    goto :goto_13

    .line 697
    :cond_21
    const/4 p2, 0x5

    .line 698
    move v7, p2

    .line 699
    :goto_13
    const/4 v5, 0x0

    .line 700
    move-object v3, p0

    .line 701
    move-object v4, v9

    .line 702
    :try_start_1
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 703
    .line 704
    .line 705
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 706
    .line 707
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 708
    .line 709
    if-eq p2, p3, :cond_22

    .line 710
    .line 711
    const/16 p2, 0x20

    .line 712
    .line 713
    invoke-virtual {p1, p2}, Lcom/android/server/am/ConnectionRecord;->notHasFlag(I)Z

    .line 714
    .line 715
    .line 716
    move-result p2

    .line 717
    if-eqz p2, :cond_22

    .line 718
    .line 719
    iget-object p2, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 720
    .line 721
    iget-object p3, p2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 722
    .line 723
    iget p3, p3, Lcom/android/server/am/ProcessStateRecord;->mSetProcState:I

    .line 724
    .line 725
    const/16 v3, 0xd

    .line 726
    .line 727
    if-gt p3, v3, :cond_22

    .line 728
    .line 729
    iget-object p3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 730
    .line 731
    iget-object p3, p3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 732
    .line 733
    const/4 v3, 0x0

    .line 734
    invoke-virtual {p3, p2, v3, v10}, Lcom/android/server/am/ProcessList;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 735
    .line 736
    .line 737
    goto :goto_14

    .line 738
    :catch_0
    move-exception p2

    .line 739
    goto :goto_15

    .line 740
    :cond_22
    :goto_14
    iget-object p2, v2, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 741
    .line 742
    iput-boolean v10, p2, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 743
    .line 744
    iput-boolean v10, p2, Lcom/android/server/am/IntentBindRecord;->doRebind:Z

    .line 745
    .line 746
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 747
    .line 748
    iget-object p3, p3, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 749
    .line 750
    iget-object p2, p2, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 751
    .line 752
    invoke-virtual {p2}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 753
    .line 754
    .line 755
    move-result-object p2

    .line 756
    invoke-interface {p3, v9, p2}, Landroid/app/IApplicationThread;->scheduleUnbindService(Landroid/os/IBinder;Landroid/content/Intent;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    .line 757
    .line 758
    .line 759
    goto :goto_16

    .line 760
    :goto_15
    const-string p3, "ActivityManager"

    .line 761
    .line 762
    new-instance v2, Ljava/lang/StringBuilder;

    .line 763
    .line 764
    const-string v3, "Exception when unbinding service "

    .line 765
    .line 766
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 767
    .line 768
    .line 769
    iget-object v3, v9, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 770
    .line 771
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 772
    .line 773
    .line 774
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 775
    .line 776
    .line 777
    move-result-object v2

    .line 778
    invoke-static {p3, v2, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 779
    .line 780
    .line 781
    invoke-virtual {p0, v9, p4}, Lcom/android/server/am/ActiveServices;->serviceProcessGoneLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 782
    .line 783
    .line 784
    goto :goto_16

    .line 785
    :cond_23
    move v1, v10

    .line 786
    :goto_16
    iget-object p2, v9, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 787
    .line 788
    invoke-virtual {p2}, Landroid/util/ArrayMap;->isEmpty()Z

    .line 789
    .line 790
    .line 791
    move-result p2

    .line 792
    if-eqz p2, :cond_24

    .line 793
    .line 794
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    .line 795
    .line 796
    invoke-virtual {p2, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 797
    .line 798
    .line 799
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 800
    .line 801
    invoke-virtual {p2, v9}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 802
    .line 803
    .line 804
    :cond_24
    invoke-virtual {p1, v0}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 805
    .line 806
    .line 807
    move-result p1

    .line 808
    if-eqz p1, :cond_26

    .line 809
    .line 810
    invoke-virtual {v9}, Lcom/android/server/am/ServiceRecord;->hasAutoCreateConnections()Z

    .line 811
    .line 812
    .line 813
    move-result p1

    .line 814
    if-nez p1, :cond_25

    .line 815
    .line 816
    iget-object p2, v9, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 817
    .line 818
    if-eqz p2, :cond_25

    .line 819
    .line 820
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 821
    .line 822
    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 823
    .line 824
    iget-object p2, p2, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 825
    .line 826
    monitor-enter p2

    .line 827
    :try_start_2
    iget-object p3, v9, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 828
    .line 829
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 830
    .line 831
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 832
    .line 833
    invoke-virtual {v2}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 834
    .line 835
    .line 836
    move-result v2

    .line 837
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 838
    .line 839
    .line 840
    move-result-wide v3

    .line 841
    invoke-virtual {p3, v10, v2, v3, v4}, Lcom/android/internal/app/procstats/ServiceState;->setBound(ZIJ)V

    .line 842
    .line 843
    .line 844
    monitor-exit p2

    .line 845
    goto :goto_17

    .line 846
    :catchall_1
    move-exception p0

    .line 847
    monitor-exit p2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 848
    throw p0

    .line 849
    :cond_25
    :goto_17
    invoke-virtual {p0, v9, v0, p1, p4}, Lcom/android/server/am/ActiveServices;->bringDownServiceIfNeededLocked(Lcom/android/server/am/ServiceRecord;ZZZ)V

    .line 850
    .line 851
    .line 852
    :cond_26
    move v10, v1

    .line 853
    :cond_27
    return v10
.end method

.method public final requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;ZZI)Z
    .locals 17

    .line 1
    move-object/from16 v7, p0

    .line 2
    .line 3
    move-object/from16 v15, p1

    .line 4
    .line 5
    move-object/from16 v0, p2

    .line 6
    .line 7
    const-string/jumbo v8, "requestServiceBinding="

    .line 8
    .line 9
    .line 10
    iget-object v1, v15, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 11
    .line 12
    const/4 v13, 0x0

    .line 13
    if-eqz v1, :cond_0

    .line 14
    .line 15
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 16
    .line 17
    if-nez v2, :cond_1

    .line 18
    .line 19
    :cond_0
    move v8, v13

    .line 20
    goto/16 :goto_b

    .line 21
    .line 22
    :cond_1
    sget-boolean v2, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 23
    .line 24
    const/4 v3, 0x4

    .line 25
    if-eqz v2, :cond_2

    .line 26
    .line 27
    iget-object v2, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 28
    .line 29
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mOomAdjuster:Lcom/android/server/am/OomAdjuster;

    .line 30
    .line 31
    iget-object v2, v2, Lcom/android/server/am/OomAdjuster;->mCachedAppOptimizer:Lcom/android/server/am/CachedAppOptimizer;

    .line 32
    .line 33
    iget-wide v4, v2, Lcom/android/server/am/CachedAppOptimizer;->mFreezerDebounceTimeout:J

    .line 34
    .line 35
    invoke-virtual {v2, v3, v4, v5, v1}, Lcom/android/server/am/CachedAppOptimizer;->unfreezeTemporarily(IJLcom/android/server/am/ProcessRecord;)V

    .line 36
    .line 37
    .line 38
    :cond_2
    and-int/lit8 v1, p5, 0x2

    .line 39
    .line 40
    const/4 v14, 0x1

    .line 41
    if-eqz v1, :cond_3

    .line 42
    .line 43
    move v6, v14

    .line 44
    goto :goto_0

    .line 45
    :cond_3
    move v6, v13

    .line 46
    :goto_0
    iget-boolean v1, v0, Lcom/android/server/am/IntentBindRecord;->requested:Z

    .line 47
    .line 48
    if-eqz v1, :cond_5

    .line 49
    .line 50
    if-eqz p4, :cond_4

    .line 51
    .line 52
    goto :goto_1

    .line 53
    :cond_4
    move v3, v14

    .line 54
    goto/16 :goto_a

    .line 55
    .line 56
    :cond_5
    :goto_1
    iget-object v1, v0, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 57
    .line 58
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 59
    .line 60
    .line 61
    move-result v1

    .line 62
    if-lez v1, :cond_4

    .line 63
    .line 64
    const/16 v16, 0x5

    .line 65
    .line 66
    :try_start_0
    const-string v4, "bind"
    :try_end_0
    .catch Landroid/os/TransactionTooLargeException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 67
    .line 68
    if-eqz v6, :cond_6

    .line 69
    .line 70
    move v5, v13

    .line 71
    goto :goto_2

    .line 72
    :cond_6
    move v5, v3

    .line 73
    :goto_2
    move-object/from16 v1, p0

    .line 74
    .line 75
    move-object/from16 v2, p1

    .line 76
    .line 77
    move/from16 v3, p3

    .line 78
    .line 79
    :try_start_1
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 80
    .line 81
    .line 82
    const-wide/16 v1, 0x40

    .line 83
    .line 84
    invoke-static {v1, v2}, Landroid/os/Trace;->isTagEnabled(J)Z

    .line 85
    .line 86
    .line 87
    move-result v3
    :try_end_1
    .catch Landroid/os/TransactionTooLargeException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 88
    if-eqz v3, :cond_7

    .line 89
    .line 90
    :try_start_2
    new-instance v3, Ljava/lang/StringBuilder;

    .line 91
    .line 92
    invoke-direct {v3, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 93
    .line 94
    .line 95
    iget-object v4, v0, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 96
    .line 97
    invoke-virtual {v4}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 98
    .line 99
    .line 100
    move-result-object v4

    .line 101
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 102
    .line 103
    .line 104
    const-string v4, ". bindSeq="

    .line 105
    .line 106
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 107
    .line 108
    .line 109
    iget-wide v4, v7, Lcom/android/server/am/ActiveServices;->mBindServiceSeqCounter:J

    .line 110
    .line 111
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 112
    .line 113
    .line 114
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 115
    .line 116
    .line 117
    move-result-object v3

    .line 118
    invoke-static {v1, v2, v3}, Landroid/os/Trace;->instant(JLjava/lang/String;)V
    :try_end_2
    .catch Landroid/os/TransactionTooLargeException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 119
    .line 120
    .line 121
    goto :goto_3

    .line 122
    :catch_0
    move v6, v13

    .line 123
    goto :goto_6

    .line 124
    :catch_1
    move-exception v0

    .line 125
    move v8, v13

    .line 126
    goto :goto_8

    .line 127
    :cond_7
    :goto_3
    :try_start_3
    iget-object v1, v15, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 128
    .line 129
    iget-object v8, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 130
    .line 131
    iget-object v1, v0, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 132
    .line 133
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 134
    .line 135
    .line 136
    move-result-object v10

    .line 137
    iget-object v1, v15, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 138
    .line 139
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 140
    .line 141
    iget v12, v1, Lcom/android/server/am/ProcessStateRecord;->mRepProcState:I

    .line 142
    .line 143
    iget-wide v1, v7, Lcom/android/server/am/ActiveServices;->mBindServiceSeqCounter:J

    .line 144
    .line 145
    const-wide/16 v3, 0x1

    .line 146
    .line 147
    add-long/2addr v3, v1

    .line 148
    iput-wide v3, v7, Lcom/android/server/am/ActiveServices;->mBindServiceSeqCounter:J
    :try_end_3
    .catch Landroid/os/TransactionTooLargeException; {:try_start_3 .. :try_end_3} :catch_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    .line 149
    .line 150
    move-object/from16 v9, p1

    .line 151
    .line 152
    move/from16 v11, p4

    .line 153
    .line 154
    move v6, v13

    .line 155
    move v3, v14

    .line 156
    move-wide v13, v1

    .line 157
    :try_start_4
    invoke-interface/range {v8 .. v14}, Landroid/app/IApplicationThread;->scheduleBindService(Landroid/os/IBinder;Landroid/content/Intent;ZIJ)V

    .line 158
    .line 159
    .line 160
    if-nez p4, :cond_8

    .line 161
    .line 162
    iput-boolean v3, v0, Lcom/android/server/am/IntentBindRecord;->requested:Z

    .line 163
    .line 164
    goto :goto_5

    .line 165
    :catch_2
    move-exception v0

    .line 166
    :goto_4
    move v8, v6

    .line 167
    goto :goto_8

    .line 168
    :cond_8
    :goto_5
    iput-boolean v3, v0, Lcom/android/server/am/IntentBindRecord;->hasBound:Z

    .line 169
    .line 170
    iput-boolean v6, v0, Lcom/android/server/am/IntentBindRecord;->doRebind:Z
    :try_end_4
    .catch Landroid/os/TransactionTooLargeException; {:try_start_4 .. :try_end_4} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_4

    .line 171
    .line 172
    goto :goto_a

    .line 173
    :catch_3
    move-exception v0

    .line 174
    move v6, v13

    .line 175
    goto :goto_4

    .line 176
    :catch_4
    :goto_6
    iget-object v0, v7, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 177
    .line 178
    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 179
    .line 180
    .line 181
    move-result v4

    .line 182
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 183
    .line 184
    .line 185
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 186
    .line 187
    .line 188
    move-result v0

    .line 189
    if-eqz v0, :cond_9

    .line 190
    .line 191
    goto :goto_7

    .line 192
    :cond_9
    move/from16 v16, v6

    .line 193
    .line 194
    :goto_7
    const/4 v5, 0x0

    .line 195
    move-object/from16 v1, p0

    .line 196
    .line 197
    move-object/from16 v2, p1

    .line 198
    .line 199
    move v3, v4

    .line 200
    move v8, v6

    .line 201
    move/from16 v6, v16

    .line 202
    .line 203
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 204
    .line 205
    .line 206
    return v8

    .line 207
    :goto_8
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 208
    .line 209
    invoke-virtual {v1, v15}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 210
    .line 211
    .line 212
    move-result v4

    .line 213
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 214
    .line 215
    .line 216
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 217
    .line 218
    .line 219
    move-result v1

    .line 220
    if-eqz v1, :cond_a

    .line 221
    .line 222
    move/from16 v6, v16

    .line 223
    .line 224
    goto :goto_9

    .line 225
    :cond_a
    move v6, v8

    .line 226
    :goto_9
    const/4 v5, 0x0

    .line 227
    move-object/from16 v1, p0

    .line 228
    .line 229
    move-object/from16 v2, p1

    .line 230
    .line 231
    move v3, v4

    .line 232
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 233
    .line 234
    .line 235
    throw v0

    .line 236
    :goto_a
    return v3

    .line 237
    :goto_b
    return v8
.end method

.method public final requestStartTargetPermissionsReviewIfNeededLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;ILandroid/content/Intent;ZIZLandroid/app/IServiceConnection;)Z
    .locals 24

    .line 1
    move-object/from16 v6, p0

    .line 2
    .line 3
    move-object/from16 v2, p1

    .line 4
    .line 5
    move-object/from16 v3, p5

    .line 6
    .line 7
    iget-object v7, v6, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 8
    .line 9
    invoke-virtual {v7}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    .line 10
    .line 11
    .line 12
    move-result-object v0

    .line 13
    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 14
    .line 15
    iget v4, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 16
    .line 17
    invoke-virtual {v0, v4, v1}, Landroid/content/pm/PackageManagerInternal;->isPermissionsReviewRequired(ILjava/lang/String;)Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    const/4 v1, 0x1

    .line 22
    if-eqz v0, :cond_3

    .line 23
    .line 24
    const/4 v8, 0x0

    .line 25
    if-nez p6, :cond_1

    .line 26
    .line 27
    new-instance v0, Ljava/lang/StringBuilder;

    .line 28
    .line 29
    const-string/jumbo v1, "u"

    .line 30
    .line 31
    .line 32
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 33
    .line 34
    .line 35
    iget v1, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 36
    .line 37
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 38
    .line 39
    .line 40
    if-eqz p8, :cond_0

    .line 41
    .line 42
    const-string v1, " Binding"

    .line 43
    .line 44
    goto :goto_0

    .line 45
    :cond_0
    const-string v1, " Starting"

    .line 46
    .line 47
    :goto_0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 48
    .line 49
    .line 50
    const-string v1, " a service in package"

    .line 51
    .line 52
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 53
    .line 54
    .line 55
    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 56
    .line 57
    const-string v2, " requires a permissions review"

    .line 58
    .line 59
    const-string v3, "ActivityManager"

    .line 60
    .line 61
    invoke-static {v0, v1, v2, v3}, Lcom/android/server/ProfileService$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 62
    .line 63
    .line 64
    return v8

    .line 65
    :cond_1
    const-string v0, "android.intent.action.REVIEW_PERMISSIONS"

    .line 66
    .line 67
    const/high16 v4, 0x18800000

    .line 68
    .line 69
    invoke-static {v4, v0}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Landroid/content/Intent;

    .line 70
    .line 71
    .line 72
    move-result-object v9

    .line 73
    const-string v0, "android.intent.extra.PACKAGE_NAME"

    .line 74
    .line 75
    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 76
    .line 77
    invoke-virtual {v9, v0, v4}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 78
    .line 79
    .line 80
    if-eqz p8, :cond_2

    .line 81
    .line 82
    new-instance v10, Landroid/os/RemoteCallback;

    .line 83
    .line 84
    new-instance v11, Lcom/android/server/am/ActiveServices$2;

    .line 85
    .line 86
    move-object v0, v11

    .line 87
    move-object/from16 v1, p0

    .line 88
    .line 89
    move-object/from16 v2, p1

    .line 90
    .line 91
    move-object/from16 v3, p5

    .line 92
    .line 93
    move/from16 v4, p6

    .line 94
    .line 95
    move-object/from16 v5, p9

    .line 96
    .line 97
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActiveServices$2;-><init>(Lcom/android/server/am/ActiveServices;Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;ZLandroid/app/IServiceConnection;)V

    .line 98
    .line 99
    .line 100
    invoke-direct {v10, v11}, Landroid/os/RemoteCallback;-><init>(Landroid/os/RemoteCallback$OnResultListener;)V

    .line 101
    .line 102
    .line 103
    const-string v0, "android.intent.extra.REMOTE_CALLBACK"

    .line 104
    .line 105
    invoke-virtual {v9, v0, v10}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 106
    .line 107
    .line 108
    goto :goto_1

    .line 109
    :cond_2
    iget-object v11, v7, Lcom/android/server/am/ActivityManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 110
    .line 111
    new-array v0, v1, [Landroid/content/Intent;

    .line 112
    .line 113
    aput-object v3, v0, v8

    .line 114
    .line 115
    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 116
    .line 117
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 118
    .line 119
    .line 120
    move-result-object v1

    .line 121
    invoke-virtual {v3, v1}, Landroid/content/Intent;->resolveType(Landroid/content/ContentResolver;)Ljava/lang/String;

    .line 122
    .line 123
    .line 124
    move-result-object v1

    .line 125
    filled-new-array {v1}, [Ljava/lang/String;

    .line 126
    .line 127
    .line 128
    move-result-object v23

    .line 129
    const/16 v21, 0x0

    .line 130
    .line 131
    const/4 v15, 0x0

    .line 132
    const/4 v12, 0x4

    .line 133
    const/16 v18, 0x0

    .line 134
    .line 135
    const/high16 v16, 0x54000000

    .line 136
    .line 137
    const/16 v17, 0x0

    .line 138
    .line 139
    move/from16 v13, p4

    .line 140
    .line 141
    move/from16 v14, p7

    .line 142
    .line 143
    move-object/from16 v19, p2

    .line 144
    .line 145
    move-object/from16 v20, p3

    .line 146
    .line 147
    move-object/from16 v22, v0

    .line 148
    .line 149
    invoke-virtual/range {v11 .. v23}, Lcom/android/server/am/PendingIntentController;->getIntentSender(IIIIILandroid/os/Bundle;Landroid/os/IBinder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;)Lcom/android/server/am/PendingIntentRecord;

    .line 150
    .line 151
    .line 152
    move-result-object v0

    .line 153
    new-instance v1, Landroid/content/IntentSender;

    .line 154
    .line 155
    invoke-direct {v1, v0}, Landroid/content/IntentSender;-><init>(Landroid/content/IIntentSender;)V

    .line 156
    .line 157
    .line 158
    const-string v0, "android.intent.extra.INTENT"

    .line 159
    .line 160
    invoke-virtual {v9, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 161
    .line 162
    .line 163
    :goto_1
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 164
    .line 165
    new-instance v1, Lcom/android/server/am/ActiveServices$3;

    .line 166
    .line 167
    move/from16 v2, p7

    .line 168
    .line 169
    invoke-direct {v1, v6, v9, v2}, Lcom/android/server/am/ActiveServices$3;-><init>(Lcom/android/server/am/ActiveServices;Landroid/content/Intent;I)V

    .line 170
    .line 171
    .line 172
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 173
    .line 174
    .line 175
    return v8

    .line 176
    :cond_3
    return v1
.end method

.method public final rescheduleServiceRestartIfPossibleLocked(JJJLjava/lang/String;)V
    .locals 19

    .line 1
    move-object/from16 v6, p0

    .line 2
    .line 3
    move-wide/from16 v7, p5

    .line 4
    .line 5
    add-long v9, p1, p3

    .line 6
    .line 7
    const-wide/16 v0, 0x2

    .line 8
    .line 9
    mul-long v11, v9, v0

    .line 10
    .line 11
    iget-object v0, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 12
    .line 13
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 14
    .line 15
    .line 16
    move-result v13

    .line 17
    const/4 v0, -0x1

    .line 18
    const/4 v1, 0x0

    .line 19
    move v14, v1

    .line 20
    move-wide v1, v7

    .line 21
    :goto_0
    if-ge v14, v13, :cond_9

    .line 22
    .line 23
    iget-object v3, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 24
    .line 25
    invoke-virtual {v3, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 26
    .line 27
    .line 28
    move-result-object v3

    .line 29
    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 30
    .line 31
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 32
    .line 33
    iget-object v4, v4, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 34
    .line 35
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 36
    .line 37
    and-int/lit8 v4, v4, 0x8

    .line 38
    .line 39
    if-nez v4, :cond_0

    .line 40
    .line 41
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 42
    .line 43
    iget-object v5, v6, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 44
    .line 45
    invoke-virtual {v5, v4}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 46
    .line 47
    .line 48
    move-result v4

    .line 49
    xor-int/lit8 v4, v4, 0x1

    .line 50
    .line 51
    if-nez v4, :cond_1

    .line 52
    .line 53
    :cond_0
    move-wide/from16 v17, v9

    .line 54
    .line 55
    move-wide v9, v11

    .line 56
    goto/16 :goto_7

    .line 57
    .line 58
    :cond_1
    add-long v4, v1, v9

    .line 59
    .line 60
    move-wide/from16 p3, v11

    .line 61
    .line 62
    iget-wide v11, v3, Lcom/android/server/am/ServiceRecord;->mEarliestRestartTime:J

    .line 63
    .line 64
    cmp-long v15, v4, v11

    .line 65
    .line 66
    if-gtz v15, :cond_3

    .line 67
    .line 68
    if-lez v14, :cond_2

    .line 69
    .line 70
    iget-object v4, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 71
    .line 72
    add-int/lit8 v5, v14, -0x1

    .line 73
    .line 74
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 75
    .line 76
    .line 77
    move-result-object v4

    .line 78
    check-cast v4, Lcom/android/server/am/ServiceRecord;

    .line 79
    .line 80
    iget-wide v4, v4, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 81
    .line 82
    add-long/2addr v4, v9

    .line 83
    goto :goto_1

    .line 84
    :cond_2
    const-wide/16 v4, 0x0

    .line 85
    .line 86
    :goto_1
    invoke-static {v11, v12, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 87
    .line 88
    .line 89
    move-result-wide v4

    .line 90
    invoke-static {v7, v8, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 91
    .line 92
    .line 93
    move-result-wide v4

    .line 94
    iput-wide v4, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 95
    .line 96
    goto :goto_3

    .line 97
    :cond_3
    cmp-long v15, v1, v7

    .line 98
    .line 99
    if-gtz v15, :cond_4

    .line 100
    .line 101
    iget-wide v4, v3, Lcom/android/server/am/ServiceRecord;->mRestartSchedulingTime:J

    .line 102
    .line 103
    add-long v4, v4, p1

    .line 104
    .line 105
    invoke-static {v11, v12, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 106
    .line 107
    .line 108
    move-result-wide v4

    .line 109
    invoke-static {v7, v8, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 110
    .line 111
    .line 112
    move-result-wide v4

    .line 113
    iput-wide v4, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 114
    .line 115
    goto :goto_2

    .line 116
    :cond_4
    invoke-static {v7, v8, v4, v5}, Ljava/lang/Math;->max(JJ)J

    .line 117
    .line 118
    .line 119
    move-result-wide v4

    .line 120
    iput-wide v4, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 121
    .line 122
    :goto_2
    add-int/lit8 v4, v0, 0x1

    .line 123
    .line 124
    if-le v14, v4, :cond_5

    .line 125
    .line 126
    iget-object v5, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 127
    .line 128
    invoke-virtual {v5, v14}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 129
    .line 130
    .line 131
    iget-object v5, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 132
    .line 133
    invoke-virtual {v5, v4, v3}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 134
    .line 135
    .line 136
    :cond_5
    :goto_3
    add-int/lit8 v4, v0, 0x1

    .line 137
    .line 138
    move v11, v0

    .line 139
    move-wide v15, v1

    .line 140
    move v0, v4

    .line 141
    :goto_4
    if-gt v0, v14, :cond_8

    .line 142
    .line 143
    iget-object v1, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 144
    .line 145
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 146
    .line 147
    .line 148
    move-result-object v1

    .line 149
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 150
    .line 151
    iget-wide v4, v1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 152
    .line 153
    if-nez v0, :cond_6

    .line 154
    .line 155
    move-wide/from16 v17, v9

    .line 156
    .line 157
    move-wide v9, v15

    .line 158
    goto :goto_5

    .line 159
    :cond_6
    iget-object v2, v6, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 160
    .line 161
    add-int/lit8 v12, v0, -0x1

    .line 162
    .line 163
    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 164
    .line 165
    .line 166
    move-result-object v2

    .line 167
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 168
    .line 169
    move-wide/from16 v17, v9

    .line 170
    .line 171
    iget-wide v9, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 172
    .line 173
    :goto_5
    sub-long/2addr v4, v9

    .line 174
    move-wide/from16 v9, p3

    .line 175
    .line 176
    cmp-long v2, v4, v9

    .line 177
    .line 178
    if-ltz v2, :cond_7

    .line 179
    .line 180
    goto :goto_6

    .line 181
    :cond_7
    iget-wide v1, v1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 182
    .line 183
    add-int/lit8 v4, v0, 0x1

    .line 184
    .line 185
    move v11, v0

    .line 186
    move-wide v15, v1

    .line 187
    move v0, v4

    .line 188
    move-wide/from16 p3, v9

    .line 189
    .line 190
    move-wide/from16 v9, v17

    .line 191
    .line 192
    goto :goto_4

    .line 193
    :cond_8
    move-wide/from16 v17, v9

    .line 194
    .line 195
    move-wide/from16 v9, p3

    .line 196
    .line 197
    :goto_6
    iget-wide v0, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 198
    .line 199
    sub-long/2addr v0, v7

    .line 200
    iput-wide v0, v3, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 201
    .line 202
    const-string v2, "Rescheduling"

    .line 203
    .line 204
    move-object/from16 v0, p0

    .line 205
    .line 206
    move-object v1, v3

    .line 207
    move-object/from16 v3, p7

    .line 208
    .line 209
    move-wide/from16 v4, p5

    .line 210
    .line 211
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->performScheduleRestartLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;J)V

    .line 212
    .line 213
    .line 214
    move v0, v11

    .line 215
    move-wide v1, v15

    .line 216
    goto :goto_8

    .line 217
    :goto_7
    iget-wide v0, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 218
    .line 219
    move-wide v1, v0

    .line 220
    move v0, v14

    .line 221
    :goto_8
    add-int/lit8 v14, v14, 0x1

    .line 222
    .line 223
    move-wide v11, v9

    .line 224
    move-wide/from16 v9, v17

    .line 225
    .line 226
    goto/16 :goto_0

    .line 227
    .line 228
    :cond_9
    return-void
.end method

.method public final retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;
    .locals 65

    move-object/from16 v0, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p7

    move/from16 v14, p8

    move/from16 v15, p9

    move-object/from16 v9, p15

    .line 1
    const-string v10, " U=0: not found"

    const-string v8, "Unable to resolve service "

    const-string v7, "BIND_EXTERNAL_SERVICE required for "

    const-string v6, "BIND_EXTERNAL_SERVICE failed, could not resolve client package "

    const-string v5, "Can\'t use instance name \'"

    if-eqz p3, :cond_1

    if-eqz v12, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "No instanceName provided for sdk sandbox process"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3
    :cond_1
    :goto_0
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v4, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    if-eqz v13, :cond_2

    .line 4
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    if-eqz v2, :cond_2

    .line 5
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v2

    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v13, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    const/4 v2, 0x3

    :goto_1
    move/from16 v16, v2

    goto :goto_2

    :cond_2
    const/4 v2, 0x1

    goto :goto_1

    .line 6
    :goto_2
    const-string/jumbo v17, "service"

    const/16 v18, 0x0

    move/from16 v2, p8

    move/from16 v3, p9

    move-object/from16 v19, v10

    move-object v10, v4

    move/from16 v4, p10

    move-object v14, v5

    move/from16 v5, v18

    move-object/from16 v20, v6

    move/from16 v6, v16

    move-object/from16 v21, v7

    move-object/from16 v7, v17

    move-object/from16 v22, v8

    move-object/from16 v8, p7

    .line 7
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/UserController;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v1

    .line 8
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v2

    .line 9
    iget-object v3, v10, Lcom/android/server/am/ActivityManagerService;->mComponentAliasResolver:Lcom/android/server/am/ComponentAliasResolver;

    .line 10
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 12
    :try_start_0
    iget-object v3, v3, Lcom/android/server/am/ComponentAliasResolver;->mLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 13
    :try_start_1
    new-instance v6, Lcom/android/server/am/ComponentAliasResolver$Resolution;

    const/4 v7, 0x0

    invoke-direct {v6, v7, v7}, Lcom/android/server/am/ComponentAliasResolver$Resolution;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 14
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 15
    const-string v8, ":"

    if-nez v12, :cond_3

    .line 16
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v3

    move-object v7, v3

    goto :goto_3

    .line 17
    :cond_3
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v3

    if-eqz v3, :cond_43

    .line 18
    new-instance v4, Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 19
    invoke-virtual {v3}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v4, v5, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object v7, v4

    .line 20
    :goto_3
    invoke-static/range {p9 .. p9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-static {v3}, Lcom/samsung/android/app/SemDualAppManager;->isDualAppId(I)Z

    move-result v3

    const/4 v5, 0x0

    if-eqz v3, :cond_5

    if-eqz v7, :cond_4

    .line 21
    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    goto :goto_4

    .line 22
    :cond_4
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v3

    :goto_4
    if-eqz v13, :cond_5

    .line 23
    invoke-virtual {v13, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_5

    .line 24
    invoke-static {v3}, Lcom/android/server/DualAppManagerService;->shouldForwardToOwner(Ljava/lang/String;)Z

    move-result v3

    if-eqz v3, :cond_5

    .line 25
    invoke-virtual {v0, v5}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v2

    move-object v3, v2

    move v4, v5

    goto :goto_5

    :cond_5
    move v4, v1

    move-object v3, v2

    :goto_5
    const/16 v16, 0x0

    if-eqz v7, :cond_6

    .line 26
    iget-object v1, v3, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    invoke-virtual {v1, v7}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ServiceRecord;

    goto :goto_6

    :cond_6
    move-object/from16 v1, v16

    :goto_6
    if-nez v1, :cond_7

    if-nez p13, :cond_7

    if-nez v12, :cond_7

    .line 27
    new-instance v1, Landroid/content/Intent$FilterComparison;

    invoke-direct {v1, v11}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 28
    iget-object v2, v3, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByIntent:Landroid/util/ArrayMap;

    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 29
    :cond_7
    const-string v2, " U="

    move-object/from16 v17, v14

    const-string v14, "ActivityManager"

    const-string v12, "Unable to start service "

    if-eqz v1, :cond_9

    .line 30
    invoke-virtual {v10}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v5

    move-object/from16 v23, v3

    iget-object v3, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    move-object/from16 v24, v7

    const/4 v7, 0x1

    .line 31
    invoke-virtual {v5, v15, v4, v3, v7}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(IILjava/lang/String;Z)Z

    move-result v3

    if-eqz v3, :cond_8

    .line 32
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ": not found ("

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    const-string v2, ","

    const-string v3, ")"

    .line 33
    invoke-static {v15, v1, v2, v3, v0}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v0

    .line 34
    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-object v16

    .line 35
    :cond_8
    iget-object v3, v1, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget v3, v3, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-eqz v3, :cond_a

    iget-object v3, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 36
    invoke-virtual {v13, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_a

    move-object/from16 v25, v16

    goto :goto_7

    :cond_9
    move-object/from16 v23, v3

    move-object/from16 v24, v7

    const/4 v7, 0x1

    :cond_a
    move-object/from16 v25, v1

    .line 37
    :goto_7
    iget-object v5, v6, Lcom/android/server/am/ComponentAliasResolver$Resolution;->source:Ljava/lang/Object;

    iget-object v6, v6, Lcom/android/server/am/ComponentAliasResolver$Resolution;->resolved:Ljava/lang/Object;

    move-object/from16 p10, v12

    const-wide/16 v11, 0x400

    if-nez v25, :cond_f

    if-eqz v9, :cond_f

    .line 38
    new-instance v8, Landroid/content/pm/ServiceInfo;

    invoke-direct {v8}, Landroid/content/pm/ServiceInfo;-><init>()V

    .line 39
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    iget-object v2, v9, Landroid/app/ForegroundServiceDelegationOptions;->mClientPackageName:Ljava/lang/String;

    invoke-interface {v1, v2, v11, v12, v4}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v1
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_8

    :catch_0
    move-object/from16 v1, v16

    :goto_8
    if-eqz v1, :cond_e

    .line 40
    iget v2, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v3, v9, Landroid/app/ForegroundServiceDelegationOptions;->mClientUid:I

    if-ne v2, v3, :cond_d

    .line 41
    iput-object v1, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 42
    iget-object v2, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v2, v8, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 43
    iget v2, v9, Landroid/app/ForegroundServiceDelegationOptions;->mForegroundServiceTypes:I

    iput v2, v8, Landroid/content/pm/ServiceInfo;->mForegroundServiceType:I

    .line 44
    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iput-object v1, v8, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    .line 45
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v10

    .line 46
    invoke-virtual {v10}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v8, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;

    if-eqz p11, :cond_b

    .line 47
    new-instance v11, Landroid/content/Intent$FilterComparison;

    .line 48
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;

    move-result-object v1

    invoke-direct {v11, v1}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 49
    new-instance v12, Lcom/android/server/am/ActiveServices$ServiceRestarter;

    invoke-direct {v12, v0}, Lcom/android/server/am/ActiveServices$ServiceRestarter;-><init>(Lcom/android/server/am/ActiveServices;)V

    const/4 v4, 0x0

    const/4 v7, 0x0

    const/4 v14, 0x0

    const/16 v17, 0x0

    move-object v1, v8

    move-object v2, v10

    move-object/from16 v40, v23

    move-object/from16 v3, p7

    move-object/from16 v23, v5

    move v5, v7

    move-object/from16 v41, v6

    move v6, v14

    move/from16 v7, v17

    .line 50
    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->getProcessNameForService(Landroid/content/pm/ServiceInfo;Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;ZZZ)Ljava/lang/String;

    move-result-object v36

    .line 51
    new-instance v1, Lcom/android/server/am/ServiceRecord;

    iget-object v2, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const/16 v37, -0x1

    const/16 v38, 0x0

    const/16 v39, 0x0

    move-object/from16 v26, v1

    move-object/from16 v27, v0

    move-object/from16 v28, v10

    move-object/from16 v29, v10

    move-object/from16 v30, v3

    move/from16 v31, v2

    move-object/from16 v32, v11

    move-object/from16 v33, v8

    move/from16 v34, p12

    move-object/from16 v35, v12

    invoke-direct/range {v26 .. v39}, Lcom/android/server/am/ServiceRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/ComponentName;Landroid/content/ComponentName;Ljava/lang/String;ILandroid/content/Intent$FilterComparison;Landroid/content/pm/ServiceInfo;ZLcom/android/server/am/ActiveServices$ServiceRestarter;Ljava/lang/String;ILjava/lang/String;Z)V

    .line 52
    iget v0, v9, Landroid/app/ForegroundServiceDelegationOptions;->mClientNotificationId:I

    iput v0, v1, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 53
    iget-object v0, v9, Landroid/app/ForegroundServiceDelegationOptions;->mClientNotification:Landroid/app/Notification;

    iput-object v0, v1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 54
    iput-object v1, v12, Lcom/android/server/am/ActiveServices$ServiceRestarter;->mService:Lcom/android/server/am/ServiceRecord;

    move-object/from16 v9, v40

    .line 55
    iget-object v0, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    invoke-virtual {v0, v10, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 56
    iget-object v0, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByIntent:Landroid/util/ArrayMap;

    invoke-virtual {v0, v11, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 57
    iput-object v13, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallingPackage:Ljava/lang/String;

    .line 58
    iput v15, v1, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    goto :goto_9

    :cond_b
    move-object/from16 v23, v5

    move-object/from16 v41, v6

    move-object/from16 v1, v25

    .line 59
    :goto_9
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v2, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->seInfo:Ljava/lang/String;

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActiveServices;->generateAdditionalSeInfoFromService(Landroid/content/Intent;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    iput-object v0, v2, Landroid/content/pm/ApplicationInfo;->seInfo:Ljava/lang/String;

    .line 60
    new-instance v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    if-eqz v41, :cond_c

    move-object/from16 v16, v23

    :cond_c
    move-object/from16 v2, v16

    check-cast v2, Landroid/content/ComponentName;

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Lcom/android/server/am/ServiceRecord;Landroid/content/ComponentName;)V

    return-object v0

    .line 61
    :cond_d
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "startForegroundServiceDelegate failed, uid:"

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, " does not match clientUid:"

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v1, v9, Landroid/app/ForegroundServiceDelegationOptions;->mClientUid:I

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 62
    :cond_e
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "startForegroundServiceDelegate failed, could not resolve client package "

    .line 63
    invoke-static {v1, v13}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 64
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_f
    move-object/from16 v41, v6

    move-object/from16 v9, v23

    move-object/from16 v23, v5

    .line 65
    const-string v5, " and "

    const-string v6, "Service lookup failed: "

    const-string v3, "association not allowed between packages "

    if-nez v25, :cond_39

    if-eqz p14, :cond_10

    const-wide/32 v26, 0x10800400

    goto :goto_a

    :cond_10
    const-wide/32 v26, 0x10000400

    :goto_a
    if-eqz p18, :cond_11

    const-wide v28, 0x200000000L

    or-long v26, v26, v28

    .line 66
    :cond_11
    :try_start_3
    invoke-virtual {v10}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;

    .line 67
    iget-object v7, v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->this$0:Lcom/android/server/pm/PackageManagerService;

    .line 68
    iget-object v7, v7, Lcom/android/server/pm/PackageManagerService;->mResolveIntentHelper:Lcom/android/server/pm/ResolveIntentHelper;

    .line 69
    iget-object v1, v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->mService:Lcom/android/server/pm/PackageManagerService;

    invoke-virtual {v1}, Lcom/android/server/pm/PackageManagerService;->snapshotComputer()Lcom/android/server/pm/Computer;

    move-result-object v29
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_c

    const/16 v30, 0x1

    move-object v1, v7

    move-object v7, v2

    const/16 v28, 0x1

    move-object/from16 v2, v29

    move-object v11, v3

    move-object/from16 v3, p1

    move v12, v4

    move-object/from16 v4, p6

    move-object/from16 v42, v5

    move-object/from16 v43, v6

    move-wide/from16 v5, v26

    move-object/from16 v44, v7

    move-object/from16 v18, v24

    move v7, v12

    move-object/from16 v45, v8

    move/from16 v8, p9

    move-object/from16 v24, v9

    move/from16 v9, p8

    move-object/from16 v46, v19

    move-object/from16 v19, v11

    move-object v11, v10

    move/from16 v10, v30

    .line 70
    :try_start_4
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/pm/ResolveIntentHelper;->resolveServiceInternal(Lcom/android/server/pm/Computer;Landroid/content/Intent;Ljava/lang/String;JIIIZ)Landroid/content/pm/ResolveInfo;

    move-result-object v1

    if-eqz v1, :cond_12

    .line 71
    iget-object v1, v1, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;

    move-object v7, v1

    goto :goto_e

    :catch_1
    move-object/from16 v12, p1

    :goto_b
    move-object/from16 v63, v19

    :goto_c
    move-object/from16 v61, v42

    :goto_d
    move-object/from16 v62, v43

    goto/16 :goto_20

    :cond_12
    move-object/from16 v7, v16

    :goto_e
    if-nez v7, :cond_13

    .line 72
    new-instance v0, Ljava/lang/StringBuilder;

    move-object/from16 v1, p10

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_1

    move-object/from16 v10, p1

    :try_start_5
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-object/from16 v1, v44

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ": not found"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-object v16

    :catch_2
    move-object v12, v10

    goto :goto_b

    :cond_13
    move-object/from16 v10, p1

    const-wide/16 v8, 0x400

    move-object/from16 v6, p2

    if-eqz v6, :cond_15

    .line 73
    iget v1, v7, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_15

    if-eqz p3, :cond_14

    goto :goto_f

    .line 74
    :cond_14
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    move-object/from16 v2, v17

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "\' with non-isolated non-sdk sandbox service \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v7, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, "\'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_15
    :goto_f
    if-eqz p3, :cond_17

    .line 75
    iget v1, v7, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_16

    goto :goto_10

    .line 76
    :cond_16
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Service cannot be both sdk sandbox and isolated"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 77
    :cond_17
    :goto_10
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v7, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v2, v7, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    if-eqz v18, :cond_18

    move-object/from16 v5, v18

    goto :goto_11

    :cond_18
    move-object v5, v4

    .line 78
    :goto_11
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v7, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 79
    invoke-virtual {v11, v15, v2, v13, v1}, Lcom/android/server/am/ActivityManagerService;->validateAssociationAllowedLocked(IILjava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_19

    .line 80
    new-instance v0, Ljava/lang/StringBuilder;
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_2

    move-object/from16 v3, v19

    :try_start_6
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_6

    move-object/from16 v2, v42

    :try_start_7
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 81
    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 82
    new-instance v1, Ljava/lang/StringBuilder;
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_5

    move-object/from16 v4, v43

    :try_start_8
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v14, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 83
    new-instance v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    invoke-direct {v1, v0}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_3

    return-object v1

    :catch_3
    move-object/from16 v61, v2

    move-object/from16 v63, v3

    move-object/from16 v62, v4

    :catch_4
    :goto_12
    move-object v12, v10

    goto/16 :goto_20

    :catch_5
    move-object/from16 v61, v2

    move-object/from16 v63, v3

    move-object v12, v10

    goto/16 :goto_d

    :catch_6
    move-object/from16 v63, v3

    move-object v12, v10

    goto/16 :goto_c

    :cond_19
    move-object/from16 v3, v19

    move-object/from16 v2, v42

    move-object/from16 v1, v43

    .line 84
    :try_start_9
    iget-object v8, v7, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v9, v8, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 85
    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
    :try_end_9
    .catch Landroid/os/RemoteException; {:try_start_9 .. :try_end_9} :catch_b

    move-object/from16 v43, v1

    .line 86
    :try_start_a
    iget v1, v7, Landroid/content/pm/ServiceInfo;->flags:I
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_5

    and-int/lit8 v17, v1, 0x4

    move-object/from16 p10, v4

    const-string v4, " is not an isolatedProcess"

    move-object/from16 v42, v2

    const-string v2, "BIND_EXTERNAL_SERVICE failed, "

    if-eqz v17, :cond_21

    if-eqz p13, :cond_20

    move-object/from16 v19, v3

    .line 87
    :try_start_b
    iget-boolean v3, v7, Landroid/content/pm/ServiceInfo;->exported:Z

    if-eqz v3, :cond_1f

    if-nez p17, :cond_1e

    and-int/lit8 v1, v1, 0x2

    if-eqz v1, :cond_1d

    .line 88
    invoke-virtual {v11}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_b} :catch_7

    const-wide/16 v17, 0x0

    move-object/from16 v3, v43

    move-object/from16 v61, v42

    move/from16 v2, p9

    move-object/from16 v62, v3

    move-object/from16 v63, v19

    move v3, v12

    move-object/from16 p14, p10

    move-object/from16 p10, v5

    move/from16 v19, v8

    move-object v8, v4

    move-wide/from16 v4, v17

    move-object/from16 v17, v9

    move-object v9, v6

    move-object/from16 v6, p7

    .line 89
    :try_start_c
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->isSameApp(IIJLjava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1c

    .line 90
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    const-wide/16 v2, 0x400

    invoke-interface {v1, v13, v2, v3, v12}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    if-eqz v1, :cond_1b

    .line 91
    new-instance v2, Landroid/content/pm/ServiceInfo;

    invoke-direct {v2, v7}, Landroid/content/pm/ServiceInfo;-><init>(Landroid/content/pm/ServiceInfo;)V

    .line 92
    new-instance v3, Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-direct {v3, v4}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    iput-object v3, v2, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 93
    iget-object v4, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v4, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 94
    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v4, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 95
    new-instance v5, Landroid/content/ComponentName;

    iget-object v3, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual/range {p10 .. p10}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v5, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 96
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    if-nez v9, :cond_1a

    .line 97
    invoke-virtual/range {p14 .. p14}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v3

    goto :goto_13

    .line 98
    :cond_1a
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual/range {p14 .. p14}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v6, v45

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    :goto_13
    invoke-direct {v4, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 99
    invoke-virtual {v10, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    move-object v7, v5

    move-object v5, v4

    goto/16 :goto_14

    .line 100
    :cond_1b
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    move-object/from16 v2, v20

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 101
    :cond_1c
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "BIND_EXTERNAL_SERVICE failed, calling package not owned by calling UID "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :catch_7
    move-object/from16 v63, v19

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    goto/16 :goto_12

    :cond_1d
    move-object/from16 p14, p10

    move-object v8, v4

    move-object/from16 v63, v19

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    .line 102
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    move-object/from16 v3, p14

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1e
    move-object/from16 v63, v19

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    .line 103
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "BIND_PACKAGE_ISOLATED_PROCESS cannot be applied to an external service."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1f
    move-object/from16 v3, p10

    move-object/from16 v63, v19

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    .line 104
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " is not exported"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_20
    move-object/from16 v63, v3

    move-object/from16 p10, v5

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    .line 105
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    move-object/from16 v2, v21

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    move-object/from16 v4, p10

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_21
    move-object/from16 v63, v3

    move/from16 v19, v8

    move-object/from16 v17, v9

    move-object/from16 v61, v42

    move-object/from16 v62, v43

    move-object/from16 v3, p10

    move-object v8, v4

    move-object v4, v5

    move-object v9, v6

    if-nez p13, :cond_38

    move-object v5, v3

    move-object v2, v7

    move-object v7, v4

    :goto_14
    if-eqz p16, :cond_23

    if-nez p17, :cond_22

    goto :goto_15

    .line 106
    :cond_22
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Either BIND_SHARED_ISOLATED_PROCESS or BIND_PACKAGE_ISOLATED_PROCESS should be set. Not both."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_4

    .line 107
    :cond_23
    :goto_15
    const-string v1, "BIND_SHARED_ISOLATED_PROCESS failed, "

    if-nez p16, :cond_24

    if-eqz p17, :cond_25

    .line 108
    :cond_24
    :try_start_d
    iget v3, v2, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_37

    :cond_25
    if-eqz p17, :cond_27

    .line 109
    iget-object v3, v2, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget-object v4, v2, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_26

    goto :goto_16

    .line 110
    :cond_26
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "BIND_PACKAGE_ISOLATED_PROCESS cannot be used for services running in the main app process."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_27
    :goto_16
    if-eqz p16, :cond_2a

    if-eqz v9, :cond_29

    .line 111
    iget v3, v2, Landroid/content/pm/ServiceInfo;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_28

    goto :goto_17

    .line 112
    :cond_28
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " has not set the allowSharedIsolatedProcess  attribute."

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 113
    :cond_29
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "instanceName must be provided for binding a service into a shared isolated process."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2a
    :goto_17
    if-lez v12, :cond_2f

    .line 114
    iget v1, v2, Landroid/content/pm/ServiceInfo;->flags:I

    .line 115
    invoke-static {}, Landroid/multiuser/Flags;->enableSystemUserOnlyForServicesAndProviders()Z

    move-result v3

    if-eqz v3, :cond_2b

    const/high16 v3, 0x20000000

    and-int/2addr v1, v3

    if-eqz v1, :cond_2b

    .line 116
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " is only available for the SYSTEM user, calling userId is: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-object v16

    .line 117
    :cond_2b
    iget-object v1, v2, Landroid/content/pm/ServiceInfo;->processName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;

    iget v6, v2, Landroid/content/pm/ServiceInfo;->flags:I

    invoke-static {v1, v3, v4, v6}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_2d

    iget-object v1, v2, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 118
    invoke-static {v15, v1}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v1

    if-eqz v1, :cond_2d

    const/4 v8, 0x0

    .line 119
    invoke-virtual {v0, v8}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v12

    .line 120
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 121
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20
    :try_end_d
    .catch Landroid/os/RemoteException; {:try_start_d .. :try_end_d} :catch_4

    .line 122
    :try_start_e
    invoke-virtual {v11}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;

    .line 123
    iget-object v2, v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->this$0:Lcom/android/server/pm/PackageManagerService;

    .line 124
    iget-object v2, v2, Lcom/android/server/pm/PackageManagerService;->mResolveIntentHelper:Lcom/android/server/pm/ResolveIntentHelper;

    .line 125
    iget-object v1, v1, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->mService:Lcom/android/server/pm/PackageManagerService;

    invoke-virtual {v1}, Lcom/android/server/pm/PackageManagerService;->snapshotComputer()Lcom/android/server/pm/Computer;

    move-result-object v3
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_1

    const/16 v18, 0x1

    const/16 v24, 0x0

    move-object v1, v2

    move-object v2, v3

    move-object/from16 v3, p1

    move-object/from16 v4, p6

    move-object/from16 p10, v5

    move-wide/from16 v5, v26

    move-object/from16 v64, v7

    move/from16 v7, v24

    move/from16 v8, p9

    move/from16 v9, p8

    move-object/from16 p13, v12

    move-object v12, v10

    move/from16 v10, v18

    .line 126
    :try_start_f
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/pm/ResolveIntentHelper;->resolveServiceInternal(Lcom/android/server/pm/Computer;Landroid/content/Intent;Ljava/lang/String;JIIIZ)Landroid/content/pm/ResolveInfo;

    move-result-object v1

    if-nez v1, :cond_2c

    .line 127
    new-instance v0, Ljava/lang/StringBuilder;

    move-object/from16 v1, v22

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-object/from16 v1, v46

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    .line 128
    :try_start_10
    iget-object v0, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 129
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_10
    .catch Landroid/os/RemoteException; {:try_start_10 .. :try_end_10} :catch_a

    return-object v16

    :catchall_0
    move-exception v0

    goto :goto_18

    .line 130
    :cond_2c
    :try_start_11
    iget-object v2, v1, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    .line 131
    :try_start_12
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 132
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move-object/from16 v3, p13

    move/from16 v4, v24

    goto :goto_19

    :catchall_1
    move-exception v0

    move-object v12, v10

    .line 133
    :goto_18
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 134
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 135
    throw v0

    :cond_2d
    move-object/from16 p10, v5

    move-object/from16 v64, v7

    move v1, v12

    move-object v12, v10

    move v4, v1

    move-object/from16 v3, v24

    .line 136
    :goto_19
    new-instance v1, Landroid/content/pm/ServiceInfo;

    invoke-direct {v1, v2}, Landroid/content/pm/ServiceInfo;-><init>(Landroid/content/pm/ServiceInfo;)V

    .line 137
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    if-nez v2, :cond_2e

    move-object/from16 v5, v16

    goto :goto_1a

    .line 138
    :cond_2e
    new-instance v5, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v5, v2}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 139
    invoke-virtual {v5, v4}, Landroid/content/pm/ApplicationInfo;->initForUser(I)V

    .line 140
    :goto_1a
    iput-object v5, v1, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object v8, v1

    move-object v9, v3

    goto :goto_1b

    :cond_2f
    move-object/from16 p10, v5

    move-object/from16 v64, v7

    move-object v12, v10

    move-object v8, v2

    move-object/from16 v9, v24

    .line 141
    :goto_1b
    iget-object v1, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    move-object/from16 v10, v64

    invoke-virtual {v1, v10}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v18, v1

    check-cast v18, Lcom/android/server/am/ServiceRecord;
    :try_end_12
    .catch Landroid/os/RemoteException; {:try_start_12 .. :try_end_12} :catch_a

    if-nez v18, :cond_36

    if-eqz p11, :cond_36

    .line 142
    :try_start_13
    new-instance v7, Landroid/content/Intent$FilterComparison;

    .line 143
    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;

    move-result-object v1

    invoke-direct {v7, v1}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 144
    new-instance v6, Lcom/android/server/am/ActiveServices$ServiceRestarter;

    invoke-direct {v6, v0}, Lcom/android/server/am/ActiveServices$ServiceRestarter;-><init>(Lcom/android/server/am/ActiveServices;)V

    move-object v1, v8

    move-object v2, v10

    move-object/from16 v3, p7

    move-object/from16 v4, p2

    move/from16 v5, p3

    move-object/from16 p2, v6

    move/from16 v6, p16

    move-object/from16 p3, v7

    move/from16 v7, p17

    .line 145
    invoke-static/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->getProcessNameForService(Landroid/content/pm/ServiceInfo;Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;ZZZ)Ljava/lang/String;

    move-result-object v57

    .line 146
    new-instance v1, Lcom/android/server/am/ServiceRecord;

    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    if-nez p16, :cond_31

    if-eqz p17, :cond_30

    goto :goto_1c

    :cond_30
    const/16 v60, 0x0

    goto :goto_1d

    :cond_31
    :goto_1c
    move/from16 v60, v28

    :goto_1d
    move-object/from16 v47, v1

    move-object/from16 v48, v2

    move-object/from16 v49, p10

    move-object/from16 v50, v10

    move-object/from16 v51, v17

    move/from16 v52, v19

    move-object/from16 v53, p3

    move-object/from16 v54, v8

    move/from16 v55, p12

    move-object/from16 v56, p2

    move/from16 v58, p4

    move-object/from16 v59, p5

    invoke-direct/range {v47 .. v60}, Lcom/android/server/am/ServiceRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/ComponentName;Landroid/content/ComponentName;Ljava/lang/String;ILandroid/content/Intent$FilterComparison;Landroid/content/pm/ServiceInfo;ZLcom/android/server/am/ActiveServices$ServiceRestarter;Ljava/lang/String;ILjava/lang/String;Z)V
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_13 .. :try_end_13} :catch_9

    move-object/from16 v2, p2

    .line 147
    :try_start_14
    iput-object v1, v2, Lcom/android/server/am/ActiveServices$ServiceRestarter;->mService:Lcom/android/server/am/ServiceRecord;

    .line 148
    iget-object v2, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    invoke-virtual {v2, v10, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 149
    iget-object v2, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByIntent:Landroid/util/ArrayMap;

    move-object/from16 v3, p3

    invoke-virtual {v2, v3, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 150
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    :goto_1e
    if-ltz v2, :cond_33

    .line 151
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 152
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v4, v4, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v5, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, v5, :cond_32

    iget-object v3, v3, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 153
    invoke-virtual {v3, v10}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_32

    .line 154
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mPendingServices:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    :cond_32
    add-int/lit8 v2, v2, -0x1

    goto :goto_1e

    .line 155
    :cond_33
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    :goto_1f
    if-ltz v2, :cond_35

    .line 156
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ServiceRecord;

    .line 157
    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    iget-object v4, v4, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v5, v8, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v4, v5, :cond_34

    iget-object v3, v3, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 158
    invoke-virtual {v3, v10}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_34

    .line 159
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;
    :try_end_14
    .catch Landroid/os/RemoteException; {:try_start_14 .. :try_end_14} :catch_8

    :cond_34
    add-int/lit8 v2, v2, -0x1

    goto :goto_1f

    :catch_8
    :cond_35
    move-object/from16 v25, v1

    goto :goto_20

    :catch_9
    :cond_36
    move-object/from16 v25, v18

    :catch_a
    :goto_20
    move-object/from16 v0, v25

    goto :goto_21

    :cond_37
    move-object/from16 p10, v5

    move-object v12, v10

    .line 160
    :try_start_15
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    move-object/from16 v3, p10

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_38
    move-object v12, v10

    .line 161
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, " is not an externalService"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_15
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_15} :catch_a

    :catch_b
    move-object/from16 v62, v1

    move-object/from16 v61, v2

    move-object/from16 v63, v3

    goto/16 :goto_12

    :catch_c
    :cond_39
    move-object/from16 v12, p1

    move-object/from16 v63, v3

    move-object/from16 v61, v5

    move-object/from16 v62, v6

    move-object v11, v10

    goto :goto_20

    :goto_21
    if-eqz v0, :cond_42

    .line 162
    iput-object v13, v0, Lcom/android/server/am/ServiceRecord;->mRecentCallingPackage:Ljava/lang/String;

    .line 163
    iput v15, v0, Lcom/android/server/am/ServiceRecord;->mRecentCallingUid:I

    .line 164
    :try_start_16
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 165
    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    .line 166
    invoke-static/range {p9 .. p9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    const/4 v3, 0x0

    .line 167
    invoke-virtual {v1, v13, v3, v2}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/am/ServiceRecord;->mRecentCallerApplicationInfo:Landroid/content/pm/ApplicationInfo;
    :try_end_16
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_16 .. :try_end_16} :catch_d

    .line 168
    :catch_d
    iget-object v1, v0, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v11, v15, v2, v13, v1}, Lcom/android/server/am/ActivityManagerService;->validateAssociationAllowedLocked(IILjava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_3a

    move-object/from16 v1, v61

    move-object/from16 v2, v63

    .line 169
    invoke-static {v2, v13, v1}, Lcom/android/internal/util/jobs/DumpUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 170
    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 171
    new-instance v1, Ljava/lang/StringBuilder;

    move-object/from16 v2, v62

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v14, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 172
    new-instance v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    invoke-direct {v1, v0}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V

    return-object v1

    .line 173
    :cond_3a
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 174
    iget-object v4, v1, Lcom/android/server/firewall/IntentFirewall;->mServiceResolver:Lcom/android/server/firewall/IntentFirewall$FirewallIntentResolver;

    const/4 v5, 0x2

    .line 175
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 p10, v1

    move-object/from16 p11, v4

    move-object/from16 p12, v2

    move/from16 p13, v5

    move-object/from16 p14, p1

    move/from16 p15, p9

    move/from16 p16, p8

    move-object/from16 p17, p6

    move/from16 p18, v3

    invoke-virtual/range {p10 .. p18}, Lcom/android/server/firewall/IntentFirewall;->checkIntent(Lcom/android/server/firewall/IntentFirewall$FirewallIntentResolver;Landroid/content/ComponentName;ILandroid/content/Intent;IILjava/lang/String;I)Z

    move-result v1

    if-nez v1, :cond_3b

    .line 176
    new-instance v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    const-string/jumbo v1, "blocked by firewall"

    invoke-direct {v0, v1}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V

    return-object v0

    .line 177
    :cond_3b
    iget-object v1, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-boolean v3, v0, Lcom/android/server/am/ServiceRecord;->exported:Z

    const/4 v4, 0x0

    move/from16 p10, p8

    move/from16 p11, p9

    move-object/from16 p12, v1

    move/from16 p13, v4

    move/from16 p14, v2

    move/from16 p15, v3

    .line 178
    invoke-static/range {p10 .. p15}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(IILjava/lang/String;IIZ)I

    move-result v1

    .line 179
    const-string v2, "Permission Denial: Accessing service "

    const-string v3, ", uid="

    const-string v4, " from pid="

    if-eqz v1, :cond_3d

    .line 180
    iget-boolean v1, v0, Lcom/android/server/am/ServiceRecord;->exported:Z

    if-nez v1, :cond_3c

    .line 181
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    move/from16 v5, p8

    .line 182
    invoke-static {v5, v2, v4, v3, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 183
    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " that is not exported from uid "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v14, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 184
    new-instance v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "not exported from uid "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V

    return-object v1

    :cond_3c
    move/from16 v5, p8

    .line 185
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 186
    invoke-static {v5, v2, v4, v3, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 187
    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v14, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 188
    new-instance v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    invoke-direct {v1, v0}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V

    return-object v1

    :cond_3d
    move/from16 v5, p8

    .line 189
    const-string v1, "android.permission.BIND_HOTWORD_DETECTION_SERVICE"

    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3e

    const-string v1, "android.permission.BIND_VISUAL_QUERY_DETECTION_SERVICE"

    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    .line 190
    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_3f

    :cond_3e
    const/16 v1, 0x3e8

    if-eq v15, v1, :cond_3f

    .line 191
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 192
    invoke-static {v5, v2, v4, v3, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 193
    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, " requiring permission "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v0, " can only be bound to from the system."

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 194
    new-instance v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    const-string/jumbo v1, "can only be bound to by the system."

    invoke-direct {v0, v1}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Ljava/lang/String;)V

    return-object v0

    .line 195
    :cond_3f
    iget-object v1, v0, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;

    if-eqz v1, :cond_40

    if-eqz v13, :cond_40

    .line 196
    invoke-static {v1}, Landroid/app/AppOpsManager;->permissionToOpCode(Ljava/lang/String;)I

    move-result v1

    const/4 v2, -0x1

    if-eq v1, v2, :cond_40

    .line 197
    invoke-virtual {v11}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    move-result-object v2

    invoke-virtual {v2, v1, v15, v13}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_40

    .line 198
    new-instance v2, Ljava/lang/StringBuilder;

    const-string v6, "Appop Denial: Accessing service "

    invoke-direct {v2, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 199
    invoke-static {v5, v0, v4, v3, v2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 200
    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, " requires appop "

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 201
    invoke-static {v1}, Landroid/app/AppOpsManager;->opToName(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 202
    invoke-static {v14, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-object v16

    .line 203
    :cond_40
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->seInfo:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActiveServices;->generateAdditionalSeInfoFromService(Landroid/content/Intent;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v2, Landroid/content/pm/ApplicationInfo;->seInfo:Ljava/lang/String;

    .line 204
    new-instance v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    if-eqz v41, :cond_41

    move-object/from16 v16, v23

    :cond_41
    move-object/from16 v2, v16

    check-cast v2, Landroid/content/ComponentName;

    invoke-direct {v1, v0, v2}, Lcom/android/server/am/ActiveServices$ServiceLookupResult;-><init>(Lcom/android/server/am/ServiceRecord;Landroid/content/ComponentName;)V

    return-object v1

    :cond_42
    return-object v16

    .line 205
    :cond_43
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Can\'t use custom instance name \'"

    const-string v2, "\' without expicit component in Intent"

    move-object/from16 v3, p2

    .line 206
    invoke-static {v1, v3, v2}, Lcom/android/internal/util/jobs/XmlUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 207
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :catchall_2
    move-exception v0

    .line 208
    :try_start_17
    monitor-exit v3
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_2

    :try_start_18
    throw v0
    :try_end_18
    .catchall {:try_start_18 .. :try_end_18} :catchall_3

    :catchall_3
    move-exception v0

    .line 209
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 210
    throw v0
.end method

.method public final schedulePendingServiceStartLocked(ILjava/lang/String;)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    :goto_0
    add-int/lit8 v1, v0, -0x1

    .line 8
    .line 9
    :goto_1
    if-ltz v1, :cond_5

    .line 10
    .line 11
    if-lez v0, :cond_5

    .line 12
    .line 13
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 14
    .line 15
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    .line 16
    .line 17
    .line 18
    move-result-object v2

    .line 19
    check-cast v2, Lcom/android/server/am/ServiceRecord;

    .line 20
    .line 21
    iget v3, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 22
    .line 23
    if-ne v3, p1, :cond_4

    .line 24
    .line 25
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 26
    .line 27
    invoke-static {v3, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 28
    .line 29
    .line 30
    move-result v3

    .line 31
    if-nez v3, :cond_0

    .line 32
    .line 33
    goto :goto_3

    .line 34
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 35
    .line 36
    invoke-virtual {v3, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 37
    .line 38
    .line 39
    move-result-object v3

    .line 40
    check-cast v3, Ljava/util/ArrayList;

    .line 41
    .line 42
    if-eqz v3, :cond_2

    .line 43
    .line 44
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 45
    .line 46
    .line 47
    move-result v4

    .line 48
    add-int/lit8 v4, v4, -0x1

    .line 49
    .line 50
    :goto_2
    if-ltz v4, :cond_1

    .line 51
    .line 52
    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 53
    .line 54
    .line 55
    move-result-object v5

    .line 56
    check-cast v5, Ljava/lang/Runnable;

    .line 57
    .line 58
    invoke-interface {v5}, Ljava/lang/Runnable;->run()V

    .line 59
    .line 60
    .line 61
    add-int/lit8 v4, v4, -0x1

    .line 62
    .line 63
    goto :goto_2

    .line 64
    :cond_1
    invoke-virtual {v3}, Ljava/util/ArrayList;->clear()V

    .line 65
    .line 66
    .line 67
    :cond_2
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 68
    .line 69
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    .line 70
    .line 71
    .line 72
    move-result v3

    .line 73
    iget-object v4, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 74
    .line 75
    invoke-virtual {v4, v2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 76
    .line 77
    .line 78
    if-eq v0, v3, :cond_3

    .line 79
    .line 80
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 81
    .line 82
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 83
    .line 84
    .line 85
    move-result v0

    .line 86
    goto :goto_0

    .line 87
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mPendingBringups:Landroid/util/ArrayMap;

    .line 88
    .line 89
    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    .line 90
    .line 91
    .line 92
    move-result v0

    .line 93
    :cond_4
    :goto_3
    add-int/lit8 v1, v1, -0x1

    .line 94
    .line 95
    goto :goto_1

    .line 96
    :cond_5
    return-void
.end method

.method public final scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z
    .locals 19

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v2, p1

    .line 4
    .line 5
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 8
    .line 9
    check-cast v1, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;

    .line 10
    .line 11
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;->this$0:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 12
    .line 13
    iget-boolean v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mShuttingDown:Z

    .line 14
    .line 15
    const/4 v3, 0x0

    .line 16
    if-eqz v1, :cond_0

    .line 17
    .line 18
    const-string v0, "ActivityManager"

    .line 19
    .line 20
    new-instance v1, Ljava/lang/StringBuilder;

    .line 21
    .line 22
    const-string v4, "Not scheduling restart of crashed service "

    .line 23
    .line 24
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 25
    .line 26
    .line 27
    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 28
    .line 29
    const-string v4, " - system is shutting down"

    .line 30
    .line 31
    invoke-static {v1, v2, v4, v0}, Lcom/android/server/ProfileService$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 32
    .line 33
    .line 34
    return v3

    .line 35
    :cond_0
    iget v1, v2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 36
    .line 37
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 38
    .line 39
    .line 40
    move-result-object v1

    .line 41
    iget-object v4, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 42
    .line 43
    iget-object v5, v2, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 44
    .line 45
    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 46
    .line 47
    .line 48
    move-result-object v4

    .line 49
    if-eq v4, v2, :cond_1

    .line 50
    .line 51
    iget-object v0, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 52
    .line 53
    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->instanceName:Landroid/content/ComponentName;

    .line 54
    .line 55
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 56
    .line 57
    .line 58
    move-result-object v0

    .line 59
    check-cast v0, Lcom/android/server/am/ServiceRecord;

    .line 60
    .line 61
    const-string v1, "ActivityManager"

    .line 62
    .line 63
    new-instance v4, Ljava/lang/StringBuilder;

    .line 64
    .line 65
    const-string v5, "Attempting to schedule restart of "

    .line 66
    .line 67
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 68
    .line 69
    .line 70
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 71
    .line 72
    .line 73
    const-string v2, " when found in map: "

    .line 74
    .line 75
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 76
    .line 77
    .line 78
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    .line 83
    .line 84
    move-result-object v0

    .line 85
    invoke-static {v1, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    .line 87
    .line 88
    return v3

    .line 89
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 90
    .line 91
    .line 92
    move-result-wide v5

    .line 93
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 94
    .line 95
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    .line 96
    .line 97
    .line 98
    move-result v1

    .line 99
    const/4 v7, 0x1

    .line 100
    const/4 v4, -0x1

    .line 101
    if-eq v1, v4, :cond_2

    .line 102
    .line 103
    move v8, v7

    .line 104
    goto :goto_0

    .line 105
    :cond_2
    move v8, v3

    .line 106
    :goto_0
    iget-object v9, v2, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 107
    .line 108
    iget-object v9, v9, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 109
    .line 110
    iget v9, v9, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 111
    .line 112
    and-int/lit8 v9, v9, 0x8

    .line 113
    .line 114
    if-nez v9, :cond_18

    .line 115
    .line 116
    iget-object v9, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 117
    .line 118
    iget-object v9, v9, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 119
    .line 120
    iget-wide v12, v9, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESTART_DURATION:J

    .line 121
    .line 122
    iget-wide v14, v9, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESET_RUN_DURATION:J

    .line 123
    .line 124
    iget-object v9, v2, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 125
    .line 126
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    .line 127
    .line 128
    .line 129
    move-result v9

    .line 130
    if-lez v9, :cond_a

    .line 131
    .line 132
    sub-int/2addr v9, v7

    .line 133
    move/from16 v16, v3

    .line 134
    .line 135
    :goto_1
    if-ltz v9, :cond_9

    .line 136
    .line 137
    iget-object v7, v2, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 138
    .line 139
    invoke-virtual {v7, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 140
    .line 141
    .line 142
    move-result-object v7

    .line 143
    check-cast v7, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 144
    .line 145
    iget-object v10, v7, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 146
    .line 147
    const/4 v11, 0x3

    .line 148
    if-eqz v10, :cond_3

    .line 149
    .line 150
    const/4 v3, 0x0

    .line 151
    invoke-virtual {v10, v11, v4, v3, v3}, Lcom/android/server/uri/UriPermissionOwner;->removeUriPermission(IILcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 152
    .line 153
    .line 154
    iput-object v3, v7, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 155
    .line 156
    :cond_3
    iget-object v3, v7, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;

    .line 157
    .line 158
    if-nez v3, :cond_4

    .line 159
    .line 160
    move-wide/from16 v17, v5

    .line 161
    .line 162
    goto :goto_3

    .line 163
    :cond_4
    if-eqz p2, :cond_6

    .line 164
    .line 165
    iget v3, v7, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I

    .line 166
    .line 167
    if-ge v3, v11, :cond_5

    .line 168
    .line 169
    iget v3, v7, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I

    .line 170
    .line 171
    const/4 v10, 0x6

    .line 172
    if-ge v3, v10, :cond_5

    .line 173
    .line 174
    goto :goto_2

    .line 175
    :cond_5
    const-string v3, "ActivityManager"

    .line 176
    .line 177
    new-instance v10, Ljava/lang/StringBuilder;

    .line 178
    .line 179
    const-string v11, "Canceling start item "

    .line 180
    .line 181
    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 182
    .line 183
    .line 184
    iget-object v7, v7, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;

    .line 185
    .line 186
    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 187
    .line 188
    .line 189
    const-string v7, " in service "

    .line 190
    .line 191
    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 192
    .line 193
    .line 194
    iget-object v7, v2, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 195
    .line 196
    invoke-static {v10, v7, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 197
    .line 198
    .line 199
    move-wide/from16 v17, v5

    .line 200
    .line 201
    const/16 v16, 0x1

    .line 202
    .line 203
    goto :goto_3

    .line 204
    :cond_6
    :goto_2
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 205
    .line 206
    const/4 v10, 0x0

    .line 207
    invoke-virtual {v3, v10, v7}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 208
    .line 209
    .line 210
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 211
    .line 212
    .line 213
    move-result-wide v10

    .line 214
    move-wide/from16 v17, v5

    .line 215
    .line 216
    iget-wide v4, v7, Lcom/android/server/am/ServiceRecord$StartItem;->deliveredTime:J

    .line 217
    .line 218
    sub-long/2addr v10, v4

    .line 219
    const-wide/16 v4, 0x2

    .line 220
    .line 221
    mul-long/2addr v10, v4

    .line 222
    cmp-long v4, v12, v10

    .line 223
    .line 224
    if-gez v4, :cond_7

    .line 225
    .line 226
    move-wide v12, v10

    .line 227
    :cond_7
    cmp-long v4, v14, v10

    .line 228
    .line 229
    if-gez v4, :cond_8

    .line 230
    .line 231
    move-wide v14, v10

    .line 232
    :cond_8
    :goto_3
    add-int/lit8 v9, v9, -0x1

    .line 233
    .line 234
    move-wide/from16 v5, v17

    .line 235
    .line 236
    const/4 v3, 0x0

    .line 237
    const/4 v4, -0x1

    .line 238
    const/4 v7, 0x1

    .line 239
    goto :goto_1

    .line 240
    :cond_9
    move-wide/from16 v17, v5

    .line 241
    .line 242
    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 243
    .line 244
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 245
    .line 246
    .line 247
    move/from16 v4, v16

    .line 248
    .line 249
    goto :goto_4

    .line 250
    :cond_a
    move-wide/from16 v17, v5

    .line 251
    .line 252
    const/4 v4, 0x0

    .line 253
    :goto_4
    if-eqz p2, :cond_d

    .line 254
    .line 255
    invoke-virtual {v2, v4}, Lcom/android/server/am/ServiceRecord;->canStopIfKilled(Z)Z

    .line 256
    .line 257
    .line 258
    move-result v4

    .line 259
    if-eqz v4, :cond_b

    .line 260
    .line 261
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->hasAutoCreateConnections()Z

    .line 262
    .line 263
    .line 264
    move-result v5

    .line 265
    if-nez v5, :cond_b

    .line 266
    .line 267
    const/4 v5, 0x0

    .line 268
    return v5

    .line 269
    :cond_b
    iget-boolean v5, v2, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 270
    .line 271
    if-eqz v5, :cond_c

    .line 272
    .line 273
    if-nez v4, :cond_c

    .line 274
    .line 275
    const-string/jumbo v4, "start-requested"

    .line 276
    .line 277
    .line 278
    goto :goto_5

    .line 279
    :cond_c
    const-string/jumbo v4, "connection"

    .line 280
    .line 281
    .line 282
    goto :goto_5

    .line 283
    :cond_d
    const-string v4, "always"

    .line 284
    .line 285
    :goto_5
    iget-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 286
    .line 287
    const-wide/16 v9, 0x0

    .line 288
    .line 289
    cmp-long v7, v5, v9

    .line 290
    .line 291
    if-nez v7, :cond_e

    .line 292
    .line 293
    iget v5, v2, Lcom/android/server/am/ServiceRecord;->restartCount:I

    .line 294
    .line 295
    const/4 v7, 0x1

    .line 296
    add-int/2addr v5, v7

    .line 297
    iput v5, v2, Lcom/android/server/am/ServiceRecord;->restartCount:I

    .line 298
    .line 299
    iput-wide v12, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 300
    .line 301
    goto :goto_6

    .line 302
    :cond_e
    const/4 v7, 0x1

    .line 303
    iget v9, v2, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 304
    .line 305
    if-le v9, v7, :cond_f

    .line 306
    .line 307
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 308
    .line 309
    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 310
    .line 311
    iget-wide v5, v5, Lcom/android/server/am/ActivityManagerConstants;->BOUND_SERVICE_CRASH_RESTART_DURATION:J

    .line 312
    .line 313
    sub-int/2addr v9, v7

    .line 314
    int-to-long v9, v9

    .line 315
    mul-long/2addr v5, v9

    .line 316
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 317
    .line 318
    goto :goto_6

    .line 319
    :cond_f
    iget-wide v9, v2, Lcom/android/server/am/ServiceRecord;->restartTime:J

    .line 320
    .line 321
    add-long/2addr v9, v14

    .line 322
    cmp-long v9, v17, v9

    .line 323
    .line 324
    if-lez v9, :cond_10

    .line 325
    .line 326
    iput v7, v2, Lcom/android/server/am/ServiceRecord;->restartCount:I

    .line 327
    .line 328
    iput-wide v12, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 329
    .line 330
    goto :goto_6

    .line 331
    :cond_10
    iget-object v7, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 332
    .line 333
    iget-object v7, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 334
    .line 335
    iget v7, v7, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESTART_DURATION_FACTOR:I

    .line 336
    .line 337
    int-to-long v9, v7

    .line 338
    mul-long/2addr v5, v9

    .line 339
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 340
    .line 341
    cmp-long v5, v5, v12

    .line 342
    .line 343
    if-gez v5, :cond_11

    .line 344
    .line 345
    iput-wide v12, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 346
    .line 347
    :cond_11
    :goto_6
    iget-object v5, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 348
    .line 349
    iget-object v6, v0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 350
    .line 351
    invoke-virtual {v6, v5}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 352
    .line 353
    .line 354
    move-result v5

    .line 355
    const/4 v6, 0x1

    .line 356
    xor-int/2addr v5, v6

    .line 357
    if-eqz v5, :cond_16

    .line 358
    .line 359
    iget-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 360
    .line 361
    add-long v5, v17, v5

    .line 362
    .line 363
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->mEarliestRestartTime:J

    .line 364
    .line 365
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 366
    .line 367
    if-eqz v8, :cond_12

    .line 368
    .line 369
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 370
    .line 371
    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 372
    .line 373
    .line 374
    const/4 v8, 0x0

    .line 375
    :cond_12
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 376
    .line 377
    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    .line 378
    .line 379
    .line 380
    move-result v5

    .line 381
    if-eqz v5, :cond_13

    .line 382
    .line 383
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActiveServices;->getExtraRestartTimeInBetweenLocked()J

    .line 384
    .line 385
    .line 386
    move-result-wide v5

    .line 387
    add-long v5, v5, v17

    .line 388
    .line 389
    iget-wide v9, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 390
    .line 391
    invoke-static {v5, v6, v9, v10}, Ljava/lang/Math;->max(JJ)J

    .line 392
    .line 393
    .line 394
    move-result-wide v5

    .line 395
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 396
    .line 397
    sub-long v5, v5, v17

    .line 398
    .line 399
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 400
    .line 401
    goto :goto_9

    .line 402
    :cond_13
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActiveServices;->getExtraRestartTimeInBetweenLocked()J

    .line 403
    .line 404
    .line 405
    move-result-wide v5

    .line 406
    iget-object v7, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 407
    .line 408
    iget-object v7, v7, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 409
    .line 410
    iget-wide v9, v7, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_MIN_RESTART_TIME_BETWEEN:J

    .line 411
    .line 412
    add-long/2addr v5, v9

    .line 413
    :goto_7
    iget-wide v9, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 414
    .line 415
    iget-object v7, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 416
    .line 417
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    .line 418
    .line 419
    .line 420
    move-result v7

    .line 421
    const/4 v11, 0x1

    .line 422
    sub-int/2addr v7, v11

    .line 423
    :goto_8
    if-ltz v7, :cond_17

    .line 424
    .line 425
    iget-object v11, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 426
    .line 427
    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 428
    .line 429
    .line 430
    move-result-object v11

    .line 431
    check-cast v11, Lcom/android/server/am/ServiceRecord;

    .line 432
    .line 433
    iget-wide v11, v11, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 434
    .line 435
    sub-long v13, v11, v5

    .line 436
    .line 437
    cmp-long v13, v9, v13

    .line 438
    .line 439
    if-ltz v13, :cond_14

    .line 440
    .line 441
    add-long v13, v11, v5

    .line 442
    .line 443
    cmp-long v15, v9, v13

    .line 444
    .line 445
    if-gez v15, :cond_14

    .line 446
    .line 447
    iput-wide v13, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 448
    .line 449
    sub-long v13, v13, v17

    .line 450
    .line 451
    iput-wide v13, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 452
    .line 453
    goto :goto_7

    .line 454
    :cond_14
    add-long/2addr v11, v5

    .line 455
    cmp-long v11, v9, v11

    .line 456
    .line 457
    if-ltz v11, :cond_15

    .line 458
    .line 459
    goto :goto_9

    .line 460
    :cond_15
    add-int/lit8 v7, v7, -0x1

    .line 461
    .line 462
    goto :goto_8

    .line 463
    :cond_16
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 464
    .line 465
    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 466
    .line 467
    iget-wide v5, v5, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESTART_DURATION:J

    .line 468
    .line 469
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 470
    .line 471
    add-long v5, v17, v5

    .line 472
    .line 473
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 474
    .line 475
    :cond_17
    :goto_9
    move-object v7, v4

    .line 476
    move-wide/from16 v5, v17

    .line 477
    .line 478
    const/4 v4, 0x0

    .line 479
    goto :goto_a

    .line 480
    :cond_18
    move v4, v3

    .line 481
    move-wide/from16 v17, v5

    .line 482
    .line 483
    iput v4, v2, Lcom/android/server/am/ServiceRecord;->restartCount:I

    .line 484
    .line 485
    const-wide/16 v5, 0x0

    .line 486
    .line 487
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 488
    .line 489
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->mEarliestRestartTime:J

    .line 490
    .line 491
    move-wide/from16 v5, v17

    .line 492
    .line 493
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 494
    .line 495
    const-string/jumbo v7, "persistent"

    .line 496
    .line 497
    .line 498
    :goto_a
    iput-wide v5, v2, Lcom/android/server/am/ServiceRecord;->mRestartSchedulingTime:J

    .line 499
    .line 500
    if-nez v8, :cond_1c

    .line 501
    .line 502
    const/4 v3, -0x1

    .line 503
    if-ne v1, v3, :cond_19

    .line 504
    .line 505
    iput-boolean v4, v2, Lcom/android/server/am/ServiceRecord;->createdFromFg:Z

    .line 506
    .line 507
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 508
    .line 509
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 510
    .line 511
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 512
    .line 513
    monitor-enter v1

    .line 514
    :try_start_0
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 515
    .line 516
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 517
    .line 518
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 519
    .line 520
    .line 521
    move-result v3

    .line 522
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 523
    .line 524
    .line 525
    move-result-wide v8

    .line 526
    invoke-virtual {v2, v3, v8, v9}, Lcom/android/server/am/ServiceRecord;->makeRestarting(IJ)V

    .line 527
    .line 528
    .line 529
    monitor-exit v1

    .line 530
    goto :goto_b

    .line 531
    :catchall_0
    move-exception v0

    .line 532
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 533
    throw v0

    .line 534
    :cond_19
    :goto_b
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 535
    .line 536
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 537
    .line 538
    .line 539
    move-result v1

    .line 540
    move v3, v4

    .line 541
    :goto_c
    if-ge v3, v1, :cond_1b

    .line 542
    .line 543
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 544
    .line 545
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 546
    .line 547
    .line 548
    move-result-object v4

    .line 549
    check-cast v4, Lcom/android/server/am/ServiceRecord;

    .line 550
    .line 551
    iget-wide v8, v4, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 552
    .line 553
    iget-wide v10, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 554
    .line 555
    cmp-long v4, v8, v10

    .line 556
    .line 557
    if-lez v4, :cond_1a

    .line 558
    .line 559
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 560
    .line 561
    invoke-virtual {v1, v3, v2}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 562
    .line 563
    .line 564
    goto :goto_d

    .line 565
    :cond_1a
    add-int/lit8 v3, v3, 0x1

    .line 566
    .line 567
    goto :goto_c

    .line 568
    :cond_1b
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 569
    .line 570
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 571
    .line 572
    .line 573
    :cond_1c
    :goto_d
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 574
    .line 575
    .line 576
    const-string v1, "ChimeraManagerService"

    .line 577
    .line 578
    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 579
    .line 580
    .line 581
    move-result-object v1

    .line 582
    check-cast v1, Lcom/android/server/chimera/ChimeraManagerService;

    .line 583
    .line 584
    if-eqz v1, :cond_1f

    .line 585
    .line 586
    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 587
    .line 588
    invoke-static {}, Lcom/android/server/chimera/RestartImmediatePackages;->getInstance()Lcom/android/server/chimera/RestartImmediatePackages;

    .line 589
    .line 590
    .line 591
    move-result-object v3

    .line 592
    if-nez v1, :cond_1d

    .line 593
    .line 594
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 595
    .line 596
    .line 597
    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 598
    .line 599
    goto :goto_e

    .line 600
    :cond_1d
    iget-object v3, v3, Lcom/android/server/chimera/RestartImmediatePackages;->sPackages:Ljava/util/Map;

    .line 601
    .line 602
    check-cast v3, Ljava/util/concurrent/ConcurrentHashMap;

    .line 603
    .line 604
    invoke-virtual {v3, v1}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 605
    .line 606
    .line 607
    move-result-object v1

    .line 608
    check-cast v1, Ljava/lang/Boolean;

    .line 609
    .line 610
    :goto_e
    if-eqz v1, :cond_1f

    .line 611
    .line 612
    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    .line 613
    .line 614
    .line 615
    move-result v1

    .line 616
    if-eqz v1, :cond_1e

    .line 617
    .line 618
    const-wide/32 v3, 0x2bf20

    .line 619
    .line 620
    .line 621
    goto :goto_f

    .line 622
    :cond_1e
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 623
    .line 624
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 625
    .line 626
    iget-wide v3, v1, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESTART_DURATION:J

    .line 627
    .line 628
    :goto_f
    iput-wide v3, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 629
    .line 630
    add-long/2addr v3, v5

    .line 631
    iput-wide v3, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 632
    .line 633
    :cond_1f
    const-string v3, "Scheduling"

    .line 634
    .line 635
    move-object/from16 v1, p0

    .line 636
    .line 637
    move-object/from16 v2, p1

    .line 638
    .line 639
    move-object v4, v7

    .line 640
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->performScheduleRestartLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;J)V

    .line 641
    .line 642
    .line 643
    const/4 v0, 0x1

    .line 644
    return v0
.end method

.method public final scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 3

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 4
    .line 5
    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_2

    .line 10
    .line 11
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 12
    .line 13
    if-nez v0, :cond_0

    .line 14
    .line 15
    goto :goto_1

    .line 16
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 17
    .line 18
    iget-boolean v1, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 19
    .line 20
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 21
    .line 22
    if-eqz v1, :cond_1

    .line 23
    .line 24
    iget-object v1, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 25
    .line 26
    iget-wide v1, v1, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_TIMEOUT:J

    .line 27
    .line 28
    goto :goto_0

    .line 29
    :cond_1
    iget-object v1, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 30
    .line 31
    iget-wide v1, v1, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_BACKGROUND_TIMEOUT:J

    .line 32
    .line 33
    :goto_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 34
    .line 35
    invoke-virtual {p0, v1, v2, p1}, Lcom/android/server/utils/AnrTimer;->start(JLjava/lang/Object;)V

    .line 36
    .line 37
    .line 38
    const/4 p0, 0x0

    .line 39
    iput-boolean p0, v0, Lcom/android/server/am/ProcessServiceRecord;->mScheduleServiceTimeoutPending:Z

    .line 40
    .line 41
    :cond_2
    :goto_1
    return-void
.end method

.method public final sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;ZZ)V
    .locals 15

    .line 1
    move-object v7, p0

    .line 2
    move-object/from16 v8, p1

    .line 3
    .line 4
    const-string v9, "Failed delivering service starts"

    .line 5
    .line 6
    const-string v10, "ActivityManager"

    .line 7
    .line 8
    iget-object v0, v8, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 9
    .line 10
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 11
    .line 12
    .line 13
    move-result v0

    .line 14
    if-nez v0, :cond_0

    .line 15
    .line 16
    return-void

    .line 17
    :cond_0
    new-instance v11, Ljava/util/ArrayList;

    .line 18
    .line 19
    invoke-direct {v11}, Ljava/util/ArrayList;-><init>()V

    .line 20
    .line 21
    .line 22
    :goto_0
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 23
    .line 24
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 25
    .line 26
    .line 27
    move-result v1

    .line 28
    const/4 v12, 0x0

    .line 29
    if-lez v1, :cond_9

    .line 30
    .line 31
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    .line 32
    .line 33
    invoke-virtual {v1, v12}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 34
    .line 35
    .line 36
    move-result-object v1

    .line 37
    move-object v13, v1

    .line 38
    check-cast v13, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 39
    .line 40
    iget-object v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;

    .line 41
    .line 42
    const/4 v14, 0x1

    .line 43
    if-nez v1, :cond_1

    .line 44
    .line 45
    if-le v0, v14, :cond_1

    .line 46
    .line 47
    goto :goto_0

    .line 48
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 49
    .line 50
    .line 51
    move-result-wide v1

    .line 52
    iput-wide v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->deliveredTime:J

    .line 53
    .line 54
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 55
    .line 56
    invoke-virtual {v1, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 57
    .line 58
    .line 59
    iget v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I

    .line 60
    .line 61
    add-int/2addr v1, v14

    .line 62
    iput v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I

    .line 63
    .line 64
    iget-object v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->neededGrants:Lcom/android/server/uri/NeededUriGrants;

    .line 65
    .line 66
    if-eqz v1, :cond_3

    .line 67
    .line 68
    iget-object v2, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 69
    .line 70
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 71
    .line 72
    iget-object v3, v13, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 73
    .line 74
    if-nez v3, :cond_2

    .line 75
    .line 76
    new-instance v3, Lcom/android/server/uri/UriPermissionOwner;

    .line 77
    .line 78
    iget-object v4, v13, Lcom/android/server/am/ServiceRecord$StartItem;->sr:Lcom/android/server/am/ServiceRecord;

    .line 79
    .line 80
    iget-object v4, v4, Lcom/android/server/am/ServiceRecord;->ams:Lcom/android/server/am/ActivityManagerService;

    .line 81
    .line 82
    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 83
    .line 84
    invoke-direct {v3, v4, v13}, Lcom/android/server/uri/UriPermissionOwner;-><init>(Lcom/android/server/uri/UriGrantsManagerInternal;Ljava/lang/Object;)V

    .line 85
    .line 86
    .line 87
    iput-object v3, v13, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 88
    .line 89
    :cond_2
    iget-object v3, v13, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 90
    .line 91
    check-cast v2, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    .line 92
    .line 93
    invoke-virtual {v2, v1, v3}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->grantUriPermissionUncheckedFromIntent(Lcom/android/server/uri/NeededUriGrants;Lcom/android/server/uri/UriPermissionOwner;)V

    .line 94
    .line 95
    .line 96
    :cond_3
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 97
    .line 98
    iget v2, v8, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 99
    .line 100
    iget-object v3, v13, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;

    .line 101
    .line 102
    iget v4, v13, Lcom/android/server/am/ServiceRecord$StartItem;->callingId:I

    .line 103
    .line 104
    iget-object v5, v8, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 105
    .line 106
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 107
    .line 108
    invoke-static {v5}, Landroid/os/UserHandle;->getAppId(I)I

    .line 109
    .line 110
    .line 111
    move-result v5

    .line 112
    invoke-virtual {v1, v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->grantImplicitAccess(ILandroid/content/Intent;II)V

    .line 113
    .line 114
    .line 115
    const/4 v6, 0x0

    .line 116
    const-string/jumbo v4, "start"

    .line 117
    .line 118
    .line 119
    const/4 v5, 0x0

    .line 120
    move-object v1, p0

    .line 121
    move-object/from16 v2, p1

    .line 122
    .line 123
    move/from16 v3, p2

    .line 124
    .line 125
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;ZLjava/lang/String;IZ)V

    .line 126
    .line 127
    .line 128
    iget-boolean v1, v8, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 129
    .line 130
    if-eqz v1, :cond_6

    .line 131
    .line 132
    iget-boolean v1, v8, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 133
    .line 134
    if-nez v1, :cond_6

    .line 135
    .line 136
    iget-boolean v1, v8, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 137
    .line 138
    if-nez v1, :cond_5

    .line 139
    .line 140
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 141
    .line 142
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 143
    .line 144
    iget-object v1, v1, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 145
    .line 146
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    .line 147
    .line 148
    .line 149
    move-result v1

    .line 150
    if-eqz v1, :cond_6

    .line 151
    .line 152
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 153
    .line 154
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 155
    .line 156
    if-nez v1, :cond_4

    .line 157
    .line 158
    goto :goto_1

    .line 159
    :cond_4
    iput-boolean v14, v8, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 160
    .line 161
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 162
    .line 163
    iget-object v2, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 164
    .line 165
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 166
    .line 167
    iget v2, v2, Lcom/android/server/am/ActivityManagerConstants;->mServiceStartForegroundTimeoutMs:I

    .line 168
    .line 169
    int-to-long v2, v2

    .line 170
    invoke-virtual {v1, v2, v3, v8}, Lcom/android/server/utils/AnrTimer;->start(JLjava/lang/Object;)V

    .line 171
    .line 172
    .line 173
    goto :goto_1

    .line 174
    :cond_5
    iput-boolean v12, v8, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 175
    .line 176
    :cond_6
    :goto_1
    iget v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I

    .line 177
    .line 178
    if-le v1, v14, :cond_7

    .line 179
    .line 180
    const/4 v12, 0x2

    .line 181
    :cond_7
    iget v1, v13, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I

    .line 182
    .line 183
    if-lez v1, :cond_8

    .line 184
    .line 185
    or-int/lit8 v12, v12, 0x1

    .line 186
    .line 187
    :cond_8
    new-instance v1, Landroid/app/ServiceStartArgs;

    .line 188
    .line 189
    iget-boolean v2, v13, Lcom/android/server/am/ServiceRecord$StartItem;->taskRemoved:Z

    .line 190
    .line 191
    iget v3, v13, Lcom/android/server/am/ServiceRecord$StartItem;->id:I

    .line 192
    .line 193
    iget-object v4, v13, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;

    .line 194
    .line 195
    invoke-direct {v1, v2, v3, v12, v4}, Landroid/app/ServiceStartArgs;-><init>(ZIILandroid/content/Intent;)V

    .line 196
    .line 197
    .line 198
    invoke-virtual {v11, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 199
    .line 200
    .line 201
    goto/16 :goto_0

    .line 202
    .line 203
    :cond_9
    if-nez p3, :cond_a

    .line 204
    .line 205
    iget-object v0, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 206
    .line 207
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 208
    .line 209
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 210
    .line 211
    .line 212
    iget-object v0, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 213
    .line 214
    const/4 v1, 0x6

    .line 215
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 216
    .line 217
    .line 218
    :cond_a
    new-instance v0, Landroid/content/pm/ParceledListSlice;

    .line 219
    .line 220
    invoke-direct {v0, v11}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    .line 221
    .line 222
    .line 223
    const/4 v1, 0x4

    .line 224
    invoke-virtual {v0, v1}, Landroid/content/pm/ParceledListSlice;->setInlineCountLimit(I)V

    .line 225
    .line 226
    .line 227
    :try_start_0
    iget-object v1, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 228
    .line 229
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 230
    .line 231
    invoke-interface {v1, v8, v0}, Landroid/app/IApplicationThread;->scheduleServiceArgs(Landroid/os/IBinder;Landroid/content/pm/ParceledListSlice;)V
    :try_end_0
    .catch Landroid/os/TransactionTooLargeException; {:try_start_0 .. :try_end_0} :catch_2
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 232
    .line 233
    .line 234
    const/4 v0, 0x0

    .line 235
    goto :goto_5

    .line 236
    :catch_0
    move-exception v0

    .line 237
    goto :goto_2

    .line 238
    :catch_1
    move-exception v0

    .line 239
    goto :goto_3

    .line 240
    :catch_2
    move-exception v0

    .line 241
    goto :goto_4

    .line 242
    :goto_2
    const-string v1, "Unexpected exception"

    .line 243
    .line 244
    invoke-static {v10, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 245
    .line 246
    .line 247
    goto :goto_5

    .line 248
    :goto_3
    invoke-static {v10, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 249
    .line 250
    .line 251
    goto :goto_5

    .line 252
    :goto_4
    invoke-static {v10, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 253
    .line 254
    .line 255
    :goto_5
    if-eqz v0, :cond_d

    .line 256
    .line 257
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 258
    .line 259
    invoke-virtual {v1, v8}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 260
    .line 261
    .line 262
    move-result v9

    .line 263
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    .line 264
    .line 265
    .line 266
    move-result v10

    .line 267
    :goto_6
    if-ge v12, v10, :cond_b

    .line 268
    .line 269
    const/4 v5, 0x1

    .line 270
    const/16 v6, 0x13

    .line 271
    .line 272
    move-object v1, p0

    .line 273
    move-object/from16 v2, p1

    .line 274
    .line 275
    move v3, v9

    .line 276
    move v4, v9

    .line 277
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 278
    .line 279
    .line 280
    add-int/lit8 v12, v12, 0x1

    .line 281
    .line 282
    goto :goto_6

    .line 283
    :cond_b
    iget-object v1, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 284
    .line 285
    const/16 v2, 0x13

    .line 286
    .line 287
    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 288
    .line 289
    .line 290
    instance-of v1, v0, Landroid/os/TransactionTooLargeException;

    .line 291
    .line 292
    if-nez v1, :cond_c

    .line 293
    .line 294
    goto :goto_7

    .line 295
    :cond_c
    check-cast v0, Landroid/os/TransactionTooLargeException;

    .line 296
    .line 297
    throw v0

    .line 298
    :cond_d
    :goto_7
    return-void
.end method

.method public final serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;III)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    .line 2
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const-string v1, "ActivityManager"

    if-eqz p1, :cond_c

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v5, 0x1

    if-ne p2, v5, :cond_6

    .line 3
    iput-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->callStart:Z

    const/16 p2, 0x3e8

    if-eq p4, p2, :cond_0

    .line 4
    iput p4, p1, Lcom/android/server/am/ServiceRecord;->startCommandResult:I

    :cond_0
    if-eqz p4, :cond_4

    if-eq p4, v5, :cond_4

    if-eq p4, v2, :cond_3

    const/4 v1, 0x3

    if-eq p4, v1, :cond_2

    if-ne p4, p2, :cond_1

    .line 5
    invoke-virtual {p1, p3, v5, v5}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZZ)Lcom/android/server/am/ServiceRecord$StartItem;

    goto :goto_0

    .line 6
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const-string p1, "Unknown service start result: "

    .line 7
    invoke-static {p4, p1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    move-result-object p1

    .line 8
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0

    .line 9
    :cond_2
    invoke-virtual {p1, p3, v3, v3}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZZ)Lcom/android/server/am/ServiceRecord$StartItem;

    move-result-object p2

    if-eqz p2, :cond_5

    .line 10
    iput v3, p2, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I

    .line 11
    iget p3, p2, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I

    add-int/2addr p3, v5

    iput p3, p2, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I

    .line 12
    iput-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z

    goto :goto_0

    .line 13
    :cond_3
    invoke-virtual {p1, p3, v3, v5}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZZ)Lcom/android/server/am/ServiceRecord$StartItem;

    .line 14
    iget p2, p1, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    if-ne p2, p3, :cond_5

    .line 15
    iput-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z

    goto :goto_0

    .line 16
    :cond_4
    invoke-virtual {p1, p3, v3, v5}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZZ)Lcom/android/server/am/ServiceRecord$StartItem;

    .line 17
    iput-boolean v3, p1, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z

    :cond_5
    :goto_0
    if-nez p4, :cond_8

    .line 18
    iput-boolean v3, p1, Lcom/android/server/am/ServiceRecord;->callStart:Z

    goto :goto_1

    :cond_6
    if-ne p2, v2, :cond_8

    if-nez v4, :cond_7

    .line 19
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_9

    .line 20
    new-instance p2, Ljava/lang/StringBuilder;

    const-string p3, "Service done with onDestroy, but not inDestroying: "

    invoke-direct {p2, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string p3, ", app="

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {v1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2

    .line 21
    :cond_7
    iget p2, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    if-eq p2, v5, :cond_9

    .line 22
    new-instance p2, Ljava/lang/StringBuilder;

    const-string p3, "Service done with onDestroy, but executeNesting="

    invoke-direct {p2, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget p3, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p3, ": "

    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-static {v1, p2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 23
    iput v5, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    goto :goto_2

    :cond_8
    :goto_1
    move v5, v3

    .line 24
    :cond_9
    :goto_2
    iget-object p2, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 25
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide p2

    .line 26
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    move-result p4

    if-nez p4, :cond_b

    if-eqz v5, :cond_a

    goto :goto_3

    :cond_a
    move v6, v3

    goto :goto_4

    :cond_b
    :goto_3
    const/16 p4, 0x14

    move v6, p4

    :goto_4
    const/4 v5, 0x0

    move-object v1, p0

    move-object v2, p1

    move v3, v4

    .line 27
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 28
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 29
    invoke-static {p2, p3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_5

    .line 30
    :cond_c
    new-instance p0, Ljava/lang/StringBuilder;

    const-string p1, "Done executing unknown service from pid "

    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object p1, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 31
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 32
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    .line 33
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 34
    invoke-static {v1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_5
    return-void
.end method

.method public final serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V
    .locals 5

    .line 39
    iget v0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    const/4 v1, 0x1

    sub-int/2addr v0, v1

    iput v0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I

    if-gtz v0, :cond_a

    .line 40
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const/4 v2, 0x0

    if-eqz v0, :cond_6

    .line 41
    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 42
    iput-boolean v2, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 43
    iget-object v3, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    invoke-virtual {v3, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 44
    iget-object v3, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-nez v3, :cond_0

    .line 45
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v0, Lcom/android/server/am/ProcessRecord;->mPid:I

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    invoke-virtual {v1, v0}, Lcom/android/server/utils/AnrTimer;->cancel(Ljava/lang/Object;)V

    goto :goto_1

    .line 46
    :cond_0
    iget-boolean v3, p1, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    if-eqz v3, :cond_2

    .line 47
    iget-object v3, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    sub-int/2addr v3, v1

    :goto_0
    if-ltz v3, :cond_2

    .line 48
    iget-object v4, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    invoke-virtual {v4, v3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ServiceRecord;

    .line 49
    iget-boolean v4, v4, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    if-eqz v4, :cond_1

    .line 50
    iput-boolean v1, v0, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    goto :goto_1

    :cond_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    :cond_2
    :goto_1
    if-eqz p2, :cond_3

    .line 51
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 52
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    invoke-virtual {p2}, Landroid/util/ArrayMap;->clear()V

    :cond_3
    if-eqz p5, :cond_5

    if-eqz p4, :cond_4

    .line 53
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object p4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p2, p4}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_2

    .line 54
    :cond_4
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object p4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {p2, p5, p4}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(ILcom/android/server/am/ProcessRecord;)Z

    .line 55
    :cond_5
    :goto_2
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    .line 56
    :cond_6
    iput-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->executeFg:Z

    .line 57
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    const/4 p4, 0x0

    if-eqz p2, :cond_8

    .line 58
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object p2, p2, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter p2

    .line 59
    :try_start_0
    iget-object p5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object p5, p5, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p5}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result p5

    .line 60
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .line 61
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    invoke-virtual {v3, v2, p5, v0, v1}, Lcom/android/internal/app/procstats/ServiceState;->setExecuting(ZIJ)V

    .line 62
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    invoke-virtual {v3, v2, p5, v0, v1}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    if-eqz p3, :cond_7

    .line 63
    iget-object p5, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    invoke-virtual {p5, p1, v2}, Lcom/android/internal/app/procstats/ServiceState;->clearCurrentOwner(Ljava/lang/Object;Z)V

    .line 64
    iput-object p4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    goto :goto_3

    :catchall_0
    move-exception p0

    goto :goto_4

    .line 65
    :cond_7
    :goto_3
    monitor-exit p2

    goto :goto_5

    :goto_4
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0

    :cond_8
    :goto_5
    if-eqz p3, :cond_a

    .line 66
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz p2, :cond_9

    .line 67
    iget-boolean p2, p2, Lcom/android/server/am/ProcessRecord;->mPersistent:Z

    if-nez p2, :cond_9

    .line 68
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->stopServiceAndUpdateAllowlistManagerLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 69
    :cond_9
    invoke-virtual {p1, p4}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    :cond_a
    return-void
.end method

.method public final serviceForegroundTimeout(Lcom/android/server/am/ServiceRecord;)V
    .locals 6

    .line 1
    const-string v0, "Context.startForegroundService() did not then call Service.startForeground(): "

    .line 2
    .line 3
    const-wide/16 v1, 0x40

    .line 4
    .line 5
    :try_start_0
    const-string/jumbo v3, "serviceForegroundTimeout()"

    .line 6
    .line 7
    .line 8
    invoke-static {v1, v2, v3}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 9
    .line 10
    .line 11
    new-instance v3, Ljava/lang/StringBuilder;

    .line 12
    .line 13
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 14
    .line 15
    .line 16
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 17
    .line 18
    .line 19
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object v0

    .line 23
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 24
    .line 25
    .line 26
    move-result-wide v3

    .line 27
    invoke-static {v0, v3, v4}, Lcom/android/internal/os/TimeoutRecord;->forServiceStartWithEndTime(Ljava/lang/String;J)Lcom/android/internal/os/TimeoutRecord;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    iget-object v3, v0, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 32
    .line 33
    invoke-virtual {v3}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockStarted()V

    .line 34
    .line 35
    .line 36
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 37
    .line 38
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 39
    .line 40
    .line 41
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 42
    :try_start_1
    iget-object v4, v0, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 43
    .line 44
    invoke-virtual {v4}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnAMSLockEnded()V

    .line 45
    .line 46
    .line 47
    iget-boolean v4, p1, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 48
    .line 49
    if-eqz v4, :cond_3

    .line 50
    .line 51
    iget-boolean v4, p1, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 52
    .line 53
    if-eqz v4, :cond_3

    .line 54
    .line 55
    iget-boolean v4, p1, Lcom/android/server/am/ServiceRecord;->destroying:Z

    .line 56
    .line 57
    if-eqz v4, :cond_0

    .line 58
    .line 59
    goto :goto_2

    .line 60
    :cond_0
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 61
    .line 62
    if-eqz v4, :cond_1

    .line 63
    .line 64
    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->mDebugging:Z

    .line 65
    .line 66
    if-eqz v5, :cond_1

    .line 67
    .line 68
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 69
    .line 70
    invoke-virtual {p0}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 71
    .line 72
    .line 73
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 74
    :goto_0
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 75
    .line 76
    .line 77
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 78
    .line 79
    .line 80
    return-void

    .line 81
    :catchall_0
    move-exception p0

    .line 82
    goto :goto_3

    .line 83
    :cond_1
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 84
    .line 85
    iget-object v5, v5, Lcom/android/server/utils/AnrTimer;->mFeature:Lcom/android/server/utils/AnrTimer$FeatureDisabled;

    .line 86
    .line 87
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 88
    .line 89
    .line 90
    const/4 v5, 0x0

    .line 91
    iput-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 92
    .line 93
    invoke-virtual {p0, p1, v5}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 94
    .line 95
    .line 96
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 97
    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 98
    .line 99
    .line 100
    if-eqz v4, :cond_2

    .line 101
    .line 102
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 103
    .line 104
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 105
    .line 106
    const/16 v3, 0x43

    .line 107
    .line 108
    invoke-virtual {p1, v3}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 109
    .line 110
    .line 111
    move-result-object p1

    .line 112
    invoke-static {}, Lcom/android/internal/os/SomeArgs;->obtain()Lcom/android/internal/os/SomeArgs;

    .line 113
    .line 114
    .line 115
    move-result-object v3

    .line 116
    iput-object v4, v3, Lcom/android/internal/os/SomeArgs;->arg1:Ljava/lang/Object;

    .line 117
    .line 118
    iput-object v0, v3, Lcom/android/internal/os/SomeArgs;->arg2:Ljava/lang/Object;

    .line 119
    .line 120
    iput-object v3, p1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 121
    .line 122
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 123
    .line 124
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 125
    .line 126
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 127
    .line 128
    iget p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mServiceStartForegroundAnrDelayMs:I

    .line 129
    .line 130
    int-to-long v3, p0

    .line 131
    invoke-virtual {v0, p1, v3, v4}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 132
    .line 133
    .line 134
    goto :goto_1

    .line 135
    :catchall_1
    move-exception p0

    .line 136
    goto :goto_4

    .line 137
    :cond_2
    :goto_1
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 138
    .line 139
    .line 140
    return-void

    .line 141
    :cond_3
    :goto_2
    :try_start_4
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 142
    .line 143
    invoke-virtual {p0}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 144
    .line 145
    .line 146
    monitor-exit v3

    .line 147
    goto :goto_0

    .line 148
    :goto_3
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 149
    :try_start_5
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 150
    .line 151
    .line 152
    throw p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 153
    :goto_4
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 154
    .line 155
    .line 156
    throw p0
.end method

.method public final serviceProcessGoneLocked(Lcom/android/server/am/ServiceRecord;Z)V
    .locals 7

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 8
    .line 9
    iget-object v0, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 10
    .line 11
    monitor-enter v0

    .line 12
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 13
    .line 14
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 15
    .line 16
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 17
    .line 18
    .line 19
    move-result v1

    .line 20
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 21
    .line 22
    .line 23
    move-result-wide v2

    .line 24
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 25
    .line 26
    const/4 v5, 0x0

    .line 27
    invoke-virtual {v4, v5, v1, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setExecuting(ZIJ)V

    .line 28
    .line 29
    .line 30
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 31
    .line 32
    invoke-virtual {v4, v5, v1, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 33
    .line 34
    .line 35
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 36
    .line 37
    invoke-virtual {v4, v5, v1, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setBound(ZIJ)V

    .line 38
    .line 39
    .line 40
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 41
    .line 42
    invoke-virtual {v4, v5, v1, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    .line 43
    .line 44
    .line 45
    monitor-exit v0

    .line 46
    goto :goto_0

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 49
    throw p0

    .line 50
    :cond_0
    :goto_0
    const/16 v6, 0xc

    .line 51
    .line 52
    const/4 v3, 0x1

    .line 53
    const/4 v4, 0x1

    .line 54
    move-object v1, p0

    .line 55
    move-object v2, p1

    .line 56
    move v5, p2

    .line 57
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V

    .line 58
    .line 59
    .line 60
    return-void
.end method

.method public final serviceTimeout(Lcom/android/server/am/ProcessRecord;)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    const-wide/16 v2, 0x40

    .line 6
    .line 7
    :try_start_0
    const-string/jumbo v4, "serviceTimeout()"

    .line 8
    .line 9
    .line 10
    invoke-static {v2, v3, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 11
    .line 12
    .line 13
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 14
    .line 15
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 16
    .line 17
    .line 18
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 19
    :try_start_1
    iget-boolean v5, v1, Lcom/android/server/am/ProcessRecord;->mDebugging:Z

    .line 20
    .line 21
    if-eqz v5, :cond_0

    .line 22
    .line 23
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 24
    .line 25
    invoke-virtual {v0}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 26
    .line 27
    .line 28
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 29
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 30
    .line 31
    .line 32
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 33
    .line 34
    .line 35
    return-void

    .line 36
    :catchall_0
    move-exception v0

    .line 37
    goto/16 :goto_7

    .line 38
    .line 39
    :cond_0
    :try_start_2
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 40
    .line 41
    iget-object v6, v5, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 42
    .line 43
    invoke-virtual {v6}, Landroid/util/ArraySet;->size()I

    .line 44
    .line 45
    .line 46
    move-result v6

    .line 47
    if-eqz v6, :cond_9

    .line 48
    .line 49
    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 50
    .line 51
    if-eqz v6, :cond_9

    .line 52
    .line 53
    iget-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->mKilled:Z

    .line 54
    .line 55
    if-eqz v6, :cond_1

    .line 56
    .line 57
    goto/16 :goto_6

    .line 58
    .line 59
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 60
    .line 61
    .line 62
    move-result-wide v6

    .line 63
    iget-boolean v8, v5, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 64
    .line 65
    if-eqz v8, :cond_2

    .line 66
    .line 67
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 68
    .line 69
    iget-object v8, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 70
    .line 71
    iget-wide v8, v8, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_TIMEOUT:J

    .line 72
    .line 73
    goto :goto_0

    .line 74
    :cond_2
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 75
    .line 76
    iget-object v8, v8, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 77
    .line 78
    iget-wide v8, v8, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_BACKGROUND_TIMEOUT:J

    .line 79
    .line 80
    :goto_0
    sub-long v8, v6, v8

    .line 81
    .line 82
    iget-object v10, v5, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 83
    .line 84
    invoke-virtual {v10}, Landroid/util/ArraySet;->size()I

    .line 85
    .line 86
    .line 87
    move-result v10

    .line 88
    add-int/lit8 v10, v10, -0x1

    .line 89
    .line 90
    const-wide/16 v11, 0x0

    .line 91
    .line 92
    :goto_1
    const/4 v13, 0x0

    .line 93
    if-ltz v10, :cond_5

    .line 94
    .line 95
    iget-object v14, v5, Lcom/android/server/am/ProcessServiceRecord;->mExecutingServices:Landroid/util/ArraySet;

    .line 96
    .line 97
    invoke-virtual {v14, v10}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 98
    .line 99
    .line 100
    move-result-object v14

    .line 101
    check-cast v14, Lcom/android/server/am/ServiceRecord;

    .line 102
    .line 103
    iget-wide v2, v14, Lcom/android/server/am/ServiceRecord;->executingStart:J

    .line 104
    .line 105
    cmp-long v15, v2, v8

    .line 106
    .line 107
    if-gez v15, :cond_3

    .line 108
    .line 109
    goto :goto_2

    .line 110
    :cond_3
    cmp-long v13, v2, v11

    .line 111
    .line 112
    if-lez v13, :cond_4

    .line 113
    .line 114
    move-wide v11, v2

    .line 115
    :cond_4
    add-int/lit8 v10, v10, -0x1

    .line 116
    .line 117
    const-wide/16 v2, 0x40

    .line 118
    .line 119
    goto :goto_1

    .line 120
    :cond_5
    move-object v14, v13

    .line 121
    :goto_2
    if-eqz v14, :cond_6

    .line 122
    .line 123
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 124
    .line 125
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 126
    .line 127
    iget-object v2, v2, Lcom/android/server/am/ProcessList;->mLruProcesses:Ljava/util/ArrayList;

    .line 128
    .line 129
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 130
    .line 131
    .line 132
    move-result v2

    .line 133
    if-eqz v2, :cond_6

    .line 134
    .line 135
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 136
    .line 137
    iget-object v2, v2, Lcom/android/server/utils/AnrTimer;->mFeature:Lcom/android/server/utils/AnrTimer$FeatureDisabled;

    .line 138
    .line 139
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 140
    .line 141
    .line 142
    const-string v2, "ActivityManager"

    .line 143
    .line 144
    new-instance v3, Ljava/lang/StringBuilder;

    .line 145
    .line 146
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 147
    .line 148
    .line 149
    const-string v5, "Timeout executing service: "

    .line 150
    .line 151
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 152
    .line 153
    .line 154
    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 155
    .line 156
    .line 157
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 158
    .line 159
    .line 160
    move-result-object v3

    .line 161
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 162
    .line 163
    .line 164
    new-instance v2, Ljava/io/StringWriter;

    .line 165
    .line 166
    invoke-direct {v2}, Ljava/io/StringWriter;-><init>()V

    .line 167
    .line 168
    .line 169
    new-instance v3, Lcom/android/internal/util/FastPrintWriter;

    .line 170
    .line 171
    const/4 v5, 0x0

    .line 172
    const/16 v8, 0x400

    .line 173
    .line 174
    invoke-direct {v3, v2, v5, v8}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 175
    .line 176
    .line 177
    invoke-virtual {v3, v14}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 178
    .line 179
    .line 180
    const-string v5, "    "

    .line 181
    .line 182
    invoke-virtual {v14, v3, v5}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 183
    .line 184
    .line 185
    invoke-virtual {v3}, Ljava/io/PrintWriter;->close()V

    .line 186
    .line 187
    .line 188
    invoke-virtual {v2}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    .line 189
    .line 190
    .line 191
    move-result-object v2

    .line 192
    iput-object v2, v0, Lcom/android/server/am/ActiveServices;->mLastAnrDump:Ljava/lang/String;

    .line 193
    .line 194
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 195
    .line 196
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 197
    .line 198
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mLastAnrDumpClearer:Lcom/android/server/am/ActiveServices$1;

    .line 199
    .line 200
    invoke-virtual {v2, v3}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 201
    .line 202
    .line 203
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 204
    .line 205
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 206
    .line 207
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mLastAnrDumpClearer:Lcom/android/server/am/ActiveServices$1;

    .line 208
    .line 209
    const-wide/32 v8, 0x6ddd00

    .line 210
    .line 211
    .line 212
    invoke-virtual {v2, v3, v8, v9}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 213
    .line 214
    .line 215
    iget-wide v2, v14, Lcom/android/server/am/ServiceRecord;->executingStart:J

    .line 216
    .line 217
    sub-long/2addr v6, v2

    .line 218
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 219
    .line 220
    invoke-static {v2, v6, v7}, Lcom/android/internal/os/TimeoutRecord;->forServiceExec(Ljava/lang/String;J)Lcom/android/internal/os/TimeoutRecord;

    .line 221
    .line 222
    .line 223
    move-result-object v2

    .line 224
    invoke-virtual {v2, v13}, Lcom/android/internal/os/TimeoutRecord;->setExpiredTimer(Ljava/lang/AutoCloseable;)Lcom/android/internal/os/TimeoutRecord;

    .line 225
    .line 226
    .line 227
    move-result-object v13

    .line 228
    goto :goto_4

    .line 229
    :cond_6
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 230
    .line 231
    invoke-virtual {v2}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 232
    .line 233
    .line 234
    iget-boolean v2, v5, Lcom/android/server/am/ProcessServiceRecord;->mExecServicesFg:Z

    .line 235
    .line 236
    if-eqz v2, :cond_7

    .line 237
    .line 238
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 239
    .line 240
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 241
    .line 242
    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_TIMEOUT:J

    .line 243
    .line 244
    add-long/2addr v11, v2

    .line 245
    goto :goto_3

    .line 246
    :cond_7
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 247
    .line 248
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 249
    .line 250
    iget-wide v2, v2, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_BACKGROUND_TIMEOUT:J

    .line 251
    .line 252
    add-long/2addr v11, v2

    .line 253
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 254
    .line 255
    .line 256
    move-result-wide v2

    .line 257
    sub-long/2addr v11, v2

    .line 258
    :goto_3
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 259
    .line 260
    invoke-virtual {v2, v11, v12, v1}, Lcom/android/server/utils/AnrTimer;->start(JLjava/lang/Object;)V

    .line 261
    .line 262
    .line 263
    :goto_4
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 264
    :try_start_3
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 265
    .line 266
    .line 267
    if-eqz v13, :cond_8

    .line 268
    .line 269
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 270
    .line 271
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAnrHelper:Lcom/android/server/am/AnrHelper;

    .line 272
    .line 273
    invoke-virtual {v0, v1, v13}, Lcom/android/server/am/AnrHelper;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/internal/os/TimeoutRecord;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 274
    .line 275
    .line 276
    :cond_8
    const-wide/16 v1, 0x40

    .line 277
    .line 278
    goto :goto_5

    .line 279
    :catchall_1
    move-exception v0

    .line 280
    const-wide/16 v1, 0x40

    .line 281
    .line 282
    goto :goto_8

    .line 283
    :goto_5
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 284
    .line 285
    .line 286
    return-void

    .line 287
    :cond_9
    :goto_6
    :try_start_4
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mActiveServiceAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 288
    .line 289
    invoke-virtual {v0}, Lcom/android/server/utils/AnrTimer;->discard()V

    .line 290
    .line 291
    .line 292
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 293
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 294
    .line 295
    .line 296
    const-wide/16 v1, 0x40

    .line 297
    .line 298
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 299
    .line 300
    .line 301
    return-void

    .line 302
    :goto_7
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 303
    :try_start_6
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 304
    .line 305
    .line 306
    throw v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 307
    :goto_8
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 308
    .line 309
    .line 310
    throw v0
.end method

.method public final setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V
    .locals 17

    .line 1
    move-object/from16 v7, p0

    .line 2
    .line 3
    move-object/from16 v8, p1

    .line 4
    .line 5
    move/from16 v9, p3

    .line 6
    .line 7
    move-object/from16 v10, p5

    .line 8
    .line 9
    move/from16 v11, p7

    .line 10
    .line 11
    if-eqz v11, :cond_0

    .line 12
    .line 13
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_inBindService:I

    .line 14
    .line 15
    iget v1, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 16
    .line 17
    :goto_0
    move v6, v0

    .line 18
    move v12, v1

    .line 19
    goto :goto_1

    .line 20
    :cond_0
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_noBinding:I

    .line 21
    .line 22
    iget v1, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :goto_1
    const/4 v13, 0x0

    .line 26
    iget-object v14, v7, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 27
    .line 28
    const/4 v15, -0x1

    .line 29
    if-eq v6, v15, :cond_1

    .line 30
    .line 31
    if-ne v12, v15, :cond_a

    .line 32
    .line 33
    :cond_1
    iget-object v4, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 34
    .line 35
    move-object/from16 v0, p0

    .line 36
    .line 37
    move-object/from16 v1, p1

    .line 38
    .line 39
    move/from16 v2, p2

    .line 40
    .line 41
    move/from16 v3, p3

    .line 42
    .line 43
    move-object/from16 v5, p6

    .line 44
    .line 45
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->shouldAllowFgsWhileInUsePermissionLocked(Ljava/lang/String;IILcom/android/server/am/ProcessRecord;Landroid/app/BackgroundStartPrivileges;)I

    .line 46
    .line 47
    .line 48
    move-result v1

    .line 49
    if-ne v6, v15, :cond_2

    .line 50
    .line 51
    move/from16 v16, v1

    .line 52
    .line 53
    goto :goto_2

    .line 54
    :cond_2
    move/from16 v16, v6

    .line 55
    .line 56
    :goto_2
    if-ne v12, v15, :cond_9

    .line 57
    .line 58
    invoke-virtual {v14, v9}, Lcom/android/server/am/ActivityManagerService;->isAllowlistedForFgsStartLOSP(I)Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 59
    .line 60
    .line 61
    move-result-object v12

    .line 62
    iput-object v12, v10, Lcom/android/server/am/ServiceRecord;->mInfoTempFgsAllowListReason:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 63
    .line 64
    move-object/from16 v0, p0

    .line 65
    .line 66
    move/from16 v2, p2

    .line 67
    .line 68
    move/from16 v3, p3

    .line 69
    .line 70
    move-object/from16 v4, p1

    .line 71
    .line 72
    move-object/from16 v5, p5

    .line 73
    .line 74
    move-object/from16 v6, p6

    .line 75
    .line 76
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActiveServices;->shouldAllowFgsStartForegroundNoBindingCheckLocked(IIILjava/lang/String;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;)I

    .line 77
    .line 78
    .line 79
    move-result v0

    .line 80
    if-ne v0, v15, :cond_3

    .line 81
    .line 82
    invoke-virtual {v7, v9}, Lcom/android/server/am/ActiveServices;->canBindingClientStartFgsLocked(I)Ljava/lang/String;

    .line 83
    .line 84
    .line 85
    move-result-object v2

    .line 86
    if-eqz v2, :cond_4

    .line 87
    .line 88
    const/16 v0, 0x36

    .line 89
    .line 90
    goto :goto_3

    .line 91
    :cond_3
    const/4 v2, 0x0

    .line 92
    :cond_4
    :goto_3
    iget-object v3, v14, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 93
    .line 94
    invoke-virtual {v3, v9}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    .line 95
    .line 96
    .line 97
    move-result v3

    .line 98
    :try_start_0
    iget-object v4, v14, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 99
    .line 100
    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 101
    .line 102
    .line 103
    move-result-object v4

    .line 104
    invoke-virtual {v4, v8}, Landroid/content/pm/PackageManager;->getTargetSdkVersion(Ljava/lang/String;)I

    .line 105
    .line 106
    .line 107
    move-result v4
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 108
    goto :goto_4

    .line 109
    :catch_0
    move v4, v15

    .line 110
    :goto_4
    iget-object v5, v14, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 111
    .line 112
    invoke-virtual {v5, v9}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    .line 113
    .line 114
    .line 115
    move-result v5

    .line 116
    and-int/lit8 v5, v5, 0x10

    .line 117
    .line 118
    if-eqz v5, :cond_5

    .line 119
    .line 120
    const/4 v5, 0x1

    .line 121
    goto :goto_5

    .line 122
    :cond_5
    move v5, v13

    .line 123
    :goto_5
    const-string v6, "[callingPackage: "

    .line 124
    .line 125
    const-string v1, "; callingUid: "

    .line 126
    .line 127
    const-string v15, "; uidState: "

    .line 128
    .line 129
    invoke-static {v9, v6, v8, v1, v15}, Lcom/android/server/StorageManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 130
    .line 131
    .line 132
    move-result-object v1

    .line 133
    invoke-static {v3}, Landroid/app/ActivityManager;->procStateToString(I)Ljava/lang/String;

    .line 134
    .line 135
    .line 136
    move-result-object v3

    .line 137
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 138
    .line 139
    .line 140
    const-string v3, "; uidBFSL: "

    .line 141
    .line 142
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 143
    .line 144
    .line 145
    if-eqz v5, :cond_6

    .line 146
    .line 147
    const-string v3, "[BFSL]"

    .line 148
    .line 149
    goto :goto_6

    .line 150
    :cond_6
    const-string/jumbo v3, "n/a"

    .line 151
    .line 152
    .line 153
    :goto_6
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 154
    .line 155
    .line 156
    const-string v3, "; intent: "

    .line 157
    .line 158
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 159
    .line 160
    .line 161
    move-object/from16 v3, p4

    .line 162
    .line 163
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 164
    .line 165
    .line 166
    const-string v3, "; code:"

    .line 167
    .line 168
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 169
    .line 170
    .line 171
    invoke-static {v0}, Landroid/os/PowerExemptionManager;->reasonCodeToString(I)Ljava/lang/String;

    .line 172
    .line 173
    .line 174
    move-result-object v3

    .line 175
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 176
    .line 177
    .line 178
    const-string v3, "; tempAllowListReason:<"

    .line 179
    .line 180
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 181
    .line 182
    .line 183
    if-nez v12, :cond_7

    .line 184
    .line 185
    const/4 v3, 0x0

    .line 186
    goto :goto_7

    .line 187
    :cond_7
    new-instance v3, Ljava/lang/StringBuilder;

    .line 188
    .line 189
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 190
    .line 191
    .line 192
    iget-object v5, v12, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mReason:Ljava/lang/String;

    .line 193
    .line 194
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 195
    .line 196
    .line 197
    const-string v5, ",reasonCode:"

    .line 198
    .line 199
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 200
    .line 201
    .line 202
    iget v5, v12, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mReasonCode:I

    .line 203
    .line 204
    invoke-static {v5}, Landroid/os/PowerExemptionManager;->reasonCodeToString(I)Ljava/lang/String;

    .line 205
    .line 206
    .line 207
    move-result-object v5

    .line 208
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 209
    .line 210
    .line 211
    const-string v5, ",duration:"

    .line 212
    .line 213
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 214
    .line 215
    .line 216
    iget-wide v5, v12, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mDuration:J

    .line 217
    .line 218
    invoke-virtual {v3, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 219
    .line 220
    .line 221
    const-string v5, ",callingUid:"

    .line 222
    .line 223
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 224
    .line 225
    .line 226
    iget v5, v12, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mCallingUid:I

    .line 227
    .line 228
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 229
    .line 230
    .line 231
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 232
    .line 233
    .line 234
    move-result-object v3

    .line 235
    :goto_7
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 236
    .line 237
    .line 238
    const-string v3, ">; targetSdkVersion:"

    .line 239
    .line 240
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 241
    .line 242
    .line 243
    iget-object v3, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 244
    .line 245
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 246
    .line 247
    const-string v5, "; callerTargetSdkVersion:"

    .line 248
    .line 249
    const-string v6, "; startForegroundCount:"

    .line 250
    .line 251
    invoke-static {v3, v4, v5, v6, v1}, Lcom/android/server/ServiceKeeper$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 252
    .line 253
    .line 254
    iget v3, v10, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 255
    .line 256
    const-string v4, "; bindFromPackage:"

    .line 257
    .line 258
    const-string v5, ": isBindService:"

    .line 259
    .line 260
    invoke-static {v3, v4, v2, v5, v1}, Lcom/android/server/alarm/AlarmManagerService$DeliveryTracker$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 261
    .line 262
    .line 263
    const-string v2, "]"

    .line 264
    .line 265
    invoke-static {v2, v1, v11}, Landroid/hardware/biometrics/face/V1_0/OptionalBool$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)Ljava/lang/String;

    .line 266
    .line 267
    .line 268
    move-result-object v1

    .line 269
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 270
    .line 271
    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 272
    .line 273
    .line 274
    move-result v2

    .line 275
    if-nez v2, :cond_8

    .line 276
    .line 277
    iput-boolean v13, v10, Lcom/android/server/am/ServiceRecord;->mLoggedInfoAllowStartForeground:Z

    .line 278
    .line 279
    iput-object v1, v10, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 280
    .line 281
    :cond_8
    move v12, v0

    .line 282
    :cond_9
    move/from16 v6, v16

    .line 283
    .line 284
    :cond_a
    if-eqz v11, :cond_b

    .line 285
    .line 286
    iput v6, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_inBindService:I

    .line 287
    .line 288
    iput v12, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 289
    .line 290
    goto :goto_a

    .line 291
    :cond_b
    if-nez p8, :cond_c

    .line 292
    .line 293
    iput v6, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_noBinding:I

    .line 294
    .line 295
    iput v12, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 296
    .line 297
    const/4 v1, -0x1

    .line 298
    goto :goto_8

    .line 299
    :cond_c
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 300
    .line 301
    const/4 v1, -0x1

    .line 302
    if-ne v0, v1, :cond_d

    .line 303
    .line 304
    iput v6, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 305
    .line 306
    :cond_d
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 307
    .line 308
    if-ne v0, v1, :cond_e

    .line 309
    .line 310
    iput v12, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 311
    .line 312
    :cond_e
    :goto_8
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 313
    .line 314
    if-ne v0, v1, :cond_10

    .line 315
    .line 316
    new-instance v0, Landroid/util/ArraySet;

    .line 317
    .line 318
    invoke-direct {v0}, Landroid/util/ArraySet;-><init>()V

    .line 319
    .line 320
    .line 321
    iget-object v1, v14, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 322
    .line 323
    new-instance v2, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda2;

    .line 324
    .line 325
    const/4 v3, 0x1

    .line 326
    invoke-direct {v2, v7, v9, v0, v3}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/am/ActiveServices;ILandroid/util/ArraySet;I)V

    .line 327
    .line 328
    .line 329
    invoke-virtual {v1, v2, v13}, Lcom/android/server/am/ProcessList;->searchEachLruProcessesLOSP(Ljava/util/function/Function;Z)Ljava/lang/Object;

    .line 330
    .line 331
    .line 332
    move-result-object v0

    .line 333
    check-cast v0, Ljava/lang/Integer;

    .line 334
    .line 335
    if-nez v0, :cond_f

    .line 336
    .line 337
    const/4 v1, -0x1

    .line 338
    goto :goto_9

    .line 339
    :cond_f
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 340
    .line 341
    .line 342
    move-result v1

    .line 343
    :goto_9
    iput v1, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 344
    .line 345
    :cond_10
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 346
    .line 347
    const/4 v1, -0x1

    .line 348
    if-ne v0, v1, :cond_11

    .line 349
    .line 350
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowWiu_byBindings:I

    .line 351
    .line 352
    iput v0, v10, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 353
    .line 354
    :cond_11
    :goto_a
    return-void
.end method

.method public final setServiceForegroundInnerLocked(Lcom/android/server/am/ServiceRecord;ILandroid/app/Notification;III)V
    .locals 48

    .line 1
    move-object/from16 v10, p0

    .line 2
    .line 3
    move-object/from16 v11, p1

    .line 4
    .line 5
    move/from16 v0, p2

    .line 6
    .line 7
    move-object/from16 v12, p3

    .line 8
    .line 9
    move/from16 v13, p5

    .line 10
    .line 11
    const-string v14, "Service.startForeground() not allowed due to mAllowStartForeground false: service "

    .line 12
    .line 13
    const-string v15, "Foreground service started from background can not have location/camera/microphone access: service "

    .line 14
    .line 15
    const-string/jumbo v9, "startForegroundDelayMs:"

    .line 16
    .line 17
    .line 18
    const-string v8, "Time limit already exhausted for foreground service type "

    .line 19
    .line 20
    const-string v1, "Service.startForeground() not allowed due to bg restriction: service "

    .line 21
    .line 22
    const-string v2, "Service.startForeground() not allowed due to app op: service "

    .line 23
    .line 24
    const/4 v5, 0x1

    .line 25
    if-eqz v0, :cond_44

    .line 26
    .line 27
    if-eqz v12, :cond_43

    .line 28
    .line 29
    const-string/jumbo v3, "startForeground(): "

    .line 30
    .line 31
    .line 32
    invoke-static {v3, v11}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 33
    .line 34
    .line 35
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 36
    .line 37
    invoke-virtual {v3}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    .line 38
    .line 39
    .line 40
    move-result v3

    .line 41
    if-eqz v3, :cond_2

    .line 42
    .line 43
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 44
    .line 45
    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 46
    .line 47
    .line 48
    move-result-object v3

    .line 49
    iget-object v7, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 50
    .line 51
    iget v4, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 52
    .line 53
    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 54
    .line 55
    const/16 v6, 0x44

    .line 56
    .line 57
    invoke-virtual {v3, v6, v4, v7}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 58
    .line 59
    .line 60
    move-result v3

    .line 61
    if-eqz v3, :cond_3

    .line 62
    .line 63
    if-eq v3, v5, :cond_1

    .line 64
    .line 65
    const/4 v6, 0x2

    .line 66
    if-eq v3, v6, :cond_0

    .line 67
    .line 68
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 69
    .line 70
    const-string v4, "android.permission.INSTANT_APP_FOREGROUND_SERVICE"

    .line 71
    .line 72
    iget-object v7, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 73
    .line 74
    invoke-virtual {v7}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 75
    .line 76
    .line 77
    move-result v7

    .line 78
    iget-object v6, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 79
    .line 80
    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 81
    .line 82
    const-string/jumbo v5, "startForeground"

    .line 83
    .line 84
    .line 85
    invoke-virtual {v3, v7, v6, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforcePermission(IILjava/lang/String;Ljava/lang/String;)V

    .line 86
    .line 87
    .line 88
    goto :goto_0

    .line 89
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    .line 90
    .line 91
    new-instance v1, Ljava/lang/StringBuilder;

    .line 92
    .line 93
    const-string v2, "Instant app "

    .line 94
    .line 95
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 96
    .line 97
    .line 98
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 99
    .line 100
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 101
    .line 102
    const-string v3, " does not have permission to create foreground services"

    .line 103
    .line 104
    invoke-static {v1, v2, v3}, Landroid/hardware/audio/common/V2_0/AudioOffloadInfo$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 105
    .line 106
    .line 107
    move-result-object v1

    .line 108
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 109
    .line 110
    .line 111
    throw v0

    .line 112
    :cond_1
    const-string v0, "ActivityManager"

    .line 113
    .line 114
    new-instance v1, Ljava/lang/StringBuilder;

    .line 115
    .line 116
    const-string v2, "Instant app "

    .line 117
    .line 118
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 119
    .line 120
    .line 121
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 122
    .line 123
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 124
    .line 125
    const-string v3, " does not have permission to create foreground services, ignoring."

    .line 126
    .line 127
    invoke-static {v1, v2, v3, v0}, Lcom/android/server/ProfileService$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 128
    .line 129
    .line 130
    return-void

    .line 131
    :cond_2
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 132
    .line 133
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 134
    .line 135
    const/16 v4, 0x1c

    .line 136
    .line 137
    if-lt v3, v4, :cond_3

    .line 138
    .line 139
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 140
    .line 141
    const-string v4, "android.permission.FOREGROUND_SERVICE"

    .line 142
    .line 143
    iget-object v5, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 144
    .line 145
    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 146
    .line 147
    .line 148
    move-result v5

    .line 149
    iget-object v6, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 150
    .line 151
    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 152
    .line 153
    const-string/jumbo v7, "startForeground"

    .line 154
    .line 155
    .line 156
    invoke-virtual {v3, v5, v6, v4, v7}, Lcom/android/server/am/ActivityManagerService;->enforcePermission(IILjava/lang/String;Ljava/lang/String;)V

    .line 157
    .line 158
    .line 159
    :cond_3
    :goto_0
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 160
    .line 161
    invoke-virtual {v3}, Landroid/content/pm/ServiceInfo;->getForegroundServiceType()I

    .line 162
    .line 163
    .line 164
    move-result v3

    .line 165
    const/4 v4, -0x1

    .line 166
    if-ne v13, v4, :cond_4

    .line 167
    .line 168
    move v5, v3

    .line 169
    goto :goto_1

    .line 170
    :cond_4
    move v5, v13

    .line 171
    :goto_1
    and-int v6, v5, v3

    .line 172
    .line 173
    if-eq v6, v5, :cond_6

    .line 174
    .line 175
    const-string/jumbo v6, "debug.skip_fgs_manifest_type_check"

    .line 176
    .line 177
    .line 178
    const/4 v7, 0x0

    .line 179
    invoke-static {v6, v7}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    .line 180
    .line 181
    .line 182
    move-result v6

    .line 183
    if-nez v6, :cond_6

    .line 184
    .line 185
    new-instance v6, Ljava/lang/StringBuilder;

    .line 186
    .line 187
    const-string/jumbo v7, "foregroundServiceType "

    .line 188
    .line 189
    .line 190
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 191
    .line 192
    .line 193
    const-string v7, "0x%08X"

    .line 194
    .line 195
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 196
    .line 197
    .line 198
    move-result-object v20

    .line 199
    filled-new-array/range {v20 .. v20}, [Ljava/lang/Object;

    .line 200
    .line 201
    .line 202
    move-result-object v4

    .line 203
    invoke-static {v7, v4}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 204
    .line 205
    .line 206
    move-result-object v4

    .line 207
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 208
    .line 209
    .line 210
    const-string v4, " is not a subset of foregroundServiceType attribute "

    .line 211
    .line 212
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 213
    .line 214
    .line 215
    const-string v4, "0x%08X"

    .line 216
    .line 217
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 218
    .line 219
    .line 220
    move-result-object v3

    .line 221
    filled-new-array {v3}, [Ljava/lang/Object;

    .line 222
    .line 223
    .line 224
    move-result-object v3

    .line 225
    invoke-static {v4, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 226
    .line 227
    .line 228
    move-result-object v3

    .line 229
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 230
    .line 231
    .line 232
    const-string v3, " in service element of manifest file"

    .line 233
    .line 234
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 235
    .line 236
    .line 237
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 238
    .line 239
    .line 240
    move-result-object v3

    .line 241
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 242
    .line 243
    invoke-virtual {v4}, Landroid/content/pm/ApplicationInfo;->isInstantApp()Z

    .line 244
    .line 245
    .line 246
    move-result v4

    .line 247
    if-eqz v4, :cond_5

    .line 248
    .line 249
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 250
    .line 251
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 252
    .line 253
    const-wide/32 v6, 0xf8f6317

    .line 254
    .line 255
    .line 256
    invoke-static {v6, v7, v4}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 257
    .line 258
    .line 259
    move-result v4

    .line 260
    if-nez v4, :cond_5

    .line 261
    .line 262
    const-string v4, "ActivityManager"

    .line 263
    .line 264
    new-instance v6, Ljava/lang/StringBuilder;

    .line 265
    .line 266
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 267
    .line 268
    .line 269
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 270
    .line 271
    .line 272
    const-string v3, "\nThis will be an exception once the target SDK level is UDC"

    .line 273
    .line 274
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 275
    .line 276
    .line 277
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 278
    .line 279
    .line 280
    move-result-object v3

    .line 281
    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 282
    .line 283
    .line 284
    goto :goto_2

    .line 285
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 286
    .line 287
    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 288
    .line 289
    .line 290
    throw v0

    .line 291
    :cond_6
    :goto_2
    and-int/lit16 v3, v5, 0x800

    .line 292
    .line 293
    const/16 v4, 0x800

    .line 294
    .line 295
    if-eqz v3, :cond_7

    .line 296
    .line 297
    if-eq v5, v4, :cond_7

    .line 298
    .line 299
    const-string v3, "ActivityManager"

    .line 300
    .line 301
    const-string/jumbo v6, "startForeground(): FOREGROUND_SERVICE_TYPE_SHORT_SERVICE is combined with other types. SHORT_SERVICE will be ignored."

    .line 302
    .line 303
    .line 304
    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 305
    .line 306
    .line 307
    and-int/lit16 v5, v5, -0x801

    .line 308
    .line 309
    :cond_7
    move v7, v5

    .line 310
    iget-boolean v6, v11, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 311
    .line 312
    if-eqz v6, :cond_8

    .line 313
    .line 314
    const/4 v3, 0x0

    .line 315
    iput-boolean v3, v11, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 316
    .line 317
    iput-boolean v3, v11, Lcom/android/server/am/ServiceRecord;->fgWaiting:Z

    .line 318
    .line 319
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mServiceFGAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 320
    .line 321
    invoke-virtual {v3, v11}, Lcom/android/server/utils/AnrTimer;->cancel(Ljava/lang/Object;)V

    .line 322
    .line 323
    .line 324
    const/16 v20, 0x1

    .line 325
    .line 326
    const/16 v21, 0x1

    .line 327
    .line 328
    goto :goto_3

    .line 329
    :cond_8
    const/16 v20, 0x0

    .line 330
    .line 331
    const/16 v21, 0x0

    .line 332
    .line 333
    :goto_3
    invoke-virtual {v10, v7, v11}, Lcom/android/server/am/ActiveServices;->shouldAllowBootCompletedStart(ILcom/android/server/am/ServiceRecord;)Z

    .line 334
    .line 335
    .line 336
    move-result v3

    .line 337
    if-eqz v3, :cond_42

    .line 338
    .line 339
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 340
    .line 341
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 342
    .line 343
    :try_start_0
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 344
    .line 345
    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 346
    .line 347
    .line 348
    move-result-object v3

    .line 349
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 350
    .line 351
    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 352
    .line 353
    move/from16 v23, v6

    .line 354
    .line 355
    iget-object v6, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 356
    .line 357
    move-object/from16 v24, v8

    .line 358
    .line 359
    const/16 v8, 0x4c

    .line 360
    .line 361
    invoke-virtual {v3, v8, v4, v6}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 362
    .line 363
    .line 364
    move-result v3

    .line 365
    const/4 v8, 0x3

    .line 366
    const/4 v6, 0x1

    .line 367
    if-eqz v3, :cond_b

    .line 368
    .line 369
    if-eq v3, v6, :cond_a

    .line 370
    .line 371
    if-ne v3, v8, :cond_9

    .line 372
    .line 373
    goto :goto_4

    .line 374
    :cond_9
    new-instance v0, Ljava/lang/SecurityException;

    .line 375
    .line 376
    const-string v1, "Foreground not allowed as per app op"

    .line 377
    .line 378
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 379
    .line 380
    .line 381
    throw v0

    .line 382
    :catchall_0
    move-exception v0

    .line 383
    goto/16 :goto_29

    .line 384
    .line 385
    :cond_a
    const-string v3, "ActivityManager"

    .line 386
    .line 387
    new-instance v4, Ljava/lang/StringBuilder;

    .line 388
    .line 389
    invoke-direct {v4, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 390
    .line 391
    .line 392
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 393
    .line 394
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 395
    .line 396
    .line 397
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 398
    .line 399
    .line 400
    move-result-object v2

    .line 401
    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 402
    .line 403
    .line 404
    move v2, v6

    .line 405
    goto :goto_5

    .line 406
    :cond_b
    :goto_4
    const/4 v2, 0x0

    .line 407
    :goto_5
    if-nez v2, :cond_c

    .line 408
    .line 409
    :try_start_1
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 410
    .line 411
    invoke-virtual {v10, v3}, Lcom/android/server/am/ActiveServices;->isForegroundServiceAllowedInBackgroundRestricted(Lcom/android/server/am/ProcessRecord;)Z

    .line 412
    .line 413
    .line 414
    move-result v3

    .line 415
    if-nez v3, :cond_c

    .line 416
    .line 417
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 418
    .line 419
    iget v3, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 420
    .line 421
    invoke-virtual {v10, v3}, Lcom/android/server/am/ActiveServices;->isTempAllowedByAlarmClock(I)Z

    .line 422
    .line 423
    .line 424
    move-result v3

    .line 425
    if-nez v3, :cond_c

    .line 426
    .line 427
    const-string v2, "ActivityManager"

    .line 428
    .line 429
    new-instance v3, Ljava/lang/StringBuilder;

    .line 430
    .line 431
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 432
    .line 433
    .line 434
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 435
    .line 436
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 437
    .line 438
    .line 439
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 440
    .line 441
    .line 442
    move-result-object v1

    .line 443
    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 444
    .line 445
    .line 446
    const/4 v4, 0x0

    .line 447
    :try_start_2
    invoke-virtual {v10, v5, v4}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 448
    .line 449
    .line 450
    move/from16 v1, p6

    .line 451
    .line 452
    move/from16 v17, v6

    .line 453
    .line 454
    goto :goto_6

    .line 455
    :catchall_1
    move-exception v0

    .line 456
    const/4 v4, 0x0

    .line 457
    goto/16 :goto_29

    .line 458
    .line 459
    :cond_c
    const/4 v4, 0x0

    .line 460
    move/from16 v1, p6

    .line 461
    .line 462
    move/from16 v17, v2

    .line 463
    .line 464
    :goto_6
    invoke-virtual {v10, v1, v11}, Lcom/android/server/am/ActiveServices;->isBgFgsRestrictionEnabled(ILcom/android/server/am/ServiceRecord;)Z

    .line 465
    .line 466
    .line 467
    move-result v19

    .line 468
    iget v3, v11, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 469
    .line 470
    move-object/from16 v25, v9

    .line 471
    .line 472
    if-nez v17, :cond_31

    .line 473
    .line 474
    const/16 v1, 0x800

    .line 475
    .line 476
    if-ne v7, v1, :cond_e

    .line 477
    .line 478
    :try_start_3
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 479
    .line 480
    if-eqz v1, :cond_d

    .line 481
    .line 482
    goto :goto_8

    .line 483
    :cond_d
    new-instance v0, Landroid/app/StartForegroundCalledOnStoppedServiceException;

    .line 484
    .line 485
    const-string/jumbo v1, "startForeground(SHORT_SERVICE) called on a service that\'s not started."

    .line 486
    .line 487
    .line 488
    invoke-direct {v0, v1}, Landroid/app/StartForegroundCalledOnStoppedServiceException;-><init>(Ljava/lang/String;)V

    .line 489
    .line 490
    .line 491
    throw v0

    .line 492
    :catchall_2
    move-exception v0

    .line 493
    :goto_7
    move-object/from16 v10, p0

    .line 494
    .line 495
    goto/16 :goto_29

    .line 496
    .line 497
    :cond_e
    :goto_8
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isShortFgs()Z

    .line 498
    .line 499
    .line 500
    move-result v28

    .line 501
    const/16 v1, 0x800

    .line 502
    .line 503
    if-ne v7, v1, :cond_f

    .line 504
    .line 505
    move/from16 v22, v6

    .line 506
    .line 507
    goto :goto_9

    .line 508
    :cond_f
    move/from16 v22, v4

    .line 509
    .line 510
    :goto_9
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 511
    .line 512
    .line 513
    move-result-wide v1

    .line 514
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 515
    .line 516
    if-nez v4, :cond_10

    .line 517
    .line 518
    move/from16 v31, v7

    .line 519
    .line 520
    const-wide/16 v6, 0x0

    .line 521
    .line 522
    goto :goto_a

    .line 523
    :cond_10
    invoke-virtual {v4}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getTimeoutTime()J

    .line 524
    .line 525
    .line 526
    move-result-wide v29

    .line 527
    move/from16 v31, v7

    .line 528
    .line 529
    move-wide/from16 v6, v29

    .line 530
    .line 531
    :goto_a
    invoke-virtual {v11, v6, v7, v1, v2}, Lcom/android/server/am/ServiceRecord;->shouldTriggerShortFgsTimedEvent(JJ)Z

    .line 532
    .line 533
    .line 534
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 535
    .line 536
    if-eqz v1, :cond_15

    .line 537
    .line 538
    if-eqz v28, :cond_15

    .line 539
    .line 540
    const/4 v1, -0x1

    .line 541
    :try_start_4
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 542
    .line 543
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 544
    .line 545
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 546
    .line 547
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 548
    .line 549
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 550
    .line 551
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 552
    .line 553
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 554
    .line 555
    .line 556
    move-result v4

    .line 557
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 558
    .line 559
    iget v6, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 560
    .line 561
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 562
    .line 563
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 564
    .line 565
    .line 566
    move-result-object v7

    .line 567
    sget-object v24, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 568
    .line 569
    const/16 v25, 0x0

    .line 570
    .line 571
    const/16 v29, 0x0

    .line 572
    .line 573
    move-object/from16 v1, p0

    .line 574
    .line 575
    move v10, v3

    .line 576
    move v3, v4

    .line 577
    const/4 v9, 0x0

    .line 578
    move v4, v6

    .line 579
    move-object/from16 v32, v5

    .line 580
    .line 581
    const/4 v6, 0x1

    .line 582
    move-object v5, v7

    .line 583
    move/from16 v18, v23

    .line 584
    .line 585
    const/4 v7, 0x2

    .line 586
    move-object/from16 v6, p1

    .line 587
    .line 588
    move/from16 v35, v31

    .line 589
    .line 590
    move-object/from16 v7, v24

    .line 591
    .line 592
    move/from16 v16, v8

    .line 593
    .line 594
    move/from16 v8, v25

    .line 595
    .line 596
    move/from16 v23, v10

    .line 597
    .line 598
    move v10, v9

    .line 599
    move/from16 v9, v29

    .line 600
    .line 601
    :try_start_5
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 602
    .line 603
    .line 604
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 605
    .line 606
    .line 607
    move-result v1

    .line 608
    if-nez v1, :cond_11

    .line 609
    .line 610
    const-string v1, "ActivityManager"

    .line 611
    .line 612
    const-string v2, "FGS type change to/from SHORT_SERVICE:  BFSL DENIED."

    .line 613
    .line 614
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 615
    .line 616
    .line 617
    :cond_11
    if-eqz v19, :cond_13

    .line 618
    .line 619
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 620
    .line 621
    .line 622
    move-result v1

    .line 623
    if-eqz v1, :cond_12

    .line 624
    .line 625
    goto :goto_b

    .line 626
    :cond_12
    if-eqz v22, :cond_14

    .line 627
    .line 628
    move v1, v10

    .line 629
    const/4 v5, 0x1

    .line 630
    goto :goto_c

    .line 631
    :cond_13
    :goto_b
    if-eqz v22, :cond_14

    .line 632
    .line 633
    move v5, v10

    .line 634
    const/4 v1, 0x1

    .line 635
    goto :goto_c

    .line 636
    :cond_14
    move v1, v10

    .line 637
    move v5, v1

    .line 638
    :goto_c
    move v13, v1

    .line 639
    move v12, v5

    .line 640
    const/4 v0, 0x1

    .line 641
    const/16 v33, 0x1

    .line 642
    .line 643
    move-object/from16 v10, p0

    .line 644
    .line 645
    goto/16 :goto_19

    .line 646
    .line 647
    :catchall_3
    move-exception v0

    .line 648
    const/4 v10, 0x0

    .line 649
    goto/16 :goto_7

    .line 650
    .line 651
    :cond_15
    move-object/from16 v32, v5

    .line 652
    .line 653
    move/from16 v16, v8

    .line 654
    .line 655
    move/from16 v18, v23

    .line 656
    .line 657
    move/from16 v35, v31

    .line 658
    .line 659
    const/4 v10, 0x0

    .line 660
    move/from16 v23, v3

    .line 661
    .line 662
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 663
    .line 664
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 665
    .line 666
    const-wide/32 v8, 0x12f13d8d

    .line 667
    .line 668
    .line 669
    invoke-static {v8, v9, v1}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 670
    .line 671
    .line 672
    move-result v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 673
    if-eqz v1, :cond_20

    .line 674
    .line 675
    :try_start_6
    invoke-static {}, Landroid/app/Flags;->introduceNewServiceOntimeoutCallback()Z

    .line 676
    .line 677
    .line 678
    move-result v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_6

    .line 679
    if-eqz v1, :cond_20

    .line 680
    .line 681
    move-object/from16 v7, p0

    .line 682
    .line 683
    move/from16 v6, v35

    .line 684
    .line 685
    :try_start_7
    invoke-virtual {v7, v6}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 686
    .line 687
    .line 688
    move-result v1

    .line 689
    if-eqz v1, :cond_1f

    .line 690
    .line 691
    const/4 v1, -0x1

    .line 692
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_noBinding:I

    .line 693
    .line 694
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_inBindService:I

    .line 695
    .line 696
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStart_byBindings:I

    .line 697
    .line 698
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 699
    .line 700
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 701
    .line 702
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 703
    .line 704
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 705
    .line 706
    .line 707
    move-result v3

    .line 708
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 709
    .line 710
    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 711
    .line 712
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 713
    .line 714
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 715
    .line 716
    .line 717
    move-result-object v5

    .line 718
    sget-object v22, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_5

    .line 719
    .line 720
    const/16 v25, 0x0

    .line 721
    .line 722
    const/16 v26, 0x0

    .line 723
    .line 724
    move-object/from16 v1, p0

    .line 725
    .line 726
    move v10, v6

    .line 727
    move-object/from16 v6, p1

    .line 728
    .line 729
    move-object/from16 v7, v22

    .line 730
    .line 731
    move-object/from16 v9, v24

    .line 732
    .line 733
    move/from16 v8, v25

    .line 734
    .line 735
    move-object v12, v9

    .line 736
    move/from16 v9, v26

    .line 737
    .line 738
    :try_start_8
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_6

    .line 739
    .line 740
    .line 741
    if-eqz v19, :cond_16

    .line 742
    .line 743
    :try_start_9
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 744
    .line 745
    .line 746
    move-result v1
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 747
    if-eqz v1, :cond_17

    .line 748
    .line 749
    :cond_16
    move-object/from16 v9, p0

    .line 750
    .line 751
    goto :goto_d

    .line 752
    :cond_17
    const-wide/16 v4, 0x0

    .line 753
    .line 754
    const/4 v6, 0x2

    .line 755
    move-object/from16 v9, p0

    .line 756
    .line 757
    goto/16 :goto_12

    .line 758
    .line 759
    :goto_d
    :try_start_a
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 760
    .line 761
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 762
    .line 763
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 764
    .line 765
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 766
    .line 767
    .line 768
    move-result-object v1

    .line 769
    check-cast v1, Landroid/util/SparseArray;

    .line 770
    .line 771
    if-nez v1, :cond_18

    .line 772
    .line 773
    new-instance v1, Landroid/util/SparseArray;

    .line 774
    .line 775
    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    .line 776
    .line 777
    .line 778
    iget-object v2, v9, Lcom/android/server/am/ActiveServices;->mTimeLimitedFgsInfo:Landroid/util/SparseArray;

    .line 779
    .line 780
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 781
    .line 782
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 783
    .line 784
    invoke-virtual {v2, v3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 785
    .line 786
    .line 787
    goto :goto_f

    .line 788
    :catchall_4
    move-exception v0

    .line 789
    :goto_e
    move-object v10, v9

    .line 790
    goto/16 :goto_29

    .line 791
    .line 792
    :cond_18
    :goto_f
    invoke-virtual {v9, v10}, Lcom/android/server/am/ActiveServices;->getTimeLimitedFgsType(I)I

    .line 793
    .line 794
    .line 795
    move-result v2

    .line 796
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 797
    .line 798
    .line 799
    move-result-object v1

    .line 800
    check-cast v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;

    .line 801
    .line 802
    if-eqz v1, :cond_1e

    .line 803
    .line 804
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 805
    .line 806
    .line 807
    move-result-wide v2

    .line 808
    const-wide/32 v4, 0x5265c00

    .line 809
    .line 810
    .line 811
    sub-long/2addr v2, v4

    .line 812
    const-wide/16 v7, 0x0

    .line 813
    .line 814
    invoke-static {v7, v8, v2, v3}, Ljava/lang/Math;->max(JJ)J

    .line 815
    .line 816
    .line 817
    move-result-wide v2

    .line 818
    invoke-virtual {v1}, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->getTimeLimitExceededAt()J

    .line 819
    .line 820
    .line 821
    move-result-wide v4

    .line 822
    invoke-virtual {v1}, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->getFirstFgsStartRealtime()J

    .line 823
    .line 824
    .line 825
    move-result-wide v24

    .line 826
    cmp-long v2, v24, v2

    .line 827
    .line 828
    const-wide/high16 v7, -0x8000000000000000L

    .line 829
    .line 830
    if-ltz v2, :cond_1d

    .line 831
    .line 832
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 833
    .line 834
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 835
    .line 836
    iget v3, v2, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 837
    .line 838
    const/4 v6, 0x2

    .line 839
    if-le v3, v6, :cond_19

    .line 840
    .line 841
    cmp-long v3, v4, v7

    .line 842
    .line 843
    if-eqz v3, :cond_1a

    .line 844
    .line 845
    iget-wide v2, v2, Lcom/android/server/am/ProcessStateRecord;->mLastTopTime:J

    .line 846
    .line 847
    cmp-long v2, v2, v4

    .line 848
    .line 849
    if-lez v2, :cond_1a

    .line 850
    .line 851
    :cond_19
    :goto_10
    const/4 v2, 0x0

    .line 852
    goto :goto_11

    .line 853
    :cond_1a
    const-wide/16 v2, 0x0

    .line 854
    .line 855
    cmp-long v4, v4, v2

    .line 856
    .line 857
    if-lez v4, :cond_1b

    .line 858
    .line 859
    new-instance v2, Ljava/lang/StringBuilder;

    .line 860
    .line 861
    invoke-direct {v2, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 862
    .line 863
    .line 864
    invoke-static {v10}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 865
    .line 866
    .line 867
    move-result-object v3

    .line 868
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 869
    .line 870
    .line 871
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 872
    .line 873
    .line 874
    move-result-object v2

    .line 875
    invoke-static {}, Landroid/app/Flags;->enableFgsTimeoutCrashBehavior()Z

    .line 876
    .line 877
    .line 878
    move-result v3

    .line 879
    if-nez v3, :cond_1c

    .line 880
    .line 881
    const-string v3, "ActivityManager"

    .line 882
    .line 883
    invoke-static {v3, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 884
    .line 885
    .line 886
    const/4 v2, 0x0

    .line 887
    iput v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mNumParallelServices:I

    .line 888
    .line 889
    const-wide/16 v2, 0x0

    .line 890
    .line 891
    iput-wide v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartUptime:J

    .line 892
    .line 893
    iput-wide v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartRealtime:J

    .line 894
    .line 895
    iput-wide v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 896
    .line 897
    iput-wide v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 898
    .line 899
    iput-wide v7, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTimeLimitExceededAt:J

    .line 900
    .line 901
    :cond_1b
    const-wide/16 v4, 0x0

    .line 902
    .line 903
    goto :goto_12

    .line 904
    :cond_1c
    new-instance v0, Landroid/app/ForegroundServiceStartNotAllowedException;

    .line 905
    .line 906
    invoke-direct {v0, v2}, Landroid/app/ForegroundServiceStartNotAllowedException;-><init>(Ljava/lang/String;)V

    .line 907
    .line 908
    .line 909
    throw v0

    .line 910
    :cond_1d
    const/4 v6, 0x2

    .line 911
    goto :goto_10

    .line 912
    :goto_11
    iput v2, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mNumParallelServices:I

    .line 913
    .line 914
    const-wide/16 v4, 0x0

    .line 915
    .line 916
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartUptime:J

    .line 917
    .line 918
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mFirstFgsStartRealtime:J

    .line 919
    .line 920
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mLastFgsStartTime:J

    .line 921
    .line 922
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTotalRuntime:J

    .line 923
    .line 924
    iput-wide v7, v1, Lcom/android/server/am/ServiceRecord$TimeLimitedFgsInfo;->mTimeLimitExceededAt:J

    .line 925
    .line 926
    goto :goto_12

    .line 927
    :cond_1e
    const-wide/16 v4, 0x0

    .line 928
    .line 929
    const/4 v6, 0x2

    .line 930
    :goto_12
    move/from16 v35, v10

    .line 931
    .line 932
    const/4 v0, 0x1

    .line 933
    const/4 v12, 0x0

    .line 934
    const/4 v13, 0x0

    .line 935
    const/16 v33, 0x1

    .line 936
    .line 937
    move-object v10, v9

    .line 938
    goto/16 :goto_19

    .line 939
    .line 940
    :catchall_5
    move-exception v0

    .line 941
    move-object v9, v7

    .line 942
    goto/16 :goto_e

    .line 943
    .line 944
    :cond_1f
    move v10, v6

    .line 945
    move-object v9, v7

    .line 946
    const-wide/16 v4, 0x0

    .line 947
    .line 948
    const/4 v6, 0x2

    .line 949
    goto :goto_13

    .line 950
    :cond_20
    move/from16 v10, v35

    .line 951
    .line 952
    const-wide/16 v4, 0x0

    .line 953
    .line 954
    const/4 v6, 0x2

    .line 955
    move-object/from16 v9, p0

    .line 956
    .line 957
    goto :goto_13

    .line 958
    :catchall_6
    move-exception v0

    .line 959
    move-object/from16 v9, p0

    .line 960
    .line 961
    goto/16 :goto_e

    .line 962
    .line 963
    :goto_13
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 964
    .line 965
    if-nez v1, :cond_24

    .line 966
    .line 967
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 968
    .line 969
    if-nez v1, :cond_23

    .line 970
    .line 971
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 972
    .line 973
    .line 974
    move-result-wide v1

    .line 975
    iget-wide v7, v11, Lcom/android/server/am/ServiceRecord;->createRealTime:J

    .line 976
    .line 977
    sub-long v7, v1, v7

    .line 978
    .line 979
    iget-object v1, v9, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 980
    .line 981
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 982
    .line 983
    iget-wide v1, v1, Lcom/android/server/am/ActivityManagerConstants;->mFgsStartForegroundTimeoutMs:J

    .line 984
    .line 985
    cmp-long v1, v7, v1

    .line 986
    .line 987
    if-lez v1, :cond_22

    .line 988
    .line 989
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActiveServices;->resetFgsRestrictionLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 990
    .line 991
    .line 992
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 993
    .line 994
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 995
    .line 996
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 997
    .line 998
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 999
    .line 1000
    .line 1001
    move-result v3

    .line 1002
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1003
    .line 1004
    iget v12, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1005
    .line 1006
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 1007
    .line 1008
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 1009
    .line 1010
    .line 1011
    move-result-object v22

    .line 1012
    sget-object v24, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    .line 1013
    .line 1014
    const/16 v26, 0x0

    .line 1015
    .line 1016
    const/16 v27, 0x0

    .line 1017
    .line 1018
    move-object/from16 v1, p0

    .line 1019
    .line 1020
    move-wide/from16 v29, v4

    .line 1021
    .line 1022
    move v4, v12

    .line 1023
    move-object/from16 v5, v22

    .line 1024
    .line 1025
    move v12, v6

    .line 1026
    move-object/from16 v6, p1

    .line 1027
    .line 1028
    move-wide v12, v7

    .line 1029
    move-object/from16 v7, v24

    .line 1030
    .line 1031
    move/from16 v8, v26

    .line 1032
    .line 1033
    move/from16 v35, v10

    .line 1034
    .line 1035
    move-object/from16 v0, v25

    .line 1036
    .line 1037
    move-object v10, v9

    .line 1038
    move/from16 v9, v27

    .line 1039
    .line 1040
    :try_start_b
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 1041
    .line 1042
    .line 1043
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1044
    .line 1045
    invoke-direct {v1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1046
    .line 1047
    .line 1048
    invoke-virtual {v1, v12, v13}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1049
    .line 1050
    .line 1051
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1052
    .line 1053
    .line 1054
    move-result-object v0

    .line 1055
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 1056
    .line 1057
    if-eqz v1, :cond_21

    .line 1058
    .line 1059
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1060
    .line 1061
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 1062
    .line 1063
    .line 1064
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 1065
    .line 1066
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1067
    .line 1068
    .line 1069
    const-string v2, "; "

    .line 1070
    .line 1071
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1072
    .line 1073
    .line 1074
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1075
    .line 1076
    .line 1077
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1078
    .line 1079
    .line 1080
    move-result-object v0

    .line 1081
    iput-object v0, v11, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 1082
    .line 1083
    :goto_14
    const/4 v1, 0x0

    .line 1084
    goto :goto_15

    .line 1085
    :cond_21
    iput-object v0, v11, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 1086
    .line 1087
    goto :goto_14

    .line 1088
    :goto_15
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mLoggedInfoAllowStartForeground:Z

    .line 1089
    .line 1090
    const/4 v5, 0x1

    .line 1091
    goto :goto_16

    .line 1092
    :cond_22
    move/from16 v35, v10

    .line 1093
    .line 1094
    move-object v10, v9

    .line 1095
    const/4 v5, 0x0

    .line 1096
    :goto_16
    move/from16 v33, v5

    .line 1097
    .line 1098
    const/4 v0, 0x1

    .line 1099
    :goto_17
    const/4 v12, 0x0

    .line 1100
    const/4 v13, 0x0

    .line 1101
    goto :goto_19

    .line 1102
    :cond_23
    move/from16 v35, v10

    .line 1103
    .line 1104
    move-object v10, v9

    .line 1105
    const/4 v0, 0x1

    .line 1106
    goto :goto_18

    .line 1107
    :cond_24
    move/from16 v35, v10

    .line 1108
    .line 1109
    const/4 v0, 0x1

    .line 1110
    move-object v10, v9

    .line 1111
    if-lt v1, v0, :cond_25

    .line 1112
    .line 1113
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 1114
    .line 1115
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 1116
    .line 1117
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 1118
    .line 1119
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 1120
    .line 1121
    .line 1122
    move-result v3

    .line 1123
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1124
    .line 1125
    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1126
    .line 1127
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 1128
    .line 1129
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 1130
    .line 1131
    .line 1132
    move-result-object v5

    .line 1133
    sget-object v7, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    .line 1134
    .line 1135
    const/4 v8, 0x0

    .line 1136
    const/4 v9, 0x0

    .line 1137
    move-object/from16 v1, p0

    .line 1138
    .line 1139
    move-object/from16 v6, p1

    .line 1140
    .line 1141
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 1142
    .line 1143
    .line 1144
    move/from16 v33, v0

    .line 1145
    .line 1146
    goto :goto_17

    .line 1147
    :cond_25
    :goto_18
    const/4 v12, 0x0

    .line 1148
    const/4 v13, 0x0

    .line 1149
    const/16 v33, 0x0

    .line 1150
    .line 1151
    :goto_19
    if-nez v33, :cond_26

    .line 1152
    .line 1153
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 1154
    .line 1155
    if-nez v1, :cond_26

    .line 1156
    .line 1157
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 1158
    .line 1159
    iget-object v2, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 1160
    .line 1161
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 1162
    .line 1163
    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPid()I

    .line 1164
    .line 1165
    .line 1166
    move-result v3

    .line 1167
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1168
    .line 1169
    iget v4, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1170
    .line 1171
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 1172
    .line 1173
    invoke-virtual {v1}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 1174
    .line 1175
    .line 1176
    move-result-object v5

    .line 1177
    sget-object v7, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    .line 1178
    .line 1179
    const/4 v8, 0x0

    .line 1180
    const/4 v9, 0x1

    .line 1181
    move-object/from16 v1, p0

    .line 1182
    .line 1183
    move-object/from16 v6, p1

    .line 1184
    .line 1185
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 1186
    .line 1187
    .line 1188
    :cond_26
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedWiu_forCapabilities()Z

    .line 1189
    .line 1190
    .line 1191
    move-result v1

    .line 1192
    if-nez v1, :cond_27

    .line 1193
    .line 1194
    const-string v1, "ActivityManager"

    .line 1195
    .line 1196
    new-instance v2, Ljava/lang/StringBuilder;

    .line 1197
    .line 1198
    invoke-direct {v2, v15}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1199
    .line 1200
    .line 1201
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 1202
    .line 1203
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1204
    .line 1205
    .line 1206
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1207
    .line 1208
    .line 1209
    move-result-object v2

    .line 1210
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1211
    .line 1212
    .line 1213
    :cond_27
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->maybeLogFgsLogicChange()V

    .line 1214
    .line 1215
    .line 1216
    if-nez v12, :cond_2a

    .line 1217
    .line 1218
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->logFgsBackgroundStart(Lcom/android/server/am/ServiceRecord;)V

    .line 1219
    .line 1220
    .line 1221
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 1222
    .line 1223
    .line 1224
    move-result v1

    .line 1225
    if-nez v1, :cond_2a

    .line 1226
    .line 1227
    if-eqz v19, :cond_2a

    .line 1228
    .line 1229
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1230
    .line 1231
    invoke-direct {v1, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1232
    .line 1233
    .line 1234
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 1235
    .line 1236
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1237
    .line 1238
    .line 1239
    if-eqz v28, :cond_28

    .line 1240
    .line 1241
    const-string v2, " (Called on SHORT_SERVICE)"

    .line 1242
    .line 1243
    goto :goto_1a

    .line 1244
    :cond_28
    const-string v2, ""

    .line 1245
    .line 1246
    :goto_1a
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1247
    .line 1248
    .line 1249
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1250
    .line 1251
    .line 1252
    move-result-object v9

    .line 1253
    const-string v1, "ActivityManager"

    .line 1254
    .line 1255
    invoke-static {v1, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1256
    .line 1257
    .line 1258
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->showFgsBgRestrictedNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1259
    .line 1260
    .line 1261
    move-object/from16 v12, v32

    .line 1262
    .line 1263
    invoke-virtual {v10, v12, v0}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 1264
    .line 1265
    .line 1266
    const/4 v5, 0x0

    .line 1267
    const/4 v6, 0x0

    .line 1268
    const/4 v7, 0x0

    .line 1269
    const/4 v8, 0x0

    .line 1270
    const/4 v3, 0x3

    .line 1271
    const/4 v4, 0x0

    .line 1272
    move-object/from16 v1, p0

    .line 1273
    .line 1274
    move-object/from16 v2, p1

    .line 1275
    .line 1276
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 1277
    .line 1278
    .line 1279
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1280
    .line 1281
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1282
    .line 1283
    const-wide/32 v2, 0xa5fa937

    .line 1284
    .line 1285
    .line 1286
    invoke-static {v2, v3, v1}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 1287
    .line 1288
    .line 1289
    move-result v1

    .line 1290
    if-nez v1, :cond_29

    .line 1291
    .line 1292
    move v5, v0

    .line 1293
    goto :goto_1b

    .line 1294
    :cond_29
    new-instance v0, Landroid/app/ForegroundServiceStartNotAllowedException;

    .line 1295
    .line 1296
    invoke-direct {v0, v9}, Landroid/app/ForegroundServiceStartNotAllowedException;-><init>(Ljava/lang/String;)V

    .line 1297
    .line 1298
    .line 1299
    throw v0

    .line 1300
    :cond_2a
    move-object/from16 v12, v32

    .line 1301
    .line 1302
    move/from16 v5, v17

    .line 1303
    .line 1304
    :goto_1b
    if-nez v5, :cond_30

    .line 1305
    .line 1306
    if-nez v35, :cond_2b

    .line 1307
    .line 1308
    move/from16 v1, p5

    .line 1309
    .line 1310
    move/from16 v3, v35

    .line 1311
    .line 1312
    const/4 v2, 0x0

    .line 1313
    invoke-virtual {v10, v11, v3, v2, v1}, Lcom/android/server/am/ActiveServices;->validateForegroundServiceType(Lcom/android/server/am/ServiceRecord;III)Landroid/util/Pair;

    .line 1314
    .line 1315
    .line 1316
    move-result-object v1

    .line 1317
    move-object v9, v1

    .line 1318
    goto :goto_1e

    .line 1319
    :cond_2b
    move/from16 v1, p5

    .line 1320
    .line 1321
    move/from16 v3, v35

    .line 1322
    .line 1323
    const/high16 v4, 0x40000000    # 2.0f

    .line 1324
    .line 1325
    and-int v2, v3, v4

    .line 1326
    .line 1327
    if-eqz v2, :cond_2c

    .line 1328
    .line 1329
    goto :goto_1c

    .line 1330
    :cond_2c
    const/4 v4, 0x0

    .line 1331
    :goto_1c
    invoke-static {v3}, Ljava/lang/Integer;->highestOneBit(I)I

    .line 1332
    .line 1333
    .line 1334
    move-result v2

    .line 1335
    move v7, v3

    .line 1336
    const/16 v34, 0x0

    .line 1337
    .line 1338
    :goto_1d
    if-eqz v2, :cond_2e

    .line 1339
    .line 1340
    invoke-virtual {v10, v11, v2, v4, v1}, Lcom/android/server/am/ActiveServices;->validateForegroundServiceType(Lcom/android/server/am/ServiceRecord;III)Landroid/util/Pair;

    .line 1341
    .line 1342
    .line 1343
    move-result-object v6

    .line 1344
    not-int v2, v2

    .line 1345
    and-int/2addr v7, v2

    .line 1346
    iget-object v2, v6, Landroid/util/Pair;->first:Ljava/lang/Object;

    .line 1347
    .line 1348
    check-cast v2, Ljava/lang/Integer;

    .line 1349
    .line 1350
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 1351
    .line 1352
    .line 1353
    move-result v2

    .line 1354
    if-eq v2, v0, :cond_2d

    .line 1355
    .line 1356
    move-object v9, v6

    .line 1357
    goto :goto_1e

    .line 1358
    :cond_2d
    invoke-static {v7}, Ljava/lang/Integer;->highestOneBit(I)I

    .line 1359
    .line 1360
    .line 1361
    move-result v2

    .line 1362
    move-object/from16 v34, v6

    .line 1363
    .line 1364
    goto :goto_1d

    .line 1365
    :cond_2e
    move-object/from16 v9, v34

    .line 1366
    .line 1367
    :goto_1e
    iget-object v1, v9, Landroid/util/Pair;->first:Ljava/lang/Object;

    .line 1368
    .line 1369
    check-cast v1, Ljava/lang/Integer;

    .line 1370
    .line 1371
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 1372
    .line 1373
    .line 1374
    move-result v1

    .line 1375
    iget-object v2, v9, Landroid/util/Pair;->second:Ljava/lang/Object;

    .line 1376
    .line 1377
    if-nez v2, :cond_2f

    .line 1378
    .line 1379
    move v6, v1

    .line 1380
    move/from16 v17, v5

    .line 1381
    .line 1382
    move/from16 v8, v33

    .line 1383
    .line 1384
    goto :goto_1f

    .line 1385
    :cond_2f
    iget-object v0, v9, Landroid/util/Pair;->first:Ljava/lang/Object;

    .line 1386
    .line 1387
    check-cast v0, Ljava/lang/Integer;

    .line 1388
    .line 1389
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 1390
    .line 1391
    .line 1392
    move-result v6

    .line 1393
    const/4 v4, 0x0

    .line 1394
    const/4 v5, 0x0

    .line 1395
    const/4 v7, 0x0

    .line 1396
    const/4 v8, 0x0

    .line 1397
    const/4 v3, 0x3

    .line 1398
    move-object/from16 v1, p0

    .line 1399
    .line 1400
    move-object/from16 v2, p1

    .line 1401
    .line 1402
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 1403
    .line 1404
    .line 1405
    iget-object v0, v9, Landroid/util/Pair;->second:Ljava/lang/Object;

    .line 1406
    .line 1407
    check-cast v0, Ljava/lang/RuntimeException;

    .line 1408
    .line 1409
    throw v0

    .line 1410
    :cond_30
    move/from16 v3, v35

    .line 1411
    .line 1412
    move/from16 v17, v5

    .line 1413
    .line 1414
    move/from16 v8, v33

    .line 1415
    .line 1416
    const/4 v6, 0x0

    .line 1417
    goto :goto_1f

    .line 1418
    :cond_31
    move-object/from16 v10, p0

    .line 1419
    .line 1420
    move-object v12, v5

    .line 1421
    move v0, v6

    .line 1422
    move/from16 v16, v8

    .line 1423
    .line 1424
    move/from16 v18, v23

    .line 1425
    .line 1426
    move/from16 v23, v3

    .line 1427
    .line 1428
    move v3, v7

    .line 1429
    const/4 v6, 0x0

    .line 1430
    const/4 v8, 0x0

    .line 1431
    const/4 v13, 0x0

    .line 1432
    :goto_1f
    if-nez v17, :cond_3c

    .line 1433
    .line 1434
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 1435
    .line 1436
    move/from16 v2, p2

    .line 1437
    .line 1438
    if-eq v1, v2, :cond_32

    .line 1439
    .line 1440
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1441
    .line 1442
    .line 1443
    iput v2, v11, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 1444
    .line 1445
    :cond_32
    move-object/from16 v1, p3

    .line 1446
    .line 1447
    iget v2, v1, Landroid/app/Notification;->flags:I

    .line 1448
    .line 1449
    or-int/lit8 v2, v2, 0x40

    .line 1450
    .line 1451
    iput v2, v1, Landroid/app/Notification;->flags:I

    .line 1452
    .line 1453
    iput-object v1, v11, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 1454
    .line 1455
    iput v3, v11, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 1456
    .line 1457
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 1458
    .line 1459
    if-nez v1, :cond_3a

    .line 1460
    .line 1461
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 1462
    .line 1463
    invoke-virtual {v10, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 1464
    .line 1465
    .line 1466
    move-result-object v1

    .line 1467
    iget-object v2, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 1468
    .line 1469
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1470
    .line 1471
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 1472
    .line 1473
    .line 1474
    move-result-object v2

    .line 1475
    check-cast v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;

    .line 1476
    .line 1477
    if-nez v2, :cond_35

    .line 1478
    .line 1479
    new-instance v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;

    .line 1480
    .line 1481
    invoke-direct {v2}, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;-><init>()V

    .line 1482
    .line 1483
    .line 1484
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1485
    .line 1486
    iput-object v3, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mPackageName:Ljava/lang/String;

    .line 1487
    .line 1488
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1489
    .line 1490
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1491
    .line 1492
    iput v3, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mUid:I

    .line 1493
    .line 1494
    iget-boolean v3, v10, Lcom/android/server/am/ActiveServices;->mScreenOn:Z

    .line 1495
    .line 1496
    iput-boolean v3, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileScreenOn:Z

    .line 1497
    .line 1498
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 1499
    .line 1500
    if-eqz v3, :cond_34

    .line 1501
    .line 1502
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mUidRecord:Lcom/android/server/am/UidRecord;

    .line 1503
    .line 1504
    if-eqz v3, :cond_34

    .line 1505
    .line 1506
    iget v3, v3, Lcom/android/server/am/UidRecord;->mCurProcState:I

    .line 1507
    .line 1508
    const/4 v4, 0x2

    .line 1509
    if-gt v3, v4, :cond_33

    .line 1510
    .line 1511
    move v5, v0

    .line 1512
    goto :goto_20

    .line 1513
    :cond_33
    const/4 v5, 0x0

    .line 1514
    :goto_20
    iput-boolean v5, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileTop:Z

    .line 1515
    .line 1516
    iput-boolean v5, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mAppOnTop:Z

    .line 1517
    .line 1518
    :cond_34
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 1519
    .line 1520
    .line 1521
    move-result-wide v3

    .line 1522
    iput-wide v3, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartVisibleTime:J

    .line 1523
    .line 1524
    iput-wide v3, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartTime:J

    .line 1525
    .line 1526
    iget-object v3, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 1527
    .line 1528
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1529
    .line 1530
    invoke-virtual {v3, v4, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 1531
    .line 1532
    .line 1533
    const-wide/16 v3, 0x0

    .line 1534
    .line 1535
    invoke-static {v1, v3, v4}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 1536
    .line 1537
    .line 1538
    :cond_35
    iget v1, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mNumActive:I

    .line 1539
    .line 1540
    add-int/2addr v1, v0

    .line 1541
    iput v1, v2, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mNumActive:I

    .line 1542
    .line 1543
    iput-boolean v0, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 1544
    .line 1545
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getFgsAllowStart()I

    .line 1546
    .line 1547
    .line 1548
    move-result v1

    .line 1549
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowStartForegroundAtEntering:I

    .line 1550
    .line 1551
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedWiu_forCapabilities()Z

    .line 1552
    .line 1553
    .line 1554
    move-result v1

    .line 1555
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowWhileInUsePermissionInFgsAtEntering:Z

    .line 1556
    .line 1557
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 1558
    .line 1559
    add-int/2addr v1, v0

    .line 1560
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->mStartForegroundCount:I

    .line 1561
    .line 1562
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1563
    .line 1564
    .line 1565
    move-result-wide v1

    .line 1566
    iput-wide v1, v11, Lcom/android/server/am/ServiceRecord;->mFgsEnterTime:J

    .line 1567
    .line 1568
    if-nez v21, :cond_37

    .line 1569
    .line 1570
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1571
    .line 1572
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1573
    .line 1574
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 1575
    .line 1576
    monitor-enter v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_0

    .line 1577
    :try_start_c
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 1578
    .line 1579
    .line 1580
    move-result-object v2

    .line 1581
    if-eqz v2, :cond_36

    .line 1582
    .line 1583
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1584
    .line 1585
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1586
    .line 1587
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 1588
    .line 1589
    .line 1590
    move-result v3

    .line 1591
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1592
    .line 1593
    .line 1594
    move-result-wide v4

    .line 1595
    invoke-virtual {v2, v0, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 1596
    .line 1597
    .line 1598
    goto :goto_21

    .line 1599
    :catchall_7
    move-exception v0

    .line 1600
    goto :goto_22

    .line 1601
    :cond_36
    :goto_21
    monitor-exit v1

    .line 1602
    goto :goto_23

    .line 1603
    :goto_22
    monitor-exit v1
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_7

    .line 1604
    :try_start_d
    throw v0

    .line 1605
    :cond_37
    const/16 v21, 0x0

    .line 1606
    .line 1607
    :goto_23
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1608
    .line 1609
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 1610
    .line 1611
    invoke-static {v1}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 1612
    .line 1613
    .line 1614
    move-result-object v37

    .line 1615
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1616
    .line 1617
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1618
    .line 1619
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1620
    .line 1621
    const-string v44, ""

    .line 1622
    .line 1623
    const/16 v43, 0x0

    .line 1624
    .line 1625
    const/16 v45, 0x0

    .line 1626
    .line 1627
    const/16 v46, 0x0

    .line 1628
    .line 1629
    const/16 v47, -0x1

    .line 1630
    .line 1631
    const/16 v38, 0x4c

    .line 1632
    .line 1633
    const/16 v41, 0x0

    .line 1634
    .line 1635
    const/16 v42, 0x1

    .line 1636
    .line 1637
    move-object/from16 v36, v1

    .line 1638
    .line 1639
    move/from16 v39, v2

    .line 1640
    .line 1641
    move-object/from16 v40, v3

    .line 1642
    .line 1643
    invoke-virtual/range {v36 .. v47}, Lcom/android/server/appop/AppOpsService;->startOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;ZZLjava/lang/String;ZII)Landroid/app/SyncNotedAppOp;

    .line 1644
    .line 1645
    .line 1646
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->registerAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1647
    .line 1648
    .line 1649
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1650
    .line 1651
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 1652
    .line 1653
    iget v3, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 1654
    .line 1655
    invoke-virtual {v1, v3, v2, v0}, Lcom/android/server/am/ActivityManagerService;->updateForegroundServiceUsageStats(ILandroid/content/ComponentName;Z)V

    .line 1656
    .line 1657
    .line 1658
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 1659
    .line 1660
    if-eqz v1, :cond_39

    .line 1661
    .line 1662
    if-eqz v18, :cond_38

    .line 1663
    .line 1664
    move/from16 v7, v16

    .line 1665
    .line 1666
    goto :goto_24

    .line 1667
    :cond_38
    const/4 v7, 0x2

    .line 1668
    goto :goto_24

    .line 1669
    :cond_39
    move v7, v0

    .line 1670
    :goto_24
    const/4 v5, 0x0

    .line 1671
    const/4 v3, 0x1

    .line 1672
    const/4 v4, 0x0

    .line 1673
    move-object/from16 v1, p0

    .line 1674
    .line 1675
    move-object/from16 v2, p1

    .line 1676
    .line 1677
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 1678
    .line 1679
    .line 1680
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 1681
    .line 1682
    monitor-enter v1
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_0

    .line 1683
    :try_start_e
    iget-object v2, v10, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 1684
    .line 1685
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1686
    .line 1687
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1688
    .line 1689
    invoke-virtual {v2, v3, v11}, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;->logForegroundServiceStart(ILcom/android/server/am/ServiceRecord;)V

    .line 1690
    .line 1691
    .line 1692
    monitor-exit v1
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_8

    .line 1693
    :try_start_f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActiveServices;->updateNumForegroundServicesLocked()V
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    .line 1694
    .line 1695
    .line 1696
    goto :goto_25

    .line 1697
    :catchall_8
    move-exception v0

    .line 1698
    :try_start_10
    monitor-exit v1
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_8

    .line 1699
    :try_start_11
    throw v0

    .line 1700
    :cond_3a
    :goto_25
    invoke-virtual {v10, v11, v13}, Lcom/android/server/am/ActiveServices;->maybeUpdateShortFgsTrackingLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 1701
    .line 1702
    .line 1703
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->signalForegroundServiceObserversLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1704
    .line 1705
    .line 1706
    invoke-virtual {v11, v0}, Lcom/android/server/am/ServiceRecord;->postNotification(Z)V

    .line 1707
    .line 1708
    .line 1709
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 1710
    .line 1711
    if-eqz v1, :cond_3b

    .line 1712
    .line 1713
    invoke-virtual {v10, v12, v0}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 1714
    .line 1715
    .line 1716
    :cond_3b
    iget v0, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 1717
    .line 1718
    invoke-virtual {v10, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 1719
    .line 1720
    .line 1721
    move-result-object v0

    .line 1722
    invoke-virtual {v0, v11}, Lcom/android/server/am/ActiveServices$ServiceMap;->ensureNotStartingBackgroundLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1723
    .line 1724
    .line 1725
    iget-object v0, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1726
    .line 1727
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 1728
    .line 1729
    iget-object v1, v1, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 1730
    .line 1731
    const/4 v2, 0x2

    .line 1732
    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->notifyPackageUse(Ljava/lang/String;I)V

    .line 1733
    .line 1734
    .line 1735
    iget-object v0, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1736
    .line 1737
    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1738
    .line 1739
    const-wide/32 v1, 0x12f13d8d

    .line 1740
    .line 1741
    .line 1742
    invoke-static {v1, v2, v0}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 1743
    .line 1744
    .line 1745
    move-result v0

    .line 1746
    if-eqz v0, :cond_3c

    .line 1747
    .line 1748
    invoke-static {}, Landroid/app/Flags;->introduceNewServiceOntimeoutCallback()Z

    .line 1749
    .line 1750
    .line 1751
    move-result v0

    .line 1752
    if-eqz v0, :cond_3c

    .line 1753
    .line 1754
    move/from16 v0, v23

    .line 1755
    .line 1756
    invoke-virtual {v10, v0, v11}, Lcom/android/server/am/ActiveServices;->maybeUpdateFgsTrackingLocked(ILcom/android/server/am/ServiceRecord;)V
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    .line 1757
    .line 1758
    .line 1759
    :cond_3c
    if-eqz v21, :cond_3e

    .line 1760
    .line 1761
    iget-object v0, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1762
    .line 1763
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1764
    .line 1765
    iget-object v1, v0, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 1766
    .line 1767
    monitor-enter v1

    .line 1768
    :try_start_12
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 1769
    .line 1770
    .line 1771
    move-result-object v0

    .line 1772
    if-eqz v0, :cond_3d

    .line 1773
    .line 1774
    iget-object v2, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1775
    .line 1776
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1777
    .line 1778
    invoke-virtual {v2}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 1779
    .line 1780
    .line 1781
    move-result v2

    .line 1782
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1783
    .line 1784
    .line 1785
    move-result-wide v3

    .line 1786
    const/4 v5, 0x0

    .line 1787
    invoke-virtual {v0, v5, v2, v3, v4}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 1788
    .line 1789
    .line 1790
    goto :goto_26

    .line 1791
    :catchall_9
    move-exception v0

    .line 1792
    goto :goto_27

    .line 1793
    :cond_3d
    :goto_26
    monitor-exit v1

    .line 1794
    goto :goto_28

    .line 1795
    :goto_27
    monitor-exit v1
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_9

    .line 1796
    throw v0

    .line 1797
    :cond_3e
    :goto_28
    if-eqz v20, :cond_4b

    .line 1798
    .line 1799
    iget-object v0, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1800
    .line 1801
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 1802
    .line 1803
    invoke-static {v0}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 1804
    .line 1805
    .line 1806
    move-result-object v1

    .line 1807
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1808
    .line 1809
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1810
    .line 1811
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1812
    .line 1813
    const/4 v4, 0x0

    .line 1814
    const/16 v5, 0x4c

    .line 1815
    .line 1816
    move-object/from16 p0, v0

    .line 1817
    .line 1818
    move-object/from16 p1, v1

    .line 1819
    .line 1820
    move/from16 p2, v5

    .line 1821
    .line 1822
    move/from16 p3, v2

    .line 1823
    .line 1824
    move-object/from16 p4, v3

    .line 1825
    .line 1826
    move-object/from16 p5, v4

    .line 1827
    .line 1828
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/appop/AppOpsService;->finishOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)V

    .line 1829
    .line 1830
    .line 1831
    goto/16 :goto_31

    .line 1832
    .line 1833
    :goto_29
    if-eqz v21, :cond_40

    .line 1834
    .line 1835
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1836
    .line 1837
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1838
    .line 1839
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 1840
    .line 1841
    monitor-enter v1

    .line 1842
    :try_start_13
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 1843
    .line 1844
    .line 1845
    move-result-object v2

    .line 1846
    if-eqz v2, :cond_3f

    .line 1847
    .line 1848
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1849
    .line 1850
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 1851
    .line 1852
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 1853
    .line 1854
    .line 1855
    move-result v3

    .line 1856
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1857
    .line 1858
    .line 1859
    move-result-wide v4

    .line 1860
    const/4 v6, 0x0

    .line 1861
    invoke-virtual {v2, v6, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 1862
    .line 1863
    .line 1864
    goto :goto_2a

    .line 1865
    :catchall_a
    move-exception v0

    .line 1866
    goto :goto_2b

    .line 1867
    :cond_3f
    :goto_2a
    monitor-exit v1

    .line 1868
    goto :goto_2c

    .line 1869
    :goto_2b
    monitor-exit v1
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_a

    .line 1870
    throw v0

    .line 1871
    :cond_40
    :goto_2c
    if-eqz v20, :cond_41

    .line 1872
    .line 1873
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 1874
    .line 1875
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 1876
    .line 1877
    invoke-static {v1}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 1878
    .line 1879
    .line 1880
    move-result-object v2

    .line 1881
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1882
    .line 1883
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 1884
    .line 1885
    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 1886
    .line 1887
    const/4 v5, 0x0

    .line 1888
    const/16 v6, 0x4c

    .line 1889
    .line 1890
    move-object/from16 p0, v1

    .line 1891
    .line 1892
    move-object/from16 p1, v2

    .line 1893
    .line 1894
    move/from16 p2, v6

    .line 1895
    .line 1896
    move/from16 p3, v3

    .line 1897
    .line 1898
    move-object/from16 p4, v4

    .line 1899
    .line 1900
    move-object/from16 p5, v5

    .line 1901
    .line 1902
    invoke-virtual/range {p0 .. p5}, Lcom/android/server/appop/AppOpsService;->finishOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)V

    .line 1903
    .line 1904
    .line 1905
    :cond_41
    throw v0

    .line 1906
    :cond_42
    move v3, v7

    .line 1907
    new-instance v0, Landroid/app/ForegroundServiceStartNotAllowedException;

    .line 1908
    .line 1909
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1910
    .line 1911
    const-string v2, "FGS type "

    .line 1912
    .line 1913
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1914
    .line 1915
    .line 1916
    invoke-static {v3}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 1917
    .line 1918
    .line 1919
    move-result-object v2

    .line 1920
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1921
    .line 1922
    .line 1923
    const-string v2, " not allowed to start from BOOT_COMPLETED!"

    .line 1924
    .line 1925
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1926
    .line 1927
    .line 1928
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1929
    .line 1930
    .line 1931
    move-result-object v1

    .line 1932
    invoke-direct {v0, v1}, Landroid/app/ForegroundServiceStartNotAllowedException;-><init>(Ljava/lang/String;)V

    .line 1933
    .line 1934
    .line 1935
    throw v0

    .line 1936
    :cond_43
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 1937
    .line 1938
    const-string/jumbo v1, "null notification"

    .line 1939
    .line 1940
    .line 1941
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 1942
    .line 1943
    .line 1944
    throw v0

    .line 1945
    :cond_44
    move v0, v5

    .line 1946
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 1947
    .line 1948
    if-eqz v1, :cond_4b

    .line 1949
    .line 1950
    const-string/jumbo v1, "stopForeground(): "

    .line 1951
    .line 1952
    .line 1953
    invoke-static {v1, v11}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 1954
    .line 1955
    .line 1956
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 1957
    .line 1958
    invoke-virtual {v10, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 1959
    .line 1960
    .line 1961
    move-result-object v1

    .line 1962
    invoke-virtual {v10, v1, v11}, Lcom/android/server/am/ActiveServices;->decActiveForegroundAppLocked(Lcom/android/server/am/ActiveServices$ServiceMap;Lcom/android/server/am/ServiceRecord;)V

    .line 1963
    .line 1964
    .line 1965
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1966
    .line 1967
    .line 1968
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->maybeStopFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1969
    .line 1970
    .line 1971
    and-int/lit8 v1, p4, 0x1

    .line 1972
    .line 1973
    if-eqz v1, :cond_45

    .line 1974
    .line 1975
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 1976
    .line 1977
    .line 1978
    const/4 v1, 0x0

    .line 1979
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 1980
    .line 1981
    const/4 v9, 0x0

    .line 1982
    iput-object v9, v11, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 1983
    .line 1984
    goto :goto_2d

    .line 1985
    :cond_45
    const/4 v1, 0x0

    .line 1986
    const/4 v9, 0x0

    .line 1987
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 1988
    .line 1989
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 1990
    .line 1991
    const/16 v3, 0x15

    .line 1992
    .line 1993
    if-lt v2, v3, :cond_47

    .line 1994
    .line 1995
    iget-boolean v2, v11, Lcom/android/server/am/ServiceRecord;->mFgsNotificationShown:Z

    .line 1996
    .line 1997
    if-nez v2, :cond_46

    .line 1998
    .line 1999
    invoke-virtual {v11, v1}, Lcom/android/server/am/ServiceRecord;->postNotification(Z)V

    .line 2000
    .line 2001
    .line 2002
    :cond_46
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->dropFgsNotificationStateLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 2003
    .line 2004
    .line 2005
    const/4 v2, 0x2

    .line 2006
    and-int/lit8 v2, p4, 0x2

    .line 2007
    .line 2008
    if-eqz v2, :cond_47

    .line 2009
    .line 2010
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 2011
    .line 2012
    iput-object v9, v11, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 2013
    .line 2014
    :cond_47
    :goto_2d
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 2015
    .line 2016
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 2017
    .line 2018
    .line 2019
    move-result-wide v1

    .line 2020
    iput-wide v1, v11, Lcom/android/server/am/ServiceRecord;->mFgsExitTime:J

    .line 2021
    .line 2022
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2023
    .line 2024
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2025
    .line 2026
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 2027
    .line 2028
    monitor-enter v1

    .line 2029
    :try_start_14
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 2030
    .line 2031
    .line 2032
    move-result-object v2

    .line 2033
    if-eqz v2, :cond_48

    .line 2034
    .line 2035
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2036
    .line 2037
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2038
    .line 2039
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 2040
    .line 2041
    .line 2042
    move-result v3

    .line 2043
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 2044
    .line 2045
    .line 2046
    move-result-wide v4

    .line 2047
    const/4 v6, 0x0

    .line 2048
    invoke-virtual {v2, v6, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 2049
    .line 2050
    .line 2051
    goto :goto_2e

    .line 2052
    :catchall_b
    move-exception v0

    .line 2053
    goto :goto_30

    .line 2054
    :cond_48
    :goto_2e
    monitor-exit v1
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_b

    .line 2055
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2056
    .line 2057
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 2058
    .line 2059
    invoke-static {v2}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 2060
    .line 2061
    .line 2062
    move-result-object v3

    .line 2063
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 2064
    .line 2065
    iget v5, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 2066
    .line 2067
    iget-object v6, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 2068
    .line 2069
    const/4 v7, 0x0

    .line 2070
    const/16 v4, 0x4c

    .line 2071
    .line 2072
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/appop/AppOpsService;->finishOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;)V

    .line 2073
    .line 2074
    .line 2075
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->unregisterAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 2076
    .line 2077
    .line 2078
    iget-wide v1, v11, Lcom/android/server/am/ServiceRecord;->mFgsExitTime:J

    .line 2079
    .line 2080
    iget-wide v3, v11, Lcom/android/server/am/ServiceRecord;->mFgsEnterTime:J

    .line 2081
    .line 2082
    cmp-long v5, v1, v3

    .line 2083
    .line 2084
    if-lez v5, :cond_49

    .line 2085
    .line 2086
    sub-long/2addr v1, v3

    .line 2087
    long-to-int v1, v1

    .line 2088
    move v4, v1

    .line 2089
    goto :goto_2f

    .line 2090
    :cond_49
    const/4 v4, 0x0

    .line 2091
    :goto_2f
    const/4 v5, 0x1

    .line 2092
    const/4 v6, 0x0

    .line 2093
    const/4 v3, 0x2

    .line 2094
    const/4 v7, 0x0

    .line 2095
    const/4 v8, 0x0

    .line 2096
    move-object/from16 v1, p0

    .line 2097
    .line 2098
    move-object/from16 v2, p1

    .line 2099
    .line 2100
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 2101
    .line 2102
    .line 2103
    iget-object v2, v10, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 2104
    .line 2105
    monitor-enter v2

    .line 2106
    :try_start_15
    iget-object v1, v10, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 2107
    .line 2108
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 2109
    .line 2110
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 2111
    .line 2112
    invoke-virtual {v1, v3, v11}, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;->logForegroundServiceStop(ILcom/android/server/am/ServiceRecord;)V

    .line 2113
    .line 2114
    .line 2115
    monitor-exit v2
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_c

    .line 2116
    const/4 v1, 0x0

    .line 2117
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 2118
    .line 2119
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mFgsNotificationWasDeferred:Z

    .line 2120
    .line 2121
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActiveServices;->signalForegroundServiceObserversLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 2122
    .line 2123
    .line 2124
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActiveServices;->resetFgsRestrictionLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 2125
    .line 2126
    .line 2127
    iget-object v2, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2128
    .line 2129
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 2130
    .line 2131
    iget v4, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 2132
    .line 2133
    invoke-virtual {v2, v4, v3, v1}, Lcom/android/server/am/ActivityManagerService;->updateForegroundServiceUsageStats(ILandroid/content/ComponentName;Z)V

    .line 2134
    .line 2135
    .line 2136
    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 2137
    .line 2138
    if-eqz v2, :cond_4a

    .line 2139
    .line 2140
    iget-object v3, v10, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2141
    .line 2142
    invoke-virtual {v3, v2, v9, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 2143
    .line 2144
    .line 2145
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 2146
    .line 2147
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 2148
    .line 2149
    invoke-virtual {v10, v1, v0}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 2150
    .line 2151
    .line 2152
    :cond_4a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActiveServices;->updateNumForegroundServicesLocked()V

    .line 2153
    .line 2154
    .line 2155
    goto :goto_31

    .line 2156
    :catchall_c
    move-exception v0

    .line 2157
    :try_start_16
    monitor-exit v2
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_c

    .line 2158
    throw v0

    .line 2159
    :goto_30
    :try_start_17
    monitor-exit v1
    :try_end_17
    .catchall {:try_start_17 .. :try_end_17} :catchall_b

    .line 2160
    throw v0

    .line 2161
    :cond_4b
    :goto_31
    return-void
.end method

.method public final setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;II)V
    .locals 11

    .line 1
    move-object v0, p0

    .line 2
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 3
    .line 4
    .line 5
    move-result v1

    .line 6
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 7
    .line 8
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 9
    .line 10
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    .line 12
    .line 13
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    .line 15
    .line 16
    move-result v7

    .line 17
    iget-object v2, v8, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 18
    .line 19
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 20
    .line 21
    .line 22
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 23
    .line 24
    .line 25
    move-result-wide v9

    .line 26
    :try_start_0
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 27
    .line 28
    .line 29
    move-result-object v1

    .line 30
    iget-object v1, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 31
    .line 32
    move-object v2, p1

    .line 33
    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 34
    .line 35
    .line 36
    move-result-object v1

    .line 37
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 38
    .line 39
    move-object v2, p2

    .line 40
    if-ne v1, v2, :cond_0

    .line 41
    .line 42
    :goto_0
    move-object v2, v1

    .line 43
    goto :goto_1

    .line 44
    :cond_0
    const/4 v1, 0x0

    .line 45
    goto :goto_0

    .line 46
    :goto_1
    if-eqz v2, :cond_1

    .line 47
    .line 48
    move-object v1, p0

    .line 49
    move v3, p3

    .line 50
    move-object v4, p4

    .line 51
    move/from16 v5, p5

    .line 52
    .line 53
    move/from16 v6, p6

    .line 54
    .line 55
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/am/ActiveServices;->setServiceForegroundInnerLocked(Lcom/android/server/am/ServiceRecord;ILandroid/app/Notification;III)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 56
    .line 57
    .line 58
    goto :goto_2

    .line 59
    :catchall_0
    move-exception v0

    .line 60
    goto :goto_3

    .line 61
    :cond_1
    :goto_2
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 62
    .line 63
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 64
    .line 65
    .line 66
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 67
    .line 68
    .line 69
    return-void

    .line 70
    :goto_3
    iget-object v1, v8, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 71
    .line 72
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 73
    .line 74
    .line 75
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 76
    .line 77
    .line 78
    throw v0
.end method

.method public final setServiceRestartBackoffEnabledLocked(Ljava/lang/String;Z)V
    .locals 9

    .line 1
    if-nez p2, :cond_2

    .line 2
    .line 3
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 4
    .line 5
    invoke-virtual {p2, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result p2

    .line 9
    if-eqz p2, :cond_0

    .line 10
    .line 11
    return-void

    .line 12
    :cond_0
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 13
    .line 14
    invoke-virtual {p2, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 15
    .line 16
    .line 17
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 18
    .line 19
    .line 20
    move-result-wide v6

    .line 21
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 22
    .line 23
    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I

    .line 24
    .line 25
    .line 26
    move-result p2

    .line 27
    const/4 v0, 0x0

    .line 28
    move v8, v0

    .line 29
    :goto_0
    if-ge v8, p2, :cond_3

    .line 30
    .line 31
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 32
    .line 33
    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 34
    .line 35
    .line 36
    move-result-object v0

    .line 37
    move-object v1, v0

    .line 38
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 39
    .line 40
    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 41
    .line 42
    invoke-static {v0, p1}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 43
    .line 44
    .line 45
    move-result v0

    .line 46
    if-eqz v0, :cond_1

    .line 47
    .line 48
    iget-wide v2, v1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 49
    .line 50
    sub-long/2addr v2, v6

    .line 51
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 52
    .line 53
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 54
    .line 55
    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_RESTART_DURATION:J

    .line 56
    .line 57
    cmp-long v0, v2, v4

    .line 58
    .line 59
    if-lez v0, :cond_1

    .line 60
    .line 61
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 62
    .line 63
    add-long/2addr v4, v6

    .line 64
    iput-wide v4, v1, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J

    .line 65
    .line 66
    const-string v2, "Rescheduling"

    .line 67
    .line 68
    const-string/jumbo v3, "shell"

    .line 69
    .line 70
    .line 71
    move-object v0, p0

    .line 72
    move-wide v4, v6

    .line 73
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->performScheduleRestartLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;J)V

    .line 74
    .line 75
    .line 76
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 77
    .line 78
    new-instance v1, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda1;

    .line 79
    .line 80
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 81
    .line 82
    .line 83
    invoke-static {v0, v1}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 84
    .line 85
    .line 86
    add-int/lit8 v8, v8, 0x1

    .line 87
    .line 88
    goto :goto_0

    .line 89
    :cond_2
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mRestartBackoffDisabledPackages:Landroid/util/ArraySet;

    .line 90
    .line 91
    invoke-virtual {p0, p1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 92
    .line 93
    .line 94
    :cond_3
    return-void
.end method

.method public final shouldAllowBootCompletedStart(ILcom/android/server/am/ServiceRecord;)Z
    .locals 3

    .line 1
    invoke-virtual {p2}, Lcom/android/server/am/ServiceRecord;->getFgsAllowStart()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    invoke-static {}, Lcom/android/server/am/Flags;->fgsBootCompleted()Z

    .line 6
    .line 7
    .line 8
    iget-object p2, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 9
    .line 10
    iget p2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 11
    .line 12
    const-wide/32 v1, 0x11ad1fc7

    .line 13
    .line 14
    .line 15
    invoke-static {v1, v2, p2}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 16
    .line 17
    .line 18
    move-result p2

    .line 19
    const/4 v1, 0x1

    .line 20
    if-eqz p2, :cond_1

    .line 21
    .line 22
    const/16 p2, 0xc8

    .line 23
    .line 24
    if-ne v0, p2, :cond_1

    .line 25
    .line 26
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 27
    .line 28
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 29
    .line 30
    iget p0, p0, Lcom/android/server/am/ActivityManagerConstants;->FGS_BOOT_COMPLETED_ALLOWLIST:I

    .line 31
    .line 32
    and-int/2addr p0, p1

    .line 33
    if-eqz p0, :cond_0

    .line 34
    .line 35
    goto :goto_0

    .line 36
    :cond_0
    const/4 v1, 0x0

    .line 37
    :cond_1
    :goto_0
    return v1
.end method

.method public final shouldAllowFgsStartForegroundNoBindingCheckLocked(IIILjava/lang/String;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;)I
    .locals 8

    .line 1
    const/4 v0, -0x1

    .line 2
    if-ne p1, v0, :cond_0

    .line 3
    .line 4
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 5
    .line 6
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 7
    .line 8
    invoke-virtual {v1, p3}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    .line 9
    .line 10
    .line 11
    move-result v1

    .line 12
    const/4 v2, 0x2

    .line 13
    if-gt v1, v2, :cond_0

    .line 14
    .line 15
    invoke-static {v1}, Landroid/os/PowerExemptionManager;->getReasonCodeFromProcState(I)I

    .line 16
    .line 17
    .line 18
    move-result p1

    .line 19
    :cond_0
    const/4 v1, 0x1

    .line 20
    const/4 v5, 0x0

    .line 21
    if-ne p1, v0, :cond_2

    .line 22
    .line 23
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 24
    .line 25
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 26
    .line 27
    invoke-virtual {v2, p3}, Lcom/android/server/am/ProcessList;->getUidProcessCapabilityLOSP(I)I

    .line 28
    .line 29
    .line 30
    move-result v2

    .line 31
    and-int/lit8 v2, v2, 0x10

    .line 32
    .line 33
    if-eqz v2, :cond_1

    .line 34
    .line 35
    move v2, v1

    .line 36
    goto :goto_0

    .line 37
    :cond_1
    move v2, v5

    .line 38
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 39
    .line 40
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 41
    .line 42
    new-instance v4, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda6;

    .line 43
    .line 44
    invoke-direct {v4, p0, p3, v2}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/am/ActiveServices;IZ)V

    .line 45
    .line 46
    .line 47
    invoke-virtual {v3, v4, v5}, Lcom/android/server/am/ProcessList;->searchEachLruProcessesLOSP(Ljava/util/function/Function;Z)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    move-result-object v2

    .line 51
    check-cast v2, Ljava/lang/Integer;

    .line 52
    .line 53
    if-eqz v2, :cond_2

    .line 54
    .line 55
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 56
    .line 57
    .line 58
    move-result p1

    .line 59
    :cond_2
    if-ne p1, v0, :cond_3

    .line 60
    .line 61
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 62
    .line 63
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 64
    .line 65
    .line 66
    const/4 v6, -0x1

    .line 67
    const/4 v7, 0x1

    .line 68
    const-string v4, "android.permission.START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 69
    .line 70
    move v2, p2

    .line 71
    move v3, p3

    .line 72
    invoke-static/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(IILjava/lang/String;IIZ)I

    .line 73
    .line 74
    .line 75
    move-result v2

    .line 76
    if-nez v2, :cond_3

    .line 77
    .line 78
    const/16 p1, 0x3b

    .line 79
    .line 80
    :cond_3
    if-ne p1, v0, :cond_4

    .line 81
    .line 82
    invoke-virtual {p6}, Landroid/app/BackgroundStartPrivileges;->allowsBackgroundFgsStarts()Z

    .line 83
    .line 84
    .line 85
    move-result p6

    .line 86
    if-eqz p6, :cond_4

    .line 87
    .line 88
    const/16 p1, 0x35

    .line 89
    .line 90
    :cond_4
    if-ne p1, v0, :cond_7

    .line 91
    .line 92
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 93
    .line 94
    iget-object p6, p6, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 95
    .line 96
    check-cast p6, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;

    .line 97
    .line 98
    iget-object p6, p6, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;->this$0:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 99
    .line 100
    invoke-virtual {p6, p3, p2, p4}, Lcom/android/server/wm/ActivityTaskManagerService;->hasSystemAlertWindowPermission(IILjava/lang/String;)Z

    .line 101
    .line 102
    .line 103
    move-result p6

    .line 104
    if-eqz p6, :cond_7

    .line 105
    .line 106
    invoke-static {}, Lcom/android/server/am/Flags;->fgsDisableSaw()Z

    .line 107
    .line 108
    .line 109
    const-wide/32 v2, 0x130ac16c

    .line 110
    .line 111
    .line 112
    invoke-static {v2, v3, p3}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 113
    .line 114
    .line 115
    move-result p6

    .line 116
    const/16 v2, 0x3e

    .line 117
    .line 118
    if-eqz p6, :cond_6

    .line 119
    .line 120
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 121
    .line 122
    iget-object p6, p6, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 123
    .line 124
    iget-object p6, p6, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    .line 125
    .line 126
    invoke-virtual {p6, p3}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    .line 127
    .line 128
    .line 129
    move-result-object p6

    .line 130
    if-eqz p6, :cond_7

    .line 131
    .line 132
    iget-object v3, p6, Lcom/android/server/am/UidRecord;->mProcRecords:Landroid/util/ArraySet;

    .line 133
    .line 134
    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    .line 135
    .line 136
    .line 137
    move-result v3

    .line 138
    sub-int/2addr v3, v1

    .line 139
    :goto_1
    if-ltz v3, :cond_7

    .line 140
    .line 141
    iget-object v1, p6, Lcom/android/server/am/UidRecord;->mProcRecords:Landroid/util/ArraySet;

    .line 142
    .line 143
    invoke-virtual {v1, v3}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 144
    .line 145
    .line 146
    move-result-object v1

    .line 147
    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 148
    .line 149
    if-eqz v1, :cond_5

    .line 150
    .line 151
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 152
    .line 153
    iget-boolean v1, v1, Lcom/android/server/am/ProcessStateRecord;->mHasOverlayUi:Z

    .line 154
    .line 155
    if-eqz v1, :cond_5

    .line 156
    .line 157
    goto :goto_2

    .line 158
    :cond_5
    add-int/lit8 v3, v3, -0x1

    .line 159
    .line 160
    goto :goto_1

    .line 161
    :cond_6
    :goto_2
    move p1, v2

    .line 162
    :cond_7
    if-ne p1, v0, :cond_9

    .line 163
    .line 164
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 165
    .line 166
    iget-object p6, p6, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 167
    .line 168
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 169
    .line 170
    .line 171
    move-result v1

    .line 172
    invoke-virtual {p6, v1, p3}, Landroid/app/ActivityManagerInternal;->isAssociatedCompanionApp(II)Z

    .line 173
    .line 174
    .line 175
    move-result p6

    .line 176
    if-eqz p6, :cond_9

    .line 177
    .line 178
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 179
    .line 180
    invoke-virtual {p6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 181
    .line 182
    .line 183
    const/4 v6, 0x1

    .line 184
    const/4 v4, 0x0

    .line 185
    const-string v3, "android.permission.REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND"

    .line 186
    .line 187
    const/4 v5, -0x1

    .line 188
    move v1, p2

    .line 189
    move v2, p3

    .line 190
    invoke-static/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(IILjava/lang/String;IIZ)I

    .line 191
    .line 192
    .line 193
    move-result p6

    .line 194
    if-nez p6, :cond_8

    .line 195
    .line 196
    goto :goto_3

    .line 197
    :cond_8
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 198
    .line 199
    invoke-virtual {p6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 200
    .line 201
    .line 202
    const/4 v6, 0x1

    .line 203
    const/4 v4, 0x0

    .line 204
    const-string v3, "android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND"

    .line 205
    .line 206
    const/4 v5, -0x1

    .line 207
    move v1, p2

    .line 208
    move v2, p3

    .line 209
    invoke-static/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(IILjava/lang/String;IIZ)I

    .line 210
    .line 211
    .line 212
    move-result p2

    .line 213
    if-nez p2, :cond_9

    .line 214
    .line 215
    :goto_3
    const/16 p1, 0x39

    .line 216
    .line 217
    :cond_9
    if-ne p1, v0, :cond_b

    .line 218
    .line 219
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 220
    .line 221
    invoke-virtual {p2, p3}, Lcom/android/server/am/ActivityManagerService;->isAllowlistedForFgsStartLOSP(I)Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 222
    .line 223
    .line 224
    move-result-object p2

    .line 225
    if-eqz p2, :cond_b

    .line 226
    .line 227
    sget-object p1, Lcom/android/server/am/ActivityManagerService;->FAKE_TEMP_ALLOW_LIST_ITEM:Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;

    .line 228
    .line 229
    if-ne p2, p1, :cond_a

    .line 230
    .line 231
    const/16 p1, 0x12c

    .line 232
    .line 233
    goto :goto_4

    .line 234
    :cond_a
    iget p1, p2, Lcom/android/server/am/ActivityManagerService$FgsTempAllowListItem;->mReasonCode:I

    .line 235
    .line 236
    :cond_b
    :goto_4
    if-ne p1, v0, :cond_c

    .line 237
    .line 238
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 239
    .line 240
    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 241
    .line 242
    invoke-static {p2}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    .line 243
    .line 244
    .line 245
    move-result p2

    .line 246
    if-eqz p2, :cond_c

    .line 247
    .line 248
    const/16 p1, 0x3f

    .line 249
    .line 250
    :cond_c
    if-ne p1, v0, :cond_d

    .line 251
    .line 252
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 253
    .line 254
    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 255
    .line 256
    invoke-virtual {p2, p3}, Landroid/app/ActivityManagerInternal;->isProfileOwner(I)Z

    .line 257
    .line 258
    .line 259
    move-result p2

    .line 260
    if-eqz p2, :cond_d

    .line 261
    .line 262
    const/16 p1, 0x38

    .line 263
    .line 264
    :cond_d
    if-ne p1, v0, :cond_e

    .line 265
    .line 266
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 267
    .line 268
    invoke-virtual {p2}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 269
    .line 270
    .line 271
    move-result-object p2

    .line 272
    iget-object p6, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 273
    .line 274
    iget-object p6, p6, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 275
    .line 276
    iget-boolean p6, p6, Lcom/android/server/am/ActivityManagerConstants;->mFlagSystemExemptPowerRestrictionsEnabled:Z

    .line 277
    .line 278
    if-eqz p6, :cond_e

    .line 279
    .line 280
    const/16 p6, 0x80

    .line 281
    .line 282
    invoke-virtual {p2, p6, p3, p4}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 283
    .line 284
    .line 285
    move-result p2

    .line 286
    if-nez p2, :cond_e

    .line 287
    .line 288
    const/16 p1, 0x147

    .line 289
    .line 290
    :cond_e
    if-ne p1, v0, :cond_10

    .line 291
    .line 292
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 293
    .line 294
    invoke-virtual {p2}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 295
    .line 296
    .line 297
    move-result-object p2

    .line 298
    const/16 p6, 0x2f

    .line 299
    .line 300
    invoke-virtual {p2, p6, p3, p4}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 301
    .line 302
    .line 303
    move-result p6

    .line 304
    if-nez p6, :cond_f

    .line 305
    .line 306
    const/16 p1, 0x44

    .line 307
    .line 308
    goto :goto_5

    .line 309
    :cond_f
    const/16 p6, 0x5e

    .line 310
    .line 311
    invoke-virtual {p2, p6, p3, p4}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 312
    .line 313
    .line 314
    move-result p2

    .line 315
    if-nez p2, :cond_10

    .line 316
    .line 317
    const/16 p1, 0x45

    .line 318
    .line 319
    :cond_10
    :goto_5
    if-ne p1, v0, :cond_11

    .line 320
    .line 321
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 322
    .line 323
    iget-object p2, p2, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 324
    .line 325
    invoke-virtual {p2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 326
    .line 327
    .line 328
    move-result-object p2

    .line 329
    const-string/jumbo p6, "default_input_method"

    .line 330
    .line 331
    .line 332
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 333
    .line 334
    .line 335
    move-result p3

    .line 336
    invoke-static {p2, p6, p3}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    .line 337
    .line 338
    .line 339
    move-result-object p2

    .line 340
    if-eqz p2, :cond_11

    .line 341
    .line 342
    invoke-static {p2}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    .line 343
    .line 344
    .line 345
    move-result-object p2

    .line 346
    if-eqz p2, :cond_11

    .line 347
    .line 348
    invoke-virtual {p2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 349
    .line 350
    .line 351
    move-result-object p2

    .line 352
    invoke-virtual {p2, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 353
    .line 354
    .line 355
    move-result p2

    .line 356
    if-eqz p2, :cond_11

    .line 357
    .line 358
    const/16 p1, 0x47

    .line 359
    .line 360
    :cond_11
    if-ne p1, v0, :cond_12

    .line 361
    .line 362
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 363
    .line 364
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 365
    .line 366
    iget-boolean p0, p0, Lcom/android/server/am/ActivityManagerConstants;->mFgsAllowOptOut:Z

    .line 367
    .line 368
    if-eqz p0, :cond_12

    .line 369
    .line 370
    if-eqz p5, :cond_12

    .line 371
    .line 372
    iget-object p0, p5, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 373
    .line 374
    invoke-virtual {p0}, Landroid/content/pm/ApplicationInfo;->hasRequestForegroundServiceExemption()Z

    .line 375
    .line 376
    .line 377
    move-result p0

    .line 378
    if-eqz p0, :cond_12

    .line 379
    .line 380
    const/16 p1, 0x3e8

    .line 381
    .line 382
    :cond_12
    return p1
.end method

.method public final shouldAllowFgsWhileInUsePermissionLocked(Ljava/lang/String;IILcom/android/server/am/ProcessRecord;Landroid/app/BackgroundStartPrivileges;)I
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 4
    .line 5
    invoke-virtual {v1, p3}, Lcom/android/server/am/ProcessList;->getUidProcStateLOSP(I)I

    .line 6
    .line 7
    .line 8
    move-result v1

    .line 9
    const/4 v2, 0x2

    .line 10
    const/4 v3, -0x1

    .line 11
    if-gt v1, v2, :cond_0

    .line 12
    .line 13
    invoke-static {v1}, Landroid/os/PowerExemptionManager;->getReasonCodeFromProcState(I)I

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    goto :goto_0

    .line 18
    :cond_0
    move v1, v3

    .line 19
    :goto_0
    if-ne v1, v3, :cond_1

    .line 20
    .line 21
    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAtmInternal:Lcom/android/server/wm/ActivityTaskManagerInternal;

    .line 22
    .line 23
    check-cast v2, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;

    .line 24
    .line 25
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService$LocalService;->this$0:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 26
    .line 27
    invoke-virtual {v2, p3}, Lcom/android/server/wm/ActivityTaskManagerService;->hasActiveVisibleWindow(I)Z

    .line 28
    .line 29
    .line 30
    move-result v2

    .line 31
    if-eqz v2, :cond_1

    .line 32
    .line 33
    const/16 v1, 0x32

    .line 34
    .line 35
    :cond_1
    if-ne v1, v3, :cond_2

    .line 36
    .line 37
    invoke-virtual {p5}, Landroid/app/BackgroundStartPrivileges;->allowsBackgroundActivityStarts()Z

    .line 38
    .line 39
    .line 40
    move-result p5

    .line 41
    if-eqz p5, :cond_2

    .line 42
    .line 43
    const/16 v1, 0x35

    .line 44
    .line 45
    :cond_2
    const/16 p5, 0x3e8

    .line 46
    .line 47
    if-ne v1, v3, :cond_4

    .line 48
    .line 49
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    .line 50
    .line 51
    .line 52
    move-result v2

    .line 53
    if-eqz v2, :cond_3

    .line 54
    .line 55
    if-eq v2, p5, :cond_3

    .line 56
    .line 57
    const/16 v4, 0x403

    .line 58
    .line 59
    if-eq v2, v4, :cond_3

    .line 60
    .line 61
    const/16 v4, 0x7d0

    .line 62
    .line 63
    if-eq v2, v4, :cond_3

    .line 64
    .line 65
    goto :goto_1

    .line 66
    :cond_3
    const/16 v1, 0x33

    .line 67
    .line 68
    :cond_4
    :goto_1
    const/4 v2, 0x0

    .line 69
    if-ne v1, v3, :cond_5

    .line 70
    .line 71
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 72
    .line 73
    new-instance v5, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda7;

    .line 74
    .line 75
    invoke-direct {v5, p3}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda7;-><init>(I)V

    .line 76
    .line 77
    .line 78
    invoke-virtual {v4, v5, v2}, Lcom/android/server/am/ProcessList;->searchEachLruProcessesLOSP(Ljava/util/function/Function;Z)Ljava/lang/Object;

    .line 79
    .line 80
    .line 81
    move-result-object v4

    .line 82
    check-cast v4, Ljava/lang/Integer;

    .line 83
    .line 84
    if-eqz v4, :cond_5

    .line 85
    .line 86
    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    .line 87
    .line 88
    .line 89
    move-result v1

    .line 90
    :cond_5
    if-ne v1, v3, :cond_6

    .line 91
    .line 92
    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 93
    .line 94
    invoke-virtual {v4, p3}, Landroid/app/ActivityManagerInternal;->isTempAllowlistedForFgsWhileInUse(I)Z

    .line 95
    .line 96
    .line 97
    move-result v4

    .line 98
    if-eqz v4, :cond_6

    .line 99
    .line 100
    const/16 p0, 0x46

    .line 101
    .line 102
    return p0

    .line 103
    :cond_6
    if-ne v1, v3, :cond_7

    .line 104
    .line 105
    if-eqz p4, :cond_7

    .line 106
    .line 107
    iget-object p4, p4, Lcom/android/server/am/ProcessRecord;->mInstr:Lcom/android/server/am/ActiveInstrumentation;

    .line 108
    .line 109
    if-eqz p4, :cond_7

    .line 110
    .line 111
    iget-boolean p4, p4, Lcom/android/server/am/ActiveInstrumentation;->mHasBackgroundActivityStartsPermission:Z

    .line 112
    .line 113
    if-eqz p4, :cond_7

    .line 114
    .line 115
    const/16 v1, 0x3c

    .line 116
    .line 117
    :cond_7
    if-ne v1, v3, :cond_8

    .line 118
    .line 119
    const-string p4, "android.permission.START_ACTIVITIES_FROM_BACKGROUND"

    .line 120
    .line 121
    invoke-virtual {v0, p4, p2, p3, v2}, Lcom/android/server/am/ActivityManagerService;->checkPermissionForDevice(Ljava/lang/String;III)I

    .line 122
    .line 123
    .line 124
    move-result p2

    .line 125
    if-nez p2, :cond_8

    .line 126
    .line 127
    const/16 v1, 0x3a

    .line 128
    .line 129
    :cond_8
    if-ne v1, v3, :cond_c

    .line 130
    .line 131
    if-eqz p3, :cond_a

    .line 132
    .line 133
    if-ne p3, p5, :cond_9

    .line 134
    .line 135
    goto :goto_2

    .line 136
    :cond_9
    invoke-virtual {v0}, Lcom/android/server/am/ActivityManagerService;->getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal;

    .line 137
    .line 138
    .line 139
    move-result-object p2

    .line 140
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 141
    .line 142
    .line 143
    move-result v6

    .line 144
    move-object v4, p2

    .line 145
    check-cast v4, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;

    .line 146
    .line 147
    const-wide/16 v7, 0x0

    .line 148
    .line 149
    move v5, p3

    .line 150
    move-object v9, p1

    .line 151
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/pm/PackageManagerService$PackageManagerInternalImpl;->isSameApp(IIJLjava/lang/String;)Z

    .line 152
    .line 153
    .line 154
    move-result p2

    .line 155
    goto :goto_3

    .line 156
    :cond_a
    :goto_2
    const/4 p2, 0x1

    .line 157
    :goto_3
    if-eqz p2, :cond_b

    .line 158
    .line 159
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAllowListWhileInUsePermissionInFgs:Landroid/util/ArraySet;

    .line 160
    .line 161
    invoke-virtual {p0, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 162
    .line 163
    .line 164
    move-result p0

    .line 165
    if-eqz p0, :cond_c

    .line 166
    .line 167
    const/16 v1, 0x41

    .line 168
    .line 169
    goto :goto_4

    .line 170
    :cond_b
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 171
    .line 172
    .line 173
    move-result-object p0

    .line 174
    const-string/jumbo p2, "callingPackage:"

    .line 175
    .line 176
    .line 177
    const-string p4, " does not belong to callingUid:"

    .line 178
    .line 179
    invoke-static {p3, p2, p1, p4}, Lcom/android/server/SensitiveContentProtectionManagerService$SensitiveContentProtectionManagerServiceBinder$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 180
    .line 181
    .line 182
    move-result-object p1

    .line 183
    const-string p2, "215003903"

    .line 184
    .line 185
    filled-new-array {p2, p0, p1}, [Ljava/lang/Object;

    .line 186
    .line 187
    .line 188
    move-result-object p0

    .line 189
    const p1, 0x534e4554

    .line 190
    .line 191
    .line 192
    invoke-static {p1, p0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 193
    .line 194
    .line 195
    :cond_c
    :goto_4
    if-ne v1, v3, :cond_d

    .line 196
    .line 197
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mInternal:Landroid/app/ActivityManagerInternal;

    .line 198
    .line 199
    invoke-virtual {p0, p3}, Landroid/app/ActivityManagerInternal;->isDeviceOwner(I)Z

    .line 200
    .line 201
    .line 202
    move-result p0

    .line 203
    if-eqz p0, :cond_d

    .line 204
    .line 205
    const/16 v1, 0x37

    .line 206
    .line 207
    :cond_d
    return v1
.end method

.method public final shouldServiceTimeOutLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Z
    .locals 6

    .line 1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 6
    .line 7
    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 8
    .line 9
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    .line 11
    .line 12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 13
    .line 14
    .line 15
    move-result-wide v2

    .line 16
    :try_start_0
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 17
    .line 18
    .line 19
    move-result-object p0

    .line 20
    iget-object p0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 21
    .line 22
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object p0

    .line 26
    check-cast p0, Lcom/android/server/am/ServiceRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27
    .line 28
    if-ne p0, p2, :cond_0

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const/4 p0, 0x0

    .line 32
    :goto_0
    if-nez p0, :cond_1

    .line 33
    .line 34
    iget-object p0, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 35
    .line 36
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 37
    .line 38
    .line 39
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 40
    .line 41
    .line 42
    const/4 p0, 0x0

    .line 43
    return p0

    .line 44
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 45
    .line 46
    .line 47
    move-result-wide p1

    .line 48
    iget-object v0, p0, Lcom/android/server/am/ServiceRecord;->mShortFgsInfo:Lcom/android/server/am/ServiceRecord$ShortFgsInfo;

    .line 49
    .line 50
    if-nez v0, :cond_2

    .line 51
    .line 52
    const-wide/16 v4, 0x0

    .line 53
    .line 54
    goto :goto_1

    .line 55
    :cond_2
    invoke-virtual {v0}, Lcom/android/server/am/ServiceRecord$ShortFgsInfo;->getTimeoutTime()J

    .line 56
    .line 57
    .line 58
    move-result-wide v4

    .line 59
    :goto_1
    invoke-virtual {p0, v4, v5, p1, p2}, Lcom/android/server/am/ServiceRecord;->shouldTriggerShortFgsTimedEvent(JJ)Z

    .line 60
    .line 61
    .line 62
    move-result p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 63
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 64
    .line 65
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 66
    .line 67
    .line 68
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 69
    .line 70
    .line 71
    return p0

    .line 72
    :catchall_0
    move-exception p0

    .line 73
    iget-object p1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 74
    .line 75
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 76
    .line 77
    .line 78
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 79
    .line 80
    .line 81
    throw p0
.end method

.method public final showFgsBgRestrictedNotificationLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerConstants;->mFgsStartRestrictionNotificationEnabled:Z

    .line 6
    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 11
    .line 12
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 13
    .line 14
    new-instance v0, Ljava/lang/StringBuilder;

    .line 15
    .line 16
    const-string v1, "App restricted: "

    .line 17
    .line 18
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 19
    .line 20
    .line 21
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->mRecentCallingPackage:Ljava/lang/String;

    .line 22
    .line 23
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 27
    .line 28
    .line 29
    move-result-object v0

    .line 30
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 31
    .line 32
    .line 33
    move-result-wide v1

    .line 34
    new-instance v3, Ljava/lang/StringBuilder;

    .line 35
    .line 36
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 37
    .line 38
    .line 39
    sget-object v4, Lcom/android/server/am/ActiveServices;->DATE_FORMATTER:Ljava/text/SimpleDateFormat;

    .line 40
    .line 41
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 42
    .line 43
    .line 44
    move-result-object v5

    .line 45
    invoke-virtual {v4, v5}, Ljava/text/SimpleDateFormat;->format(Ljava/lang/Object;)Ljava/lang/String;

    .line 46
    .line 47
    .line 48
    move-result-object v4

    .line 49
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 50
    .line 51
    .line 52
    const-string v4, " "

    .line 53
    .line 54
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 55
    .line 56
    .line 57
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->mInfoAllowStartForeground:Ljava/lang/String;

    .line 58
    .line 59
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 60
    .line 61
    .line 62
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 63
    .line 64
    .line 65
    move-result-object p1

    .line 66
    new-instance v3, Landroid/app/Notification$Builder;

    .line 67
    .line 68
    sget-object v4, Lcom/android/internal/notification/SystemNotificationChannels;->ALERTS:Ljava/lang/String;

    .line 69
    .line 70
    invoke-direct {v3, p0, v4}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    const-string/jumbo v4, "com.android.fgs-bg-restricted"

    .line 74
    .line 75
    .line 76
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setGroup(Ljava/lang/String;)Landroid/app/Notification$Builder;

    .line 77
    .line 78
    .line 79
    move-result-object v3

    .line 80
    const v4, 0x1080bcc

    .line 81
    .line 82
    .line 83
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    .line 84
    .line 85
    .line 86
    move-result-object v3

    .line 87
    const-wide/16 v4, 0x0

    .line 88
    .line 89
    invoke-virtual {v3, v4, v5}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    .line 90
    .line 91
    .line 92
    move-result-object v3

    .line 93
    const v4, 0x106001c

    .line 94
    .line 95
    .line 96
    invoke-virtual {p0, v4}, Landroid/content/Context;->getColor(I)I

    .line 97
    .line 98
    .line 99
    move-result v4

    .line 100
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    .line 101
    .line 102
    .line 103
    move-result-object v3

    .line 104
    const-string v4, "Foreground Service BG-Launch Restricted"

    .line 105
    .line 106
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    .line 107
    .line 108
    .line 109
    move-result-object v3

    .line 110
    invoke-virtual {v3, v4}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    .line 111
    .line 112
    .line 113
    move-result-object v3

    .line 114
    invoke-virtual {v3, v0}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    .line 115
    .line 116
    .line 117
    move-result-object v0

    .line 118
    new-instance v3, Landroid/app/Notification$BigTextStyle;

    .line 119
    .line 120
    invoke-direct {v3}, Landroid/app/Notification$BigTextStyle;-><init>()V

    .line 121
    .line 122
    .line 123
    invoke-virtual {v3, p1}, Landroid/app/Notification$BigTextStyle;->bigText(Ljava/lang/CharSequence;)Landroid/app/Notification$BigTextStyle;

    .line 124
    .line 125
    .line 126
    move-result-object p1

    .line 127
    invoke-virtual {v0, p1}, Landroid/app/Notification$Builder;->setStyle(Landroid/app/Notification$Style;)Landroid/app/Notification$Builder;

    .line 128
    .line 129
    .line 130
    move-result-object p1

    .line 131
    const-class v0, Landroid/app/NotificationManager;

    .line 132
    .line 133
    invoke-virtual {p0, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 134
    .line 135
    .line 136
    move-result-object p0

    .line 137
    check-cast p0, Landroid/app/NotificationManager;

    .line 138
    .line 139
    invoke-static {v1, v2}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    .line 140
    .line 141
    .line 142
    move-result-object v0

    .line 143
    invoke-virtual {p1}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    .line 144
    .line 145
    .line 146
    move-result-object p1

    .line 147
    sget-object v1, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 148
    .line 149
    const/16 v2, 0x3d

    .line 150
    .line 151
    invoke-virtual {p0, v0, v2, p1, v1}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 152
    .line 153
    .line 154
    return-void
.end method

.method public final signalForegroundServiceObserversLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsObservers:Landroid/os/RemoteCallbackList;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    :goto_0
    if-ge v1, v0, :cond_0

    .line 9
    .line 10
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mFgsObservers:Landroid/os/RemoteCallbackList;

    .line 11
    .line 12
    invoke-virtual {v2, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    .line 13
    .line 14
    .line 15
    move-result-object v2

    .line 16
    check-cast v2, Landroid/app/IForegroundServiceObserver;

    .line 17
    .line 18
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 19
    .line 20
    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 21
    .line 22
    iget v4, p1, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 23
    .line 24
    iget-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 25
    .line 26
    invoke-interface {v2, p1, v3, v4, v5}, Landroid/app/IForegroundServiceObserver;->onForegroundStateChanged(Landroid/os/IBinder;Ljava/lang/String;IZ)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 27
    .line 28
    .line 29
    :catch_0
    add-int/lit8 v1, v1, 0x1

    .line 30
    .line 31
    goto :goto_0

    .line 32
    :cond_0
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mFgsObservers:Landroid/os/RemoteCallbackList;

    .line 33
    .line 34
    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 35
    .line 36
    .line 37
    return-void
.end method

.method public final startForegroundServiceDelegateLocked(Landroid/app/ForegroundServiceDelegationOptions;Landroid/content/ServiceConnection;)Z
    .locals 28

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v11, p1

    .line 4
    .line 5
    move-object/from16 v10, p2

    .line 6
    .line 7
    const-string v1, "ActivityManager"

    .line 8
    .line 9
    new-instance v2, Ljava/lang/StringBuilder;

    .line 10
    .line 11
    const-string/jumbo v3, "startForegroundServiceDelegateLocked "

    .line 12
    .line 13
    .line 14
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 15
    .line 16
    .line 17
    invoke-virtual/range {p1 .. p1}, Landroid/app/ForegroundServiceDelegationOptions;->getDescription()Ljava/lang/String;

    .line 18
    .line 19
    .line 20
    move-result-object v3

    .line 21
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22
    .line 23
    .line 24
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 25
    .line 26
    .line 27
    move-result-object v2

    .line 28
    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    .line 30
    .line 31
    invoke-virtual/range {p1 .. p1}, Landroid/app/ForegroundServiceDelegationOptions;->getComponentName()Landroid/content/ComponentName;

    .line 32
    .line 33
    .line 34
    move-result-object v9

    .line 35
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 36
    .line 37
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 38
    .line 39
    .line 40
    move-result v1

    .line 41
    const/4 v8, 0x1

    .line 42
    sub-int/2addr v1, v8

    .line 43
    :goto_0
    const/16 v20, 0x0

    .line 44
    .line 45
    if-ltz v1, :cond_1

    .line 46
    .line 47
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 48
    .line 49
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    .line 50
    .line 51
    .line 52
    move-result-object v2

    .line 53
    check-cast v2, Lcom/android/server/am/ForegroundServiceDelegation;

    .line 54
    .line 55
    iget-object v2, v2, Lcom/android/server/am/ForegroundServiceDelegation;->mOptions:Landroid/app/ForegroundServiceDelegationOptions;

    .line 56
    .line 57
    invoke-virtual {v2, v11}, Landroid/app/ForegroundServiceDelegationOptions;->isSameDelegate(Landroid/app/ForegroundServiceDelegationOptions;)Z

    .line 58
    .line 59
    .line 60
    move-result v2

    .line 61
    if-eqz v2, :cond_0

    .line 62
    .line 63
    const-string v0, "ActivityManager"

    .line 64
    .line 65
    new-instance v1, Ljava/lang/StringBuilder;

    .line 66
    .line 67
    const-string/jumbo v2, "startForegroundServiceDelegate "

    .line 68
    .line 69
    .line 70
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    invoke-virtual/range {p1 .. p1}, Landroid/app/ForegroundServiceDelegationOptions;->getDescription()Ljava/lang/String;

    .line 74
    .line 75
    .line 76
    move-result-object v2

    .line 77
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 78
    .line 79
    .line 80
    const-string v2, " already exists, multiple connections are not allowed"

    .line 81
    .line 82
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 83
    .line 84
    .line 85
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 86
    .line 87
    .line 88
    move-result-object v1

    .line 89
    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 90
    .line 91
    .line 92
    return v20

    .line 93
    :cond_0
    add-int/lit8 v1, v1, -0x1

    .line 94
    .line 95
    goto :goto_0

    .line 96
    :cond_1
    iget v2, v11, Landroid/app/ForegroundServiceDelegationOptions;->mClientPid:I

    .line 97
    .line 98
    iget v1, v11, Landroid/app/ForegroundServiceDelegationOptions;->mClientUid:I

    .line 99
    .line 100
    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    .line 101
    .line 102
    .line 103
    move-result v16

    .line 104
    iget-object v15, v11, Landroid/app/ForegroundServiceDelegationOptions;->mClientPackageName:Ljava/lang/String;

    .line 105
    .line 106
    invoke-virtual {v0, v2, v1, v15}, Lcom/android/server/am/ActiveServices;->canStartForegroundServiceLocked(IILjava/lang/String;)Z

    .line 107
    .line 108
    .line 109
    move-result v3

    .line 110
    if-nez v3, :cond_2

    .line 111
    .line 112
    const-string v0, "ActivityManager"

    .line 113
    .line 114
    const-string/jumbo v1, "startForegroundServiceDelegateLocked aborted, app is in the background"

    .line 115
    .line 116
    .line 117
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 118
    .line 119
    .line 120
    return v20

    .line 121
    :cond_2
    iget-object v3, v11, Landroid/app/ForegroundServiceDelegationOptions;->mClientAppThread:Landroid/app/IApplicationThread;

    .line 122
    .line 123
    if-eqz v3, :cond_3

    .line 124
    .line 125
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 126
    .line 127
    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    .line 128
    .line 129
    .line 130
    move-result-object v4

    .line 131
    move-object v14, v4

    .line 132
    goto :goto_1

    .line 133
    :cond_3
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 134
    .line 135
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 136
    .line 137
    monitor-enter v3

    .line 138
    :try_start_0
    iget-object v4, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 139
    .line 140
    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 141
    .line 142
    invoke-virtual {v4, v2}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    .line 143
    .line 144
    .line 145
    move-result-object v4

    .line 146
    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 147
    .line 148
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 149
    move-object v14, v4

    .line 150
    move-object v3, v5

    .line 151
    :goto_1
    if-eqz v14, :cond_9

    .line 152
    .line 153
    new-instance v13, Landroid/content/Intent;

    .line 154
    .line 155
    invoke-direct {v13}, Landroid/content/Intent;-><init>()V

    .line 156
    .line 157
    .line 158
    invoke-virtual {v13, v9}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 159
    .line 160
    .line 161
    const/16 v17, 0x0

    .line 162
    .line 163
    const/16 v18, 0x0

    .line 164
    .line 165
    const/4 v3, 0x0

    .line 166
    const/4 v4, 0x0

    .line 167
    const/4 v5, -0x1

    .line 168
    const/4 v6, 0x0

    .line 169
    const/4 v7, 0x0

    .line 170
    const/4 v12, 0x1

    .line 171
    const/16 v19, 0x0

    .line 172
    .line 173
    move-object/from16 v21, v13

    .line 174
    .line 175
    move/from16 v13, v19

    .line 176
    .line 177
    move-object/from16 v22, v14

    .line 178
    .line 179
    move/from16 v14, v19

    .line 180
    .line 181
    move-object/from16 v23, v15

    .line 182
    .line 183
    move/from16 v15, v19

    .line 184
    .line 185
    move/from16 v24, v1

    .line 186
    .line 187
    move-object/from16 v1, p0

    .line 188
    .line 189
    move/from16 v25, v2

    .line 190
    .line 191
    move-object/from16 v2, v21

    .line 192
    .line 193
    move-object/from16 v8, v23

    .line 194
    .line 195
    move-object/from16 v27, v9

    .line 196
    .line 197
    move/from16 v9, v25

    .line 198
    .line 199
    move/from16 v10, v24

    .line 200
    .line 201
    move/from16 v11, v16

    .line 202
    .line 203
    move-object/from16 v16, p1

    .line 204
    .line 205
    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActiveServices;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    .line 206
    .line 207
    .line 208
    move-result-object v1

    .line 209
    if-eqz v1, :cond_8

    .line 210
    .line 211
    iget-object v10, v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;

    .line 212
    .line 213
    if-nez v10, :cond_4

    .line 214
    .line 215
    goto/16 :goto_4

    .line 216
    .line 217
    :cond_4
    move-object/from16 v11, v22

    .line 218
    .line 219
    invoke-virtual {v10, v11}, Lcom/android/server/am/ServiceRecord;->setProcess(Lcom/android/server/am/ProcessRecord;)V

    .line 220
    .line 221
    .line 222
    const/4 v12, 0x1

    .line 223
    iput-boolean v12, v10, Lcom/android/server/am/ServiceRecord;->mIsFgsDelegate:Z

    .line 224
    .line 225
    new-instance v13, Lcom/android/server/am/ForegroundServiceDelegation;

    .line 226
    .line 227
    move-object/from16 v1, p1

    .line 228
    .line 229
    move-object/from16 v14, p2

    .line 230
    .line 231
    invoke-direct {v13, v1, v14}, Lcom/android/server/am/ForegroundServiceDelegation;-><init>(Landroid/app/ForegroundServiceDelegationOptions;Landroid/content/ServiceConnection;)V

    .line 232
    .line 233
    .line 234
    iput-object v13, v10, Lcom/android/server/am/ServiceRecord;->mFgsDelegation:Lcom/android/server/am/ForegroundServiceDelegation;

    .line 235
    .line 236
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    .line 237
    .line 238
    invoke-virtual {v2, v13, v10}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 239
    .line 240
    .line 241
    iput-boolean v12, v10, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 242
    .line 243
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 244
    .line 245
    .line 246
    move-result-wide v2

    .line 247
    iput-wide v2, v10, Lcom/android/server/am/ServiceRecord;->mFgsEnterTime:J

    .line 248
    .line 249
    iget v1, v1, Landroid/app/ForegroundServiceDelegationOptions;->mForegroundServiceTypes:I

    .line 250
    .line 251
    iput v1, v10, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 252
    .line 253
    invoke-virtual {v10}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    .line 254
    .line 255
    .line 256
    sget-object v7, Landroid/app/BackgroundStartPrivileges;->NONE:Landroid/app/BackgroundStartPrivileges;

    .line 257
    .line 258
    const/4 v9, 0x0

    .line 259
    const/4 v8, 0x0

    .line 260
    move-object/from16 v1, p0

    .line 261
    .line 262
    move-object/from16 v2, v23

    .line 263
    .line 264
    move/from16 v3, v25

    .line 265
    .line 266
    move/from16 v4, v24

    .line 267
    .line 268
    move-object/from16 v5, v21

    .line 269
    .line 270
    move-object v6, v10

    .line 271
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 272
    .line 273
    .line 274
    iget-object v1, v11, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 275
    .line 276
    invoke-virtual {v1, v10}, Lcom/android/server/am/ProcessServiceRecord;->startService(Lcom/android/server/am/ServiceRecord;)Z

    .line 277
    .line 278
    .line 279
    invoke-virtual {v0, v1, v12}, Lcom/android/server/am/ActiveServices;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V

    .line 280
    .line 281
    .line 282
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 283
    .line 284
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 285
    .line 286
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 287
    .line 288
    monitor-enter v1

    .line 289
    :try_start_1
    invoke-virtual {v10}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    .line 290
    .line 291
    .line 292
    move-result-object v2

    .line 293
    if-eqz v2, :cond_5

    .line 294
    .line 295
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 296
    .line 297
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 298
    .line 299
    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 300
    .line 301
    .line 302
    move-result v3

    .line 303
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 304
    .line 305
    .line 306
    move-result-wide v4

    .line 307
    invoke-virtual {v2, v12, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    .line 308
    .line 309
    .line 310
    goto :goto_2

    .line 311
    :catchall_0
    move-exception v0

    .line 312
    goto/16 :goto_3

    .line 313
    .line 314
    :cond_5
    :goto_2
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 315
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 316
    .line 317
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 318
    .line 319
    invoke-virtual/range {v27 .. v27}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 320
    .line 321
    .line 322
    move-result-object v2

    .line 323
    move-object/from16 v4, v23

    .line 324
    .line 325
    move/from16 v3, v24

    .line 326
    .line 327
    invoke-virtual {v1, v3, v4, v2}, Lcom/android/server/am/BatteryStatsService;->noteServiceStartRunning(ILjava/lang/String;Ljava/lang/String;)V

    .line 328
    .line 329
    .line 330
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 331
    .line 332
    iget-object v15, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    .line 333
    .line 334
    invoke-static {v15}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    .line 335
    .line 336
    .line 337
    move-result-object v16

    .line 338
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 339
    .line 340
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 341
    .line 342
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 343
    .line 344
    const/16 v23, 0x0

    .line 345
    .line 346
    const/16 v24, 0x0

    .line 347
    .line 348
    const/16 v17, 0x4c

    .line 349
    .line 350
    const/16 v20, 0x0

    .line 351
    .line 352
    const/16 v21, 0x1

    .line 353
    .line 354
    const/16 v22, 0x0

    .line 355
    .line 356
    const/16 v25, 0x0

    .line 357
    .line 358
    const/16 v26, -0x1

    .line 359
    .line 360
    move/from16 v18, v1

    .line 361
    .line 362
    move-object/from16 v19, v2

    .line 363
    .line 364
    invoke-virtual/range {v15 .. v26}, Lcom/android/server/appop/AppOpsService;->startOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;ZZLjava/lang/String;ZII)Landroid/app/SyncNotedAppOp;

    .line 365
    .line 366
    .line 367
    invoke-virtual {v0, v10}, Lcom/android/server/am/ActiveServices;->registerAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 368
    .line 369
    .line 370
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 371
    .line 372
    monitor-enter v2

    .line 373
    :try_start_2
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mFGSLogger:Lcom/android/server/am/ForegroundServiceTypeLoggerModule;

    .line 374
    .line 375
    iget-object v3, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 376
    .line 377
    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 378
    .line 379
    invoke-virtual {v1, v3, v10}, Lcom/android/server/am/ForegroundServiceTypeLoggerModule;->logForegroundServiceStart(ILcom/android/server/am/ServiceRecord;)V

    .line 380
    .line 381
    .line 382
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 383
    const/4 v5, 0x0

    .line 384
    const/4 v6, 0x0

    .line 385
    const/4 v3, 0x1

    .line 386
    const/4 v4, 0x0

    .line 387
    const/4 v7, 0x4

    .line 388
    const/4 v8, 0x0

    .line 389
    move-object/from16 v1, p0

    .line 390
    .line 391
    move-object v2, v10

    .line 392
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 393
    .line 394
    .line 395
    if-eqz v14, :cond_6

    .line 396
    .line 397
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 398
    .line 399
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 400
    .line 401
    new-instance v2, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda4;

    .line 402
    .line 403
    move-object/from16 v4, v27

    .line 404
    .line 405
    invoke-direct {v2, v14, v4, v13}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticLambda4;-><init>(Landroid/content/ServiceConnection;Landroid/content/ComponentName;Lcom/android/server/am/ForegroundServiceDelegation;)V

    .line 406
    .line 407
    .line 408
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 409
    .line 410
    .line 411
    :cond_6
    invoke-virtual {v0, v10}, Lcom/android/server/am/ActiveServices;->signalForegroundServiceObserversLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 412
    .line 413
    .line 414
    iget v0, v10, Lcom/android/server/am/ServiceRecord;->foregroundId:I

    .line 415
    .line 416
    if-eqz v0, :cond_7

    .line 417
    .line 418
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;

    .line 419
    .line 420
    if-eqz v0, :cond_7

    .line 421
    .line 422
    iget v1, v0, Landroid/app/Notification;->flags:I

    .line 423
    .line 424
    or-int/lit8 v1, v1, 0x40

    .line 425
    .line 426
    iput v1, v0, Landroid/app/Notification;->flags:I

    .line 427
    .line 428
    invoke-virtual {v10, v12}, Lcom/android/server/am/ServiceRecord;->postNotification(Z)V

    .line 429
    .line 430
    .line 431
    :cond_7
    return v12

    .line 432
    :catchall_1
    move-exception v0

    .line 433
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 434
    throw v0

    .line 435
    :goto_3
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 436
    throw v0

    .line 437
    :cond_8
    :goto_4
    const-string v0, "ActivityManager"

    .line 438
    .line 439
    const-string/jumbo v1, "startForegroundServiceDelegateLocked retrieveServiceLocked returns null"

    .line 440
    .line 441
    .line 442
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 443
    .line 444
    .line 445
    return v20

    .line 446
    :cond_9
    move/from16 v25, v2

    .line 447
    .line 448
    move-object v4, v9

    .line 449
    new-instance v0, Ljava/lang/SecurityException;

    .line 450
    .line 451
    new-instance v1, Ljava/lang/StringBuilder;

    .line 452
    .line 453
    const-string v2, "Unable to find app for caller "

    .line 454
    .line 455
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 456
    .line 457
    .line 458
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 459
    .line 460
    .line 461
    const-string v2, " (pid="

    .line 462
    .line 463
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 464
    .line 465
    .line 466
    move/from16 v2, v25

    .line 467
    .line 468
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 469
    .line 470
    .line 471
    const-string v2, ") when startForegroundServiceDelegateLocked "

    .line 472
    .line 473
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 474
    .line 475
    .line 476
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 477
    .line 478
    .line 479
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 480
    .line 481
    .line 482
    move-result-object v1

    .line 483
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 484
    .line 485
    .line 486
    throw v0

    .line 487
    :catchall_2
    move-exception v0

    .line 488
    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 489
    throw v0
.end method

.method public final startServiceInnerLocked(Lcom/android/server/am/ActiveServices$ServiceMap;Landroid/content/Intent;Lcom/android/server/am/ServiceRecord;ZZILjava/lang/String;IZLjava/lang/String;)Landroid/content/ComponentName;
    .locals 30

    move-object/from16 v0, p0

    move-object/from16 v9, p1

    move-object/from16 v10, p3

    .line 86
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 87
    :try_start_0
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    move-result-object v2

    const/4 v11, 0x1

    if-eqz v2, :cond_0

    .line 88
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v3

    .line 89
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 90
    invoke-virtual {v2, v11, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    goto :goto_0

    :catchall_0
    move-exception v0

    goto/16 :goto_b

    .line 91
    :cond_0
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v12, 0x0

    .line 92
    iput-boolean v12, v10, Lcom/android/server/am/ServiceRecord;->callStart:Z

    .line 93
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v14, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 94
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v15

    .line 95
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v1

    const/16 v2, 0x63

    .line 96
    invoke-static {v2, v14, v15, v1, v11}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;I)V

    .line 97
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2, v14, v15, v1}, Lcom/android/server/am/BatteryStatsService;->noteServiceStartRunning(ILjava/lang/String;Ljava/lang/String;)V

    .line 98
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_1

    .line 99
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v2}, Landroid/content/pm/ApplicationInfo;->isStopped()Z

    move-result v2

    move v13, v2

    goto :goto_1

    :cond_1
    move v13, v12

    :goto_1
    if-nez v1, :cond_2

    .line 100
    iget-object v1, v10, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {v1}, Landroid/content/pm/ApplicationInfo;->isNotLaunched()Z

    move-result v1

    move/from16 v27, v1

    goto :goto_2

    :cond_2
    move/from16 v27, v12

    .line 101
    :goto_2
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v5, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p3

    move/from16 v4, p4

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActiveServices;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZZZZI)Ljava/lang/String;

    move-result-object v1

    .line 102
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    const/4 v3, 0x6

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    if-eqz v1, :cond_3

    .line 103
    new-instance v0, Landroid/content/ComponentName;

    const-string v2, "!!"

    invoke-direct {v0, v2, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    return-object v0

    :cond_3
    const/4 v1, 0x2

    if-eqz v13, :cond_4

    move/from16 v22, v1

    goto :goto_3

    :cond_4
    move/from16 v22, v11

    .line 104
    :goto_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v16

    .line 105
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_8

    .line 106
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_5

    goto :goto_5

    :cond_5
    if-nez p9, :cond_7

    .line 107
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 108
    invoke-virtual {v2}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_6

    goto :goto_4

    :cond_6
    move/from16 v1, p6

    move-object/from16 v2, p7

    move/from16 v19, v11

    goto :goto_6

    :cond_7
    :goto_4
    move-object/from16 v2, p7

    move/from16 v19, v1

    move/from16 v1, p6

    goto :goto_6

    :cond_8
    :goto_5
    const/4 v1, 0x3

    goto :goto_4

    .line 109
    :goto_6
    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActiveServices;->getShortProcessNameForStats(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v20

    .line 110
    iget-object v2, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    if-eqz v2, :cond_9

    .line 111
    invoke-virtual {v2}, Landroid/content/ComponentName;->getShortClassName()Ljava/lang/String;

    move-result-object v2

    :goto_7
    move-object/from16 v21, v2

    goto :goto_8

    :cond_9
    const/4 v2, 0x0

    goto :goto_7

    .line 112
    :goto_8
    iget v2, v10, Lcom/android/server/am/ServiceRecord;->mProcessStateOnRequest:I

    move/from16 v26, v2

    const/16 v17, 0x1

    const/16 v18, 0x0

    const/16 v13, 0x1dc

    const-wide/16 v28, 0x0

    move-object v2, v15

    move/from16 v15, p6

    move-object/from16 v23, v2

    move-object/from16 v24, p10

    move/from16 v25, p8

    .line 113
    invoke-static/range {v13 .. v29}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIILjava/lang/String;IZILjava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;IIZJ)V

    .line 114
    iget-boolean v1, v10, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v1, :cond_b

    if-eqz p5, :cond_b

    .line 115
    iget-object v1, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mStartingBackground:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-nez v1, :cond_a

    goto :goto_9

    :cond_a
    move v11, v12

    .line 116
    :goto_9
    iget-object v1, v9, Lcom/android/server/am/ActiveServices$ServiceMap;->mStartingBackground:Ljava/util/ArrayList;

    invoke-virtual {v1, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 117
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v3, v0, Lcom/android/server/am/ActivityManagerConstants;->BG_START_TIMEOUT:J

    add-long/2addr v1, v3

    iput-wide v1, v10, Lcom/android/server/am/ServiceRecord;->startingBgTimeout:J

    if-eqz v11, :cond_d

    .line 118
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ActiveServices$ServiceMap;->rescheduleDelayedStartsLocked()V

    goto :goto_a

    :cond_b
    if-nez p4, :cond_c

    .line 119
    iget-boolean v0, v10, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    if-eqz v0, :cond_d

    .line 120
    :cond_c
    invoke-virtual {v9, v10}, Lcom/android/server/am/ActiveServices$ServiceMap;->ensureNotStartingBackgroundLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 121
    :cond_d
    :goto_a
    iget-object v0, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    return-object v0

    .line 122
    :goto_b
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method public final startServiceInnerLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;IILjava/lang/String;IZZLandroid/app/BackgroundStartPrivileges;Ljava/lang/String;)Landroid/content/ComponentName;
    .locals 30

    move-object/from16 v0, p0

    move-object/from16 v11, p1

    move/from16 v12, p3

    move/from16 v13, p7

    move-object/from16 v14, p9

    .line 1
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    iget v5, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    check-cast v1, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    const/4 v6, 0x0

    move-object/from16 v2, p2

    move/from16 v3, p3

    .line 2
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->internalCheckGrantUriPermissionFromIntent(Landroid/content/Intent;ILjava/lang/String;ILjava/lang/Integer;)Lcom/android/server/uri/NeededUriGrants;

    move-result-object v6

    .line 3
    const-string/jumbo v1, "start service"

    const/4 v15, 0x0

    invoke-virtual {v0, v12, v11, v1, v15}, Lcom/android/server/am/ActiveServices;->unscheduleServiceRestartLocked(ILcom/android/server/am/ServiceRecord;Ljava/lang/String;Z)V

    .line 4
    iget-boolean v10, v11, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 5
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v1

    iput-wide v1, v11, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const/4 v9, 0x1

    .line 6
    iput-boolean v9, v11, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 7
    iput-boolean v15, v11, Lcom/android/server/am/ServiceRecord;->delayedStop:Z

    .line 8
    iput-boolean v13, v11, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 9
    iget-object v8, v11, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;

    new-instance v7, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 10
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    add-int/2addr v1, v9

    iput v1, v11, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    if-ge v1, v9, :cond_0

    .line 11
    iput v9, v11, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 12
    :cond_0
    iget v4, v11, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    const/4 v3, 0x0

    move-object v1, v7

    move-object/from16 v2, p1

    move-object/from16 v5, p2

    move-object v15, v7

    move/from16 v7, p3

    move-object/from16 v16, v8

    move-object/from16 v8, p5

    move-object/from16 v9, p10

    move/from16 v17, v10

    move/from16 v10, p6

    .line 13
    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;ILjava/lang/String;Ljava/lang/String;I)V

    move-object/from16 v1, v16

    invoke-virtual {v1, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    if-nez v1, :cond_3

    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    if-eqz v1, :cond_1

    goto :goto_1

    .line 15
    :cond_1
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    if-nez v1, :cond_2

    goto :goto_0

    :cond_2
    const/4 v1, 0x0

    .line 16
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    :goto_0
    move-object/from16 v15, p10

    goto :goto_4

    .line 17
    :cond_3
    :goto_1
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getFgsAllowWiu_forStart()I

    move-result v1

    .line 18
    invoke-static {v1, v12}, Lcom/android/server/am/ActivityManagerService;->doesReasonCodeAllowSchedulingUserInitiatedJobs(II)Z

    move-result v1

    if-nez v1, :cond_5

    .line 19
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    move/from16 v2, p4

    move-object/from16 v15, p10

    .line 20
    invoke-virtual {v1, v12, v2, v15}, Lcom/android/server/am/ActivityManagerService;->canScheduleUserInitiatedJobs(IILjava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_4

    goto :goto_2

    :cond_4
    const/4 v9, 0x0

    goto :goto_3

    :cond_5
    move-object/from16 v15, p10

    :goto_2
    const/4 v9, 0x1

    .line 21
    :goto_3
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    if-ne v1, v9, :cond_6

    goto :goto_4

    .line 22
    :cond_6
    iput-boolean v9, v11, Lcom/android/server/am/ServiceRecord;->mAllowUiJobScheduling:Z

    :goto_4
    if-eqz v13, :cond_8

    .line 23
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 24
    :try_start_0
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getTracker()Lcom/android/internal/app/procstats/ServiceState;

    move-result-object v2

    if-eqz v2, :cond_7

    .line 25
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v3

    .line 26
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    const/4 v6, 0x1

    .line 27
    invoke-virtual {v2, v6, v3, v4, v5}, Lcom/android/internal/app/procstats/ServiceState;->setForeground(ZIJ)V

    goto :goto_5

    :catchall_0
    move-exception v0

    goto :goto_6

    :cond_7
    const/4 v6, 0x1

    .line 28
    :goto_5
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/appop/AppOpsService;

    invoke-static {v1}, Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;

    move-result-object v19

    iget-object v2, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    const/16 v26, 0x0

    const/16 v27, 0x0

    const/16 v20, 0x4c

    const/16 v23, 0x0

    const/16 v24, 0x1

    const/16 v25, 0x0

    const/16 v28, 0x0

    const/16 v29, -0x1

    move-object/from16 v18, v1

    move/from16 v21, v2

    move-object/from16 v22, v3

    invoke-virtual/range {v18 .. v29}, Lcom/android/server/appop/AppOpsService;->startOperation(Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;ZZLjava/lang/String;ZII)Landroid/app/SyncNotedAppOp;

    goto :goto_7

    .line 30
    :goto_6
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    :cond_8
    const/4 v6, 0x1

    .line 31
    :goto_7
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    move-result-object v2

    .line 32
    sget-boolean v1, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 33
    sget-object v1, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 34
    invoke-virtual {v1, v11}, Lcom/android/server/am/FreecessController;->shouldDelayService(Lcom/android/server/am/ServiceRecord;)Z

    move-result v1

    if-eqz v1, :cond_c

    .line 35
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->delayService:Z

    if-eqz v1, :cond_a

    .line 36
    iget v1, v11, Lcom/android/server/am/ServiceRecord;->delayCount:I

    const/4 v3, 0x3

    if-ge v1, v3, :cond_9

    add-int/2addr v1, v6

    .line 37
    iput v1, v11, Lcom/android/server/am/ServiceRecord;->delayCount:I

    .line 38
    iget-object v0, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    return-object v0

    :cond_9
    const/4 v1, 0x0

    .line 39
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->delayService:Z

    .line 40
    iget-object v3, v2, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayServiceList:Ljava/util/ArrayList;

    invoke-virtual {v3, v11}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_8

    :cond_a
    const/4 v1, 0x0

    .line 41
    iget-boolean v3, v11, Lcom/android/server/am/ServiceRecord;->delayServiceStop:Z

    if-eqz v3, :cond_b

    .line 42
    iput-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->delayServiceStop:Z

    goto :goto_8

    .line 43
    :cond_b
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 44
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->isNowAppLaunching:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 45
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 46
    iput-boolean v6, v11, Lcom/android/server/am/ServiceRecord;->delayService:Z

    .line 47
    iput-boolean v6, v11, Lcom/android/server/am/ServiceRecord;->serviceDelayed:Z

    .line 48
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const-wide/16 v3, 0x1f4

    add-long/2addr v0, v3

    iput-wide v0, v11, Lcom/android/server/am/ServiceRecord;->delayTimeout:J

    .line 49
    iput v6, v11, Lcom/android/server/am/ServiceRecord;->delayCount:I

    .line 50
    iget-object v0, v2, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayServiceList:Ljava/util/ArrayList;

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    const/16 v0, 0x65

    .line 51
    invoke-virtual {v2, v0}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    const-wide/16 v3, 0x32

    .line 52
    invoke-virtual {v2, v0, v3, v4}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 53
    iget-object v0, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    return-object v0

    :cond_c
    const/4 v1, 0x0

    :cond_d
    :goto_8
    if-nez p8, :cond_11

    if-nez v13, :cond_11

    .line 54
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v3, :cond_11

    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    iget v4, v11, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 55
    invoke-virtual {v3, v4}, Lcom/android/server/am/UserController;->hasStartedUserState(I)Z

    move-result v3

    if-eqz v3, :cond_11

    .line 56
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;

    iget-object v5, v11, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 57
    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 58
    invoke-virtual {v3, v5, v4}, Lcom/android/server/am/ProcessList;->getProcessRecordLocked(ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-eqz v3, :cond_f

    .line 59
    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 60
    iget v3, v3, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    const/16 v4, 0xb

    if-le v3, v4, :cond_e

    goto :goto_9

    :cond_e
    const/16 v4, 0xa

    if-lt v3, v4, :cond_11

    goto :goto_a

    .line 61
    :cond_f
    :goto_9
    iget-boolean v1, v11, Lcom/android/server/am/ServiceRecord;->delayed:Z

    if-eqz v1, :cond_10

    .line 62
    iget-object v0, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    return-object v0

    .line 63
    :cond_10
    iget-object v1, v2, Lcom/android/server/am/ActiveServices$ServiceMap;->mStartingBackground:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v3, v0, Lcom/android/server/am/ActiveServices;->mMaxStartingBackground:I

    if-lt v1, v3, :cond_12

    .line 64
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v3, "Delaying start of: "

    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 65
    iget-object v0, v2, Lcom/android/server/am/ActiveServices$ServiceMap;->mDelayedStartList:Ljava/util/ArrayList;

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 66
    iput-boolean v6, v11, Lcom/android/server/am/ServiceRecord;->delayed:Z

    .line 67
    iget-object v0, v11, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    return-object v0

    :cond_11
    move v6, v1

    .line 68
    :cond_12
    :goto_a
    invoke-virtual/range {p9 .. p9}, Landroid/app/BackgroundStartPrivileges;->allowsAny()Z

    move-result v1

    if-eqz v1, :cond_18

    .line 69
    invoke-virtual/range {p9 .. p9}, Landroid/app/BackgroundStartPrivileges;->allowsAny()Z

    move-result v1

    invoke-static {v1}, Lcom/android/internal/util/Preconditions;->checkArgument(Z)V

    .line 70
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->mBackgroundStartPrivilegesByStart:Ljava/util/ArrayList;

    invoke-virtual {v1, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 71
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->mBackgroundStartPrivilegesByStartMerged:Landroid/app/BackgroundStartPrivileges;

    .line 72
    invoke-virtual {v14, v1}, Landroid/app/BackgroundStartPrivileges;->merge(Landroid/app/BackgroundStartPrivileges;)Landroid/app/BackgroundStartPrivileges;

    move-result-object v1

    .line 73
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->mBackgroundStartPrivilegesByStartMerged:Landroid/app/BackgroundStartPrivileges;

    if-ne v3, v1, :cond_13

    goto :goto_b

    .line 74
    :cond_13
    iput-object v1, v11, Lcom/android/server/am/ServiceRecord;->mBackgroundStartPrivilegesByStartMerged:Landroid/app/BackgroundStartPrivileges;

    .line 75
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_14

    goto :goto_b

    .line 76
    :cond_14
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->getBackgroundStartPrivilegesWithExclusiveToken()Landroid/app/BackgroundStartPrivileges;

    move-result-object v1

    .line 77
    invoke-virtual {v1}, Landroid/app/BackgroundStartPrivileges;->allowsAny()Z

    move-result v3

    if-eqz v3, :cond_15

    .line 78
    iget-object v3, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v3, v11, v1}, Lcom/android/server/am/ProcessRecord;->addOrUpdateBackgroundStartPrivileges(Landroid/os/Binder;Landroid/app/BackgroundStartPrivileges;)V

    goto :goto_b

    .line 79
    :cond_15
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v1, v11}, Lcom/android/server/am/ProcessRecord;->removeBackgroundStartPrivileges(Landroid/os/Binder;)V

    .line 80
    :goto_b
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_16

    .line 81
    iput-object v1, v11, Lcom/android/server/am/ServiceRecord;->mAppForAllowingBgActivityStartsByStart:Lcom/android/server/am/ProcessRecord;

    .line 82
    :cond_16
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->mCleanUpAllowBgActivityStartsByStartCallback:Lcom/android/server/am/ServiceRecord$$ExternalSyntheticLambda0;

    if-nez v1, :cond_17

    .line 83
    new-instance v1, Lcom/android/server/am/ServiceRecord$$ExternalSyntheticLambda0;

    invoke-direct {v1, v11}, Lcom/android/server/am/ServiceRecord$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/am/ServiceRecord;)V

    iput-object v1, v11, Lcom/android/server/am/ServiceRecord;->mCleanUpAllowBgActivityStartsByStartCallback:Lcom/android/server/am/ServiceRecord$$ExternalSyntheticLambda0;

    .line 84
    :cond_17
    iget-object v1, v11, Lcom/android/server/am/ServiceRecord;->ams:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    iget-object v4, v11, Lcom/android/server/am/ServiceRecord;->mCleanUpAllowBgActivityStartsByStartCallback:Lcom/android/server/am/ServiceRecord$$ExternalSyntheticLambda0;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mConstants:Lcom/android/server/am/ActivityManagerConstants;

    iget-wide v7, v1, Lcom/android/server/am/ActivityManagerConstants;->SERVICE_BG_ACTIVITY_START_TIMEOUT:J

    invoke-virtual {v3, v4, v7, v8}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    :cond_18
    move-object/from16 v1, p0

    move-object/from16 v3, p2

    move-object/from16 v4, p1

    move/from16 v5, p8

    move/from16 v7, p3

    move-object/from16 v8, p5

    move/from16 v9, p6

    move/from16 v10, v17

    move-object/from16 v11, p10

    .line 85
    invoke-virtual/range {v1 .. v11}, Lcom/android/server/am/ActiveServices;->startServiceInnerLocked(Lcom/android/server/am/ActiveServices$ServiceMap;Landroid/content/Intent;Lcom/android/server/am/ServiceRecord;ZZILjava/lang/String;IZLjava/lang/String;)Landroid/content/ComponentName;

    move-result-object v0

    return-object v0
.end method

.method public final startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IIZLjava/lang/String;Ljava/lang/String;ILandroid/app/BackgroundStartPrivileges;ZILjava/lang/String;Ljava/lang/String;)Landroid/content/ComponentName;
    .locals 27

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    move-object/from16 v13, p2

    .line 6
    .line 7
    move/from16 v11, p4

    .line 8
    .line 9
    move/from16 v10, p5

    .line 10
    .line 11
    move-object/from16 v9, p7

    .line 12
    .line 13
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 14
    .line 15
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 16
    .line 17
    invoke-virtual {v2}, Landroid/content/Context;->getUserId()I

    .line 18
    .line 19
    .line 20
    move-result v2

    .line 21
    const/4 v8, 0x1

    .line 22
    const/16 v20, 0x0

    .line 23
    .line 24
    const/16 v21, 0x0

    .line 25
    .line 26
    if-eqz v1, :cond_3

    .line 27
    .line 28
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 29
    .line 30
    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    .line 31
    .line 32
    .line 33
    move-result-object v2

    .line 34
    if-eqz v2, :cond_2

    .line 35
    .line 36
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 37
    .line 38
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mSetSchedGroup:I

    .line 39
    .line 40
    if-eqz v1, :cond_0

    .line 41
    .line 42
    move v1, v8

    .line 43
    goto :goto_0

    .line 44
    :cond_0
    move/from16 v1, v21

    .line 45
    .line 46
    :goto_0
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 47
    .line 48
    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 49
    .line 50
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 51
    .line 52
    iget v5, v2, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 53
    .line 54
    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->mHostingRecord:Lcom/android/server/am/HostingRecord;

    .line 55
    .line 56
    if-eqz v2, :cond_1

    .line 57
    .line 58
    invoke-virtual {v2}, Lcom/android/server/am/HostingRecord;->toStringForTracker()Ljava/lang/String;

    .line 59
    .line 60
    .line 61
    move-result-object v2

    .line 62
    goto :goto_1

    .line 63
    :cond_1
    move-object/from16 v2, v20

    .line 64
    .line 65
    :goto_1
    move/from16 v24, v1

    .line 66
    .line 67
    move-object/from16 v25, v2

    .line 68
    .line 69
    move-object/from16 v22, v3

    .line 70
    .line 71
    move/from16 v23, v4

    .line 72
    .line 73
    move/from16 v26, v5

    .line 74
    .line 75
    goto :goto_2

    .line 76
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    .line 77
    .line 78
    new-instance v2, Ljava/lang/StringBuilder;

    .line 79
    .line 80
    const-string v3, "Unable to find app for caller "

    .line 81
    .line 82
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 83
    .line 84
    .line 85
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    const-string v1, " (pid="

    .line 89
    .line 90
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 91
    .line 92
    .line 93
    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 94
    .line 95
    .line 96
    const-string v1, ") when starting service "

    .line 97
    .line 98
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 99
    .line 100
    .line 101
    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 102
    .line 103
    .line 104
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 105
    .line 106
    .line 107
    move-result-object v1

    .line 108
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 109
    .line 110
    .line 111
    throw v0

    .line 112
    :cond_3
    move/from16 v23, v2

    .line 113
    .line 114
    move/from16 v24, v8

    .line 115
    .line 116
    move-object/from16 v22, v20

    .line 117
    .line 118
    move-object/from16 v25, v22

    .line 119
    .line 120
    move/from16 v26, v21

    .line 121
    .line 122
    :goto_2
    const/16 v17, 0x0

    .line 123
    .line 124
    const/16 v18, 0x0

    .line 125
    .line 126
    const/4 v12, 0x1

    .line 127
    const/4 v14, 0x0

    .line 128
    const/4 v15, 0x0

    .line 129
    const/16 v16, 0x0

    .line 130
    .line 131
    const/16 v19, 0x0

    .line 132
    .line 133
    move-object/from16 v1, p0

    .line 134
    .line 135
    move-object/from16 v2, p2

    .line 136
    .line 137
    move-object/from16 v3, p14

    .line 138
    .line 139
    move/from16 v4, p11

    .line 140
    .line 141
    move/from16 v5, p12

    .line 142
    .line 143
    move-object/from16 v6, p13

    .line 144
    .line 145
    move-object/from16 v7, p3

    .line 146
    .line 147
    move-object/from16 v8, p7

    .line 148
    .line 149
    move/from16 v9, p4

    .line 150
    .line 151
    move/from16 v10, p5

    .line 152
    .line 153
    move/from16 v11, p9

    .line 154
    .line 155
    move/from16 v13, v24

    .line 156
    .line 157
    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActiveServices;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    .line 158
    .line 159
    .line 160
    move-result-object v15

    .line 161
    if-nez v15, :cond_4

    .line 162
    .line 163
    return-object v20

    .line 164
    :cond_4
    iget-object v14, v15, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;

    .line 165
    .line 166
    if-nez v14, :cond_6

    .line 167
    .line 168
    new-instance v0, Landroid/content/ComponentName;

    .line 169
    .line 170
    const-string v1, "!"

    .line 171
    .line 172
    iget-object v2, v15, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->permission:Ljava/lang/String;

    .line 173
    .line 174
    if-eqz v2, :cond_5

    .line 175
    .line 176
    goto :goto_3

    .line 177
    :cond_5
    const-string/jumbo v2, "private to package"

    .line 178
    .line 179
    .line 180
    :goto_3
    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 181
    .line 182
    .line 183
    return-object v0

    .line 184
    :cond_6
    const-string/jumbo v1, "startService(): "

    .line 185
    .line 186
    .line 187
    invoke-static {v1, v14}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    .line 188
    .line 189
    .line 190
    const/4 v9, 0x0

    .line 191
    const/4 v8, 0x0

    .line 192
    move-object/from16 v1, p0

    .line 193
    .line 194
    move-object/from16 v2, p7

    .line 195
    .line 196
    move/from16 v3, p4

    .line 197
    .line 198
    move/from16 v4, p5

    .line 199
    .line 200
    move-object/from16 v5, p2

    .line 201
    .line 202
    move-object v6, v14

    .line 203
    move-object/from16 v7, p10

    .line 204
    .line 205
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/am/ActiveServices;->setFgsRestrictionLocked(Ljava/lang/String;IILandroid/content/Intent;Lcom/android/server/am/ServiceRecord;Landroid/app/BackgroundStartPrivileges;ZZ)V

    .line 206
    .line 207
    .line 208
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 209
    .line 210
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mUserController:Lcom/android/server/am/UserController;

    .line 211
    .line 212
    iget v2, v14, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 213
    .line 214
    iget-object v1, v1, Lcom/android/server/am/UserController;->mInjector:Lcom/android/server/am/UserController$Injector;

    .line 215
    .line 216
    invoke-virtual {v1}, Lcom/android/server/am/UserController$Injector;->getUserManager()Lcom/android/server/pm/UserManagerService;

    .line 217
    .line 218
    .line 219
    move-result-object v1

    .line 220
    iget-object v1, v1, Lcom/android/server/pm/UserManagerService;->mLocalService:Lcom/android/server/pm/UserManagerService$LocalService;

    .line 221
    .line 222
    invoke-virtual {v1, v2}, Lcom/android/server/pm/UserManagerService$LocalService;->exists(I)Z

    .line 223
    .line 224
    .line 225
    move-result v1

    .line 226
    if-nez v1, :cond_7

    .line 227
    .line 228
    const-string v0, "ActivityManager"

    .line 229
    .line 230
    new-instance v1, Ljava/lang/StringBuilder;

    .line 231
    .line 232
    const-string v2, "Trying to start service with non-existent user! "

    .line 233
    .line 234
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 235
    .line 236
    .line 237
    iget v2, v14, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 238
    .line 239
    invoke-static {v1, v2, v0}, Lcom/android/server/HeapdumpWatcher$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 240
    .line 241
    .line 242
    return-object v20

    .line 243
    :cond_7
    if-eqz p11, :cond_8

    .line 244
    .line 245
    move/from16 v9, p12

    .line 246
    .line 247
    goto :goto_4

    .line 248
    :cond_8
    iget-object v1, v14, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 249
    .line 250
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 251
    .line 252
    move v9, v1

    .line 253
    :goto_4
    if-eqz p11, :cond_9

    .line 254
    .line 255
    move-object/from16 v5, p13

    .line 256
    .line 257
    goto :goto_5

    .line 258
    :cond_9
    iget-object v1, v14, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 259
    .line 260
    move-object v5, v1

    .line 261
    :goto_5
    iget-object v1, v14, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 262
    .line 263
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 264
    .line 265
    if-eqz p11, :cond_a

    .line 266
    .line 267
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    .line 268
    .line 269
    .line 270
    move-result-object v2
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 271
    const-wide/16 v3, 0x400

    .line 272
    .line 273
    move/from16 v13, p9

    .line 274
    .line 275
    :try_start_1
    invoke-interface {v2, v5, v3, v4, v13}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo;

    .line 276
    .line 277
    .line 278
    move-result-object v2

    .line 279
    iget v1, v2, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 280
    .line 281
    :catch_0
    :goto_6
    move v12, v1

    .line 282
    goto :goto_7

    .line 283
    :catch_1
    :cond_a
    move/from16 v13, p9

    .line 284
    .line 285
    goto :goto_6

    .line 286
    :goto_7
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 287
    .line 288
    invoke-virtual {v1, v9}, Lcom/android/server/am/ActivityManagerService;->isUidActiveLOSP(I)Z

    .line 289
    .line 290
    .line 291
    move-result v1

    .line 292
    const/4 v10, 0x1

    .line 293
    xor-int/2addr v1, v10

    .line 294
    if-eqz v1, :cond_b

    .line 295
    .line 296
    invoke-virtual {v0, v9, v5}, Lcom/android/server/am/ActiveServices;->appRestrictedAnyInBackground(ILjava/lang/String;)Z

    .line 297
    .line 298
    .line 299
    move-result v1

    .line 300
    if-eqz v1, :cond_b

    .line 301
    .line 302
    invoke-virtual {v0, v9}, Lcom/android/server/am/ActiveServices;->isTempAllowedByAlarmClock(I)Z

    .line 303
    .line 304
    .line 305
    move-result v1

    .line 306
    if-nez v1, :cond_b

    .line 307
    .line 308
    invoke-virtual {v0, v5}, Lcom/android/server/am/ActiveServices;->isDeviceProvisioningPackage(Ljava/lang/String;)Z

    .line 309
    .line 310
    .line 311
    move-result v1

    .line 312
    if-nez v1, :cond_b

    .line 313
    .line 314
    move v11, v10

    .line 315
    goto :goto_8

    .line 316
    :cond_b
    move/from16 v11, v21

    .line 317
    .line 318
    :goto_8
    if-eqz p6, :cond_d

    .line 319
    .line 320
    invoke-virtual {v0, v14}, Lcom/android/server/am/ActiveServices;->logFgsBackgroundStart(Lcom/android/server/am/ServiceRecord;)V

    .line 321
    .line 322
    .line 323
    invoke-virtual {v14}, Lcom/android/server/am/ServiceRecord;->isFgsAllowedStart()Z

    .line 324
    .line 325
    .line 326
    move-result v1

    .line 327
    if-nez v1, :cond_d

    .line 328
    .line 329
    move/from16 v8, p5

    .line 330
    .line 331
    invoke-virtual {v0, v8, v14}, Lcom/android/server/am/ActiveServices;->isBgFgsRestrictionEnabled(ILcom/android/server/am/ServiceRecord;)Z

    .line 332
    .line 333
    .line 334
    move-result v1

    .line 335
    if-eqz v1, :cond_e

    .line 336
    .line 337
    new-instance v1, Ljava/lang/StringBuilder;

    .line 338
    .line 339
    const-string/jumbo v2, "startForegroundService() not allowed due to mAllowStartForeground false: service "

    .line 340
    .line 341
    .line 342
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 343
    .line 344
    .line 345
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 346
    .line 347
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 348
    .line 349
    .line 350
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 351
    .line 352
    .line 353
    move-result-object v1

    .line 354
    const-string v2, "ActivityManager"

    .line 355
    .line 356
    invoke-static {v2, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 357
    .line 358
    .line 359
    invoke-virtual {v0, v14}, Lcom/android/server/am/ActiveServices;->showFgsBgRestrictedNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 360
    .line 361
    .line 362
    const/4 v2, 0x0

    .line 363
    const/4 v3, 0x0

    .line 364
    const/4 v4, 0x3

    .line 365
    const/4 v5, 0x0

    .line 366
    const/4 v6, 0x0

    .line 367
    const/4 v7, 0x0

    .line 368
    move-object/from16 p6, p0

    .line 369
    .line 370
    move-object/from16 p7, v14

    .line 371
    .line 372
    move/from16 p8, v4

    .line 373
    .line 374
    move/from16 p9, v5

    .line 375
    .line 376
    move/from16 p10, v2

    .line 377
    .line 378
    move/from16 p11, v3

    .line 379
    .line 380
    move/from16 p12, v6

    .line 381
    .line 382
    move/from16 p13, v7

    .line 383
    .line 384
    invoke-virtual/range {p6 .. p13}, Lcom/android/server/am/ActiveServices;->logFGSStateChangeLocked(Lcom/android/server/am/ServiceRecord;IIIIIZ)V

    .line 385
    .line 386
    .line 387
    const-wide/32 v2, 0xa5fa937

    .line 388
    .line 389
    .line 390
    invoke-static {v2, v3, v8}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 391
    .line 392
    .line 393
    move-result v0

    .line 394
    if-nez v0, :cond_c

    .line 395
    .line 396
    return-object v20

    .line 397
    :cond_c
    new-instance v0, Landroid/app/ForegroundServiceStartNotAllowedException;

    .line 398
    .line 399
    invoke-direct {v0, v1}, Landroid/app/ForegroundServiceStartNotAllowedException;-><init>(Ljava/lang/String;)V

    .line 400
    .line 401
    .line 402
    throw v0

    .line 403
    :cond_d
    move/from16 v8, p5

    .line 404
    .line 405
    :cond_e
    if-eqz p6, :cond_10

    .line 406
    .line 407
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 408
    .line 409
    invoke-virtual {v1}, Lcom/android/server/am/ActivityManagerService;->getAppOpsManager$1()Landroid/app/AppOpsManager;

    .line 410
    .line 411
    .line 412
    move-result-object v1

    .line 413
    const/16 v2, 0x4c

    .line 414
    .line 415
    invoke-virtual {v1, v2, v9, v5}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 416
    .line 417
    .line 418
    move-result v1

    .line 419
    if-eqz v1, :cond_10

    .line 420
    .line 421
    if-eq v1, v10, :cond_f

    .line 422
    .line 423
    const/4 v2, 0x3

    .line 424
    if-eq v1, v2, :cond_10

    .line 425
    .line 426
    new-instance v0, Landroid/content/ComponentName;

    .line 427
    .line 428
    const-string v1, "!!"

    .line 429
    .line 430
    const-string/jumbo v2, "foreground not allowed as per app op"

    .line 431
    .line 432
    .line 433
    invoke-direct {v0, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 434
    .line 435
    .line 436
    return-object v0

    .line 437
    :cond_f
    const-string v1, "ActivityManager"

    .line 438
    .line 439
    new-instance v2, Ljava/lang/StringBuilder;

    .line 440
    .line 441
    const-string/jumbo v3, "startForegroundService not allowed due to app op: service "

    .line 442
    .line 443
    .line 444
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 445
    .line 446
    .line 447
    move-object/from16 v7, p2

    .line 448
    .line 449
    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 450
    .line 451
    .line 452
    const-string v3, " to "

    .line 453
    .line 454
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 455
    .line 456
    .line 457
    iget-object v3, v14, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 458
    .line 459
    const-string v4, " from pid="

    .line 460
    .line 461
    const-string v6, " uid="

    .line 462
    .line 463
    move-object/from16 p1, v15

    .line 464
    .line 465
    move/from16 v15, p4

    .line 466
    .line 467
    invoke-static {v15, v3, v4, v6, v2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 468
    .line 469
    .line 470
    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 471
    .line 472
    .line 473
    const-string v3, " pkg="

    .line 474
    .line 475
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 476
    .line 477
    .line 478
    move-object/from16 v6, p7

    .line 479
    .line 480
    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 481
    .line 482
    .line 483
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 484
    .line 485
    .line 486
    move-result-object v2

    .line 487
    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 488
    .line 489
    .line 490
    move/from16 v16, v10

    .line 491
    .line 492
    move/from16 v4, v21

    .line 493
    .line 494
    goto :goto_9

    .line 495
    :cond_10
    move-object/from16 v7, p2

    .line 496
    .line 497
    move-object/from16 v6, p7

    .line 498
    .line 499
    move-object/from16 p1, v15

    .line 500
    .line 501
    move/from16 v15, p4

    .line 502
    .line 503
    move/from16 v4, p6

    .line 504
    .line 505
    move/from16 v16, v21

    .line 506
    .line 507
    :goto_9
    if-nez v11, :cond_12

    .line 508
    .line 509
    iget-boolean v1, v14, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 510
    .line 511
    if-nez v1, :cond_11

    .line 512
    .line 513
    if-nez v4, :cond_11

    .line 514
    .line 515
    goto :goto_a

    .line 516
    :cond_11
    move v10, v4

    .line 517
    move-object v13, v6

    .line 518
    move/from16 p3, v12

    .line 519
    .line 520
    move v12, v8

    .line 521
    move-object v8, v7

    .line 522
    goto/16 :goto_c

    .line 523
    .line 524
    :cond_12
    :goto_a
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 525
    .line 526
    const/16 v17, 0x0

    .line 527
    .line 528
    const/16 v18, 0x0

    .line 529
    .line 530
    move v2, v9

    .line 531
    move v3, v12

    .line 532
    move v10, v4

    .line 533
    move/from16 v4, p4

    .line 534
    .line 535
    move-object v13, v6

    .line 536
    move/from16 v6, v17

    .line 537
    .line 538
    move/from16 v7, v18

    .line 539
    .line 540
    move/from16 p3, v12

    .line 541
    .line 542
    move v12, v8

    .line 543
    move v8, v11

    .line 544
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->getAppStartModeLOSP(IIILjava/lang/String;ZZZ)I

    .line 545
    .line 546
    .line 547
    move-result v1

    .line 548
    if-eqz v1, :cond_16

    .line 549
    .line 550
    const-string v2, "ActivityManager"

    .line 551
    .line 552
    new-instance v3, Ljava/lang/StringBuilder;

    .line 553
    .line 554
    const-string v4, "Background start not allowed: service "

    .line 555
    .line 556
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 557
    .line 558
    .line 559
    move-object/from16 v8, p2

    .line 560
    .line 561
    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 562
    .line 563
    .line 564
    const-string v4, " to "

    .line 565
    .line 566
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 567
    .line 568
    .line 569
    iget-object v4, v14, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 570
    .line 571
    const-string v5, " from pid="

    .line 572
    .line 573
    const-string v6, " uid="

    .line 574
    .line 575
    invoke-static {v15, v4, v5, v6, v3}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 576
    .line 577
    .line 578
    const-string v4, " pkg="

    .line 579
    .line 580
    const-string v5, " startFg?="

    .line 581
    .line 582
    invoke-static {v12, v4, v13, v5, v3}, Lcom/android/server/alarm/AlarmManagerService$DeliveryTracker$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 583
    .line 584
    .line 585
    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 586
    .line 587
    .line 588
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 589
    .line 590
    .line 591
    move-result-object v3

    .line 592
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 593
    .line 594
    .line 595
    const/4 v2, 0x1

    .line 596
    if-eq v1, v2, :cond_15

    .line 597
    .line 598
    if-eqz v16, :cond_13

    .line 599
    .line 600
    goto :goto_b

    .line 601
    :cond_13
    if-eqz v11, :cond_14

    .line 602
    .line 603
    if-eqz v10, :cond_14

    .line 604
    .line 605
    return-object v20

    .line 606
    :cond_14
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 607
    .line 608
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 609
    .line 610
    iget-object v0, v0, Lcom/android/server/am/ProcessList;->mActiveUids:Lcom/android/server/am/ActiveUids;

    .line 611
    .line 612
    invoke-virtual {v0, v9}, Lcom/android/server/am/ActiveUids;->get(I)Lcom/android/server/am/UidRecord;

    .line 613
    .line 614
    .line 615
    move-result-object v0

    .line 616
    new-instance v1, Landroid/content/ComponentName;

    .line 617
    .line 618
    const-string v2, "?"

    .line 619
    .line 620
    new-instance v3, Ljava/lang/StringBuilder;

    .line 621
    .line 622
    const-string v4, "app is in background uid "

    .line 623
    .line 624
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 625
    .line 626
    .line 627
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 628
    .line 629
    .line 630
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 631
    .line 632
    .line 633
    move-result-object v0

    .line 634
    invoke-direct {v1, v2, v0}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 635
    .line 636
    .line 637
    return-object v1

    .line 638
    :cond_15
    :goto_b
    return-object v20

    .line 639
    :cond_16
    move-object/from16 v8, p2

    .line 640
    .line 641
    :goto_c
    sget-boolean v1, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 642
    .line 643
    if-eqz v1, :cond_18

    .line 644
    .line 645
    sget-object v1, Lcom/android/server/am/BaseRestrictionMgr$BaseRestrictionMgrHolder;->INSTANCE:Lcom/android/server/am/BaseRestrictionMgr;

    .line 646
    .line 647
    iget-object v2, v14, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 648
    .line 649
    const-string/jumbo v5, "startService"

    .line 650
    .line 651
    .line 652
    iget v7, v14, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 653
    .line 654
    iget-object v3, v14, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 655
    .line 656
    if-eqz v3, :cond_17

    .line 657
    .line 658
    iget v3, v3, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 659
    .line 660
    move/from16 v16, v3

    .line 661
    .line 662
    goto :goto_d

    .line 663
    :cond_17
    move/from16 v16, v7

    .line 664
    .line 665
    :goto_d
    const/4 v9, 0x0

    .line 666
    const/4 v11, 0x0

    .line 667
    move-object/from16 v3, v22

    .line 668
    .line 669
    move/from16 v4, v23

    .line 670
    .line 671
    move-object/from16 v6, p2

    .line 672
    .line 673
    move v8, v11

    .line 674
    move/from16 v17, v10

    .line 675
    .line 676
    move-object/from16 v10, v25

    .line 677
    .line 678
    move/from16 v11, v26

    .line 679
    .line 680
    move/from16 v13, p3

    .line 681
    .line 682
    move/from16 v12, v16

    .line 683
    .line 684
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/am/BaseRestrictionMgr;->isRestrictedPackage(Landroid/content/ComponentName;Ljava/lang/String;ILjava/lang/String;Landroid/content/Intent;IZLandroid/content/pm/ActivityInfo;Ljava/lang/String;II)Z

    .line 685
    .line 686
    .line 687
    move-result v1

    .line 688
    if-eqz v1, :cond_19

    .line 689
    .line 690
    return-object v20

    .line 691
    :cond_18
    move/from16 v13, p3

    .line 692
    .line 693
    move/from16 v17, v10

    .line 694
    .line 695
    :cond_19
    const/16 v1, 0x1a

    .line 696
    .line 697
    if-ge v13, v1, :cond_1a

    .line 698
    .line 699
    if-eqz v17, :cond_1a

    .line 700
    .line 701
    move/from16 v17, v21

    .line 702
    .line 703
    :cond_1a
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 704
    .line 705
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 706
    .line 707
    monitor-enter v1

    .line 708
    :try_start_2
    iget-object v2, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 709
    .line 710
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Lcom/android/server/am/ActivityManagerService$PidMap;

    .line 711
    .line 712
    invoke-virtual {v2, v15}, Lcom/android/server/am/ActivityManagerService$PidMap;->get(I)Lcom/android/server/am/ProcessRecord;

    .line 713
    .line 714
    .line 715
    move-result-object v2

    .line 716
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 717
    if-eqz v2, :cond_1b

    .line 718
    .line 719
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 720
    .line 721
    move-object/from16 v16, v1

    .line 722
    .line 723
    goto :goto_e

    .line 724
    :cond_1b
    move-object/from16 v16, p7

    .line 725
    .line 726
    :goto_e
    if-eqz v2, :cond_1c

    .line 727
    .line 728
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->mThread:Landroid/app/IApplicationThread;

    .line 729
    .line 730
    if-eqz v1, :cond_1c

    .line 731
    .line 732
    iget-boolean v1, v2, Lcom/android/server/am/ProcessRecord;->mKilled:Z

    .line 733
    .line 734
    if-nez v1, :cond_1c

    .line 735
    .line 736
    iget-object v1, v2, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 737
    .line 738
    iget v1, v1, Lcom/android/server/am/ProcessStateRecord;->mCurProcState:I

    .line 739
    .line 740
    :goto_f
    move/from16 v18, v1

    .line 741
    .line 742
    goto :goto_10

    .line 743
    :cond_1c
    const/4 v1, -0x1

    .line 744
    goto :goto_f

    .line 745
    :goto_10
    invoke-virtual {v14}, Lcom/android/server/am/ServiceRecord;->updateProcessStateOnRequest()V

    .line 746
    .line 747
    .line 748
    const/16 v19, 0x0

    .line 749
    .line 750
    const/16 v21, 0x0

    .line 751
    .line 752
    move-object/from16 v1, p0

    .line 753
    .line 754
    move-object v2, v14

    .line 755
    move-object/from16 v3, p2

    .line 756
    .line 757
    move-object/from16 v4, p7

    .line 758
    .line 759
    move-object/from16 v5, p8

    .line 760
    .line 761
    move/from16 v6, p5

    .line 762
    .line 763
    move/from16 v7, p4

    .line 764
    .line 765
    move-object/from16 v8, v16

    .line 766
    .line 767
    move/from16 v9, v18

    .line 768
    .line 769
    move/from16 v10, v17

    .line 770
    .line 771
    move/from16 v11, v24

    .line 772
    .line 773
    move/from16 v12, p9

    .line 774
    .line 775
    move-object/from16 v13, p10

    .line 776
    .line 777
    move-object/from16 v22, v14

    .line 778
    .line 779
    move/from16 v14, v19

    .line 780
    .line 781
    move-object/from16 v0, p1

    .line 782
    .line 783
    move-object/from16 v15, v21

    .line 784
    .line 785
    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActiveServices;->deferServiceBringupIfFrozenLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;IZZILandroid/app/BackgroundStartPrivileges;ZLandroid/app/IServiceConnection;)Z

    .line 786
    .line 787
    .line 788
    move-result v1

    .line 789
    if-eqz v1, :cond_1d

    .line 790
    .line 791
    return-object v20

    .line 792
    :cond_1d
    const/4 v9, 0x0

    .line 793
    const/4 v10, 0x0

    .line 794
    move-object/from16 v1, p0

    .line 795
    .line 796
    move-object/from16 v2, v22

    .line 797
    .line 798
    move-object/from16 v3, p7

    .line 799
    .line 800
    move-object/from16 v4, p8

    .line 801
    .line 802
    move/from16 v5, p5

    .line 803
    .line 804
    move-object/from16 v6, p2

    .line 805
    .line 806
    move/from16 v7, v24

    .line 807
    .line 808
    move/from16 v8, p9

    .line 809
    .line 810
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActiveServices;->requestStartTargetPermissionsReviewIfNeededLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;Ljava/lang/String;ILandroid/content/Intent;ZIZLandroid/app/IServiceConnection;)Z

    .line 811
    .line 812
    .line 813
    move-result v1

    .line 814
    if-nez v1, :cond_1e

    .line 815
    .line 816
    return-object v20

    .line 817
    :cond_1e
    move-object/from16 v1, p0

    .line 818
    .line 819
    move-object/from16 v2, v22

    .line 820
    .line 821
    move-object/from16 v3, p2

    .line 822
    .line 823
    move/from16 v4, p5

    .line 824
    .line 825
    move/from16 v5, p4

    .line 826
    .line 827
    move-object/from16 v6, v16

    .line 828
    .line 829
    move/from16 v7, v18

    .line 830
    .line 831
    move/from16 v8, v17

    .line 832
    .line 833
    move/from16 v9, v24

    .line 834
    .line 835
    move-object/from16 v10, p10

    .line 836
    .line 837
    move-object/from16 v11, p7

    .line 838
    .line 839
    invoke-virtual/range {v1 .. v11}, Lcom/android/server/am/ActiveServices;->startServiceInnerLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;IILjava/lang/String;IZZLandroid/app/BackgroundStartPrivileges;Ljava/lang/String;)Landroid/content/ComponentName;

    .line 840
    .line 841
    .line 842
    move-result-object v1

    .line 843
    iget-object v2, v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->aliasComponent:Landroid/content/ComponentName;

    .line 844
    .line 845
    if-eqz v2, :cond_1f

    .line 846
    .line 847
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 848
    .line 849
    .line 850
    move-result-object v2

    .line 851
    const-string v3, "!"

    .line 852
    .line 853
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 854
    .line 855
    .line 856
    move-result v2

    .line 857
    if-nez v2, :cond_1f

    .line 858
    .line 859
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 860
    .line 861
    .line 862
    move-result-object v2

    .line 863
    const-string v3, "?"

    .line 864
    .line 865
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 866
    .line 867
    .line 868
    move-result v2

    .line 869
    if-nez v2, :cond_1f

    .line 870
    .line 871
    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->aliasComponent:Landroid/content/ComponentName;

    .line 872
    .line 873
    return-object v0

    .line 874
    :cond_1f
    return-object v1

    .line 875
    :catchall_0
    move-exception v0

    .line 876
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 877
    throw v0
.end method

.method public final stopAllForegroundServicesLocked(ILjava/lang/String;)V
    .locals 11

    .line 1
    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 10
    .line 11
    invoke-virtual {v1}, Landroid/util/ArrayMap;->size()I

    .line 12
    .line 13
    .line 14
    move-result v1

    .line 15
    new-instance v2, Ljava/util/ArrayList;

    .line 16
    .line 17
    invoke-direct {v2, v1}, Ljava/util/ArrayList;-><init>(I)V

    .line 18
    .line 19
    .line 20
    const/4 v3, 0x0

    .line 21
    move v4, v3

    .line 22
    :goto_0
    if-ge v4, v1, :cond_2

    .line 23
    .line 24
    iget-object v5, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 25
    .line 26
    invoke-virtual {v5, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 27
    .line 28
    .line 29
    move-result-object v5

    .line 30
    check-cast v5, Lcom/android/server/am/ServiceRecord;

    .line 31
    .line 32
    iget-object v6, v5, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 33
    .line 34
    iget-object v7, v6, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 35
    .line 36
    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 37
    .line 38
    if-eq p1, v7, :cond_0

    .line 39
    .line 40
    iget-object v6, v6, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;

    .line 41
    .line 42
    invoke-virtual {p2, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 43
    .line 44
    .line 45
    move-result v6

    .line 46
    if-eqz v6, :cond_1

    .line 47
    .line 48
    :cond_0
    iget-boolean v6, v5, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 49
    .line 50
    if-eqz v6, :cond_1

    .line 51
    .line 52
    iget v6, v5, Lcom/android/server/am/ServiceRecord;->mAllowStartForegroundAtEntering:I

    .line 53
    .line 54
    const/16 v7, 0x12d

    .line 55
    .line 56
    if-eq v6, v7, :cond_1

    .line 57
    .line 58
    iget-object v6, v5, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 59
    .line 60
    invoke-virtual {p0, v6}, Lcom/android/server/am/ActiveServices;->isDeviceProvisioningPackage(Ljava/lang/String;)Z

    .line 61
    .line 62
    .line 63
    move-result v6

    .line 64
    if-nez v6, :cond_1

    .line 65
    .line 66
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 67
    .line 68
    .line 69
    :cond_1
    add-int/lit8 v4, v4, 0x1

    .line 70
    .line 71
    goto :goto_0

    .line 72
    :cond_2
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 73
    .line 74
    .line 75
    move-result p1

    .line 76
    :goto_1
    if-ge v3, p1, :cond_3

    .line 77
    .line 78
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 79
    .line 80
    .line 81
    move-result-object p2

    .line 82
    move-object v5, p2

    .line 83
    check-cast v5, Lcom/android/server/am/ServiceRecord;

    .line 84
    .line 85
    const/4 v9, 0x0

    .line 86
    const/4 v10, 0x0

    .line 87
    const/4 v6, 0x0

    .line 88
    const/4 v7, 0x0

    .line 89
    const/4 v8, 0x0

    .line 90
    move-object v4, p0

    .line 91
    invoke-virtual/range {v4 .. v10}, Lcom/android/server/am/ActiveServices;->setServiceForegroundInnerLocked(Lcom/android/server/am/ServiceRecord;ILandroid/app/Notification;III)V

    .line 92
    .line 93
    .line 94
    add-int/lit8 v3, v3, 0x1

    .line 95
    .line 96
    goto :goto_1

    .line 97
    :cond_3
    return-void
.end method

.method public final stopForegroundServiceDelegateLocked(Landroid/app/ForegroundServiceDelegationOptions;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    const-string v1, "ActivityManager"

    if-ltz v0, :cond_1

    .line 2
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ForegroundServiceDelegation;

    iget-object v2, v2, Lcom/android/server/am/ForegroundServiceDelegation;->mOptions:Landroid/app/ForegroundServiceDelegationOptions;

    invoke-virtual {v2, p1}, Landroid/app/ForegroundServiceDelegationOptions;->isSameDelegate(Landroid/app/ForegroundServiceDelegationOptions;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 3
    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "stopForegroundServiceDelegateLocked "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p1}, Landroid/app/ForegroundServiceDelegationOptions;->getDescription()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 4
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ServiceRecord;

    goto :goto_1

    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    :goto_1
    if-eqz v0, :cond_2

    .line 5
    invoke-virtual {v0}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    const/4 p1, 0x0

    .line 6
    invoke-virtual {p0, v0, p1}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    goto :goto_2

    .line 7
    :cond_2
    new-instance p0, Ljava/lang/StringBuilder;

    const-string/jumbo v0, "stopForegroundServiceDelegateLocked delegate does not exist "

    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 8
    invoke-virtual {p1}, Landroid/app/ForegroundServiceDelegationOptions;->getDescription()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 9
    invoke-static {v1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-void
.end method

.method public final stopForegroundServiceDelegateLocked(Landroid/content/ServiceConnection;)V
    .locals 4

    .line 10
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    :goto_0
    const-string v1, "ActivityManager"

    if-ltz v0, :cond_1

    .line 11
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {v2, v0}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ForegroundServiceDelegation;

    .line 12
    iget-object v3, v2, Lcom/android/server/am/ForegroundServiceDelegation;->mConnection:Landroid/content/ServiceConnection;

    if-ne v3, p1, :cond_0

    .line 13
    new-instance p1, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "stopForegroundServiceDelegateLocked "

    invoke-direct {p1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget-object v2, v2, Lcom/android/server/am/ForegroundServiceDelegation;->mOptions:Landroid/app/ForegroundServiceDelegationOptions;

    .line 14
    invoke-virtual {v2}, Landroid/app/ForegroundServiceDelegationOptions;->getDescription()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 15
    invoke-static {v1, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 16
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mFgsDelegations:Landroid/util/ArrayMap;

    invoke-virtual {p1, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    goto :goto_1

    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x0

    :goto_1
    if-eqz p1, :cond_2

    .line 17
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->updateOomAdjSeq()V

    const/4 v0, 0x0

    .line 18
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    goto :goto_2

    .line 19
    :cond_2
    const-string/jumbo p0, "stopForegroundServiceDelegateLocked delegate does not exist"

    invoke-static {v1, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_2
    return-void
.end method

.method public final stopInBackgroundLocked(I)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    iget-object v1, v0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 4
    .line 5
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    .line 6
    .line 7
    .line 8
    move-result v2

    .line 9
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 10
    .line 11
    .line 12
    move-result-object v1

    .line 13
    check-cast v1, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 14
    .line 15
    if-eqz v1, :cond_6

    .line 16
    .line 17
    iget-object v2, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 18
    .line 19
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    .line 20
    .line 21
    .line 22
    move-result v2

    .line 23
    const/4 v3, 0x1

    .line 24
    sub-int/2addr v2, v3

    .line 25
    const/4 v4, 0x0

    .line 26
    :goto_0
    const/4 v5, 0x0

    .line 27
    if-ltz v2, :cond_4

    .line 28
    .line 29
    iget-object v6, v1, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 30
    .line 31
    invoke-virtual {v6, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 32
    .line 33
    .line 34
    move-result-object v6

    .line 35
    check-cast v6, Lcom/android/server/am/ServiceRecord;

    .line 36
    .line 37
    iget-object v7, v6, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 38
    .line 39
    iget v9, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 40
    .line 41
    move/from16 v15, p1

    .line 42
    .line 43
    if-ne v9, v15, :cond_3

    .line 44
    .line 45
    iget-boolean v8, v6, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 46
    .line 47
    if-eqz v8, :cond_3

    .line 48
    .line 49
    iget-object v12, v6, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 50
    .line 51
    iget v10, v7, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 52
    .line 53
    const/4 v11, -0x1

    .line 54
    const/4 v13, 0x0

    .line 55
    iget-object v8, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 56
    .line 57
    const/4 v14, 0x0

    .line 58
    const/4 v7, 0x0

    .line 59
    move v15, v7

    .line 60
    invoke-virtual/range {v8 .. v15}, Lcom/android/server/am/ActivityManagerService;->getAppStartModeLOSP(IIILjava/lang/String;ZZZ)I

    .line 61
    .line 62
    .line 63
    move-result v7

    .line 64
    if-eqz v7, :cond_3

    .line 65
    .line 66
    iget-object v9, v6, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 67
    .line 68
    iget v10, v6, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 69
    .line 70
    if-eqz v9, :cond_0

    .line 71
    .line 72
    :try_start_0
    const-string v7, "application_policy"

    .line 73
    .line 74
    invoke-static {v7}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 75
    .line 76
    .line 77
    move-result-object v7

    .line 78
    invoke-static {v7}, Lcom/samsung/android/knox/application/IApplicationPolicy$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/knox/application/IApplicationPolicy;

    .line 79
    .line 80
    .line 81
    move-result-object v8

    .line 82
    if-eqz v8, :cond_0

    .line 83
    .line 84
    const/4 v12, 0x0

    .line 85
    const/4 v13, 0x0

    .line 86
    const/4 v14, 0x0

    .line 87
    const/4 v11, 0x0

    .line 88
    invoke-interface/range {v8 .. v14}, Lcom/samsung/android/knox/application/IApplicationPolicy;->isApplicationForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    .line 89
    .line 90
    .line 91
    move-result v5
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 92
    :catch_0
    :cond_0
    const-string v7, "ActivityManager"

    .line 93
    .line 94
    if-eqz v5, :cond_1

    .line 95
    .line 96
    const-string/jumbo v5, "cannot stop service due to MDM policy restriction"

    .line 97
    .line 98
    .line 99
    invoke-static {v7, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 100
    .line 101
    .line 102
    goto :goto_1

    .line 103
    :cond_1
    if-nez v4, :cond_2

    .line 104
    .line 105
    new-instance v4, Ljava/util/ArrayList;

    .line 106
    .line 107
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 108
    .line 109
    .line 110
    :cond_2
    iget-object v5, v6, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 111
    .line 112
    iget-object v8, v6, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 113
    .line 114
    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 115
    .line 116
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 117
    .line 118
    .line 119
    move-result-object v8

    .line 120
    filled-new-array {v8, v5}, [Ljava/lang/Object;

    .line 121
    .line 122
    .line 123
    move-result-object v8

    .line 124
    const/16 v9, 0x7568

    .line 125
    .line 126
    invoke-static {v9, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 127
    .line 128
    .line 129
    new-instance v8, Ljava/lang/StringBuilder;

    .line 130
    .line 131
    const/16 v9, 0x40

    .line 132
    .line 133
    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 134
    .line 135
    .line 136
    const-string v9, "Stopping service due to app idle: "

    .line 137
    .line 138
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 139
    .line 140
    .line 141
    iget-object v9, v6, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 142
    .line 143
    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 144
    .line 145
    invoke-static {v8, v9}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 146
    .line 147
    .line 148
    const-string v9, " "

    .line 149
    .line 150
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 151
    .line 152
    .line 153
    iget-wide v10, v6, Lcom/android/server/am/ServiceRecord;->createRealTime:J

    .line 154
    .line 155
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 156
    .line 157
    .line 158
    move-result-wide v12

    .line 159
    sub-long/2addr v10, v12

    .line 160
    invoke-static {v10, v11, v8}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 161
    .line 162
    .line 163
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 164
    .line 165
    .line 166
    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 167
    .line 168
    .line 169
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 170
    .line 171
    .line 172
    move-result-object v5

    .line 173
    invoke-static {v7, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 174
    .line 175
    .line 176
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 177
    .line 178
    .line 179
    iget-object v5, v6, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 180
    .line 181
    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 182
    .line 183
    iget-object v7, v6, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 184
    .line 185
    invoke-virtual {v0, v5, v7}, Lcom/android/server/am/ActiveServices;->appRestrictedAnyInBackground(ILjava/lang/String;)Z

    .line 186
    .line 187
    .line 188
    move-result v5

    .line 189
    if-eqz v5, :cond_3

    .line 190
    .line 191
    invoke-virtual {v0, v6}, Lcom/android/server/am/ActiveServices;->cancelForegroundNotificationLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 192
    .line 193
    .line 194
    :cond_3
    :goto_1
    add-int/lit8 v2, v2, -0x1

    .line 195
    .line 196
    goto/16 :goto_0

    .line 197
    .line 198
    :cond_4
    if-eqz v4, :cond_6

    .line 199
    .line 200
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 201
    .line 202
    .line 203
    move-result v2

    .line 204
    add-int/lit8 v6, v2, -0x1

    .line 205
    .line 206
    :goto_2
    if-ltz v6, :cond_5

    .line 207
    .line 208
    invoke-virtual {v4, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 209
    .line 210
    .line 211
    move-result-object v7

    .line 212
    check-cast v7, Lcom/android/server/am/ServiceRecord;

    .line 213
    .line 214
    iput-boolean v5, v7, Lcom/android/server/am/ServiceRecord;->delayed:Z

    .line 215
    .line 216
    invoke-virtual {v1, v7}, Lcom/android/server/am/ActiveServices$ServiceMap;->ensureNotStartingBackgroundLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 217
    .line 218
    .line 219
    invoke-virtual {v0, v7, v3}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 220
    .line 221
    .line 222
    add-int/lit8 v6, v6, -0x1

    .line 223
    .line 224
    goto :goto_2

    .line 225
    :cond_5
    if-lez v2, :cond_6

    .line 226
    .line 227
    iget-object v0, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 228
    .line 229
    const/16 v1, 0x12

    .line 230
    .line 231
    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V

    .line 232
    .line 233
    .line 234
    :cond_6
    return-void
.end method

.method public final stopServiceAndUpdateAllowlistManagerLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 2
    .line 3
    .line 4
    iget-object p0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 5
    .line 6
    iget-object p0, p0, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 7
    .line 8
    invoke-virtual {p0, p1}, Lcom/android/server/am/ProcessServiceRecord;->stopService(Lcom/android/server/am/ServiceRecord;)V

    .line 9
    .line 10
    .line 11
    invoke-virtual {p0}, Lcom/android/server/am/ProcessServiceRecord;->updateBoundClientUids()V

    .line 12
    .line 13
    .line 14
    iget-boolean p1, p1, Lcom/android/server/am/ServiceRecord;->allowlistManager:Z

    .line 15
    .line 16
    if-eqz p1, :cond_0

    .line 17
    .line 18
    invoke-static {p0}, Lcom/android/server/am/ActiveServices;->updateAllowlistManagerLocked(Lcom/android/server/am/ProcessServiceRecord;)V

    .line 19
    .line 20
    .line 21
    :cond_0
    return-void
.end method

.method public final stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;IZILjava/lang/String;Ljava/lang/String;)I
    .locals 21

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    .line 24
    iget-object v11, v0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    invoke-virtual {v11, v1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLOSP(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    if-eqz v1, :cond_0

    if-eqz v2, :cond_1

    :cond_0
    move-object/from16 v3, p2

    goto :goto_0

    .line 25
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Unable to find app for caller "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v1, " (pid="

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 26
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 27
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 28
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v1, ") when stopping service "

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v3, p2

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 29
    :goto_0
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 30
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 31
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    .line 32
    iget-object v1, v11, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 33
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v10

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/4 v8, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v19, 0x0

    move-object/from16 v1, p0

    move-object/from16 v2, p2

    move-object/from16 v3, p8

    move/from16 v4, p5

    move/from16 v5, p6

    move-object/from16 v6, p7

    move-object/from16 v7, p3

    move-object/from16 v20, v11

    move/from16 v11, p4

    .line 34
    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActiveServices;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIZZZZLandroid/app/ForegroundServiceDelegationOptions;ZZZ)Lcom/android/server/am/ActiveServices$ServiceLookupResult;

    move-result-object v1

    const/4 v2, 0x0

    if-eqz v1, :cond_5

    .line 35
    iget-object v1, v1, Lcom/android/server/am/ActiveServices$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;

    if-eqz v1, :cond_4

    .line 36
    iget-object v4, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    if-eqz v4, :cond_2

    .line 37
    :try_start_0
    const-string v3, "application_policy"

    .line 38
    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v3

    invoke-static {v3}, Lcom/samsung/android/knox/application/IApplicationPolicy$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/knox/application/IApplicationPolicy;

    move-result-object v3

    if-eqz v3, :cond_2

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v6, 0x0

    move/from16 v5, p4

    .line 39
    invoke-interface/range {v3 .. v9}, Lcom/samsung/android/knox/application/IApplicationPolicy;->isApplicationForceStopDisabled(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z

    move-result v3
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    :cond_2
    move v3, v2

    :goto_1
    if-eqz v3, :cond_3

    return v2

    :cond_3
    move-object/from16 v3, v20

    .line 40
    iget-object v4, v3, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 41
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 42
    :try_start_1
    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 43
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 44
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/4 v0, 0x1

    return v0

    :catchall_0
    move-exception v0

    move-object v1, v0

    .line 45
    iget-object v0, v3, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 46
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 47
    throw v1

    :cond_4
    const/4 v0, -0x1

    return v0

    :cond_5
    return v2
.end method

.method public final stopServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
    .locals 8

    .line 1
    const-string/jumbo v0, "stopService(): "

    invoke-static {v0, p1}, Lcom/android/server/am/ActiveServices;->traceInstant(Ljava/lang/String;Lcom/android/server/am/ServiceRecord;)V

    const-wide/16 v0, 0x40

    .line 2
    :try_start_0
    const-string/jumbo v2, "stopServiceLocked()"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 3
    iget-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->delayed:Z

    if-eqz v2, :cond_0

    const/4 p0, 0x1

    .line 4
    iput-boolean p0, p1, Lcom/android/server/am/ServiceRecord;->delayedStop:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :catchall_0
    move-exception p0

    goto :goto_1

    .line 6
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActiveServices;->maybeStopFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 8
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    .line 10
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v4}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v4

    const/16 v5, 0x63

    const/4 v6, 0x2

    .line 11
    invoke-static {v5, v2, v3, v4, v6}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;I)V

    .line 12
    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v5, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteServiceStopRunning(ILjava/lang/String;Ljava/lang/String;)V

    const/4 v2, 0x0

    .line 13
    iput-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 14
    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    if-eqz v3, :cond_1

    .line 15
    iget-object v3, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v3, v3, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    iget-object v3, v3, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16
    :try_start_2
    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    iget-object v5, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v5

    .line 17
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 18
    invoke-virtual {v4, v2, v5, v6, v7}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    .line 19
    monitor-exit v3

    goto :goto_0

    :catchall_1
    move-exception p0

    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    :try_start_3
    throw p0

    .line 20
    :cond_1
    :goto_0
    iput-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->callStart:Z

    .line 21
    invoke-virtual {p0, p1, v2, v2, p2}, Lcom/android/server/am/ActiveServices;->bringDownServiceIfNeededLocked(Lcom/android/server/am/ServiceRecord;ZZZ)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 22
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    return-void

    :goto_1
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 23
    throw p0
.end method

.method public final stopServiceTokenLocked(ILandroid/os/IBinder;Landroid/content/ComponentName;)Z
    .locals 6

    .line 1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    invoke-virtual {p0, v0}, Lcom/android/server/am/ActiveServices;->getServiceMapLocked(I)Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    iget-object v0, v0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 10
    .line 11
    invoke-virtual {v0, p3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 12
    .line 13
    .line 14
    move-result-object p3

    .line 15
    check-cast p3, Lcom/android/server/am/ServiceRecord;

    .line 16
    .line 17
    const/4 v0, 0x0

    .line 18
    if-ne p3, p2, :cond_0

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :cond_0
    move-object p3, v0

    .line 22
    :goto_0
    const/4 p2, 0x0

    .line 23
    if-eqz p3, :cond_7

    .line 24
    .line 25
    if-ltz p1, :cond_5

    .line 26
    .line 27
    invoke-virtual {p3, p1, p2, p2}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZZ)Lcom/android/server/am/ServiceRecord$StartItem;

    .line 28
    .line 29
    .line 30
    move-result-object v1

    .line 31
    if-eqz v1, :cond_3

    .line 32
    .line 33
    :cond_1
    iget-object v2, p3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 34
    .line 35
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 36
    .line 37
    .line 38
    move-result v2

    .line 39
    if-lez v2, :cond_3

    .line 40
    .line 41
    iget-object v2, p3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 42
    .line 43
    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 44
    .line 45
    .line 46
    move-result-object v2

    .line 47
    check-cast v2, Lcom/android/server/am/ServiceRecord$StartItem;

    .line 48
    .line 49
    iget-object v3, v2, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 50
    .line 51
    if-eqz v3, :cond_2

    .line 52
    .line 53
    const/4 v4, -0x1

    .line 54
    const/4 v5, 0x3

    .line 55
    invoke-virtual {v3, v5, v4, v0, v0}, Lcom/android/server/uri/UriPermissionOwner;->removeUriPermission(IILcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 56
    .line 57
    .line 58
    iput-object v0, v2, Lcom/android/server/am/ServiceRecord$StartItem;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 59
    .line 60
    :cond_2
    if-ne v2, v1, :cond_1

    .line 61
    .line 62
    :cond_3
    iget v0, p3, Lcom/android/server/am/ServiceRecord;->lastStartId:I

    .line 63
    .line 64
    if-eq v0, p1, :cond_4

    .line 65
    .line 66
    return p2

    .line 67
    :cond_4
    iget-object v0, p3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 68
    .line 69
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 70
    .line 71
    .line 72
    move-result v0

    .line 73
    if-lez v0, :cond_5

    .line 74
    .line 75
    const-string v0, "ActivityManager"

    .line 76
    .line 77
    const-string/jumbo v1, "stopServiceToken startId "

    .line 78
    .line 79
    .line 80
    const-string v2, " is last, but have "

    .line 81
    .line 82
    invoke-static {p1, v1, v2}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 83
    .line 84
    .line 85
    move-result-object p1

    .line 86
    iget-object v1, p3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;

    .line 87
    .line 88
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 89
    .line 90
    .line 91
    move-result v1

    .line 92
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 93
    .line 94
    .line 95
    const-string v1, " remaining args"

    .line 96
    .line 97
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 98
    .line 99
    .line 100
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 101
    .line 102
    .line 103
    move-result-object p1

    .line 104
    invoke-static {v0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 105
    .line 106
    .line 107
    :cond_5
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActiveServices;->maybeStopShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 108
    .line 109
    .line 110
    invoke-virtual {p0, p3}, Lcom/android/server/am/ActiveServices;->maybeStopFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 111
    .line 112
    .line 113
    iget-object p1, p3, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 114
    .line 115
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 116
    .line 117
    iget-object v0, p3, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 118
    .line 119
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 120
    .line 121
    .line 122
    move-result-object v0

    .line 123
    iget-object v1, p3, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    .line 124
    .line 125
    invoke-virtual {v1}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 126
    .line 127
    .line 128
    move-result-object v1

    .line 129
    const/16 v2, 0x63

    .line 130
    .line 131
    const/4 v3, 0x2

    .line 132
    invoke-static {v2, p1, v0, v1, v3}, Lcom/android/internal/util/FrameworkStatsLog;->write(IILjava/lang/String;Ljava/lang/String;I)V

    .line 133
    .line 134
    .line 135
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 136
    .line 137
    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 138
    .line 139
    invoke-virtual {v2, p1, v0, v1}, Lcom/android/server/am/BatteryStatsService;->noteServiceStopRunning(ILjava/lang/String;Ljava/lang/String;)V

    .line 140
    .line 141
    .line 142
    iput-boolean p2, p3, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 143
    .line 144
    iget-object p1, p3, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 145
    .line 146
    if-eqz p1, :cond_6

    .line 147
    .line 148
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 149
    .line 150
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 151
    .line 152
    iget-object p1, p1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 153
    .line 154
    monitor-enter p1

    .line 155
    :try_start_0
    iget-object v0, p3, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 156
    .line 157
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 158
    .line 159
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 160
    .line 161
    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 162
    .line 163
    .line 164
    move-result v1

    .line 165
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 166
    .line 167
    .line 168
    move-result-wide v2

    .line 169
    invoke-virtual {v0, p2, v1, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    .line 170
    .line 171
    .line 172
    monitor-exit p1

    .line 173
    goto :goto_1

    .line 174
    :catchall_0
    move-exception p0

    .line 175
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 176
    throw p0

    .line 177
    :cond_6
    :goto_1
    iput-boolean p2, p3, Lcom/android/server/am/ServiceRecord;->callStart:Z

    .line 178
    .line 179
    iget-object p1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 180
    .line 181
    iget-object p1, p1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 182
    .line 183
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 184
    .line 185
    .line 186
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 187
    .line 188
    .line 189
    move-result-wide v0

    .line 190
    invoke-virtual {p0, p3, p2, p2, p2}, Lcom/android/server/am/ActiveServices;->bringDownServiceIfNeededLocked(Lcom/android/server/am/ServiceRecord;ZZZ)V

    .line 191
    .line 192
    .line 193
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 194
    .line 195
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 196
    .line 197
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 198
    .line 199
    .line 200
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 201
    .line 202
    .line 203
    const/4 p0, 0x1

    .line 204
    return p0

    .line 205
    :cond_7
    return p2
.end method

.method public final tryScheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 4

    .line 1
    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActiveServices;->scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z

    .line 3
    .line 4
    .line 5
    move-result v1

    .line 6
    if-nez v1, :cond_0

    .line 7
    .line 8
    invoke-virtual {p0, p1, v0}, Lcom/android/server/am/ActiveServices;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V

    .line 9
    .line 10
    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 v0, 0x0

    .line 13
    invoke-virtual {p1, v0}, Lcom/android/server/am/ServiceRecord;->canStopIfKilled(Z)Z

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    if-eqz v1, :cond_1

    .line 18
    .line 19
    iput-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    .line 20
    .line 21
    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 22
    .line 23
    if-eqz v1, :cond_1

    .line 24
    .line 25
    iget-object v1, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 26
    .line 27
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 28
    .line 29
    iget-object v1, v1, Lcom/android/server/am/ProcessStatsService;->mLock:Ljava/lang/Object;

    .line 30
    .line 31
    monitor-enter v1

    .line 32
    :try_start_0
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->tracker:Lcom/android/internal/app/procstats/ServiceState;

    .line 33
    .line 34
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 35
    .line 36
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 37
    .line 38
    invoke-virtual {p0}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    .line 39
    .line 40
    .line 41
    move-result p0

    .line 42
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 43
    .line 44
    .line 45
    move-result-wide v2

    .line 46
    invoke-virtual {p1, v0, p0, v2, v3}, Lcom/android/internal/app/procstats/ServiceState;->setStarted(ZIJ)V

    .line 47
    .line 48
    .line 49
    monitor-exit v1

    .line 50
    goto :goto_0

    .line 51
    :catchall_0
    move-exception p0

    .line 52
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 53
    throw p0

    .line 54
    :cond_1
    :goto_0
    return-void
.end method

.method public final unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;)V
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 2
    .line 3
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 4
    .line 5
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    .line 7
    .line 8
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 9
    .line 10
    .line 11
    move-result-wide v1

    .line 12
    if-eqz p1, :cond_5

    .line 13
    .line 14
    :try_start_0
    new-instance v3, Landroid/content/Intent$FilterComparison;

    .line 15
    .line 16
    invoke-direct {v3, p2}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V

    .line 17
    .line 18
    .line 19
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->bindings:Landroid/util/ArrayMap;

    .line 20
    .line 21
    invoke-virtual {p2, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object p2

    .line 25
    move-object v5, p2

    .line 26
    check-cast v5, Lcom/android/server/am/IntentBindRecord;

    .line 27
    .line 28
    iget-object p2, p0, Lcom/android/server/am/ActiveServices;->mDestroyingServices:Ljava/util/ArrayList;

    .line 29
    .line 30
    invoke-virtual {p2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 31
    .line 32
    .line 33
    move-result p2

    .line 34
    const/4 v9, 0x0

    .line 35
    if-eqz v5, :cond_3

    .line 36
    .line 37
    iget-object v3, v5, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 38
    .line 39
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    .line 40
    .line 41
    .line 42
    move-result v3

    .line 43
    const/4 v4, 0x1

    .line 44
    if-lez v3, :cond_2

    .line 45
    .line 46
    if-nez p2, :cond_2

    .line 47
    .line 48
    iget-object v3, v5, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 49
    .line 50
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    .line 51
    .line 52
    .line 53
    move-result v3

    .line 54
    sub-int/2addr v3, v4

    .line 55
    :goto_0
    if-ltz v3, :cond_1

    .line 56
    .line 57
    iget-object v6, v5, Lcom/android/server/am/IntentBindRecord;->apps:Landroid/util/ArrayMap;

    .line 58
    .line 59
    invoke-virtual {v6, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 60
    .line 61
    .line 62
    move-result-object v6

    .line 63
    check-cast v6, Lcom/android/server/am/AppBindRecord;

    .line 64
    .line 65
    iget-object v6, v6, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 66
    .line 67
    if-eqz v6, :cond_0

    .line 68
    .line 69
    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->mState:Lcom/android/server/am/ProcessStateRecord;

    .line 70
    .line 71
    iget v6, v6, Lcom/android/server/am/ProcessStateRecord;->mSetSchedGroup:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 72
    .line 73
    if-eqz v6, :cond_0

    .line 74
    .line 75
    move v6, v4

    .line 76
    goto :goto_1

    .line 77
    :catchall_0
    move-exception p0

    .line 78
    goto :goto_4

    .line 79
    :cond_0
    add-int/lit8 v3, v3, -0x1

    .line 80
    .line 81
    goto :goto_0

    .line 82
    :cond_1
    move v6, v9

    .line 83
    :goto_1
    const/4 v7, 0x1

    .line 84
    const/4 v8, 0x0

    .line 85
    move-object v3, p0

    .line 86
    move-object v4, p1

    .line 87
    :try_start_1
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActiveServices;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;ZZI)Z
    :try_end_1
    .catch Landroid/os/TransactionTooLargeException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 88
    .line 89
    .line 90
    goto :goto_2

    .line 91
    :cond_2
    :try_start_2
    iput-boolean v4, v5, Lcom/android/server/am/IntentBindRecord;->doRebind:Z

    .line 92
    .line 93
    :catch_0
    :cond_3
    :goto_2
    invoke-static {}, Lcom/android/server/am/Flags;->serviceBindingOomAdjPolicy()Z

    .line 94
    .line 95
    .line 96
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->wasOomAdjUpdated()Z

    .line 97
    .line 98
    .line 99
    move-result v3

    .line 100
    if-eqz v3, :cond_4

    .line 101
    .line 102
    const/4 v3, 0x5

    .line 103
    move v11, v3

    .line 104
    goto :goto_3

    .line 105
    :cond_4
    move v11, v9

    .line 106
    :goto_3
    const/4 v9, 0x0

    .line 107
    const/4 v10, 0x0

    .line 108
    move-object v6, p0

    .line 109
    move-object v7, p1

    .line 110
    move v8, p2

    .line 111
    invoke-virtual/range {v6 .. v11}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;ZZZI)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 112
    .line 113
    .line 114
    goto :goto_5

    .line 115
    :goto_4
    iget-object p1, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 116
    .line 117
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 118
    .line 119
    .line 120
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 121
    .line 122
    .line 123
    throw p0

    .line 124
    :cond_5
    :goto_5
    iget-object p0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 125
    .line 126
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 127
    .line 128
    .line 129
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 130
    .line 131
    .line 132
    return-void
.end method

.method public final unbindServiceLocked(Landroid/app/IServiceConnection;)Z
    .locals 22

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    const-string/jumbo v0, "unbindServiceLocked: "

    .line 4
    .line 5
    .line 6
    invoke-interface/range {p1 .. p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 7
    .line 8
    .line 9
    move-result-object v2

    .line 10
    iget-object v3, v1, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    .line 11
    .line 12
    invoke-virtual {v3, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13
    .line 14
    .line 15
    move-result-object v3

    .line 16
    check-cast v3, Ljava/util/ArrayList;

    .line 17
    .line 18
    const-string v4, "ActivityManager"

    .line 19
    .line 20
    const/4 v5, 0x0

    .line 21
    if-nez v3, :cond_0

    .line 22
    .line 23
    new-instance v0, Ljava/lang/StringBuilder;

    .line 24
    .line 25
    const-string v1, "Unbind failed: could not find connection for "

    .line 26
    .line 27
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    .line 29
    .line 30
    invoke-interface/range {p1 .. p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 31
    .line 32
    .line 33
    move-result-object v1

    .line 34
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 35
    .line 36
    .line 37
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 38
    .line 39
    .line 40
    move-result-object v0

    .line 41
    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 42
    .line 43
    .line 44
    return v5

    .line 45
    :cond_0
    iget-object v6, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 46
    .line 47
    iget-object v6, v6, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 48
    .line 49
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 50
    .line 51
    .line 52
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 53
    .line 54
    .line 55
    move-result v6

    .line 56
    iget-object v7, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 57
    .line 58
    iget-object v7, v7, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 59
    .line 60
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 61
    .line 62
    .line 63
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 64
    .line 65
    .line 66
    move-result-wide v7

    .line 67
    const-wide/16 v9, 0x40

    .line 68
    .line 69
    :try_start_0
    invoke-static {v9, v10}, Landroid/os/Trace;->isTagEnabled(J)Z

    .line 70
    .line 71
    .line 72
    move-result v11
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 73
    if-eqz v11, :cond_2

    .line 74
    .line 75
    :try_start_1
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 76
    .line 77
    .line 78
    move-result v11

    .line 79
    if-lez v11, :cond_1

    .line 80
    .line 81
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v6

    .line 85
    check-cast v6, Lcom/android/server/am/ConnectionRecord;

    .line 86
    .line 87
    new-instance v11, Ljava/lang/StringBuilder;

    .line 88
    .line 89
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 90
    .line 91
    .line 92
    iget-object v12, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 93
    .line 94
    iget-object v12, v12, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 95
    .line 96
    iget-object v12, v12, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 97
    .line 98
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 99
    .line 100
    .line 101
    const-string v12, " from "

    .line 102
    .line 103
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 104
    .line 105
    .line 106
    iget-object v6, v6, Lcom/android/server/am/ConnectionRecord;->clientProcessName:Ljava/lang/String;

    .line 107
    .line 108
    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 109
    .line 110
    .line 111
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 112
    .line 113
    .line 114
    move-result-object v6

    .line 115
    goto :goto_0

    .line 116
    :catchall_0
    move-exception v0

    .line 117
    move-wide v2, v9

    .line 118
    goto/16 :goto_4

    .line 119
    .line 120
    :cond_1
    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 121
    .line 122
    .line 123
    move-result-object v6

    .line 124
    :goto_0
    new-instance v11, Ljava/lang/StringBuilder;

    .line 125
    .line 126
    invoke-direct {v11, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 127
    .line 128
    .line 129
    invoke-virtual {v11, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 130
    .line 131
    .line 132
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 133
    .line 134
    .line 135
    move-result-object v0

    .line 136
    invoke-static {v9, v10, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 137
    .line 138
    .line 139
    :cond_2
    move v0, v5

    .line 140
    :goto_1
    :try_start_2
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 141
    .line 142
    .line 143
    move-result v6

    .line 144
    const/4 v11, 0x1

    .line 145
    if-lez v6, :cond_a

    .line 146
    .line 147
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 148
    .line 149
    .line 150
    move-result-object v6

    .line 151
    check-cast v6, Lcom/android/server/am/ConnectionRecord;

    .line 152
    .line 153
    const/4 v12, 0x0

    .line 154
    invoke-virtual {v1, v6, v12, v12, v11}, Lcom/android/server/am/ActiveServices;->removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/wm/ActivityServiceConnectionsHolder;Z)I

    .line 155
    .line 156
    .line 157
    move-result v13

    .line 158
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 159
    .line 160
    .line 161
    move-result v14
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 162
    if-lez v14, :cond_3

    .line 163
    .line 164
    :try_start_3
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 165
    .line 166
    .line 167
    move-result-object v14

    .line 168
    if-ne v14, v6, :cond_3

    .line 169
    .line 170
    new-instance v14, Ljava/lang/StringBuilder;

    .line 171
    .line 172
    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    .line 173
    .line 174
    .line 175
    const-string v15, "Connection "

    .line 176
    .line 177
    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 178
    .line 179
    .line 180
    invoke-virtual {v14, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 181
    .line 182
    .line 183
    const-string v15, " not removed for binder "

    .line 184
    .line 185
    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 186
    .line 187
    .line 188
    invoke-virtual {v14, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 189
    .line 190
    .line 191
    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 192
    .line 193
    .line 194
    move-result-object v14

    .line 195
    invoke-static {v4, v14}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 196
    .line 197
    .line 198
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 199
    .line 200
    .line 201
    :cond_3
    :try_start_4
    iget-object v14, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 202
    .line 203
    iget-object v14, v14, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 204
    .line 205
    iget-object v14, v14, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 206
    .line 207
    if-eqz v14, :cond_9

    .line 208
    .line 209
    sget-boolean v15, Lcom/android/server/am/FreecessController;->IS_MINIMIZE_OLAF_LOCK:Z

    .line 210
    .line 211
    sget-object v15, Lcom/android/server/am/FreecessController$FreecessControllerHolder;->INSTANCE:Lcom/android/server/am/FreecessController;

    .line 212
    .line 213
    iget-boolean v5, v15, Lcom/android/server/am/FreecessController;->mIsFreecessEnable:Z

    .line 214
    .line 215
    if-eqz v5, :cond_4

    .line 216
    .line 217
    iget v5, v14, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 218
    .line 219
    const-string/jumbo v9, "unbindService"

    .line 220
    .line 221
    .line 222
    move v10, v13

    .line 223
    const-wide/16 v12, 0x7d0

    .line 224
    .line 225
    invoke-virtual {v15, v5, v9, v12, v13}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;J)V

    .line 226
    .line 227
    .line 228
    iget-object v5, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 229
    .line 230
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 231
    .line 232
    iget-object v9, v5, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 233
    .line 234
    iget v5, v5, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 235
    .line 236
    const-string/jumbo v21, "unbindService"

    .line 237
    .line 238
    .line 239
    const-wide/16 v19, 0x7d0

    .line 240
    .line 241
    move-object/from16 v16, v15

    .line 242
    .line 243
    move/from16 v17, v5

    .line 244
    .line 245
    move-object/from16 v18, v9

    .line 246
    .line 247
    invoke-virtual/range {v16 .. v21}, Lcom/android/server/am/FreecessController;->protectFreezePackage(ILjava/lang/String;JLjava/lang/String;)Z

    .line 248
    .line 249
    .line 250
    goto :goto_2

    .line 251
    :catchall_1
    move-exception v0

    .line 252
    const-wide/16 v2, 0x40

    .line 253
    .line 254
    goto/16 :goto_4

    .line 255
    .line 256
    :cond_4
    move v10, v13

    .line 257
    :goto_2
    sget-boolean v5, Lcom/android/server/am/MARsPolicyManager;->MARs_ENABLE:Z

    .line 258
    .line 259
    if-eqz v5, :cond_6

    .line 260
    .line 261
    iget-object v5, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 262
    .line 263
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 264
    .line 265
    if-eqz v5, :cond_6

    .line 266
    .line 267
    iget-object v5, v5, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 268
    .line 269
    if-eqz v5, :cond_6

    .line 270
    .line 271
    invoke-virtual {v5}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 272
    .line 273
    .line 274
    move-result-object v5

    .line 275
    if-eqz v5, :cond_6

    .line 276
    .line 277
    iget-object v5, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 278
    .line 279
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 280
    .line 281
    if-eqz v5, :cond_5

    .line 282
    .line 283
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 284
    .line 285
    if-eqz v5, :cond_5

    .line 286
    .line 287
    iget-object v5, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 288
    .line 289
    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 290
    .line 291
    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 292
    .line 293
    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 294
    .line 295
    goto :goto_3

    .line 296
    :cond_5
    const/4 v5, 0x0

    .line 297
    :goto_3
    sget-object v9, Lcom/android/server/am/MARsPolicyManager$MARsPolicyManagerHolder;->INSTANCE:Lcom/android/server/am/MARsPolicyManager;

    .line 298
    .line 299
    iget-object v12, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 300
    .line 301
    iget-object v13, v12, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 302
    .line 303
    iget-object v13, v13, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 304
    .line 305
    iget-object v12, v12, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;

    .line 306
    .line 307
    iget-object v12, v12, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;

    .line 308
    .line 309
    invoke-virtual {v12}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;

    .line 310
    .line 311
    .line 312
    move-result-object v12

    .line 313
    invoke-virtual {v12}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 314
    .line 315
    .line 316
    move-result-object v12

    .line 317
    iget-object v15, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 318
    .line 319
    iget-object v15, v15, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 320
    .line 321
    iget v15, v15, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 322
    .line 323
    invoke-virtual {v9}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 324
    .line 325
    .line 326
    invoke-static {v15, v13, v12, v5}, Lcom/android/server/am/MARsPolicyManager;->onSpecialUnBindServiceActions(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 327
    .line 328
    .line 329
    :cond_6
    iget-object v5, v14, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 330
    .line 331
    iget-boolean v9, v5, Lcom/android/server/am/ProcessServiceRecord;->mAllowlistManager:Z

    .line 332
    .line 333
    if-eqz v9, :cond_7

    .line 334
    .line 335
    invoke-static {v5}, Lcom/android/server/am/ActiveServices;->updateAllowlistManagerLocked(Lcom/android/server/am/ProcessServiceRecord;)V

    .line 336
    .line 337
    .line 338
    :cond_7
    const/high16 v9, 0x8000000

    .line 339
    .line 340
    invoke-virtual {v6, v9}, Lcom/android/server/am/ConnectionRecord;->hasFlag(I)Z

    .line 341
    .line 342
    .line 343
    move-result v6

    .line 344
    if-eqz v6, :cond_8

    .line 345
    .line 346
    iput-boolean v11, v5, Lcom/android/server/am/ProcessServiceRecord;->mTreatLikeActivity:Z

    .line 347
    .line 348
    iget-object v5, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 349
    .line 350
    iget-object v5, v5, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 351
    .line 352
    const/4 v6, 0x0

    .line 353
    invoke-virtual {v5, v14, v6, v11}, Lcom/android/server/am/ProcessList;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 354
    .line 355
    .line 356
    :cond_8
    if-nez v10, :cond_9

    .line 357
    .line 358
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 359
    .line 360
    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->enqueueOomAdjTargetLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 361
    .line 362
    .line 363
    move v0, v11

    .line 364
    :cond_9
    const/4 v5, 0x0

    .line 365
    const-wide/16 v9, 0x40

    .line 366
    .line 367
    goto/16 :goto_1

    .line 368
    .line 369
    :cond_a
    if-eqz v0, :cond_b

    .line 370
    .line 371
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 372
    .line 373
    const/4 v2, 0x5

    .line 374
    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjPendingTargetsLocked(I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 375
    .line 376
    .line 377
    :cond_b
    const-wide/16 v2, 0x40

    .line 378
    .line 379
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 380
    .line 381
    .line 382
    iget-object v0, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 383
    .line 384
    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 385
    .line 386
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 387
    .line 388
    .line 389
    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 390
    .line 391
    .line 392
    return v11

    .line 393
    :goto_4
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 394
    .line 395
    .line 396
    iget-object v1, v1, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 397
    .line 398
    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService;->mInjector:Lcom/android/server/am/ActivityManagerService$Injector;

    .line 399
    .line 400
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 401
    .line 402
    .line 403
    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 404
    .line 405
    .line 406
    throw v0
.end method

.method public final unregisterAppOpCallbackLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 13

    .line 1
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 2
    .line 3
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mFgsAppOpCallbacks:Landroid/util/SparseArray;

    .line 6
    .line 7
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    check-cast v0, Lcom/android/server/am/ActiveServices$AppOpCallback;

    .line 12
    .line 13
    if-eqz v0, :cond_7

    .line 14
    .line 15
    iget v1, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mNumFgs:I

    .line 16
    .line 17
    const/4 v2, 0x1

    .line 18
    sub-int/2addr v1, v2

    .line 19
    iput v1, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mNumFgs:I

    .line 20
    .line 21
    if-gtz v1, :cond_6

    .line 22
    .line 23
    iput-boolean v2, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mDestroyed:Z

    .line 24
    .line 25
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mCounterLock:Ljava/lang/Object;

    .line 26
    .line 27
    monitor-enter v1

    .line 28
    :try_start_0
    sget-object v3, Lcom/android/server/am/ActiveServices$AppOpCallback;->LOGGED_AP_OPS:[I

    .line 29
    .line 30
    const/4 v4, 0x0

    .line 31
    move v5, v4

    .line 32
    :goto_0
    const/4 v6, 0x4

    .line 33
    if-ge v5, v6, :cond_5

    .line 34
    .line 35
    aget v9, v3, v5

    .line 36
    .line 37
    iget-object v7, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAcceptedOps:Landroid/util/SparseIntArray;

    .line 38
    .line 39
    invoke-virtual {v7, v9}, Landroid/util/SparseIntArray;->get(I)I

    .line 40
    .line 41
    .line 42
    move-result v11

    .line 43
    iget-object v7, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mRejectedOps:Landroid/util/SparseIntArray;

    .line 44
    .line 45
    invoke-virtual {v7, v9}, Landroid/util/SparseIntArray;->get(I)I

    .line 46
    .line 47
    .line 48
    move-result v12

    .line 49
    if-gtz v11, :cond_0

    .line 50
    .line 51
    if-lez v12, :cond_4

    .line 52
    .line 53
    :cond_0
    iget-object v7, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mProcessRecord:Lcom/android/server/am/ProcessRecord;

    .line 54
    .line 55
    iget v8, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 56
    .line 57
    iget-object v7, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAppOpModes:Landroid/util/SparseIntArray;

    .line 58
    .line 59
    invoke-virtual {v7, v9}, Landroid/util/SparseIntArray;->get(I)I

    .line 60
    .line 61
    .line 62
    move-result v7

    .line 63
    if-eqz v7, :cond_3

    .line 64
    .line 65
    if-eq v7, v2, :cond_2

    .line 66
    .line 67
    if-eq v7, v6, :cond_1

    .line 68
    .line 69
    move v10, v4

    .line 70
    goto :goto_2

    .line 71
    :cond_1
    const/4 v6, 0x3

    .line 72
    :goto_1
    move v10, v6

    .line 73
    goto :goto_2

    .line 74
    :cond_2
    const/4 v6, 0x2

    .line 75
    goto :goto_1

    .line 76
    :cond_3
    move v10, v2

    .line 77
    :goto_2
    const/16 v7, 0x100

    .line 78
    .line 79
    invoke-static/range {v7 .. v12}, Lcom/android/internal/util/FrameworkStatsLog;->write(IIIIII)V

    .line 80
    .line 81
    .line 82
    :cond_4
    add-int/lit8 v5, v5, 0x1

    .line 83
    .line 84
    goto :goto_0

    .line 85
    :catchall_0
    move-exception p0

    .line 86
    goto :goto_3

    .line 87
    :cond_5
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 88
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 89
    .line 90
    iget-object v2, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mOpNotedCallback:Lcom/android/server/am/ActiveServices$AppOpCallback$1;

    .line 91
    .line 92
    invoke-virtual {v1, v2}, Landroid/app/AppOpsManager;->stopWatchingNoted(Landroid/app/AppOpsManager$OnOpNotedListener;)V

    .line 93
    .line 94
    .line 95
    iget-object v1, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mAppOpsManager:Landroid/app/AppOpsManager;

    .line 96
    .line 97
    iget-object v2, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mOpStartedCallback:Lcom/android/server/am/ActiveServices$AppOpCallback$2;

    .line 98
    .line 99
    invoke-virtual {v1, v2}, Landroid/app/AppOpsManager;->stopWatchingStarted(Landroid/app/AppOpsManager$OnOpStartedListener;)V

    .line 100
    .line 101
    .line 102
    goto :goto_4

    .line 103
    :goto_3
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 104
    throw p0

    .line 105
    :cond_6
    :goto_4
    iget-boolean v0, v0, Lcom/android/server/am/ActiveServices$AppOpCallback;->mDestroyed:Z

    .line 106
    .line 107
    if-eqz v0, :cond_7

    .line 108
    .line 109
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mFgsAppOpCallbacks:Landroid/util/SparseArray;

    .line 110
    .line 111
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->remove(I)V

    .line 112
    .line 113
    .line 114
    :cond_7
    return-void
.end method

.method public final unscheduleServiceRestartLocked(ILcom/android/server/am/ServiceRecord;Ljava/lang/String;Z)V
    .locals 4

    .line 1
    const-wide/16 v0, 0x0

    .line 2
    .line 3
    if-nez p4, :cond_0

    .line 4
    .line 5
    iget-wide v2, p2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 6
    .line 7
    cmp-long p4, v2, v0

    .line 8
    .line 9
    if-nez p4, :cond_0

    .line 10
    .line 11
    return-void

    .line 12
    :cond_0
    iget-object p4, p0, Lcom/android/server/am/ActiveServices;->mRestartingServices:Ljava/util/ArrayList;

    .line 13
    .line 14
    invoke-virtual {p4, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15
    .line 16
    .line 17
    move-result p4

    .line 18
    if-nez p4, :cond_1

    .line 19
    .line 20
    iget-object v2, p2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 21
    .line 22
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 23
    .line 24
    if-eq p1, v2, :cond_2

    .line 25
    .line 26
    :cond_1
    const/4 p1, 0x0

    .line 27
    iput p1, p2, Lcom/android/server/am/ServiceRecord;->restartCount:I

    .line 28
    .line 29
    iput-wide v0, p2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 30
    .line 31
    iput-wide v0, p2, Lcom/android/server/am/ServiceRecord;->restartTime:J

    .line 32
    .line 33
    iput-wide v0, p2, Lcom/android/server/am/ServiceRecord;->mEarliestRestartTime:J

    .line 34
    .line 35
    iput-wide v0, p2, Lcom/android/server/am/ServiceRecord;->mRestartSchedulingTime:J

    .line 36
    .line 37
    :cond_2
    if-eqz p4, :cond_3

    .line 38
    .line 39
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActiveServices;->clearRestartingIfNeededLocked(Lcom/android/server/am/ServiceRecord;)V

    .line 40
    .line 41
    .line 42
    iget p1, p2, Lcom/android/server/am/ServiceRecord;->userId:I

    .line 43
    .line 44
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 45
    .line 46
    .line 47
    move-result-object p1

    .line 48
    iget-object p4, p2, Lcom/android/server/am/ServiceRecord;->shortInstanceName:Ljava/lang/String;

    .line 49
    .line 50
    iget-wide v0, p2, Lcom/android/server/am/ServiceRecord;->restartDelay:J

    .line 51
    .line 52
    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 53
    .line 54
    .line 55
    move-result-object v0

    .line 56
    filled-new-array {p1, p4, v0, p3}, [Ljava/lang/Object;

    .line 57
    .line 58
    .line 59
    move-result-object p1

    .line 60
    const p3, 0xf42a6

    .line 61
    .line 62
    .line 63
    invoke-static {p3, p1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 64
    .line 65
    .line 66
    :cond_3
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 67
    .line 68
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 69
    .line 70
    iget-object p1, p2, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;

    .line 71
    .line 72
    invoke-virtual {p0, p1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 73
    .line 74
    .line 75
    return-void
.end method

.method public final unscheduleShortFgsTimeoutLocked(Lcom/android/server/am/ServiceRecord;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/am/ActiveServices;->mShortFGSAnrTimer:Lcom/android/server/am/ActiveServices$ProcessAnrTimer;

    .line 2
    .line 3
    invoke-virtual {v0, p1}, Lcom/android/server/utils/AnrTimer;->cancel(Ljava/lang/Object;)V

    .line 4
    .line 5
    .line 6
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 7
    .line 8
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 9
    .line 10
    const/16 v1, 0x4d

    .line 11
    .line 12
    invoke-virtual {v0, v1, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 13
    .line 14
    .line 15
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$UiHandler;

    .line 16
    .line 17
    const/16 v0, 0x4c

    .line 18
    .line 19
    invoke-virtual {p0, v0, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 20
    .line 21
    .line 22
    return-void
.end method

.method public final updateNumForegroundServicesLocked()V
    .locals 12

    .line 1
    sget-object v0, Lcom/android/server/am/ActiveServices;->sNumForegroundServices:Ljava/util/concurrent/atomic/AtomicReference;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 4
    .line 5
    iget-object p0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 6
    .line 7
    iget-object v1, p0, Lcom/android/server/am/ProcessList;->mService:Lcom/android/server/am/ActivityManagerService;

    .line 8
    .line 9
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->boostPriorityForLockedSection()V

    .line 10
    .line 11
    .line 12
    monitor-enter v1

    .line 13
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ProcessList;->mLruProcesses:Ljava/util/ArrayList;

    .line 14
    .line 15
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 16
    .line 17
    .line 18
    move-result v2

    .line 19
    const/4 v3, 0x0

    .line 20
    move v4, v3

    .line 21
    move v5, v4

    .line 22
    move v6, v5

    .line 23
    :goto_0
    if-ge v4, v2, :cond_3

    .line 24
    .line 25
    iget-object v7, p0, Lcom/android/server/am/ProcessList;->mLruProcesses:Ljava/util/ArrayList;

    .line 26
    .line 27
    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object v7

    .line 31
    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 32
    .line 33
    iget-object v7, v7, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 34
    .line 35
    iget-object v8, v7, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 36
    .line 37
    invoke-virtual {v8}, Landroid/util/ArraySet;->size()I

    .line 38
    .line 39
    .line 40
    move-result v8

    .line 41
    move v9, v3

    .line 42
    move v10, v9

    .line 43
    :goto_1
    if-ge v9, v8, :cond_1

    .line 44
    .line 45
    iget-object v11, v7, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 46
    .line 47
    invoke-virtual {v11, v9}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    move-result-object v11

    .line 51
    check-cast v11, Lcom/android/server/am/ServiceRecord;

    .line 52
    .line 53
    iget-boolean v11, v11, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 54
    .line 55
    if-eqz v11, :cond_0

    .line 56
    .line 57
    add-int/lit8 v10, v10, 0x1

    .line 58
    .line 59
    :cond_0
    add-int/lit8 v9, v9, 0x1

    .line 60
    .line 61
    goto :goto_1

    .line 62
    :cond_1
    if-lez v10, :cond_2

    .line 63
    .line 64
    add-int/2addr v5, v10

    .line 65
    add-int/lit8 v6, v6, 0x1

    .line 66
    .line 67
    :cond_2
    add-int/lit8 v4, v4, 0x1

    .line 68
    .line 69
    goto :goto_0

    .line 70
    :catchall_0
    move-exception p0

    .line 71
    goto :goto_2

    .line 72
    :cond_3
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 73
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 74
    .line 75
    .line 76
    new-instance p0, Landroid/util/Pair;

    .line 77
    .line 78
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 79
    .line 80
    .line 81
    move-result-object v1

    .line 82
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 83
    .line 84
    .line 85
    move-result-object v2

    .line 86
    invoke-direct {p0, v1, v2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 87
    .line 88
    .line 89
    invoke-virtual {v0, p0}, Ljava/util/concurrent/atomic/AtomicReference;->set(Ljava/lang/Object;)V

    .line 90
    .line 91
    .line 92
    return-void

    .line 93
    :goto_2
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 94
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->resetPriorityAfterLockedSection()V

    .line 95
    .line 96
    .line 97
    throw p0
.end method

.method public final updateScreenStateLocked(Z)V
    .locals 15

    .line 1
    move-object v0, p0

    .line 2
    move/from16 v1, p1

    .line 3
    .line 4
    iget-boolean v2, v0, Lcom/android/server/am/ActiveServices;->mScreenOn:Z

    .line 5
    .line 6
    if-eq v2, v1, :cond_7

    .line 7
    .line 8
    iput-boolean v1, v0, Lcom/android/server/am/ActiveServices;->mScreenOn:Z

    .line 9
    .line 10
    if-eqz v1, :cond_7

    .line 11
    .line 12
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 13
    .line 14
    .line 15
    move-result-wide v1

    .line 16
    iget-object v3, v0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 17
    .line 18
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    .line 19
    .line 20
    .line 21
    move-result v3

    .line 22
    const/4 v4, 0x1

    .line 23
    sub-int/2addr v3, v4

    .line 24
    :goto_0
    if-ltz v3, :cond_7

    .line 25
    .line 26
    iget-object v5, v0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 27
    .line 28
    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 29
    .line 30
    .line 31
    move-result-object v5

    .line 32
    check-cast v5, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 33
    .line 34
    iget-object v6, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 35
    .line 36
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    .line 37
    .line 38
    .line 39
    move-result v6

    .line 40
    sub-int/2addr v6, v4

    .line 41
    const/4 v9, 0x0

    .line 42
    const-wide v10, 0x7fffffffffffffffL

    .line 43
    .line 44
    .line 45
    .line 46
    .line 47
    :goto_1
    const-wide/16 v12, 0x0

    .line 48
    .line 49
    if-ltz v6, :cond_4

    .line 50
    .line 51
    iget-object v14, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 52
    .line 53
    invoke-virtual {v14, v6}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 54
    .line 55
    .line 56
    move-result-object v14

    .line 57
    check-cast v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;

    .line 58
    .line 59
    iget-wide v7, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mEndTime:J

    .line 60
    .line 61
    cmp-long v7, v7, v12

    .line 62
    .line 63
    if-nez v7, :cond_0

    .line 64
    .line 65
    iget-boolean v7, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileScreenOn:Z

    .line 66
    .line 67
    if-nez v7, :cond_3

    .line 68
    .line 69
    iput-boolean v4, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileScreenOn:Z

    .line 70
    .line 71
    iput-wide v1, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartVisibleTime:J

    .line 72
    .line 73
    goto :goto_2

    .line 74
    :cond_0
    iget-boolean v7, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mShownWhileScreenOn:Z

    .line 75
    .line 76
    if-nez v7, :cond_1

    .line 77
    .line 78
    iget-wide v7, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartVisibleTime:J

    .line 79
    .line 80
    iget-wide v12, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartTime:J

    .line 81
    .line 82
    cmp-long v7, v7, v12

    .line 83
    .line 84
    if-nez v7, :cond_1

    .line 85
    .line 86
    iput-wide v1, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mStartVisibleTime:J

    .line 87
    .line 88
    iput-wide v1, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mEndTime:J

    .line 89
    .line 90
    :cond_1
    invoke-virtual {p0, v14, v1, v2}, Lcom/android/server/am/ActiveServices;->foregroundAppShownEnoughLocked(Lcom/android/server/am/ActiveServices$ActiveForegroundApp;J)Z

    .line 91
    .line 92
    .line 93
    move-result v7

    .line 94
    if-eqz v7, :cond_2

    .line 95
    .line 96
    iget-object v7, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundApps:Landroid/util/ArrayMap;

    .line 97
    .line 98
    iget-object v8, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mPackageName:Ljava/lang/String;

    .line 99
    .line 100
    invoke-virtual {v7, v8}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 101
    .line 102
    .line 103
    iput-boolean v4, v5, Lcom/android/server/am/ActiveServices$ServiceMap;->mActiveForegroundAppsChanged:Z

    .line 104
    .line 105
    move v9, v4

    .line 106
    goto :goto_2

    .line 107
    :cond_2
    iget-wide v7, v14, Lcom/android/server/am/ActiveServices$ActiveForegroundApp;->mHideTime:J

    .line 108
    .line 109
    cmp-long v12, v7, v10

    .line 110
    .line 111
    if-gez v12, :cond_3

    .line 112
    .line 113
    move-wide v10, v7

    .line 114
    :cond_3
    :goto_2
    add-int/lit8 v6, v6, -0x1

    .line 115
    .line 116
    goto :goto_1

    .line 117
    :cond_4
    if-eqz v9, :cond_5

    .line 118
    .line 119
    invoke-static {v5, v12, v13}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 120
    .line 121
    .line 122
    goto :goto_3

    .line 123
    :cond_5
    const-wide v6, 0x7fffffffffffffffL

    .line 124
    .line 125
    .line 126
    .line 127
    .line 128
    cmp-long v6, v10, v6

    .line 129
    .line 130
    if-gez v6, :cond_6

    .line 131
    .line 132
    invoke-static {v5, v10, v11}, Lcom/android/server/am/ActiveServices;->requestUpdateActiveForegroundAppsLocked(Lcom/android/server/am/ActiveServices$ServiceMap;J)V

    .line 133
    .line 134
    .line 135
    :cond_6
    :goto_3
    add-int/lit8 v3, v3, -0x1

    .line 136
    .line 137
    goto :goto_0

    .line 138
    :cond_7
    return-void
.end method

.method public final updateServiceApplicationInfoLocked(Landroid/content/pm/ApplicationInfo;)V
    .locals 4

    .line 1
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 2
    .line 3
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceMap:Landroid/util/SparseArray;

    .line 8
    .line 9
    invoke-virtual {p0, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    check-cast p0, Lcom/android/server/am/ActiveServices$ServiceMap;

    .line 14
    .line 15
    if-eqz p0, :cond_1

    .line 16
    .line 17
    iget-object p0, p0, Lcom/android/server/am/ActiveServices$ServiceMap;->mServicesByInstanceName:Landroid/util/ArrayMap;

    .line 18
    .line 19
    invoke-virtual {p0}, Landroid/util/ArrayMap;->size()I

    .line 20
    .line 21
    .line 22
    move-result v0

    .line 23
    add-int/lit8 v0, v0, -0x1

    .line 24
    .line 25
    :goto_0
    if-ltz v0, :cond_1

    .line 26
    .line 27
    invoke-virtual {p0, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object v1

    .line 31
    check-cast v1, Lcom/android/server/am/ServiceRecord;

    .line 32
    .line 33
    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 34
    .line 35
    iget-object v3, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 36
    .line 37
    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 38
    .line 39
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v2

    .line 43
    if-eqz v2, :cond_0

    .line 44
    .line 45
    iput-object p1, v1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    .line 46
    .line 47
    iget-object v1, v1, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 48
    .line 49
    iput-object p1, v1, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 50
    .line 51
    :cond_0
    add-int/lit8 v0, v0, -0x1

    .line 52
    .line 53
    goto :goto_0

    .line 54
    :cond_1
    return-void
.end method

.method public final updateServiceClientActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;Lcom/android/server/am/ConnectionRecord;Z)V
    .locals 8

    .line 1
    if-eqz p2, :cond_0

    .line 2
    .line 3
    iget-object p2, p2, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 4
    .line 5
    iget-object p2, p2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 6
    .line 7
    if-eqz p2, :cond_0

    .line 8
    .line 9
    iget-object p2, p2, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 10
    .line 11
    iget-boolean p2, p2, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 12
    .line 13
    if-nez p2, :cond_0

    .line 14
    .line 15
    return-void

    .line 16
    :cond_0
    iget-object p2, p1, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 17
    .line 18
    invoke-virtual {p2}, Landroid/util/ArraySet;->size()I

    .line 19
    .line 20
    .line 21
    move-result p2

    .line 22
    const/4 v0, 0x1

    .line 23
    sub-int/2addr p2, v0

    .line 24
    const/4 v1, 0x0

    .line 25
    :goto_0
    if-ltz p2, :cond_5

    .line 26
    .line 27
    if-nez v1, :cond_5

    .line 28
    .line 29
    invoke-virtual {p1, p2}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    .line 30
    .line 31
    .line 32
    move-result-object v2

    .line 33
    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    .line 34
    .line 35
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    .line 36
    .line 37
    .line 38
    move-result v3

    .line 39
    sub-int/2addr v3, v0

    .line 40
    :goto_1
    if-ltz v3, :cond_4

    .line 41
    .line 42
    if-nez v1, :cond_4

    .line 43
    .line 44
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    .line 45
    .line 46
    .line 47
    move-result-object v4

    .line 48
    check-cast v4, Ljava/util/ArrayList;

    .line 49
    .line 50
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 51
    .line 52
    .line 53
    move-result v5

    .line 54
    sub-int/2addr v5, v0

    .line 55
    :goto_2
    if-ltz v5, :cond_3

    .line 56
    .line 57
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 58
    .line 59
    .line 60
    move-result-object v6

    .line 61
    check-cast v6, Lcom/android/server/am/ConnectionRecord;

    .line 62
    .line 63
    iget-object v6, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 64
    .line 65
    iget-object v6, v6, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .line 66
    .line 67
    if-eqz v6, :cond_2

    .line 68
    .line 69
    iget-object v7, p1, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 70
    .line 71
    if-ne v6, v7, :cond_1

    .line 72
    .line 73
    goto :goto_3

    .line 74
    :cond_1
    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 75
    .line 76
    iget-boolean v6, v6, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 77
    .line 78
    if-eqz v6, :cond_2

    .line 79
    .line 80
    move v1, v0

    .line 81
    goto :goto_4

    .line 82
    :cond_2
    :goto_3
    add-int/lit8 v5, v5, -0x1

    .line 83
    .line 84
    goto :goto_2

    .line 85
    :cond_3
    :goto_4
    add-int/lit8 v3, v3, -0x1

    .line 86
    .line 87
    goto :goto_1

    .line 88
    :cond_4
    add-int/lit8 p2, p2, -0x1

    .line 89
    .line 90
    goto :goto_0

    .line 91
    :cond_5
    iget-boolean p2, p1, Lcom/android/server/am/ProcessServiceRecord;->mHasClientActivities:Z

    .line 92
    .line 93
    if-eq v1, p2, :cond_6

    .line 94
    .line 95
    iput-boolean v1, p1, Lcom/android/server/am/ProcessServiceRecord;->mHasClientActivities:Z

    .line 96
    .line 97
    iget-object p2, p1, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 98
    .line 99
    iget-object p2, p2, Lcom/android/server/am/ProcessRecord;->mWindowProcessController:Lcom/android/server/wm/WindowProcessController;

    .line 100
    .line 101
    iput-boolean v1, p2, Lcom/android/server/wm/WindowProcessController;->mHasClientActivities:Z

    .line 102
    .line 103
    if-eqz p3, :cond_6

    .line 104
    .line 105
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 106
    .line 107
    iget-object p1, p1, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 108
    .line 109
    const/4 p2, 0x0

    .line 110
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;Z)V

    .line 111
    .line 112
    .line 113
    :cond_6
    return-void
.end method

.method public final updateServiceConnectionActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;)V
    .locals 6

    .line 1
    const/4 v0, 0x0

    .line 2
    const/4 v1, 0x0

    .line 3
    move-object v3, v0

    .line 4
    move v2, v1

    .line 5
    :goto_0
    iget-object v4, p1, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 6
    .line 7
    invoke-virtual {v4}, Landroid/util/ArraySet;->size()I

    .line 8
    .line 9
    .line 10
    move-result v4

    .line 11
    if-ge v2, v4, :cond_4

    .line 12
    .line 13
    iget-object v4, p1, Lcom/android/server/am/ProcessServiceRecord;->mConnections:Landroid/util/ArraySet;

    .line 14
    .line 15
    invoke-virtual {v4, v2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 16
    .line 17
    .line 18
    move-result-object v4

    .line 19
    check-cast v4, Lcom/android/server/am/ConnectionRecord;

    .line 20
    .line 21
    iget-object v4, v4, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 22
    .line 23
    iget-object v4, v4, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 24
    .line 25
    iget-object v4, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 26
    .line 27
    if-eqz v4, :cond_3

    .line 28
    .line 29
    iget-object v5, p1, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 30
    .line 31
    if-ne v4, v5, :cond_0

    .line 32
    .line 33
    goto :goto_2

    .line 34
    :cond_0
    if-nez v3, :cond_1

    .line 35
    .line 36
    new-instance v3, Landroid/util/ArraySet;

    .line 37
    .line 38
    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    .line 39
    .line 40
    .line 41
    goto :goto_1

    .line 42
    :cond_1
    invoke-virtual {v3, v4}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 43
    .line 44
    .line 45
    move-result v5

    .line 46
    if-eqz v5, :cond_2

    .line 47
    .line 48
    goto :goto_2

    .line 49
    :cond_2
    :goto_1
    invoke-virtual {v3, v4}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 50
    .line 51
    .line 52
    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 53
    .line 54
    invoke-virtual {p0, v4, v0, v1}, Lcom/android/server/am/ActiveServices;->updateServiceClientActivitiesLocked(Lcom/android/server/am/ProcessServiceRecord;Lcom/android/server/am/ConnectionRecord;Z)V

    .line 55
    .line 56
    .line 57
    :cond_3
    :goto_2
    add-int/lit8 v2, v2, 0x1

    .line 58
    .line 59
    goto :goto_0

    .line 60
    :cond_4
    return-void
.end method

.method public final updateServiceForegroundLocked(Lcom/android/server/am/ProcessServiceRecord;Z)V
    .locals 9

    .line 1
    iget-object v0, p1, Lcom/android/server/am/ProcessServiceRecord;->mServices:Landroid/util/ArraySet;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/util/ArraySet;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x1

    .line 8
    sub-int/2addr v0, v1

    .line 9
    const/4 v2, 0x0

    .line 10
    move v3, v2

    .line 11
    move v6, v3

    .line 12
    move v8, v6

    .line 13
    :goto_0
    if-ltz v0, :cond_3

    .line 14
    .line 15
    invoke-virtual {p1, v0}, Lcom/android/server/am/ProcessServiceRecord;->getRunningServiceAt(I)Lcom/android/server/am/ServiceRecord;

    .line 16
    .line 17
    .line 18
    move-result-object v2

    .line 19
    iget-boolean v4, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z

    .line 20
    .line 21
    if-nez v4, :cond_0

    .line 22
    .line 23
    iget-boolean v4, v2, Lcom/android/server/am/ServiceRecord;->fgRequired:Z

    .line 24
    .line 25
    if-eqz v4, :cond_2

    .line 26
    .line 27
    :cond_0
    iget v2, v2, Lcom/android/server/am/ServiceRecord;->foregroundServiceType:I

    .line 28
    .line 29
    or-int/2addr v3, v2

    .line 30
    if-nez v2, :cond_1

    .line 31
    .line 32
    move v6, v1

    .line 33
    move v8, v6

    .line 34
    goto :goto_1

    .line 35
    :cond_1
    move v8, v1

    .line 36
    :cond_2
    :goto_1
    add-int/lit8 v0, v0, -0x1

    .line 37
    .line 38
    goto :goto_0

    .line 39
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 40
    .line 41
    iget-object v4, p1, Lcom/android/server/am/ProcessServiceRecord;->mApp:Lcom/android/server/am/ProcessRecord;

    .line 42
    .line 43
    move v5, v8

    .line 44
    move v7, p2

    .line 45
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(ILcom/android/server/am/ProcessRecord;ZZZ)V

    .line 46
    .line 47
    .line 48
    iput-boolean v8, p1, Lcom/android/server/am/ProcessServiceRecord;->mRepHasForegroundServices:Z

    .line 49
    .line 50
    return-void
.end method

.method public final updateServiceGroupLocked(Landroid/app/IServiceConnection;II)V
    .locals 3

    .line 1
    invoke-interface {p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mServiceConnections:Landroid/util/ArrayMap;

    .line 6
    .line 7
    invoke-virtual {p0, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    check-cast p0, Ljava/util/ArrayList;

    .line 12
    .line 13
    if-eqz p0, :cond_5

    .line 14
    .line 15
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    .line 16
    .line 17
    .line 18
    move-result p1

    .line 19
    add-int/lit8 p1, p1, -0x1

    .line 20
    .line 21
    :goto_0
    if-ltz p1, :cond_4

    .line 22
    .line 23
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v0

    .line 27
    check-cast v0, Lcom/android/server/am/ConnectionRecord;

    .line 28
    .line 29
    iget-object v0, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    .line 30
    .line 31
    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    .line 32
    .line 33
    if-eqz v0, :cond_3

    .line 34
    .line 35
    iget-object v1, v0, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;

    .line 36
    .line 37
    iget v1, v1, Landroid/content/pm/ServiceInfo;->flags:I

    .line 38
    .line 39
    and-int/lit8 v1, v1, 0x2

    .line 40
    .line 41
    if-eqz v1, :cond_3

    .line 42
    .line 43
    iget-object v1, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 44
    .line 45
    const/4 v2, 0x0

    .line 46
    if-eqz v1, :cond_1

    .line 47
    .line 48
    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->mServices:Lcom/android/server/am/ProcessServiceRecord;

    .line 49
    .line 50
    if-lez p2, :cond_0

    .line 51
    .line 52
    iput-object v0, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionService:Lcom/android/server/am/ServiceRecord;

    .line 53
    .line 54
    iput p2, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionGroup:I

    .line 55
    .line 56
    iput p3, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionImportance:I

    .line 57
    .line 58
    goto :goto_1

    .line 59
    :cond_0
    const/4 v0, 0x0

    .line 60
    iput-object v0, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionService:Lcom/android/server/am/ServiceRecord;

    .line 61
    .line 62
    iput v2, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionGroup:I

    .line 63
    .line 64
    iput v2, v1, Lcom/android/server/am/ProcessServiceRecord;->mConnectionImportance:I

    .line 65
    .line 66
    goto :goto_1

    .line 67
    :cond_1
    if-lez p2, :cond_2

    .line 68
    .line 69
    iput p2, v0, Lcom/android/server/am/ServiceRecord;->pendingConnectionGroup:I

    .line 70
    .line 71
    iput p3, v0, Lcom/android/server/am/ServiceRecord;->pendingConnectionImportance:I

    .line 72
    .line 73
    goto :goto_1

    .line 74
    :cond_2
    iput v2, v0, Lcom/android/server/am/ServiceRecord;->pendingConnectionGroup:I

    .line 75
    .line 76
    iput v2, v0, Lcom/android/server/am/ServiceRecord;->pendingConnectionImportance:I

    .line 77
    .line 78
    :cond_3
    :goto_1
    add-int/lit8 p1, p1, -0x1

    .line 79
    .line 80
    goto :goto_0

    .line 81
    :cond_4
    return-void

    .line 82
    :cond_5
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 83
    .line 84
    new-instance p2, Ljava/lang/StringBuilder;

    .line 85
    .line 86
    const-string p3, "Could not find connection for "

    .line 87
    .line 88
    invoke-direct {p2, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 89
    .line 90
    .line 91
    invoke-interface {p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;

    .line 92
    .line 93
    .line 94
    move-result-object p1

    .line 95
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 96
    .line 97
    .line 98
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 99
    .line 100
    .line 101
    move-result-object p1

    .line 102
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 103
    .line 104
    .line 105
    throw p0
.end method

.method public final validateForegroundServiceType(Lcom/android/server/am/ServiceRecord;III)Landroid/util/Pair;
    .locals 8

    .line 1
    invoke-static {}, Landroid/app/ForegroundServiceTypePolicy;->getDefaultPolicy()Landroid/app/ForegroundServiceTypePolicy;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    invoke-virtual {v0, p2, p3}, Landroid/app/ForegroundServiceTypePolicy;->getForegroundServiceTypePolicyInfo(II)Landroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;

    .line 6
    .line 7
    .line 8
    move-result-object p3

    .line 9
    iget-object p0, p0, Lcom/android/server/am/ActiveServices;->mAm:Lcom/android/server/am/ActivityManagerService;

    .line 10
    .line 11
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 12
    .line 13
    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;

    .line 14
    .line 15
    iget-object p0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 16
    .line 17
    iget v3, p0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 18
    .line 19
    iget v4, p0, Lcom/android/server/am/ProcessRecord;->mPid:I

    .line 20
    .line 21
    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->getFgsAllowWiu_forStart()I

    .line 22
    .line 23
    .line 24
    move-result p0

    .line 25
    const/4 v7, -0x1

    .line 26
    if-eq p0, v7, :cond_0

    .line 27
    .line 28
    const/4 p0, 0x1

    .line 29
    :goto_0
    move v5, p0

    .line 30
    goto :goto_1

    .line 31
    :cond_0
    const/4 p0, 0x0

    .line 32
    goto :goto_0

    .line 33
    :goto_1
    move-object v6, p3

    .line 34
    invoke-virtual/range {v0 .. v6}, Landroid/app/ForegroundServiceTypePolicy;->checkForegroundServiceTypePolicy(Landroid/content/Context;Ljava/lang/String;IIZLandroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;)I

    .line 35
    .line 36
    .line 37
    move-result p0

    .line 38
    const/4 v0, 0x2

    .line 39
    const-string v1, " code="

    .line 40
    .line 41
    const-string v2, "ActivityManager"

    .line 42
    .line 43
    const-string v3, " callerApp="

    .line 44
    .line 45
    const-string v4, "Starting FGS with type "

    .line 46
    .line 47
    const-string v5, " targetSDK="

    .line 48
    .line 49
    if-eq p0, v0, :cond_7

    .line 50
    .line 51
    const/4 v0, 0x3

    .line 52
    if-eq p0, v0, :cond_5

    .line 53
    .line 54
    const/4 p4, 0x4

    .line 55
    const-string v0, ""

    .line 56
    .line 57
    const-string v6, " and the app must be in the eligible state/exemptions to access the foreground only permission"

    .line 58
    .line 59
    if-eq p0, p4, :cond_3

    .line 60
    .line 61
    const/4 p4, 0x5

    .line 62
    if-eq p0, p4, :cond_1

    .line 63
    .line 64
    goto/16 :goto_2

    .line 65
    .line 66
    :cond_1
    new-instance p4, Ljava/lang/SecurityException;

    .line 67
    .line 68
    new-instance v1, Ljava/lang/StringBuilder;

    .line 69
    .line 70
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    invoke-static {p2}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 74
    .line 75
    .line 76
    move-result-object p2

    .line 77
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 78
    .line 79
    .line 80
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 81
    .line 82
    .line 83
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 84
    .line 85
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 89
    .line 90
    .line 91
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 92
    .line 93
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 94
    .line 95
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 96
    .line 97
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 98
    .line 99
    .line 100
    const-string p1, " requires permissions: "

    .line 101
    .line 102
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 103
    .line 104
    .line 105
    invoke-virtual {p3}, Landroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;->toPermissionString()Ljava/lang/String;

    .line 106
    .line 107
    .line 108
    move-result-object p1

    .line 109
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 110
    .line 111
    .line 112
    invoke-virtual {p3}, Landroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;->hasForegroundOnlyPermission()Z

    .line 113
    .line 114
    .line 115
    move-result p1

    .line 116
    if-eqz p1, :cond_2

    .line 117
    .line 118
    move-object v0, v6

    .line 119
    :cond_2
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 120
    .line 121
    .line 122
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object p1

    .line 126
    invoke-direct {p4, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 127
    .line 128
    .line 129
    goto/16 :goto_3

    .line 130
    .line 131
    :cond_3
    new-instance p4, Ljava/lang/StringBuilder;

    .line 132
    .line 133
    invoke-direct {p4, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 134
    .line 135
    .line 136
    invoke-static {p2}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 137
    .line 138
    .line 139
    move-result-object p2

    .line 140
    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 141
    .line 142
    .line 143
    invoke-virtual {p4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 144
    .line 145
    .line 146
    invoke-virtual {p4, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 147
    .line 148
    .line 149
    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 150
    .line 151
    .line 152
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 153
    .line 154
    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 155
    .line 156
    .line 157
    invoke-virtual {p4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 158
    .line 159
    .line 160
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 161
    .line 162
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 163
    .line 164
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 165
    .line 166
    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 167
    .line 168
    .line 169
    const-string p1, " requiredPermissions="

    .line 170
    .line 171
    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 172
    .line 173
    .line 174
    invoke-virtual {p3}, Landroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;->toPermissionString()Ljava/lang/String;

    .line 175
    .line 176
    .line 177
    move-result-object p1

    .line 178
    invoke-virtual {p4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 179
    .line 180
    .line 181
    invoke-virtual {p3}, Landroid/app/ForegroundServiceTypePolicy$ForegroundServiceTypePolicyInfo;->hasForegroundOnlyPermission()Z

    .line 182
    .line 183
    .line 184
    move-result p1

    .line 185
    if-eqz p1, :cond_4

    .line 186
    .line 187
    move-object v0, v6

    .line 188
    :cond_4
    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 189
    .line 190
    .line 191
    invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 192
    .line 193
    .line 194
    move-result-object p1

    .line 195
    invoke-static {v2, p1}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 196
    .line 197
    .line 198
    invoke-static {v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 199
    .line 200
    .line 201
    goto/16 :goto_2

    .line 202
    .line 203
    :cond_5
    if-ne p4, v7, :cond_6

    .line 204
    .line 205
    if-nez p2, :cond_6

    .line 206
    .line 207
    new-instance p4, Landroid/app/MissingForegroundServiceTypeException;

    .line 208
    .line 209
    new-instance p2, Ljava/lang/StringBuilder;

    .line 210
    .line 211
    const-string p3, "Starting FGS without a type  callerApp="

    .line 212
    .line 213
    invoke-direct {p2, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 214
    .line 215
    .line 216
    iget-object p3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 217
    .line 218
    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 219
    .line 220
    .line 221
    invoke-virtual {p2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 222
    .line 223
    .line 224
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 225
    .line 226
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 227
    .line 228
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 229
    .line 230
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 231
    .line 232
    .line 233
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 234
    .line 235
    .line 236
    move-result-object p1

    .line 237
    invoke-direct {p4, p1}, Landroid/app/MissingForegroundServiceTypeException;-><init>(Ljava/lang/String;)V

    .line 238
    .line 239
    .line 240
    goto :goto_3

    .line 241
    :cond_6
    new-instance p4, Landroid/app/InvalidForegroundServiceTypeException;

    .line 242
    .line 243
    new-instance p3, Ljava/lang/StringBuilder;

    .line 244
    .line 245
    invoke-direct {p3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 246
    .line 247
    .line 248
    invoke-static {p2}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 249
    .line 250
    .line 251
    move-result-object p2

    .line 252
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 253
    .line 254
    .line 255
    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 256
    .line 257
    .line 258
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 259
    .line 260
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 261
    .line 262
    .line 263
    invoke-virtual {p3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 264
    .line 265
    .line 266
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 267
    .line 268
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 269
    .line 270
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 271
    .line 272
    const-string p2, " has been prohibited"

    .line 273
    .line 274
    invoke-static {p1, p3, p2}, Landroid/hardware/broadcastradio/V2_0/AmFmBandRange$$ExternalSyntheticOutline0;->m(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/String;

    .line 275
    .line 276
    .line 277
    move-result-object p1

    .line 278
    invoke-direct {p4, p1}, Landroid/app/InvalidForegroundServiceTypeException;-><init>(Ljava/lang/String;)V

    .line 279
    .line 280
    .line 281
    goto :goto_3

    .line 282
    :cond_7
    new-instance p3, Ljava/lang/StringBuilder;

    .line 283
    .line 284
    invoke-direct {p3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 285
    .line 286
    .line 287
    invoke-static {p2}, Landroid/content/pm/ServiceInfo;->foregroundServiceTypeToLabel(I)Ljava/lang/String;

    .line 288
    .line 289
    .line 290
    move-result-object p2

    .line 291
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 292
    .line 293
    .line 294
    invoke-virtual {p3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 295
    .line 296
    .line 297
    invoke-virtual {p3, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 298
    .line 299
    .line 300
    invoke-virtual {p3, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 301
    .line 302
    .line 303
    iget-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 304
    .line 305
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 306
    .line 307
    .line 308
    invoke-virtual {p3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 309
    .line 310
    .line 311
    iget-object p1, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 312
    .line 313
    iget-object p1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    .line 314
    .line 315
    iget p1, p1, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 316
    .line 317
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 318
    .line 319
    .line 320
    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 321
    .line 322
    .line 323
    move-result-object p1

    .line 324
    invoke-static {v2, p1}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 325
    .line 326
    .line 327
    invoke-static {v2, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 328
    .line 329
    .line 330
    :goto_2
    const/4 p4, 0x0

    .line 331
    :goto_3
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 332
    .line 333
    .line 334
    move-result-object p0

    .line 335
    invoke-static {p0, p4}, Landroid/util/Pair;->create(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;

    .line 336
    .line 337
    .line 338
    move-result-object p0

    .line 339
    return-object p0
.end method
