.class public final Lcom/android/server/audio/AudioService;
.super Landroid/media/IAudioService$Stub;
.source "qb/98832498 6c6e4010375fc1772bdd4e8a88b0896735443618f27021583382e8158243fc30"

# interfaces
.implements Landroid/view/accessibility/AccessibilityManager$TouchExplorationStateChangeListener;
.implements Landroid/view/accessibility/AccessibilityManager$AccessibilityServicesStateChangeListener;
.implements Lcom/android/server/audio/AudioSystemAdapter$OnRoutingUpdatedListener;
.implements Lcom/android/server/audio/AudioSystemAdapter$OnVolRangeInitRequestListener;


# static fields
.field public static final BECOMING_NOISY_DELAY_MS:I = 0x1f4

.field public static final DEFAULT_ARC_AUDIO_DESCRIPTOR:[B

.field public static final DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

.field public static final EMPTY_PACKAGE:[Ljava/lang/String;

.field public static final MAX_STREAM_VOLUME:[I

.field public static final MIN_STREAM_VOLUME:[I

.field public static final NO_ACTIVE_ASSISTANT_SERVICE_UIDS:[I

.field public static final RINGER_MODE_NAMES:[Ljava/lang/String;

.field public static final STREAM_VOLUME_OPS:[I

.field public static final SYSTEM_PACKAGE:[Ljava/lang/String;

.field public static final TOUCH_VIBRATION_ATTRIBUTES:Landroid/os/VibrationAttributes;

.field public static final VOLUME_LIMIT_INDEX_EFFECT_ON:[I

.field public static final mAppCastingDevice:Ljava/util/Set;

.field public static mStreamVolumeAlias:[I

.field public static final sAppCastingLogger:Lcom/android/server/utils/EventLogger;

.field public static final sAppVolumeLogger:Lcom/android/server/utils/EventLogger;

.field public static sDefaultVolumeInfo:Landroid/media/VolumeInfo;

.field public static final sDeviceLogger:Lcom/android/server/utils/EventLogger;

.field public static final sFactoryTestLogger:Lcom/android/server/utils/EventLogger;

.field public static final sForceUseLogger:Lcom/android/server/utils/EventLogger;

.field public static sIndependentA11yVolume:Z

.field public static final sLifecycleLogger:Lcom/android/server/utils/EventLogger;

.field public static final sMasterMuteLogger:Lcom/android/server/utils/EventLogger;

.field public static final sMicrophoneLogger:Lcom/android/server/utils/EventLogger;

.field public static final sMuteLogger:Lcom/android/server/utils/EventLogger;

.field public static volatile sRingerAndZenModeMutedStreams:I

.field public static final sRingerModeLogger:Lcom/android/server/utils/EventLogger;

.field public static final sRingtoneChangeLogger:Lcom/android/server/utils/EventLogger;

.field public static final sScoPreventionLogger:Lcom/android/server/utils/EventLogger;

.field public static final sScpmLogger:Lcom/android/server/utils/EventLogger;

.field public static final sSpatialLogger:Lcom/android/server/utils/EventLogger;

.field public static sStreamOverrideDelayMs:I

.field public static final sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

.field public static final sVolumeGroupStates:Landroid/util/SparseArray;

.field public static final sVolumeLogger:Lcom/android/server/utils/EventLogger;


# instance fields
.field public final AVC_AFFECTED_STREAMS:[I

.field public final PROJECTION_HOST_URI:Landroid/net/Uri;

.field public final STREAM_VOLUME_ALIAS_DEFAULT:[I

.field public final STREAM_VOLUME_ALIAS_NONE:[I

.field public final STREAM_VOLUME_ALIAS_TELEVISION:[I

.field public final STREAM_VOLUME_ALIAS_VOICE:[I

.field public final mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

.field public final mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

.field public mAccessibilityServiceUids:[I

.field public final mAccessibilityServiceUidsLock:Ljava/lang/Object;

.field public mActiveAssistantServiceUids:[I

.field public final mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

.field public mAdjustMediaVolumeOnly:Z

.field public final mAlarmManager:Landroid/app/AlarmManager;

.field public final mAppOps:Landroid/app/AppOpsManager;

.field public final mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

.field public final mAssistantUids:Landroid/util/ArraySet;

.field public final mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

.field public mAudioGameManager:Lcom/samsung/android/server/audio/AudioGameManager;

.field public mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

.field public final mAudioPolicies:Ljava/util/HashMap;

.field public final mAudioPolicy:Lcom/android/server/audio/DefaultAudioPolicyFacade;

.field public mAudioPolicyCounter:I

.field public final mAudioServerStateListeners:Ljava/util/HashMap;

.field public final mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

.field public final mAudioSystemCallback:Lcom/android/server/audio/AudioService$1;

.field public final mAudioVolumeGroupHelper:Lcom/android/server/audio/AudioVolumeGroupHelperBase;

.field public volatile mAvrcpAbsVolSupported:Z

.field public final mBroadcastHandlerThread:Landroid/os/HandlerThread;

.field public mBtScoDeviceInfo:Ljava/lang/String;

.field public mBtScoOnByApp:Z

.field public final mCachedAbsVolDrivingStreams:Ljava/util/HashMap;

.field public final mCachedAbsVolDrivingStreamsLock:Ljava/lang/Object;

.field public mCallForwardingEnable:Ljava/lang/String;

.field public mCallMemoState:Ljava/lang/String;

.field public mCameraSoundForced:Z

.field public mConnectedAndroidAuto:Z

.field public final mContentResolver:Landroid/content/ContentResolver;

.field public final mContext:Landroid/content/Context;

.field public final mDeviceAliasManager:Lcom/samsung/android/server/audio/DeviceAliasManager;

.field public final mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

.field public final mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

.field public final mDisplayListener:Lcom/android/server/audio/AudioService$3;

.field public final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field public mDockAudioMediaEnabled:Z

.field public mDockState:I

.field public mDvDhaparam:Ljava/lang/String;

.field public final mDynPolicyCallback:Lcom/android/server/audio/AudioService$10;

.field public final mDynPolicyLogger:Lcom/android/server/utils/EventLogger;

.field public mEnabledSurroundFormats:Ljava/lang/String;

.field public mEncodedSurroundMode:I

.field public final mEventReceivers:Ljava/util/ArrayList;

.field public final mExt:Lcom/android/server/audio/AudioServiceExt;

.field public mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

.field public final mExtVolumeControllerLock:Ljava/lang/Object;

.field public mExternalVoipModeOwner:Lcom/android/server/audio/AudioService$SetModeDeathHandler;

.field public final mFMRadioRecordingChecker:Lcom/android/server/audio/AudioService$13;

.field public final mFixedVolumeDevices:Ljava/util/Set;

.field public mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

.field public final mForceControlStreamLock:Ljava/lang/Object;

.field public mForceSpeaker:I

.field public mForcedUseForFMRadio:I

.field public mForegroundUid:I

.field public final mFullVolumeDevices:Ljava/util/Set;

.field public mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

.field public mHAC:Ljava/lang/String;

.field public final mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

.field public final mHasSpatializerEffect:Z

.field public final mHasVibrator:Z

.field public mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

.field public mHdmiCecVolumeControlEnabled:Z

.field public final mHdmiClientLock:Ljava/lang/Object;

.field public final mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

.field public mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

.field public mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

.field public mHdmiSystemAudioSupported:Z

.field public mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

.field public mHeadsetOnlyStream:I

.field public mHomeSoundEffectEnabled:Z

.field public mIgnoreDuckingByAllApps:Z

.field public mIgnoreDuckingByNavigation:Z

.field public mInputMethodServiceUid:I

.field public final mInputMethodServiceUidLock:Ljava/lang/Object;

.field public mIsBluetoothCastState:Z

.field public mIsCallScreeningModeSupported:Z

.field public mIsLeBroadCasting:Z

.field public final mIsSingleVolume:Z

.field public mIsTalkBackEnabled:Z

.field public mIsVibrate:Z

.field public mIsVolumeEffectOn:Z

.field public mKeyguardManager:Landroid/app/KeyguardManager;

.field public mLastLoopbackOn:Ljava/lang/String;

.field public mLastVolumeChangedIntentDevice:I

.field public mLiveTranslatorAllowApps:Ljava/lang/String;

.field public mLiveTranslatorDuringCall:Z

.field public final mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

.field public mLoopbackState:Ljava/lang/String;

.field public final mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

.field public mLoweredFromNormalToVibrateTime:J

.field public final mMasterMute:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public final mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

.field public final mMediaPlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public volatile mMediaSessionManager:Landroid/media/session/MediaSessionManager;

.field public mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

.field public mMediaVolumeStepIndex:I

.field public final mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

.field public mMicMuteFromApi:Z

.field public mMicMuteFromPrivacyToggle:Z

.field public mMicMuteFromRestrictions:Z

.field public mMicMuteFromSwitch:Z

.field public mMicMuteFromSystemCached:Z

.field public final mMode:Ljava/util/concurrent/atomic/AtomicInteger;

.field public final mModeDispatchers:Landroid/os/RemoteCallbackList;

.field public final mModeLogger:Lcom/android/server/utils/EventLogger;

.field public final mMonitorRotation:Z

.field public final mMultiSoundInterface:Lcom/android/server/audio/AudioService$11;

.field public final mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

.field public final mMusicFxHelper:Lcom/android/server/audio/MusicFxHelper;

.field public mMuteAffectedStreams:I

.field public final mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

.field public final mMuteAwaitConnectionLock:Ljava/lang/Object;

.field public mMuteIntervalMs:I

.field public mMuteMediaByVibrateOrSilentMode:Z

.field public mMuteTime:J

.field public mMutedUsagesAwaitingConnection:[I

.field public mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

.field public final mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

.field public mNavigationRepeatSoundEffectsEnabled:Z

.field public mNm:Landroid/app/NotificationManager;

.field public mNotifAliasRing:Z

.field public mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

.field public final mPackageManager:Landroid/content/pm/PackageManager;

.field public mPhoneType:Ljava/lang/String;

.field public mPlatformType:I

.field public final mPlaybackActivityMonitor:Lcom/android/server/audio/AudioService$5;

.field public final mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

.field public final mPrefMixerAttrDispatcher:Landroid/os/RemoteCallbackList;

.field public mPrevRingerMode:I

.field public mPrevVolDirection:I

.field public mPrimaryAssistantUid:I

.field public mProjectionService:Landroid/media/projection/IMediaProjectionManager;

.field public final mReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

.field public final mRecordEventChecker:Lcom/android/server/audio/AudioService$11;

.field public final mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

.field public mRemoteMic:Z

.field public final mRestorableParameters:Lcom/android/server/audio/AudioService$RestorableParameters;

.field public mRingerMode:I

.field public mRingerModeAffectedStreams:I

.field public final mRingerModeAffectsAlarm:Z

.field public mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

.field public mRingerModeExternal:I

.field public volatile mRingtonePlayer:Landroid/media/IRingtonePlayer;

.field public final mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

.field public mRmtSbmxFullVolRefCount:I

.field public mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

.field public mRttEnabled:Z

.field public final mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

.field public mSavedSpeakerMediaIndex:I

.field public mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

.field public final mSensorPrivacyManagerInternal:Landroid/hardware/SensorPrivacyManagerInternal;

.field public final mSetModeDeathHandlers:Ljava/util/ArrayList;

.field public final mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

.field public final mSettings:Lcom/android/server/audio/SettingsAdapter;

.field public final mSettingsLock:Ljava/lang/Object;

.field public final mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

.field public mSoundAppPolicyManager:Lcom/samsung/android/server/audio/SoundAppPolicyManager;

.field public final mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

.field public final mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

.field public final mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

.field public mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

.field public final mSubscriptionChangedListener:Lcom/android/server/audio/AudioService$4;

.field public mSupportedSystemUsages:[I

.field public final mSupportedSystemUsagesLock:Ljava/lang/Object;

.field public final mSupportsMicPrivacyToggle:Z

.field public mSurroundModeChanged:Z

.field public mSystemReady:Z

.field public final mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

.field public final mUseFixedVolume:Z

.field public final mUseVolumeGroupAliases:Z

.field public final mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

.field public mUserMutableStreams:I

.field public final mUserRestrictionsListener:Lcom/android/server/audio/AudioService$11;

.field public mUserSelectedVolumeControlStream:Z

.field public mUserSwitchedReceived:Z

.field public mVibrateSetting:I

.field public final mVibrator:Landroid/os/Vibrator;

.field public final mVoicePlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public final mVoiceRecordingActivityMonitor:Lcom/android/server/audio/AudioService$6;

.field public mVolumeControlStream:I

.field public final mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

.field public mVolumeControllerStream:I

.field public mVolumeLimitOn:Z

.field public mVolumeLimitValue:I

.field public mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

.field public mVolumePolicy:Landroid/media/VolumePolicy;

.field public mVolumeSteps:[I

.field public mZenModeAffectedStreams:I


# direct methods
.method public static -$$Nest$mapplyDeviceAlias(Lcom/android/server/audio/AudioService;IILcom/samsung/android/server/audio/DeviceAliasManager$DeviceAliasRunner;)V
    .locals 6

    .line 1
    const/4 v0, 0x1

    .line 2
    const/4 v1, 0x0

    .line 3
    const/16 v2, 0x80

    .line 5
    if-eq p1, v2, :cond_1

    .line 7
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    invoke-static {p1}, Landroid/media/AudioSystem;->isBluetoothLeOutDevice(I)Z

    .line 13
    move-result v3

    .line 14
    if-eqz v3, :cond_0

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    move v4, v1

    .line 18
    goto :goto_2

    .line 19
    :cond_1
    :goto_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 21
    invoke-virtual {v3}, Lcom/android/server/audio/AudioDeviceBroker;->isDualModeActive()Z

    .line 24
    move-result v3

    .line 25
    new-instance v4, Ljava/lang/StringBuilder;

    .line 27
    const-string/jumbo v5, "isBluetoothDualModeActive="

    .line 30
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 33
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 36
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 39
    move-result-object v4

    .line 40
    const-string v5, "AS.AudioService"

    .line 42
    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 45
    invoke-static {p1}, Landroid/media/AudioSystem;->isBluetoothLeOutDevice(I)Z

    .line 48
    move-result v4

    .line 49
    if-eqz v4, :cond_2

    .line 51
    if-nez v3, :cond_2

    .line 53
    move v4, v0

    .line 54
    goto :goto_1

    .line 55
    :cond_2
    move v4, v1

    .line 56
    :goto_1
    if-ne p1, v2, :cond_3

    .line 58
    if-eqz v3, :cond_4

    .line 60
    :cond_3
    const v2, 0x20000002

    .line 63
    if-ne p1, v2, :cond_5

    .line 65
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isLeBroadcastWithoutLeDevice()Z

    .line 68
    move-result v2

    .line 69
    if-eqz v2, :cond_5

    .line 71
    :cond_4
    new-instance p3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda29;

    .line 73
    invoke-direct {p3}, Ljava/lang/Object;-><init>()V

    .line 76
    :cond_5
    :goto_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceAliasManager:Lcom/samsung/android/server/audio/DeviceAliasManager;

    .line 78
    if-eqz v4, :cond_6

    .line 80
    iget-object p0, p0, Lcom/samsung/android/server/audio/DeviceAliasManager;->mLeOnlyDevices:Landroid/util/SparseArray;

    .line 82
    :goto_3
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 85
    move-result-object p0

    .line 86
    check-cast p0, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;

    .line 88
    goto :goto_4

    .line 89
    :cond_6
    iget-object p0, p0, Lcom/samsung/android/server/audio/DeviceAliasManager;->mDevices:Landroid/util/SparseArray;

    .line 91
    goto :goto_3

    .line 92
    :goto_4
    if-nez p0, :cond_7

    .line 94
    goto :goto_7

    .line 95
    :cond_7
    iget-object p1, p0, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;->mAliases:[I

    .line 97
    array-length v2, p1

    .line 98
    :goto_5
    if-ge v1, v2, :cond_9

    .line 100
    aget v3, p1, v1

    .line 102
    shl-int v4, v0, p2

    .line 104
    iget v5, p0, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;->mExcludeStreams:I

    .line 106
    and-int/2addr v4, v5

    .line 107
    if-lez v4, :cond_8

    .line 109
    goto :goto_6

    .line 110
    :cond_8
    invoke-interface {p3, v3}, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAliasRunner;->run(I)V

    .line 113
    :goto_6
    add-int/lit8 v1, v1, 0x1

    .line 115
    goto :goto_5

    .line 116
    :cond_9
    :goto_7
    return-void
.end method

.method public static -$$Nest$mclearSoundAssistantSettings(Lcom/android/server/audio/AudioService;)V
    .locals 6

    .line 1
    const/16 v0, 0xa

    .line 3
    iput v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 7
    const-string/jumbo v1, "media_volume_step_index"

    .line 10
    invoke-virtual {v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 13
    const/16 v0, 0x20

    .line 15
    iput v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 17
    new-instance v0, Ljava/lang/StringBuilder;

    .line 19
    const-string/jumbo v1, "l_sound_assistant_ring_via_headset_enable="

    .line 22
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 25
    iget v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 27
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 30
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 33
    move-result-object v0

    .line 34
    invoke-static {v0}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 37
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 39
    const-string/jumbo v1, "ring_through_headset"

    .line 42
    invoke-virtual {v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 45
    const/4 v0, 0x0

    .line 46
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setMediaVolumeSteps([I)Z

    .line 49
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 51
    const-string/jumbo v1, "ignore_audio_focus"

    .line 54
    invoke-virtual {v0, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 57
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 59
    const/4 v1, -0x1

    .line 60
    const/4 v2, 0x0

    .line 61
    invoke-virtual {v0, v1, v2}, Lcom/android/server/audio/MediaFocusControl;->setIgnoreAudioFocus(IZ)V

    .line 64
    move v0, v2

    .line 65
    :goto_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 67
    invoke-virtual {v3}, Landroid/util/SparseIntArray;->size()I

    .line 70
    move-result v3

    .line 71
    if-ge v0, v3, :cond_0

    .line 73
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 75
    invoke-virtual {v3, v0}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 78
    move-result v3

    .line 79
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 81
    const/16 v5, 0x64

    .line 83
    invoke-virtual {v4, v3, v5}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 86
    add-int/lit8 v0, v0, 0x1

    .line 88
    goto :goto_0

    .line 89
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 91
    invoke-virtual {v0}, Landroid/util/SparseIntArray;->clear()V

    .line 94
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 96
    const-string/jumbo v3, "mono_audio_db"

    .line 99
    invoke-virtual {v0, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 102
    move-result v0

    .line 103
    const/4 v3, -0x2

    .line 104
    if-lez v0, :cond_1

    .line 106
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 108
    const-string/jumbo v4, "master_mono"

    .line 111
    invoke-static {v0, v4, v2, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 114
    :cond_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 116
    const-string/jumbo v4, "sound_balance"

    .line 119
    invoke-virtual {v0, v4}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 122
    move-result v0

    .line 123
    if-lez v0, :cond_2

    .line 125
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 127
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 129
    iget v4, v4, Lcom/android/server/audio/AudioServiceExt;->mMainBalance:F

    .line 131
    const-string/jumbo v5, "master_balance"

    .line 134
    invoke-static {v0, v5, v4, v3}, Landroid/provider/Settings$System;->putFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)Z

    .line 137
    :cond_2
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 140
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 142
    const-string/jumbo v3, "speaker_media_index"

    .line 145
    invoke-virtual {v0, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 148
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 150
    const-string/jumbo v3, "mute_media_by_vibrate_or_silent_mode"

    .line 153
    invoke-virtual {v0, v3}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 156
    iput v1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 158
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 160
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 162
    const-string/jumbo v1, "multi_audio_focus_enabled"

    .line 165
    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 168
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 170
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 172
    return-void
.end method

.method public static -$$Nest$monAccessoryPlugMediaUnmute(Lcom/android/server/audio/AudioService;I)V
    .locals 4

    .line 1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    const-string v0, "AS.AudioService"

    .line 6
    const-string/jumbo v1, "onAccessoryPlugMediaUnmute newDevice=%d [%s]"

    .line 9
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 12
    move-result-object v2

    .line 13
    invoke-static {p1}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 16
    move-result-object v3

    .line 17
    filled-new-array {v2, v3}, [Ljava/lang/Object;

    .line 20
    move-result-object v2

    .line 21
    invoke-static {v1, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 24
    move-result-object v1

    .line 25
    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 28
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 30
    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    .line 33
    move-result v0

    .line 34
    const/4 v1, 0x2

    .line 35
    if-eq v0, v1, :cond_0

    .line 37
    const/4 v0, 0x3

    .line 38
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 41
    move-result v1

    .line 42
    if-nez v1, :cond_0

    .line 44
    sget-object v1, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    .line 46
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 49
    move-result-object v2

    .line 50
    check-cast v1, Ljava/util/HashSet;

    .line 52
    invoke-virtual {v1, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 55
    move-result v1

    .line 56
    if-eqz v1, :cond_0

    .line 58
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 60
    aget-object v1, v1, v0

    .line 62
    iget-boolean v2, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 64
    if-eqz v2, :cond_0

    .line 66
    invoke-virtual {v1, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 69
    move-result v1

    .line 70
    if-eqz v1, :cond_0

    .line 72
    invoke-static {v0}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioAttributesForStrategyWithLegacyStreamType(I)Landroid/media/AudioAttributes;

    .line 75
    move-result-object v1

    .line 76
    const/4 v2, 0x1

    .line 77
    invoke-virtual {p0, v1, v2}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 80
    move-result-object v1

    .line 81
    invoke-static {v1}, Landroid/media/AudioSystem;->generateAudioDeviceTypesSet(Ljava/util/List;)Ljava/util/Set;

    .line 84
    move-result-object v1

    .line 85
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 88
    move-result-object v2

    .line 89
    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 92
    move-result v1

    .line 93
    if-eqz v1, :cond_0

    .line 95
    const-string v1, "AS.AudioService"

    .line 97
    const-string/jumbo v2, "onAccessoryPlugMediaUnmute unmuting device=%d [%s]"

    .line 100
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 103
    move-result-object v3

    .line 104
    invoke-static {p1}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 107
    move-result-object p1

    .line 108
    filled-new-array {v3, p1}, [Ljava/lang/Object;

    .line 111
    move-result-object p1

    .line 112
    invoke-static {v2, p1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 115
    move-result-object p1

    .line 116
    invoke-static {v1, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 119
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 121
    monitor-enter p1

    .line 122
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 124
    aget-object p0, p0, v0

    .line 126
    const-string/jumbo v0, "onAccessoryPlugMediaUnmute"

    .line 129
    const/4 v1, 0x0

    .line 130
    invoke-virtual {p0, v0, v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 133
    monitor-exit p1

    .line 134
    goto :goto_0

    .line 135
    :catchall_0
    move-exception p0

    .line 136
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 137
    throw p0

    .line 138
    :cond_0
    :goto_0
    return-void
.end method

.method public static -$$Nest$monAddAssistantServiceUids(Lcom/android/server/audio/AudioService;[I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->addAssistantServiceUidsLocked([I)V

    .line 7
    monitor-exit v0

    .line 8
    return-void

    .line 9
    :catchall_0
    move-exception p0

    .line 10
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11
    throw p0
.end method

.method public static -$$Nest$monCheckVolumeCecOnHdmiConnection(Lcom/android/server/audio/AudioService;I)V
    .locals 4

    .line 1
    const/16 v0, 0x400

    .line 3
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 6
    move-result-object v1

    .line 7
    const/4 v2, 0x2

    .line 8
    const/4 v3, 0x1

    .line 9
    if-ne p1, v3, :cond_3

    .line 11
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 13
    invoke-virtual {p1, v0}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    .line 16
    move-result p1

    .line 17
    if-eqz p1, :cond_0

    .line 19
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 21
    invoke-virtual {p1}, Lcom/android/server/audio/SoundDoseHelper;->scheduleMusicActiveCheck()V

    .line 24
    :cond_0
    iget p1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 26
    if-ne p1, v2, :cond_2

    .line 28
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 30
    monitor-enter p1

    .line 31
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 33
    if-eqz v0, :cond_1

    .line 35
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 37
    if-eqz v0, :cond_1

    .line 39
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 41
    check-cast v0, Ljava/util/HashSet;

    .line 43
    invoke-virtual {v0, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 46
    move-result v0

    .line 47
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->updateHdmiCecSinkLocked(Z)V

    .line 50
    goto :goto_0

    .line 51
    :catchall_0
    move-exception p0

    .line 52
    goto :goto_1

    .line 53
    :cond_1
    :goto_0
    monitor-exit p1

    .line 54
    goto :goto_2

    .line 55
    :goto_1
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 56
    throw p0

    .line 57
    :cond_2
    :goto_2
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 59
    invoke-virtual {p0, p1, v3}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    .line 62
    goto :goto_5

    .line 63
    :cond_3
    iget p1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 65
    if-ne p1, v2, :cond_5

    .line 67
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 69
    monitor-enter p1

    .line 70
    :try_start_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 72
    if-eqz v0, :cond_4

    .line 74
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 76
    check-cast v0, Ljava/util/HashSet;

    .line 78
    invoke-virtual {v0, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 81
    move-result v0

    .line 82
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->updateHdmiCecSinkLocked(Z)V

    .line 85
    goto :goto_3

    .line 86
    :catchall_1
    move-exception p0

    .line 87
    goto :goto_4

    .line 88
    :cond_4
    :goto_3
    monitor-exit p1

    .line 89
    goto :goto_5

    .line 90
    :goto_4
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 91
    throw p0

    .line 92
    :cond_5
    :goto_5
    return-void
.end method

.method public static -$$Nest$monConfigurationChanged(Lcom/android/server/audio/AudioService;)V
    .locals 14

    .line 1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 6
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 9
    move-result-object v0

    .line 10
    invoke-virtual {v0}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    .line 13
    move-result-object v0

    .line 14
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_VOLUME_COUNTRY:Z

    .line 16
    const/4 v2, 0x0

    .line 17
    if-nez v1, :cond_0

    .line 19
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 21
    invoke-virtual {v1, v2}, Lcom/android/server/audio/SoundDoseHelper;->configureSafeMedia(Z)V

    .line 24
    goto :goto_0

    .line 25
    :catch_0
    move-exception p0

    .line 26
    goto/16 :goto_7

    .line 28
    :cond_0
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->readCameraSoundForced()Z

    .line 31
    move-result v1

    .line 32
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 34
    monitor-enter v3
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 35
    :try_start_1
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 37
    const/4 v5, 0x1

    .line 38
    if-eq v1, v4, :cond_1

    .line 40
    move v4, v5

    .line 41
    goto :goto_1

    .line 42
    :cond_1
    move v4, v2

    .line 43
    :goto_1
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 45
    if-eqz v4, :cond_6

    .line 47
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 49
    const/4 v6, 0x7

    .line 50
    if-nez v4, :cond_4

    .line 52
    const-class v4, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 54
    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 55
    :try_start_2
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 57
    aget-object v8, v7, v6

    .line 59
    if-eqz v1, :cond_3

    .line 61
    move v5, v2

    .line 62
    :goto_2
    iget-object v7, v8, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 64
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    .line 67
    move-result v7

    .line 68
    if-ge v5, v7, :cond_2

    .line 70
    iget-object v7, v8, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 72
    invoke-virtual {v7, v5}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 75
    move-result v9

    .line 76
    iget v10, v8, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 78
    invoke-virtual {v7, v9, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState$1;->put(II)V

    .line 81
    add-int/lit8 v5, v5, 0x1

    .line 83
    goto :goto_2

    .line 84
    :cond_2
    iget v5, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 86
    and-int/lit16 v5, v5, -0x81

    .line 88
    iput v5, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 90
    goto :goto_3

    .line 91
    :catchall_0
    move-exception p0

    .line 92
    goto :goto_4

    .line 93
    :cond_3
    aget-object v5, v7, v5

    .line 95
    const-string v7, "AS.AudioService"

    .line 97
    invoke-virtual {v8, v5, v7}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 100
    :goto_3
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 101
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 104
    move-result v4

    .line 105
    invoke-virtual {p0, v4, v2}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 108
    goto :goto_5

    .line 109
    :catchall_1
    move-exception p0

    .line 110
    goto :goto_6

    .line 111
    :goto_4
    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 112
    :try_start_5
    throw p0

    .line 113
    :cond_4
    :goto_5
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 115
    if-eqz v1, :cond_5

    .line 117
    const/16 v2, 0xb

    .line 119
    :cond_5
    const-string/jumbo v1, "onConfigurationChanged"

    .line 122
    const/4 v5, 0x4

    .line 123
    invoke-virtual {v4, v5, v2, v1}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 126
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 128
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 130
    aget-object v12, v1, v6

    .line 132
    const/16 v8, 0xa

    .line 134
    const/4 v9, 0x2

    .line 135
    const/4 v10, 0x0

    .line 136
    const/4 v11, 0x0

    .line 137
    const/4 v13, 0x0

    .line 138
    invoke-static/range {v7 .. v13}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 141
    :cond_6
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 142
    :try_start_6
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 144
    invoke-virtual {v0}, Landroid/content/res/Configuration;->getLayoutDirection()I

    .line 147
    move-result v0

    .line 148
    iget-object p0, p0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_0

    .line 150
    if-nez p0, :cond_7

    .line 152
    goto :goto_8

    .line 153
    :cond_7
    :try_start_7
    invoke-interface {p0, v0}, Landroid/media/IVolumeController;->setLayoutDirection(I)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_0

    .line 156
    goto :goto_8

    .line 157
    :catch_1
    move-exception p0

    .line 158
    :try_start_8
    const-string v0, "VolumeController"

    .line 160
    const-string v1, "Error calling setLayoutDirection"

    .line 162
    invoke-static {v0, v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_0

    .line 165
    goto :goto_8

    .line 166
    :goto_6
    :try_start_9
    monitor-exit v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    .line 167
    :try_start_a
    throw p0
    :try_end_a
    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_0

    .line 168
    :goto_7
    const-string v0, "AS.AudioService"

    .line 170
    const-string v1, "Error handling configuration change: "

    .line 172
    invoke-static {v0, v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 175
    :goto_8
    return-void
.end method

.method public static -$$Nest$monDispatchAudioServerStateChange(Lcom/android/server/audio/AudioService;Z)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 6
    invoke-virtual {p0}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 9
    move-result-object p0

    .line 10
    invoke-interface {p0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 13
    move-result-object p0

    .line 14
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 17
    move-result v1

    .line 18
    if-eqz v1, :cond_0

    .line 20
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 23
    move-result-object v1

    .line 24
    check-cast v1, Lcom/android/server/audio/AudioService$AsdProxy;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 26
    :try_start_1
    iget-object v1, v1, Lcom/android/server/audio/AudioService$AsdProxy;->mAsd:Landroid/media/IAudioServerStateDispatcher;

    .line 28
    invoke-interface {v1, p1}, Landroid/media/IAudioServerStateDispatcher;->dispatchAudioServerStateChange(Z)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 31
    goto :goto_0

    .line 32
    :catchall_0
    move-exception p0

    .line 33
    goto :goto_1

    .line 34
    :catch_0
    move-exception v1

    .line 35
    :try_start_2
    const-string v2, "AS.AudioService"

    .line 37
    const-string v3, "Could not call dispatchAudioServerStateChange()"

    .line 39
    invoke-static {v2, v3, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 42
    goto :goto_0

    .line 43
    :cond_0
    monitor-exit v0

    .line 44
    return-void

    .line 45
    :goto_1
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 46
    throw p0
.end method

.method public static -$$Nest$monDynPolicyMixStateUpdate(ILcom/android/server/audio/AudioService;Ljava/lang/String;)V
    .locals 4

    .line 1
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    const-string v0, "AS.AudioService"

    .line 6
    new-instance v1, Ljava/lang/StringBuilder;

    .line 8
    const-string/jumbo v2, "onDynamicPolicyMixStateUpdate("

    .line 11
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 14
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17
    const-string v2, ", "

    .line 19
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 25
    const-string v2, ")"

    .line 27
    invoke-static {v1, v2, v0}, Lcom/android/server/VpnManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 30
    iget-object v0, p1, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 32
    monitor-enter v0

    .line 33
    :try_start_0
    iget-object p1, p1, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    invoke-virtual {p1}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 38
    move-result-object p1

    .line 39
    invoke-interface {p1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 42
    move-result-object p1

    .line 43
    :cond_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 46
    move-result v1

    .line 47
    if-eqz v1, :cond_2

    .line 49
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 52
    move-result-object v1

    .line 53
    check-cast v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 55
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 58
    move-result-object v2

    .line 59
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 62
    move-result-object v2

    .line 63
    :cond_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 66
    move-result v3

    .line 67
    if-eqz v3, :cond_0

    .line 69
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 72
    move-result-object v3

    .line 73
    check-cast v3, Landroid/media/audiopolicy/AudioMix;

    .line 75
    invoke-virtual {v3}, Landroid/media/audiopolicy/AudioMix;->getRegistration()Ljava/lang/String;

    .line 78
    move-result-object v3

    .line 79
    invoke-virtual {v3, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 82
    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 83
    if-eqz v3, :cond_1

    .line 85
    :try_start_1
    iget-object p1, v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mPolicyCallback:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 87
    invoke-interface {p1, p2, p0}, Landroid/media/audiopolicy/IAudioPolicyCallback;->notifyMixStateUpdate(Ljava/lang/String;I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 90
    goto :goto_0

    .line 91
    :catchall_0
    move-exception p0

    .line 92
    goto :goto_2

    .line 93
    :catch_0
    move-exception p0

    .line 94
    :try_start_2
    const-string p1, "AS.AudioService"

    .line 96
    new-instance p2, Ljava/lang/StringBuilder;

    .line 98
    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 101
    const-string v2, "Can\'t call notifyMixStateUpdate() on IAudioPolicyCallback "

    .line 103
    invoke-virtual {p2, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    iget-object v1, v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mPolicyCallback:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 108
    invoke-interface {v1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 111
    move-result-object v1

    .line 112
    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 115
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 118
    move-result-object p2

    .line 119
    invoke-static {p1, p2, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 122
    :goto_0
    monitor-exit v0

    .line 123
    goto :goto_1

    .line 124
    :cond_2
    monitor-exit v0

    .line 125
    :goto_1
    return-void

    .line 126
    :goto_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 127
    throw p0
.end method

.method public static -$$Nest$monEnableSurroundFormats(Lcom/android/server/audio/AudioService;Ljava/util/ArrayList;)V
    .locals 7

    .line 1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    sget-object p0, Landroid/media/AudioFormat;->SURROUND_SOUND_ENCODING:[I

    .line 6
    array-length v0, p0

    .line 7
    const/4 v1, 0x0

    .line 8
    :goto_0
    if-ge v1, v0, :cond_0

    .line 10
    aget v2, p0, v1

    .line 12
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 15
    move-result-object v3

    .line 16
    invoke-virtual {p1, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 19
    move-result v3

    .line 20
    invoke-static {v2, v3}, Landroid/media/AudioSystem;->setSurroundFormatEnabled(IZ)I

    .line 23
    move-result v4

    .line 24
    new-instance v5, Ljava/lang/StringBuilder;

    .line 26
    const-string/jumbo v6, "enable surround format:"

    .line 29
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 32
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 35
    const-string v2, " "

    .line 37
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 43
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 49
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 52
    move-result-object v2

    .line 53
    const-string v3, "AS.AudioService"

    .line 55
    invoke-static {v3, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 58
    add-int/lit8 v1, v1, 0x1

    .line 60
    goto :goto_0

    .line 61
    :cond_0
    return-void
.end method

.method public static -$$Nest$monInitStreamsAndVolumes(Lcom/android/server/audio/AudioService;)V
    .locals 13

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->readCameraSoundForced()Z

    .line 7
    move-result v1

    .line 8
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 10
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 12
    const/4 v9, 0x0

    .line 13
    if-eqz v1, :cond_0

    .line 15
    const/16 v1, 0xb

    .line 17
    move v6, v1

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    move v6, v9

    .line 20
    :goto_0
    new-instance v7, Ljava/lang/String;

    .line 22
    const-string v1, "AudioService ctor"

    .line 24
    invoke-direct {v7, v1}, Ljava/lang/String;-><init>(Ljava/lang/String;)V

    .line 27
    const/4 v8, 0x0

    .line 28
    const/16 v3, 0x8

    .line 30
    const/4 v4, 0x2

    .line 31
    const/4 v5, 0x4

    .line 32
    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 35
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 36
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 39
    move-result v0

    .line 40
    new-array v1, v0, [Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 42
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 44
    move v2, v9

    .line 45
    :goto_1
    if-ge v2, v0, :cond_2

    .line 47
    const/4 v3, 0x3

    .line 48
    if-ne v2, v3, :cond_1

    .line 50
    new-instance v3, Lcom/android/server/audio/AudioService$MediaVolumeStreamState;

    .line 52
    sget-object v4, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    .line 54
    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 56
    aget v5, v5, v2

    .line 58
    aget-object v4, v4, v5

    .line 60
    invoke-direct {v3, v2, p0, v4}, Lcom/android/server/audio/AudioService$MediaVolumeStreamState;-><init>(ILcom/android/server/audio/AudioService;Ljava/lang/String;)V

    .line 63
    aput-object v3, v1, v2

    .line 65
    goto :goto_2

    .line 66
    :cond_1
    new-instance v3, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 68
    sget-object v4, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    .line 70
    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 72
    aget v5, v5, v2

    .line 74
    aget-object v4, v4, v5

    .line 76
    invoke-direct {v3, v2, p0, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;-><init>(ILcom/android/server/audio/AudioService;Ljava/lang/String;)V

    .line 79
    aput-object v3, v1, v2

    .line 81
    :goto_2
    add-int/lit8 v2, v2, 0x1

    .line 83
    goto :goto_1

    .line 84
    :cond_2
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 87
    move-result v0

    .line 88
    move v1, v9

    .line 89
    :goto_3
    if-ge v1, v0, :cond_3

    .line 91
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 93
    aget-object v2, v2, v1

    .line 95
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 98
    add-int/lit8 v1, v1, 0x1

    .line 100
    goto :goto_3

    .line 101
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkAllAliasStreamVolumes()V

    .line 104
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkMuteAffectedStreams()V

    .line 107
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateDefaultVolumes()V

    .line 110
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getAudioVolumeGroups()Ljava/util/List;

    .line 113
    move-result-object v0

    .line 114
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 117
    move-result-object v0

    .line 118
    :goto_4
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 121
    move-result v1

    .line 122
    if-eqz v1, :cond_4

    .line 124
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 127
    move-result-object v1

    .line 128
    check-cast v1, Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 130
    :try_start_1
    invoke-static {v1}, Lcom/android/server/audio/AudioService;->ensureValidAttributes(Landroid/media/audiopolicy/AudioVolumeGroup;)V

    .line 133
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 135
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getId()I

    .line 138
    move-result v3

    .line 139
    new-instance v4, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 141
    invoke-direct {v4, p0, v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/AudioVolumeGroup;)V

    .line 144
    invoke-virtual {v2, v3, v4}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V
    :try_end_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_1 .. :try_end_1} :catch_0

    .line 147
    goto :goto_4

    .line 148
    :catch_0
    const-string v2, "AS.AudioService"

    .line 150
    new-instance v3, Ljava/lang/StringBuilder;

    .line 152
    const-string/jumbo v4, "volume group "

    .line 155
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 158
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 161
    move-result-object v1

    .line 162
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 165
    const-string v1, " for internal policy needs"

    .line 167
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 170
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 173
    move-result-object v1

    .line 174
    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 177
    goto :goto_4

    .line 178
    :cond_4
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 180
    monitor-enter v1

    .line 181
    move v0, v9

    .line 182
    :goto_5
    :try_start_2
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 184
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 187
    move-result v3

    .line 188
    if-ge v0, v3, :cond_5

    .line 190
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 193
    move-result-object v2

    .line 194
    check-cast v2, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 196
    invoke-virtual {v2, v9}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes(Z)V

    .line 199
    add-int/lit8 v0, v0, 0x1

    .line 201
    goto :goto_5

    .line 202
    :catchall_0
    move-exception p0

    .line 203
    goto/16 :goto_c

    .line 205
    :cond_5
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 206
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 208
    invoke-virtual {v0}, Lcom/android/server/audio/SoundDoseHelper;->initSafeMediaVolumeIndex()V

    .line 211
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 214
    move-result v0

    .line 215
    const-class v2, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 217
    monitor-enter v2

    .line 218
    add-int/lit8 v0, v0, -0x1

    .line 220
    :goto_6
    if-ltz v0, :cond_8

    .line 222
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 224
    aget-object v1, v1, v0

    .line 226
    invoke-static {v0}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioAttributesForStrategyWithLegacyStreamType(I)Landroid/media/AudioAttributes;

    .line 229
    move-result-object v3

    .line 230
    new-instance v4, Landroid/media/AudioAttributes$Builder;

    .line 232
    invoke-direct {v4}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 235
    invoke-virtual {v4}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 238
    move-result-object v4

    .line 239
    invoke-virtual {v3, v4}, Landroid/media/AudioAttributes;->equals(Ljava/lang/Object;)Z

    .line 242
    move-result v4

    .line 243
    const/4 v5, -0x1

    .line 244
    if-eqz v4, :cond_6

    .line 246
    move v3, v5

    .line 247
    goto :goto_7

    .line 248
    :cond_6
    invoke-static {v3, v9}, Landroid/media/audiopolicy/AudioProductStrategy;->getVolumeGroupIdForAudioAttributes(Landroid/media/AudioAttributes;Z)I

    .line 251
    move-result v3

    .line 252
    :goto_7
    if-eq v3, v5, :cond_7

    .line 254
    sget-object v4, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 256
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 259
    move-result v5

    .line 260
    if-ltz v5, :cond_7

    .line 262
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 265
    move-result-object v3

    .line 266
    check-cast v3, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 268
    iput-object v3, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeGroupState:Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 270
    if-eqz v3, :cond_7

    .line 272
    iget-object v1, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeIndexSettingName:Ljava/lang/String;

    .line 274
    iput-object v1, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mSettingName:Ljava/lang/String;

    .line 276
    goto :goto_8

    .line 277
    :catchall_1
    move-exception p0

    .line 278
    goto/16 :goto_b

    .line 280
    :cond_7
    :goto_8
    add-int/lit8 v0, v0, -0x1

    .line 282
    goto :goto_6

    .line 283
    :cond_8
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 284
    sput v9, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 286
    sget-object v0, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 288
    new-instance v1, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;

    .line 290
    sget v2, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 292
    const-string/jumbo v3, "onInitStreamsAndVolumes"

    .line 295
    invoke-direct {v1, v2, v3}, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;-><init>(ILjava/lang/String;)V

    .line 298
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 301
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 304
    move-result v0

    .line 305
    invoke-virtual {p0, v0, v9}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 308
    invoke-static {}, Lcom/android/media/audio/Flags;->disablePrescaleAbsoluteVolume()Z

    .line 311
    new-instance v0, Lcom/android/server/audio/AudioService$SettingsObserver;

    .line 313
    const/4 v1, 0x0

    .line 314
    invoke-direct {v0, p0, v1}, Lcom/android/server/audio/AudioService$SettingsObserver;-><init>(Lcom/android/server/audio/AudioService;I)V

    .line 317
    new-instance v5, Landroid/content/IntentFilter;

    .line 319
    const-string v0, "android.bluetooth.headset.profile.action.AUDIO_STATE_CHANGED"

    .line 321
    invoke-direct {v5, v0}, Landroid/content/IntentFilter;-><init>(Ljava/lang/String;)V

    .line 324
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 326
    iget-boolean v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mScoManagedByAudio:Z

    .line 328
    if-nez v0, :cond_9

    .line 330
    const-string v0, "android.bluetooth.headset.profile.action.ACTIVE_DEVICE_CHANGED"

    .line 332
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 335
    :cond_9
    const-string v0, "android.intent.action.DOCK_EVENT"

    .line 337
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 340
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 342
    if-nez v0, :cond_a

    .line 344
    const-string v0, "android.intent.action.SCREEN_ON"

    .line 346
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 349
    const-string v0, "android.intent.action.SCREEN_OFF"

    .line 351
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 354
    :cond_a
    const-string v0, "android.intent.action.USER_SWITCHED"

    .line 356
    const-string v1, "android.intent.action.USER_BACKGROUND"

    .line 358
    const-string v2, "android.intent.action.USER_FOREGROUND"

    .line 360
    const-string v3, "android.hardware.usb.action.USB_DEVICE_ATTACHED"

    .line 362
    invoke-static {v5, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticOutline0;->m(Landroid/content/IntentFilter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 365
    const-string v0, "android.intent.action.PACKAGES_SUSPENDED"

    .line 367
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 370
    const-string v0, "android.intent.action.CONFIGURATION_CHANGED"

    .line 372
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 375
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    .line 377
    if-eqz v0, :cond_c

    .line 379
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 381
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 383
    new-instance v2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;

    .line 385
    const/4 v3, 0x2

    .line 386
    invoke-direct {v2, v3, p0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;-><init>(ILjava/lang/Object;)V

    .line 389
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;

    .line 391
    const/4 v4, 0x3

    .line 392
    invoke-direct {v3, v4, p0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;-><init>(ILjava/lang/Object;)V

    .line 395
    if-eqz v0, :cond_b

    .line 397
    sput-object v0, Lcom/android/server/audio/RotationHelper;->sContext:Landroid/content/Context;

    .line 399
    sput-object v1, Lcom/android/server/audio/RotationHelper;->sHandler:Landroid/os/Handler;

    .line 401
    new-instance v0, Lcom/android/server/audio/RotationHelper$AudioDisplayListener;

    .line 403
    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    .line 406
    sput-object v0, Lcom/android/server/audio/RotationHelper;->sDisplayListener:Lcom/android/server/audio/RotationHelper$AudioDisplayListener;

    .line 408
    new-instance v0, Landroid/hardware/devicestate/DeviceStateManager$FoldStateListener;

    .line 410
    sget-object v1, Lcom/android/server/audio/RotationHelper;->sContext:Landroid/content/Context;

    .line 412
    new-instance v4, Lcom/android/server/audio/RotationHelper$$ExternalSyntheticLambda0;

    .line 414
    invoke-direct {v4}, Ljava/lang/Object;-><init>()V

    .line 417
    invoke-direct {v0, v1, v4}, Landroid/hardware/devicestate/DeviceStateManager$FoldStateListener;-><init>(Landroid/content/Context;Ljava/util/function/Consumer;)V

    .line 420
    sput-object v0, Lcom/android/server/audio/RotationHelper;->sFoldStateListener:Landroid/hardware/devicestate/DeviceStateManager$FoldStateListener;

    .line 422
    sput-object v2, Lcom/android/server/audio/RotationHelper;->sRotationCallback:Ljava/util/function/Consumer;

    .line 424
    sput-object v3, Lcom/android/server/audio/RotationHelper;->sFoldStateCallback:Ljava/util/function/Consumer;

    .line 426
    invoke-static {}, Lcom/android/server/audio/RotationHelper;->enable()V

    .line 429
    goto :goto_9

    .line 430
    :cond_b
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 432
    const-string v0, "Invalid null context"

    .line 434
    invoke-direct {p0, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 437
    throw p0

    .line 438
    :cond_c
    :goto_9
    const-string v0, "android.media.action.OPEN_AUDIO_EFFECT_CONTROL_SESSION"

    .line 440
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 443
    const-string v0, "android.media.action.CLOSE_AUDIO_EFFECT_CONTROL_SESSION"

    .line 445
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 448
    const-string/jumbo v0, "com.android.server.audio.action.CHECK_MUSIC_ACTIVE"

    .line 451
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 454
    const/16 v0, 0x3e8

    .line 456
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->setPriority(I)V

    .line 459
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 461
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 463
    sget-object v0, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 465
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 467
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 470
    move-result-object v7

    .line 471
    const/4 v8, 0x2

    .line 472
    const/4 v6, 0x0

    .line 473
    move-object v4, v0

    .line 474
    invoke-virtual/range {v2 .. v8}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 477
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 479
    const-class v2, Landroid/telephony/SubscriptionManager;

    .line 481
    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 484
    move-result-object v1

    .line 485
    check-cast v1, Landroid/telephony/SubscriptionManager;

    .line 487
    if-nez v1, :cond_d

    .line 489
    const-string v1, "AS.AudioService"

    .line 491
    const-string/jumbo v2, "initExternalEventReceivers cannot create SubscriptionManager!"

    .line 494
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 497
    goto :goto_a

    .line 498
    :cond_d
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSubscriptionChangedListener:Lcom/android/server/audio/AudioService$4;

    .line 500
    invoke-virtual {v1, v2}, Landroid/telephony/SubscriptionManager;->addOnSubscriptionsChangedListener(Landroid/telephony/SubscriptionManager$OnSubscriptionsChangedListener;)V

    .line 503
    :goto_a
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 505
    if-eqz v1, :cond_e

    .line 507
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDisplayListener:Lcom/android/server/audio/AudioService$3;

    .line 509
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 511
    invoke-virtual {v1, v2, v3}, Landroid/hardware/display/DisplayManager;->registerDisplayListener(Landroid/hardware/display/DisplayManager$DisplayListener;Landroid/os/Handler;)V

    .line 514
    :cond_e
    new-instance v1, Lcom/android/server/audio/AudioService$SettingsObserver;

    .line 516
    const/4 v2, 0x1

    .line 517
    invoke-direct {v1, p0, v2}, Lcom/android/server/audio/AudioService$SettingsObserver;-><init>(Lcom/android/server/audio/AudioService;I)V

    .line 520
    new-instance v9, Landroid/content/IntentFilter;

    .line 522
    invoke-direct {v9}, Landroid/content/IntentFilter;-><init>()V

    .line 525
    const-string v1, "android.intent.action.USER_STARTED"

    .line 527
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 530
    const-string v1, "android.intent.action.ACTION_SUBINFO_RECORD_UPDATED"

    .line 532
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 535
    const-string/jumbo v1, "com.samsung.intent.action.DLNA_STATUS_CHANGED"

    .line 538
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 541
    const-string/jumbo v1, "com.samsung.android.scpm.policy.UPDATE.Audio"

    .line 544
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 547
    const-string/jumbo v1, "com.samsung.android.scpm.policy.CLEAR_DATA"

    .line 550
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 553
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 555
    if-eqz v1, :cond_f

    .line 557
    const-string/jumbo v1, "com.samsung.android.scpm.policy.UPDATE.voip-live-translate-allow-list-a7f6"

    .line 560
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 563
    :cond_f
    const-string/jumbo v1, "com.sec.media.action.mute_interval"

    .line 566
    const-string/jumbo v2, "com.samsung.bluetooth.a2dp.intent.action.DUAL_PLAY_MODE_ENABLED"

    .line 569
    const-string v3, "android.bluetooth.a2dp.profile.action.ACTIVE_DEVICE_CHANGED"

    .line 571
    const-string/jumbo v4, "com.sec.android.intent.action.SPLIT_SOUND"

    .line 574
    invoke-static {v9, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticOutline0;->m(Landroid/content/IntentFilter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 577
    const-string/jumbo v1, "com.samsung.android.bluetooth.audiocast.action.device.CONNECTION_STATE_CHANGED"

    .line 580
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 583
    const-string v1, "android.bluetooth.headset.profile.action.CONNECTION_STATE_CHANGED"

    .line 585
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 588
    const-string/jumbo v1, "com.android.server.sepunion.semgoodcatchservice.GOOD_CATCH_STATE_CHANGED"

    .line 591
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 594
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_BT_VOLUME_MONITOR:Z

    .line 596
    if-eqz v1, :cond_10

    .line 598
    const-string/jumbo v1, "com.samsung.bluetooth.device.action.AUDIO_TYPE_CHANGED"

    .line 601
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 604
    :cond_10
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 606
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 608
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 610
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 613
    move-result-object v11

    .line 614
    const/4 v12, 0x2

    .line 615
    const/4 v10, 0x0

    .line 616
    move-object v8, v0

    .line 617
    invoke-virtual/range {v6 .. v12}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 620
    new-instance v9, Landroid/content/IntentFilter;

    .line 622
    invoke-direct {v9}, Landroid/content/IntentFilter;-><init>()V

    .line 625
    const-string v1, "android.intent.action.PACKAGE_REMOVED"

    .line 627
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 630
    const-string v1, "android.intent.action.PACKAGE_ADDED"

    .line 632
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 635
    const-string v1, "android.intent.action.PACKAGE_DATA_CLEARED"

    .line 637
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 640
    const-string/jumbo v1, "package"

    .line 643
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 646
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 648
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 650
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 652
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 655
    move-result-object v11

    .line 656
    const/4 v12, 0x2

    .line 657
    const/4 v10, 0x0

    .line 658
    move-object v8, v0

    .line 659
    invoke-virtual/range {v6 .. v12}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 662
    new-instance v9, Landroid/content/IntentFilter;

    .line 664
    invoke-direct {v9}, Landroid/content/IntentFilter;-><init>()V

    .line 667
    const-string v1, "android.intent.action.SAS_NOTIFICATION_CLEAR"

    .line 669
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 672
    const-string v1, "android.intent.action.TurnOff_MultiSound"

    .line 674
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 677
    const-string/jumbo v1, "com.samsung.android.audio.headup.changedevice"

    .line 680
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 683
    const-string v1, "android.intent.action.LOCALE_CHANGED"

    .line 685
    invoke-virtual {v9, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 688
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 690
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 692
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 694
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 697
    move-result-object v11

    .line 698
    const/4 v12, 0x2

    .line 699
    const/4 v10, 0x0

    .line 700
    move-object v8, v0

    .line 701
    invoke-virtual/range {v6 .. v12}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 704
    const-string v1, "androidx.car.app.connection.action.CAR_CONNECTION_UPDATED"

    .line 706
    invoke-static {v1}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;)Landroid/content/IntentFilter;

    .line 709
    move-result-object v9

    .line 710
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 712
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 714
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 716
    invoke-virtual {v1}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 719
    move-result-object v11

    .line 720
    invoke-virtual/range {v6 .. v12}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 723
    const-string v0, "AudioService()"

    .line 725
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkVolumeRangeInitialization(Ljava/lang/String;)Z

    .line 728
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreamsLock:Ljava/lang/Object;

    .line 730
    monitor-enter v0

    .line 731
    :try_start_4
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreams:Ljava/util/HashMap;

    .line 733
    new-instance v2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda23;

    .line 735
    const/4 v3, 0x1

    .line 736
    invoke-direct {v2, p0, v3}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda23;-><init>(Lcom/android/server/audio/AudioService;I)V

    .line 739
    invoke-virtual {v1, v2}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 742
    monitor-exit v0

    .line 743
    return-void

    .line 744
    :catchall_2
    move-exception p0

    .line 745
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 746
    throw p0

    .line 747
    :goto_b
    :try_start_5
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 748
    throw p0

    .line 749
    :goto_c
    :try_start_6
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 750
    throw p0

    .line 751
    :catchall_3
    move-exception p0

    .line 752
    :try_start_7
    monitor-exit v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 753
    throw p0
.end method

.method public static -$$Nest$monObserveDevicesForAllStreams(Lcom/android/server/audio/AudioService;I)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7
    const/4 v2, 0x0

    .line 8
    move v3, v2

    .line 9
    :goto_0
    :try_start_1
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 11
    array-length v5, v4

    .line 12
    if-ge v3, v5, :cond_1

    .line 14
    if-eq v3, p1, :cond_0

    .line 16
    aget-object v4, v4, v3

    .line 18
    invoke-virtual {v4, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->observeDevicesForStream_syncVSS(Z)Ljava/util/Set;

    .line 21
    goto :goto_1

    .line 22
    :catchall_0
    move-exception p0

    .line 23
    goto :goto_2

    .line 24
    :cond_0
    :goto_1
    add-int/lit8 v3, v3, 0x1

    .line 26
    goto :goto_0

    .line 27
    :cond_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 28
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 29
    return-void

    .line 30
    :catchall_1
    move-exception p0

    .line 31
    goto :goto_3

    .line 32
    :goto_2
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 33
    :try_start_4
    throw p0

    .line 34
    :goto_3
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 35
    throw p0
.end method

.method public static -$$Nest$monPlaybackConfigChange(Lcom/android/server/audio/AudioService;Ljava/util/List;)V
    .locals 11

    .line 1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 7
    move-result-object v0

    .line 8
    const/4 v1, 0x0

    .line 9
    move v2, v1

    .line 10
    move v3, v2

    .line 11
    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 14
    move-result v4

    .line 15
    if-eqz v4, :cond_5

    .line 17
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 20
    move-result-object v4

    .line 21
    check-cast v4, Landroid/media/AudioPlaybackConfiguration;

    .line 23
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 26
    move-result-object v5

    .line 27
    invoke-virtual {v5}, Landroid/media/AudioAttributes;->getUsage()I

    .line 30
    move-result v5

    .line 31
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->isActive()Z

    .line 34
    move-result v4

    .line 35
    if-nez v4, :cond_1

    .line 37
    goto :goto_0

    .line 38
    :cond_1
    const/4 v4, 0x2

    .line 39
    const/4 v6, 0x1

    .line 40
    if-eq v5, v4, :cond_2

    .line 42
    const/4 v4, 0x3

    .line 43
    if-ne v5, v4, :cond_3

    .line 45
    :cond_2
    move v2, v6

    .line 46
    :cond_3
    if-eq v5, v6, :cond_4

    .line 48
    const/16 v4, 0xe

    .line 50
    if-eq v5, v4, :cond_4

    .line 52
    if-nez v5, :cond_0

    .line 54
    :cond_4
    move v3, v6

    .line 55
    goto :goto_0

    .line 56
    :cond_5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVoicePlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 58
    invoke-virtual {v0, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    .line 61
    move-result v0

    .line 62
    if-eq v0, v2, :cond_6

    .line 64
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getBluetoothContextualVolumeStream()I

    .line 67
    move-result v8

    .line 68
    invoke-virtual {p0, v8}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    .line 71
    move-result v0

    .line 72
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 74
    new-instance v4, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 76
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mVoicePlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 78
    invoke-virtual {v5}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 81
    move-result v5

    .line 82
    invoke-direct {v4, v8, v0, v5}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIZ)V

    .line 85
    invoke-virtual {v2, v4}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 88
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 90
    mul-int/lit8 v7, v0, 0xa

    .line 92
    const/4 v9, 0x0

    .line 93
    const/4 v10, 0x0

    .line 94
    const/16 v5, 0xe

    .line 96
    const/4 v6, 0x0

    .line 97
    invoke-virtual/range {v4 .. v10}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 100
    :cond_6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaPlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 102
    invoke-virtual {v0, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    .line 105
    move-result v0

    .line 106
    if-eq v0, v3, :cond_7

    .line 108
    if-eqz v3, :cond_7

    .line 110
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 112
    invoke-virtual {v0}, Lcom/android/server/audio/SoundDoseHelper;->scheduleMusicActiveCheck()V

    .line 115
    :cond_7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 117
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 120
    new-instance v2, Ljava/util/ArrayList;

    .line 122
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 125
    iget-object v3, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 127
    monitor-enter v3

    .line 128
    :try_start_0
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 131
    move-result-object v4

    .line 132
    :cond_8
    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 135
    move-result v5

    .line 136
    if-eqz v5, :cond_b

    .line 138
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 141
    move-result-object v5

    .line 142
    check-cast v5, Landroid/media/AudioPlaybackConfiguration;

    .line 144
    invoke-virtual {v5}, Landroid/media/AudioPlaybackConfiguration;->getPlayerInterfaceId()I

    .line 147
    move-result v6

    .line 148
    iget-object v7, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToDeviceIdCache:Landroid/util/SparseIntArray;

    .line 150
    invoke-virtual {v7, v6, v1}, Landroid/util/SparseIntArray;->get(II)I

    .line 153
    move-result v7

    .line 154
    invoke-virtual {v5}, Landroid/media/AudioPlaybackConfiguration;->getAudioDeviceInfo()Landroid/media/AudioDeviceInfo;

    .line 157
    move-result-object v8

    .line 158
    if-nez v8, :cond_9

    .line 160
    if-eqz v7, :cond_8

    .line 162
    iget-object v5, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToDeviceIdCache:Landroid/util/SparseIntArray;

    .line 164
    invoke-virtual {v5, v6}, Landroid/util/SparseIntArray;->delete(I)V

    .line 167
    goto :goto_1

    .line 168
    :catchall_0
    move-exception p0

    .line 169
    goto :goto_2

    .line 170
    :cond_9
    invoke-virtual {v8}, Landroid/media/AudioDeviceInfo;->getId()I

    .line 173
    move-result v9

    .line 174
    if-ne v7, v9, :cond_a

    .line 176
    goto :goto_1

    .line 177
    :cond_a
    iget-object v7, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToDeviceIdCache:Landroid/util/SparseIntArray;

    .line 179
    invoke-virtual {v8}, Landroid/media/AudioDeviceInfo;->getId()I

    .line 182
    move-result v8

    .line 183
    invoke-virtual {v7, v6, v8}, Landroid/util/SparseIntArray;->put(II)V

    .line 186
    new-instance v7, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;

    .line 188
    invoke-virtual {v5}, Landroid/media/AudioPlaybackConfiguration;->getSessionId()I

    .line 191
    move-result v8

    .line 192
    invoke-virtual {v5}, Landroid/media/AudioPlaybackConfiguration;->getClientPid()I

    .line 195
    move-result v9

    .line 196
    invoke-direct {v7, v8, v9}, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;-><init>(II)V

    .line 199
    iget-object v8, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 201
    invoke-virtual {v8, v7}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 204
    move-result v8

    .line 205
    if-eqz v8, :cond_8

    .line 207
    iget-object v8, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 209
    invoke-virtual {v8, v7}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 212
    move-result v8

    .line 213
    if-eqz v8, :cond_8

    .line 215
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 218
    iget-object v5, v0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 220
    invoke-virtual {v5, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 223
    move-result-object v5

    .line 224
    check-cast v5, Ljava/util/Set;

    .line 226
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 229
    move-result-object v6

    .line 230
    invoke-interface {v5, v6}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 233
    goto :goto_1

    .line 234
    :cond_b
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 235
    new-instance v1, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda4;

    .line 237
    invoke-direct {v1, v0}, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda4;-><init>(Lcom/android/server/audio/LoudnessCodecHelper;)V

    .line 240
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 243
    const/4 v0, 0x0

    .line 244
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->updateAudioModeHandlers(Ljava/util/List;Ljava/util/List;)V

    .line 247
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 249
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioDeviceBroker;->updateCommunicationRouteClientsActivity(Ljava/util/List;Ljava/util/List;)V

    .line 252
    return-void

    .line 253
    :goto_2
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 254
    throw p0
.end method

.method public static -$$Nest$monRemoveAssistantServiceUids(Lcom/android/server/audio/AudioService;[I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->removeAssistantServiceUidsLocked([I)V

    .line 7
    monitor-exit v0

    .line 8
    return-void

    .line 9
    :catchall_0
    move-exception p0

    .line 10
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11
    throw p0
.end method

.method public static -$$Nest$monSetVolumeIndexOnDevice(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 3
    move-object/from16 v1, p1

    .line 5
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 7
    iget v3, v1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mStreamType:I

    .line 9
    aget-object v2, v2, v3

    .line 11
    const/4 v3, 0x0

    .line 12
    const/16 v4, -0x801

    .line 14
    const/4 v5, 0x1

    .line 15
    iget v6, v1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mVssVolIndex:I

    .line 17
    const-string v7, " dev:0x"

    .line 19
    iget-object v8, v1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mCaller:Ljava/lang/String;

    .line 21
    iget v15, v1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mDevice:I

    .line 23
    if-eq v6, v4, :cond_3

    .line 25
    if-eq v6, v4, :cond_0

    .line 27
    move v3, v5

    .line 28
    :cond_0
    invoke-static {v3}, Lcom/android/internal/util/Preconditions;->checkState(Z)V

    .line 31
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 33
    iget v1, v1, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;->mStreamType:I

    .line 35
    invoke-virtual {v3, v1, v6, v15}, Lcom/android/server/audio/SoundDoseHelper;->checkSafeMediaVolume(III)Z

    .line 38
    move-result v1

    .line 39
    if-eqz v1, :cond_1

    .line 41
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 43
    invoke-virtual {v1, v15}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeIndex(I)I

    .line 46
    move-result v6

    .line 47
    :cond_1
    invoke-virtual {v2, v6, v15, v8, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 50
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 52
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 54
    invoke-static {v8, v7}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    move-result-object v4

    .line 58
    invoke-static {v15}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 61
    move-result-object v5

    .line 62
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 65
    const-string v5, " volIdx:"

    .line 67
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 70
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 73
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 76
    move-result-object v4

    .line 77
    invoke-direct {v3, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 80
    invoke-virtual {v1, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 83
    :cond_2
    move v6, v15

    .line 84
    goto :goto_1

    .line 85
    :cond_3
    const-string/jumbo v1, "makeLeAudioDeviceAvailable"

    .line 88
    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 91
    move-result v1

    .line 92
    if-eqz v1, :cond_5

    .line 94
    const v1, 0x20000002

    .line 97
    if-ne v15, v1, :cond_4

    .line 99
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isLeBroadcastWithoutLeDevice()Z

    .line 102
    move-result v1

    .line 103
    if-eqz v1, :cond_4

    .line 105
    const/16 v1, 0x96

    .line 107
    invoke-virtual {v2, v1, v15, v8, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 110
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 112
    new-instance v4, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 114
    invoke-static {v8, v7}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 117
    move-result-object v5

    .line 118
    invoke-static {v15}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 121
    move-result-object v6

    .line 122
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 125
    const-string v6, " broadcast volIdx to 150"

    .line 127
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 130
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 133
    move-result-object v5

    .line 134
    invoke-direct {v4, v5}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 137
    invoke-virtual {v1, v4}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 140
    :cond_4
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->AVC_AFFECTED_STREAMS:[I

    .line 142
    array-length v4, v1

    .line 143
    :goto_0
    if-ge v3, v4, :cond_2

    .line 145
    aget v5, v1, v3

    .line 147
    iget-object v9, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 149
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 151
    aget-object v14, v6, v5

    .line 153
    const/4 v11, 0x2

    .line 154
    const/4 v13, 0x0

    .line 155
    const/4 v10, 0x0

    .line 156
    const/4 v5, 0x0

    .line 157
    move v12, v15

    .line 158
    move v6, v15

    .line 159
    move v15, v5

    .line 160
    invoke-static/range {v9 .. v15}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 163
    add-int/lit8 v3, v3, 0x1

    .line 165
    move v15, v6

    .line 166
    goto :goto_0

    .line 167
    :cond_5
    move v6, v15

    .line 168
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 170
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 172
    const-string v4, " update vol on dev:0x"

    .line 174
    invoke-static {v8, v4}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 177
    move-result-object v4

    .line 178
    invoke-static {v4, v6}, Landroid/hardware/audio/common/V2_0/AudioChannelMask$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;I)Ljava/lang/String;

    .line 181
    move-result-object v4

    .line 182
    invoke-direct {v3, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 185
    invoke-virtual {v1, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 188
    :goto_1
    invoke-virtual {v0, v2, v6}, Lcom/android/server/audio/AudioService;->setDeviceVolume(Lcom/android/server/audio/AudioService$VolumeStreamState;I)V

    .line 191
    return-void
.end method

.method public static -$$Nest$monUnmuteStreamOnSingleVolDevice(Lcom/android/server/audio/AudioService;II)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 7
    :try_start_1
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 9
    aget-object v2, v2, p1

    .line 11
    const-string/jumbo v3, "onUnmuteStreamOnSingleVolDevice"

    .line 14
    const/4 v4, 0x0

    .line 15
    invoke-virtual {v2, v3, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 18
    move-result v3

    .line 19
    if-eqz v3, :cond_0

    .line 21
    invoke-virtual {p0, p1, v4}, Lcom/android/server/audio/AudioService;->muteAliasStreams(IZ)V

    .line 24
    goto :goto_0

    .line 25
    :catchall_0
    move-exception p0

    .line 26
    goto :goto_2

    .line 27
    :cond_0
    :goto_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 30
    move-result v9

    .line 31
    invoke-virtual {v2, v9}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 34
    move-result v7

    .line 35
    move-object v4, p0

    .line 36
    move v5, p1

    .line 37
    move v6, v7

    .line 38
    move v8, p2

    .line 39
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 42
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 43
    const/4 p2, 0x3

    .line 44
    if-ne p1, p2, :cond_1

    .line 46
    if-eqz v3, :cond_1

    .line 48
    :try_start_2
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 50
    monitor-enter p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 51
    const/4 p2, 0x1

    .line 52
    :try_start_3
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    .line 55
    monitor-exit p1

    .line 56
    goto :goto_1

    .line 57
    :catchall_1
    move-exception p0

    .line 58
    monitor-exit p1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 59
    :try_start_4
    throw p0

    .line 60
    :catchall_2
    move-exception p0

    .line 61
    goto :goto_3

    .line 62
    :cond_1
    :goto_1
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 63
    return-void

    .line 64
    :goto_2
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 65
    :try_start_6
    throw p0

    .line 66
    :goto_3
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 67
    throw p0
.end method

.method public static -$$Nest$monUpdateAccessibilityServiceUids(Lcom/android/server/audio/AudioService;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 6
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7
    invoke-static {p0}, Landroid/media/AudioSystem;->setA11yServicesUids([I)I

    .line 10
    return-void

    .line 11
    :catchall_0
    move-exception p0

    .line 12
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13
    throw p0
.end method

.method public static -$$Nest$monUpdateVolumeStatesForAudioDevice(ILcom/android/server/audio/AudioService;Ljava/lang/String;)V
    .locals 4

    .line 1
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 7
    move-result v0

    .line 8
    iget-object v1, p1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 10
    monitor-enter v1

    .line 11
    :try_start_0
    const-class v2, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 13
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 14
    const/4 v3, 0x0

    .line 15
    :goto_0
    if-ge v3, v0, :cond_0

    .line 17
    :try_start_1
    invoke-virtual {p1, p0, v3, p2}, Lcom/android/server/audio/AudioService;->updateVolumeStates(IILjava/lang/String;)V

    .line 20
    add-int/lit8 v3, v3, 0x1

    .line 22
    goto :goto_0

    .line 23
    :catchall_0
    move-exception p0

    .line 24
    goto :goto_1

    .line 25
    :cond_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 26
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 27
    return-void

    .line 28
    :catchall_1
    move-exception p0

    .line 29
    goto :goto_2

    .line 30
    :goto_1
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 31
    :try_start_4
    throw p0

    .line 32
    :goto_2
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 33
    throw p0
.end method

.method public static -$$Nest$munSetSoundSettingEventBroadcastIntent(Lcom/android/server/audio/AudioService;Ljava/lang/String;)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 6
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 9
    move-result-object v1

    .line 10
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    .line 13
    move-result v2

    .line 14
    const/4 v3, 0x0

    .line 15
    if-eqz v2, :cond_2

    .line 17
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 20
    move-result-object v2

    .line 21
    check-cast v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 23
    iget-object v4, v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    .line 25
    if-nez v4, :cond_1

    .line 27
    const/4 v4, 0x0

    .line 28
    goto :goto_0

    .line 29
    :cond_1
    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 32
    move-result-object v4

    .line 33
    invoke-virtual {v4, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 36
    move-result v4

    .line 37
    :goto_0
    if-eqz v4, :cond_0

    .line 39
    goto :goto_1

    .line 40
    :catchall_0
    move-exception p0

    .line 41
    goto :goto_3

    .line 42
    :cond_2
    move-object v2, v3

    .line 43
    :goto_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 45
    iget-object v1, v1, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->this$0:Lcom/android/server/media/MediaSessionService;

    .line 47
    iget-object v4, v1, Lcom/android/server/media/MediaSessionService;->mVolumeKeyLongPressReceiver:Landroid/content/ComponentName;

    .line 49
    iget-object v1, v1, Lcom/android/server/media/MediaSessionService;->mHighPriorityMediaKeyReceiver:Landroid/content/ComponentName;

    .line 51
    if-eqz v2, :cond_5

    .line 53
    if-eqz v4, :cond_3

    .line 55
    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 58
    move-result-object v4

    .line 59
    invoke-virtual {v4, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 62
    move-result v4

    .line 63
    if-eqz v4, :cond_3

    .line 65
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 67
    invoke-virtual {v4, v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 70
    :cond_3
    if-eqz v1, :cond_4

    .line 72
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 75
    move-result-object v1

    .line 76
    invoke-virtual {v1, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 79
    move-result p1

    .line 80
    if-eqz p1, :cond_4

    .line 82
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 84
    invoke-virtual {p1, v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 87
    :cond_4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 89
    invoke-virtual {p0, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 92
    goto :goto_2

    .line 93
    :cond_5
    const-string/jumbo v2, "com.samsung.android.soundassistant"

    .line 96
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 99
    move-result p1

    .line 100
    if-eqz p1, :cond_8

    .line 102
    if-eqz v4, :cond_6

    .line 104
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 106
    invoke-virtual {p1, v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 109
    :cond_6
    if-eqz v1, :cond_7

    .line 111
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 113
    invoke-virtual {p1, v3}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 116
    :cond_7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 118
    invoke-virtual {p0}, Ljava/util/ArrayList;->clear()V

    .line 121
    :cond_8
    :goto_2
    monitor-exit v0

    .line 122
    return-void

    .line 123
    :goto_3
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 124
    throw p0
.end method

.method static constructor <clinit>()V
    .locals 6

    .line 1
    const/4 v0, 0x0

    .line 2
    new-array v1, v0, [I

    .line 4
    sput-object v1, Lcom/android/server/audio/AudioService;->NO_ACTIVE_ASSISTANT_SERVICE_UIDS:[I

    .line 6
    const/16 v1, 0xc

    .line 8
    new-array v2, v1, [I

    .line 10
    fill-array-data v2, :array_0

    .line 13
    sput-object v2, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    .line 15
    new-array v2, v1, [I

    .line 17
    fill-array-data v2, :array_1

    .line 20
    sput-object v2, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    .line 22
    new-array v1, v1, [I

    .line 24
    fill-array-data v1, :array_2

    .line 27
    sput-object v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    .line 29
    const/16 v1, 0x12

    .line 31
    invoke-static {v1}, Landroid/os/VibrationAttributes;->createForUsage(I)Landroid/os/VibrationAttributes;

    .line 34
    move-result-object v1

    .line 35
    sput-object v1, Lcom/android/server/audio/AudioService;->TOUCH_VIBRATION_ATTRIBUTES:Landroid/os/VibrationAttributes;

    .line 37
    const/4 v1, 0x7

    .line 38
    const/4 v2, 0x3

    .line 39
    new-array v2, v2, [B

    .line 41
    fill-array-data v2, :array_3

    .line 44
    sput-object v2, Lcom/android/server/audio/AudioService;->DEFAULT_ARC_AUDIO_DESCRIPTOR:[B

    .line 46
    new-instance v2, Ljava/util/HashSet;

    .line 48
    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 51
    sput-object v2, Lcom/android/server/audio/AudioService;->DEVICE_MEDIA_UNMUTED_ON_PLUG_SET:Ljava/util/Set;

    .line 53
    const/4 v3, 0x4

    .line 54
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 57
    move-result-object v3

    .line 58
    invoke-interface {v2, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 61
    const/16 v3, 0x8

    .line 63
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 66
    move-result-object v3

    .line 67
    invoke-interface {v2, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 70
    const/high16 v3, 0x20000

    .line 72
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 75
    move-result-object v3

    .line 76
    invoke-interface {v2, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 79
    const/high16 v3, 0x8000000

    .line 81
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 84
    move-result-object v3

    .line 85
    invoke-interface {v2, v3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 88
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 90
    invoke-interface {v2, v3}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 93
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_BLE_SET:Ljava/util/Set;

    .line 95
    invoke-interface {v2, v3}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 98
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_USB_SET:Ljava/util/Set;

    .line 100
    invoke-interface {v2, v3}, Ljava/util/Set;->addAll(Ljava/util/Collection;)Z

    .line 103
    new-instance v2, Landroid/util/SparseArray;

    .line 105
    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    .line 108
    sput-object v2, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 110
    sput-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 112
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 114
    const-string v2, "audio services lifecycle"

    .line 116
    const/16 v3, 0x14

    .line 118
    invoke-direct {v0, v3, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 121
    sput-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 123
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 125
    const-string/jumbo v2, "mute commands"

    .line 128
    const/16 v4, 0x1e

    .line 130
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 133
    sput-object v0, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 135
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 137
    const/16 v2, 0x32

    .line 139
    const-string/jumbo v5, "wired/A2DP/hearing aid device connection"

    .line 142
    invoke-direct {v0, v2, v5}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 145
    sput-object v0, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 147
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 149
    const-string/jumbo v2, "force use (logged before setForceUse() is executed)"

    .line 152
    invoke-direct {v0, v3, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 155
    sput-object v0, Lcom/android/server/audio/AudioService;->sForceUseLogger:Lcom/android/server/utils/EventLogger;

    .line 157
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 159
    const/16 v2, 0x64

    .line 161
    const-string/jumbo v3, "volume changes (logged when command received by AudioService)"

    .line 164
    invoke-direct {v0, v2, v3}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 167
    sput-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 169
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 171
    const-string/jumbo v2, "spatial audio"

    .line 174
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 177
    sput-object v0, Lcom/android/server/audio/AudioService;->sSpatialLogger:Lcom/android/server/utils/EventLogger;

    .line 179
    const-string v0, "VIBRATE"

    .line 181
    const-string v2, "NORMAL"

    .line 183
    const-string v3, "SILENT"

    .line 185
    filled-new-array {v3, v0, v2}, [Ljava/lang/String;

    .line 188
    move-result-object v0

    .line 189
    sput-object v0, Lcom/android/server/audio/AudioService;->RINGER_MODE_NAMES:[Ljava/lang/String;

    .line 191
    new-instance v0, Ljava/util/HashSet;

    .line 193
    const/16 v2, -0x3e8

    .line 195
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 198
    move-result-object v2

    .line 199
    const/16 v3, -0x3e9

    .line 201
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 204
    move-result-object v3

    .line 205
    const/16 v5, -0x3ea

    .line 207
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 210
    move-result-object v5

    .line 211
    filled-new-array {v2, v3, v5}, [Ljava/lang/Integer;

    .line 214
    move-result-object v2

    .line 215
    invoke-static {v2}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    .line 218
    move-result-object v2

    .line 219
    invoke-direct {v0, v2}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    .line 222
    sput-object v0, Lcom/android/server/audio/AudioService;->mAppCastingDevice:Ljava/util/Set;

    .line 224
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 226
    const-string/jumbo v2, "setMicrophoneMute use (logged after setMicrophoneMute() is executed)"

    .line 229
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 232
    sput-object v0, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/utils/EventLogger;

    .line 234
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 236
    const-string/jumbo v2, "setMasterMute (logged when command received by AudioService)"

    .line 239
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 242
    sput-object v0, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 244
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 246
    const/16 v2, 0x28

    .line 248
    const-string v3, "App Volume"

    .line 250
    invoke-direct {v0, v2, v3}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 253
    sput-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 255
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 257
    const-string v2, "Using Audio"

    .line 259
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 262
    sput-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 264
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 266
    const-string v2, "Ringtone change history"

    .line 268
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 271
    sput-object v0, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/utils/EventLogger;

    .line 273
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 275
    const-string v2, "Ringer mode change history"

    .line 277
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 280
    sput-object v0, Lcom/android/server/audio/AudioService;->sRingerModeLogger:Lcom/android/server/utils/EventLogger;

    .line 282
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 284
    const-string v2, "SCPM history"

    .line 286
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 289
    sput-object v0, Lcom/android/server/audio/AudioService;->sScpmLogger:Lcom/android/server/utils/EventLogger;

    .line 291
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 293
    const-string v2, "Factory test parameters history"

    .line 295
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 298
    sput-object v0, Lcom/android/server/audio/AudioService;->sFactoryTestLogger:Lcom/android/server/utils/EventLogger;

    .line 300
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 302
    const-string v2, "SCO prevention history"

    .line 304
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 307
    sput-object v0, Lcom/android/server/audio/AudioService;->sScoPreventionLogger:Lcom/android/server/utils/EventLogger;

    .line 309
    new-instance v0, Lcom/android/server/utils/EventLogger;

    .line 311
    const-string v2, "App Casting history"

    .line 313
    invoke-direct {v0, v4, v2}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    .line 316
    sput-object v0, Lcom/android/server/audio/AudioService;->sAppCastingLogger:Lcom/android/server/utils/EventLogger;

    .line 318
    const-string v0, "android"

    .line 320
    filled-new-array {v0}, [Ljava/lang/String;

    .line 323
    move-result-object v0

    .line 324
    sput-object v0, Lcom/android/server/audio/AudioService;->SYSTEM_PACKAGE:[Ljava/lang/String;

    .line 326
    const-string v0, ""

    .line 328
    filled-new-array {v0}, [Ljava/lang/String;

    .line 331
    move-result-object v0

    .line 332
    sput-object v0, Lcom/android/server/audio/AudioService;->EMPTY_PACKAGE:[Ljava/lang/String;

    .line 334
    new-array v0, v1, [I

    .line 336
    fill-array-data v0, :array_4

    .line 339
    sput-object v0, Lcom/android/server/audio/AudioService;->VOLUME_LIMIT_INDEX_EFFECT_ON:[I

    .line 341
    return-void

    .line 342
    nop

    .line 343
    :array_0
    .array-data 4
        0x5
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
        0xf
    .end array-data

    .line 371
    :array_1
    .array-data 4
        0x1
        0x0
        0x0
        0x0
        0x1
        0x0
        0x0
        0x0
        0x0
        0x0
        0x1
        0x0
    .end array-data

    .line 399
    :array_2
    .array-data 4
        0x22
        0x24
        0x23
        0x24
        0x25
        0x26
        0x27
        0x24
        0x24
        0x24
        0x40
        0x24
    .end array-data

    .line 427
    :array_3
    .array-data 1
        0x9t
        0x7ft
        0x7t
    .end array-data

    .line 433
    :array_4
    .array-data 4
        0x6
        0x7
        0x8
        0x9
        0xb
        0xd
        0xd
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;Lcom/android/server/audio/AudioSystemAdapter;Lcom/android/server/audio/SystemServerAdapter;Lcom/android/server/audio/SettingsAdapter;Lcom/android/server/audio/AudioService$AudioVolumeGroupHelper;Lcom/android/server/audio/DefaultAudioPolicyFacade;Landroid/app/AppOpsManager;Landroid/os/PermissionEnforcer;)V
    .locals 22

    move-object/from16 v9, p0

    move-object/from16 v0, p1

    move-object/from16 v3, p2

    move-object/from16 v1, p8

    .line 1
    invoke-direct {v9, v1}, Landroid/media/IAudioService$Stub;-><init>(Landroid/os/PermissionEnforcer;)V

    const/4 v10, 0x0

    .line 2
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mNotifAliasRing:Z

    .line 3
    new-instance v1, Lcom/android/server/audio/AudioService$VolumeController;

    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService$VolumeController;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 4
    new-instance v1, Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-direct {v1, v10}, Ljava/util/concurrent/atomic/AtomicInteger;-><init>(I)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 5
    new-instance v1, Ljava/lang/Object;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    const/4 v1, 0x2

    const/4 v11, 0x3

    const/4 v12, 0x1

    const/16 v2, 0xc

    .line 6
    new-array v4, v2, [I

    fill-array-data v4, :array_0

    iput-object v4, v9, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    .line 7
    new-array v4, v2, [I

    fill-array-data v4, :array_1

    iput-object v4, v9, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_TELEVISION:[I

    const/16 v4, 0x9

    const/4 v5, 0x5

    const/16 v6, 0xa

    const/16 v7, 0xb

    .line 8
    new-array v8, v2, [I

    fill-array-data v8, :array_2

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_NONE:[I

    .line 9
    new-array v2, v2, [I

    fill-array-data v2, :array_3

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    .line 10
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 11
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreamsLock:Ljava/lang/Object;

    .line 12
    new-instance v2, Ljava/util/HashMap;

    const/high16 v8, 0x20000000

    .line 13
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    const v8, 0x20000001

    .line 14
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v16

    const v8, 0x20000002

    .line 15
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v18

    const/high16 v8, 0x8000000

    .line 16
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    move-object/from16 v15, v21

    move-object/from16 v17, v21

    move-object/from16 v19, v21

    move-object/from16 v20, v8

    .line 17
    invoke-static/range {v14 .. v21}, Ljava/util/Map;->of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;

    move-result-object v14

    invoke-direct {v2, v14}, Ljava/util/HashMap;-><init>(Ljava/util/Map;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreams:Ljava/util/HashMap;

    .line 18
    new-instance v2, Lcom/android/server/audio/AudioService$1;

    invoke-direct {v2, v9}, Lcom/android/server/audio/AudioService$1;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mAudioSystemCallback:Lcom/android/server/audio/AudioService$1;

    const/4 v14, -0x1

    .line 19
    iput v14, v9, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 20
    iput v10, v9, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 21
    iput v10, v9, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 22
    new-instance v2, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    invoke-direct {v2, v9, v12}, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;-><init>(Lcom/android/server/audio/AudioService;I)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 23
    new-instance v2, Lcom/android/server/audio/AudioService$11;

    invoke-direct {v2, v9}, Lcom/android/server/audio/AudioService$11;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mUserRestrictionsListener:Lcom/android/server/audio/AudioService$11;

    .line 24
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 25
    iput v10, v9, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    .line 26
    iput v14, v9, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .line 27
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 28
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    const/4 v2, 0x0

    .line 29
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 30
    new-instance v15, Ljava/util/HashSet;

    const/16 v16, 0x800

    .line 31
    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    const/high16 v16, 0x200000

    .line 32
    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    filled-new-array {v11, v13}, [Ljava/lang/Integer;

    move-result-object v11

    .line 33
    invoke-static {v11}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v11

    invoke-direct {v15, v11}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v15, v9, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 34
    new-instance v11, Ljava/util/HashSet;

    const/high16 v13, 0x40000

    .line 35
    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    const v15, 0x40001

    .line 36
    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v15

    filled-new-array {v13, v15}, [Ljava/lang/Integer;

    move-result-object v13

    .line 37
    invoke-static {v13}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v13

    invoke-direct {v11, v13}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v11, v9, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 38
    new-instance v11, Landroid/util/ArrayMap;

    invoke-direct {v11}, Landroid/util/ArrayMap;-><init>()V

    iput-object v11, v9, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 39
    new-instance v11, Ljava/util/HashSet;

    .line 40
    filled-new-array {v8}, [Ljava/lang/Integer;

    move-result-object v8

    invoke-static {v8}, Ljava/util/Arrays;->asList([Ljava/lang/Object;)Ljava/util/List;

    move-result-object v8

    invoke-direct {v11, v8}, Ljava/util/HashSet;-><init>(Ljava/util/Collection;)V

    iput-object v11, v9, Lcom/android/server/audio/AudioService;->mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

    .line 41
    iput-boolean v12, v9, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    .line 42
    new-instance v8, Lcom/android/server/audio/AudioService$RestorableParameters;

    .line 43
    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    .line 44
    new-instance v11, Lcom/android/server/audio/AudioService$RestorableParameters$1;

    invoke-direct {v11, v8}, Lcom/android/server/audio/AudioService$RestorableParameters$1;-><init>(Lcom/android/server/audio/AudioService$RestorableParameters;)V

    iput-object v11, v8, Lcom/android/server/audio/AudioService$RestorableParameters;->mMap:Ljava/util/Map;

    .line 45
    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mRestorableParameters:Lcom/android/server/audio/AudioService$RestorableParameters;

    .line 46
    iput v10, v9, Lcom/android/server/audio/AudioService;->mDockState:I

    .line 47
    sget-object v8, Landroid/media/VolumePolicy;->DEFAULT:Landroid/media/VolumePolicy;

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 48
    new-instance v8, Landroid/util/ArraySet;

    invoke-direct {v8}, Landroid/util/ArraySet;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 49
    iput v14, v9, Lcom/android/server/audio/AudioService;->mPrimaryAssistantUid:I

    .line 50
    sget-object v8, Lcom/android/server/audio/AudioService;->NO_ACTIVE_ASSISTANT_SERVICE_UIDS:[I

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mActiveAssistantServiceUids:[I

    .line 51
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 52
    iput v14, v9, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    .line 53
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mInputMethodServiceUidLock:Ljava/lang/Object;

    .line 54
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    const/16 v8, 0x11

    .line 55
    filled-new-array {v8}, [I

    move-result-object v8

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 56
    new-instance v8, Lcom/android/server/audio/AudioService$2;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$2;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 57
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 58
    new-instance v8, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v8, v10}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mMasterMute:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 59
    new-instance v8, Lcom/android/server/audio/AudioService$3;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$3;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mDisplayListener:Lcom/android/server/audio/AudioService$3;

    .line 60
    new-instance v8, Lcom/android/server/audio/AudioService$4;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$4;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mSubscriptionChangedListener:Lcom/android/server/audio/AudioService$4;

    .line 61
    new-instance v8, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v8, v10}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mVoicePlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 62
    new-instance v8, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v8, v10}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mMediaPlaybackActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 63
    new-instance v8, Lcom/android/server/audio/AudioService$5;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$5;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mPlaybackActivityMonitor:Lcom/android/server/audio/AudioService$5;

    .line 64
    new-instance v8, Lcom/android/server/audio/AudioService$6;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$6;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mVoiceRecordingActivityMonitor:Lcom/android/server/audio/AudioService$6;

    .line 65
    iput v10, v9, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 66
    new-instance v8, Ljava/util/ArrayList;

    invoke-direct {v8}, Ljava/util/ArrayList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 67
    new-instance v8, Landroid/os/RemoteCallbackList;

    invoke-direct {v8}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 68
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 69
    new-instance v8, Landroid/os/RemoteCallbackList;

    invoke-direct {v8}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mModeDispatchers:Landroid/os/RemoteCallbackList;

    .line 70
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionLock:Ljava/lang/Object;

    .line 71
    new-instance v8, Landroid/os/RemoteCallbackList;

    invoke-direct {v8}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 72
    new-instance v8, Landroid/os/RemoteCallbackList;

    invoke-direct {v8}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 73
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 74
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 75
    new-instance v8, Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    .line 76
    new-instance v8, Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    .line 77
    new-instance v8, Lcom/android/server/utils/EventLogger;

    const/16 v11, 0x14

    const-string/jumbo v13, "phone state (logged after successful call to AudioSystem.setPhoneState(int, int))"

    invoke-direct {v8, v11, v13}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/utils/EventLogger;

    .line 78
    new-instance v8, Lcom/android/server/utils/EventLogger;

    const-string/jumbo v11, "dynamic policy events (logged when command received by AudioService)"

    invoke-direct {v8, v6, v11}, Lcom/android/server/utils/EventLogger;-><init>(ILjava/lang/String;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/utils/EventLogger;

    .line 79
    new-instance v8, Landroid/os/RemoteCallbackList;

    invoke-direct {v8}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mPrefMixerAttrDispatcher:Landroid/os/RemoteCallbackList;

    .line 80
    new-instance v8, Ljava/lang/Object;

    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    .line 81
    new-instance v8, Lcom/android/server/audio/AudioService$10;

    invoke-direct {v8, v9}, Lcom/android/server/audio/AudioService$10;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mDynPolicyCallback:Lcom/android/server/audio/AudioService$10;

    .line 82
    new-instance v8, Ljava/util/HashMap;

    invoke-direct {v8}, Ljava/util/HashMap;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 83
    new-instance v8, Ljava/util/HashMap;

    invoke-direct {v8}, Ljava/util/HashMap;-><init>()V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 84
    iput v10, v9, Lcom/android/server/audio/AudioService;->mAudioPolicyCounter:I

    .line 85
    new-instance v8, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    invoke-direct {v8, v9, v10}, Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;-><init>(Lcom/android/server/audio/AudioService;I)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mSamsungReceiver:Lcom/android/server/audio/AudioService$SamsungBroadcastReceiver;

    .line 86
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIsVibrate:Z

    .line 87
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 88
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    .line 89
    filled-new-array {v12, v6, v7}, [I

    move-result-object v7

    iput-object v7, v9, Lcom/android/server/audio/AudioService;->AVC_AFFECTED_STREAMS:[I

    .line 90
    iput v10, v9, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 91
    iput v14, v9, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 92
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 93
    iput v1, v9, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 94
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 95
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mAlarmManager:Landroid/app/AlarmManager;

    .line 96
    iput v10, v9, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    const-wide/16 v7, 0x0

    .line 97
    iput-wide v7, v9, Lcom/android/server/audio/AudioService;->mMuteTime:J

    .line 98
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 99
    iput v4, v9, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 100
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 101
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIsLeBroadCasting:Z

    .line 102
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 103
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 104
    new-instance v1, Lcom/samsung/android/server/audio/DeviceAliasManager;

    invoke-direct {v1}, Lcom/samsung/android/server/audio/DeviceAliasManager;-><init>()V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mDeviceAliasManager:Lcom/samsung/android/server/audio/DeviceAliasManager;

    .line 105
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mExternalVoipModeOwner:Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 106
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 107
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mLiveTranslatorDuringCall:Z

    .line 108
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mLiveTranslatorAllowApps:Ljava/lang/String;

    .line 109
    const-string/jumbo v1, "off"

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mLoopbackState:Ljava/lang/String;

    .line 110
    const-string v1, ""

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mLastLoopbackOn:Ljava/lang/String;

    .line 111
    iput-boolean v12, v9, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 112
    new-instance v1, Landroid/util/SparseIntArray;

    invoke-direct {v1, v5}, Landroid/util/SparseIntArray;-><init>(I)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 113
    iput v6, v9, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 114
    iput v10, v9, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 115
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1, v12}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 116
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 117
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 118
    new-instance v1, Lcom/android/server/audio/AudioService$11;

    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService$11;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mRecordEventChecker:Lcom/android/server/audio/AudioService$11;

    .line 119
    iput v14, v9, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    .line 120
    iput v14, v9, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    .line 121
    new-instance v1, Lcom/android/server/audio/AudioService$11;

    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService$11;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mMultiSoundInterface:Lcom/android/server/audio/AudioService$11;

    .line 122
    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 123
    new-instance v1, Lcom/android/server/audio/AudioService$13;

    .line 124
    invoke-direct {v1}, Lcom/samsung/android/server/audio/FrequentWorker;-><init>()V

    const/16 v2, 0x1f4

    .line 125
    iput v2, v1, Lcom/samsung/android/server/audio/FrequentWorker;->mPeriodMs:I

    .line 126
    sget-object v2, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    iput-object v2, v1, Lcom/samsung/android/server/audio/FrequentWorker;->mCachedValue:Ljava/lang/Object;

    .line 127
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/android/server/audio/AudioService$13;

    .line 128
    iput v14, v9, Lcom/android/server/audio/AudioService;->mLastVolumeChangedIntentDevice:I

    .line 129
    new-instance v1, Landroid/net/Uri$Builder;

    invoke-direct {v1}, Landroid/net/Uri$Builder;-><init>()V

    const-string/jumbo v2, "content"

    invoke-virtual {v1, v2}, Landroid/net/Uri$Builder;->scheme(Ljava/lang/String;)Landroid/net/Uri$Builder;

    move-result-object v1

    const-string v2, "androidx.car.app.connection"

    invoke-virtual {v1, v2}, Landroid/net/Uri$Builder;->authority(Ljava/lang/String;)Landroid/net/Uri$Builder;

    move-result-object v1

    invoke-virtual {v1}, Landroid/net/Uri$Builder;->build()Landroid/net/Uri;

    move-result-object v1

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->PROJECTION_HOST_URI:Landroid/net/Uri;

    .line 130
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mConnectedAndroidAuto:Z

    .line 131
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 132
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 133
    sget-object v1, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    const-string v4, "AudioService()"

    invoke-direct {v2, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 134
    iput-object v0, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 135
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    move-object/from16 v1, p7

    .line 136
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    .line 137
    iput-object v3, v9, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    move-object/from16 v1, p3

    .line 138
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    move-object/from16 v1, p5

    .line 139
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioVolumeGroupHelper:Lcom/android/server/audio/AudioVolumeGroupHelperBase;

    move-object/from16 v1, p4

    .line 140
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    move-object/from16 v1, p6

    .line 141
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioPolicy:Lcom/android/server/audio/DefaultAudioPolicyFacade;

    .line 142
    new-instance v1, Landroid/os/HandlerThread;

    const-string v2, "AudioService Broadcast"

    invoke-direct {v1, v2}, Landroid/os/HandlerThread;-><init>(Ljava/lang/String;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 143
    invoke-virtual {v1}, Landroid/os/HandlerThread;->start()V

    .line 144
    invoke-static/range {p1 .. p1}, Lcom/samsung/android/server/audio/utils/PlatformTypeUtils;->getPlatformType(Landroid/content/Context;)I

    move-result v1

    iput v1, v9, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 145
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eq v1, v12, :cond_0

    move v4, v12

    goto :goto_0

    :cond_0
    move v4, v10

    :goto_0
    or-int/2addr v2, v4

    sput-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-ne v1, v12, :cond_1

    .line 146
    sput-boolean v10, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 147
    :cond_1
    new-instance v4, Lcom/android/server/audio/AudioDeviceBroker;

    invoke-direct {v4, v0, v9, v3}, Lcom/android/server/audio/AudioDeviceBroker;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioSystemAdapter;)V

    iput-object v4, v9, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 148
    invoke-static/range {p1 .. p1}, Landroid/media/AudioSystem;->isSingleVolume(Landroid/content/Context;)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 149
    const-class v1, Lcom/android/server/pm/UserManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/UserManagerInternal;

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

    .line 150
    const-class v1, Landroid/app/ActivityManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/ActivityManagerInternal;

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    .line 151
    const-class v1, Landroid/hardware/SensorPrivacyManagerInternal;

    .line 152
    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/SensorPrivacyManagerInternal;

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mSensorPrivacyManagerInternal:Landroid/hardware/SensorPrivacyManagerInternal;

    .line 153
    const-string/jumbo v1, "power"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/PowerManager;

    .line 154
    const-string/jumbo v2, "handleAudioEvent"

    invoke-virtual {v1, v12, v2}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v1

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 155
    new-instance v1, Lcom/android/server/audio/SoundEffectsHelper;

    new-instance v2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;

    invoke-direct {v2, v10, v9}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;-><init>(ILjava/lang/Object;)V

    invoke-direct {v1, v0, v2}, Lcom/android/server/audio/SoundEffectsHelper;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    .line 156
    const-string/jumbo v1, "ro.audio.spatializer_binaural_enabled_default"

    invoke-static {v1, v12}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v5

    .line 157
    const-string/jumbo v1, "ro.audio.spatializer_transaural_enabled_default"

    invoke-static {v1, v12}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v6

    .line 158
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x111023b

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v7

    .line 159
    new-instance v8, Lcom/android/server/audio/SpatializerHelper;

    move-object v1, v8

    move-object/from16 v2, p0

    move-object/from16 v3, p2

    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/SpatializerHelper;-><init>(Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioSystemAdapter;Lcom/android/server/audio/AudioDeviceBroker;ZZZ)V

    iput-object v8, v9, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 160
    const-string/jumbo v1, "vibrator"

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/os/Vibrator;

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mVibrator:Landroid/os/Vibrator;

    if-nez v1, :cond_2

    move v1, v10

    goto :goto_1

    .line 161
    :cond_2
    invoke-virtual {v1}, Landroid/os/Vibrator;->hasVibrator()Z

    move-result v1

    :goto_1
    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 162
    const-class v1, Landroid/hardware/SensorPrivacyManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/SensorPrivacyManager;

    .line 163
    invoke-virtual {v1, v12}, Landroid/hardware/SensorPrivacyManager;->supportsSensorToggle(I)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mSupportsMicPrivacyToggle:Z

    .line 164
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x11101ac

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 165
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    .line 166
    const-string/jumbo v1, "ro.config.vc_call_vol_steps"

    invoke-static {v1, v14}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v1

    .line 167
    sget-object v2, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    aget v3, v2, v10

    if-eq v1, v14, :cond_3

    .line 168
    const-string/jumbo v3, "use default ro.config.vc_call_vol_steps "

    const-string v4, "AS.AudioService"

    .line 169
    invoke-static {v1, v3, v4}, Lcom/android/server/DirEncryptService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    goto :goto_2

    :cond_3
    move v1, v3

    .line 170
    :goto_2
    aput v1, v2, v10

    .line 171
    new-instance v1, Lcom/android/server/audio/AudioService$AudioSystemThread;

    invoke-direct {v1, v9}, Lcom/android/server/audio/AudioService$AudioSystemThread;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 172
    invoke-virtual {v1}, Ljava/lang/Thread;->start()V

    .line 173
    monitor-enter p0

    .line 174
    :goto_3
    :try_start_0
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v1, :cond_4

    .line 175
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Ljava/lang/Object;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_3

    :catchall_0
    move-exception v0

    goto/16 :goto_c

    .line 176
    :catch_0
    :try_start_2
    const-string v1, "AS.AudioService"

    const-string v2, "Interrupted while waiting on volume handler."

    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_3

    .line 177
    :cond_4
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 178
    new-instance v2, Lcom/android/server/audio/SoundDoseHelper;

    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    move-object/from16 p2, v2

    move-object/from16 p3, p0

    move-object/from16 p4, v3

    move-object/from16 p5, v1

    move-object/from16 p6, v4

    move-object/from16 p7, v5

    invoke-direct/range {p2 .. p7}, Lcom/android/server/audio/SoundDoseHelper;-><init>(Lcom/android/server/audio/AudioService;Landroid/content/Context;Lcom/android/server/audio/AudioService$AudioHandler;Lcom/android/server/audio/SettingsAdapter;Lcom/android/server/audio/AudioService$VolumeController;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 179
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioSystemCallback:Lcom/android/server/audio/AudioService$1;

    invoke-static {v1}, Landroid/media/AudioSystem;->setErrorCallback(Landroid/media/AudioSystem$ErrorCallback;)V

    .line 180
    invoke-static {}, Lcom/android/server/audio/AudioService;->updateAudioHalPids()V

    .line 181
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/AudioSettingsHelper;

    move-result-object v5

    iput-object v5, v9, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 182
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MIC_MODE_FOR_QUICK_PANEL_UI:Z

    if-eqz v1, :cond_5

    .line 183
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-static {v1}, Lcom/samsung/android/server/audio/MicModeManager;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/MicModeManager;

    move-result-object v1

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 184
    :cond_5
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    if-eqz v1, :cond_7

    .line 185
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    sget-object v2, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mCr:Landroid/content/ContentResolver;

    .line 186
    const-class v2, Lcom/samsung/android/server/audio/LiveTranslatorManager;

    monitor-enter v2

    .line 187
    :try_start_3
    sget-object v3, Lcom/samsung/android/server/audio/LiveTranslatorManager;->sInstance:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    if-nez v3, :cond_6

    .line 188
    new-instance v3, Lcom/samsung/android/server/audio/LiveTranslatorManager;

    invoke-direct {v3, v1}, Lcom/samsung/android/server/audio/LiveTranslatorManager;-><init>(Landroid/content/Context;)V

    sput-object v3, Lcom/samsung/android/server/audio/LiveTranslatorManager;->sInstance:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    goto :goto_4

    :catchall_1
    move-exception v0

    goto :goto_5

    .line 189
    :cond_6
    :goto_4
    sget-object v1, Lcom/samsung/android/server/audio/LiveTranslatorManager;->sInstance:Lcom/samsung/android/server/audio/LiveTranslatorManager;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    monitor-exit v2

    .line 190
    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    goto :goto_6

    .line 191
    :goto_5
    monitor-exit v2

    throw v0

    .line 192
    :cond_7
    :goto_6
    new-instance v11, Lcom/android/server/audio/AudioServiceExt;

    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    iget-object v6, v9, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    iget-object v7, v9, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    iget-object v8, v9, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    move-object v1, v11

    move-object/from16 v2, p1

    move-object/from16 v3, p0

    invoke-direct/range {v1 .. v8}, Lcom/android/server/audio/AudioServiceExt;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService;Lcom/android/server/audio/AudioSystemAdapter;Lcom/samsung/android/server/audio/AudioSettingsHelper;Lcom/android/server/audio/SoundEffectsHelper;Lcom/samsung/android/server/audio/MicModeManager;Lcom/samsung/android/server/audio/LiveTranslatorManager;)V

    iput-object v11, v9, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 193
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x1110274

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 194
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x111003b

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mRingerModeAffectsAlarm:Z

    .line 195
    new-instance v1, Lcom/android/server/audio/RecordingActivityMonitor;

    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v1, v2}, Lcom/android/server/audio/RecordingActivityMonitor;-><init>(Landroid/content/Context;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 196
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mVoiceRecordingActivityMonitor:Lcom/android/server/audio/AudioService$6;

    invoke-virtual {v1, v2, v12}, Lcom/android/server/audio/RecordingActivityMonitor;->registerRecordingCallback(Landroid/media/IRecordingConfigDispatcher;Z)V

    .line 197
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    check-cast v2, Ljava/util/HashSet;

    invoke-virtual {v2}, Ljava/util/HashSet;->clear()V

    .line 198
    new-instance v2, Lcom/samsung/android/server/audio/MultiSoundManager;

    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mMultiSoundInterface:Lcom/android/server/audio/AudioService$11;

    iget-object v5, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    iget-object v6, v9, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-direct {v2, v3, v4, v5, v6}, Lcom/samsung/android/server/audio/MultiSoundManager;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService$11;Landroid/os/Handler;Lcom/android/server/audio/AudioSystemAdapter;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 199
    const-string v2, "AS.AudioService"

    invoke-virtual {v9, v2, v10}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(Ljava/lang/String;Z)V

    .line 200
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readPersistedSettings()V

    .line 201
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->readUserRestrictions()V

    .line 202
    new-instance v2, Lcom/android/server/audio/LoudnessCodecHelper;

    invoke-direct {v2, v9}, Lcom/android/server/audio/LoudnessCodecHelper;-><init>(Lcom/android/server/audio/AudioService;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 203
    new-instance v2, Lcom/android/server/audio/PlaybackActivityMonitor;

    sget-object v3, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    const/4 v4, 0x4

    aget v3, v3, v4

    new-instance v4, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;

    invoke-direct {v4, v12, v9}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;-><init>(ILjava/lang/Object;)V

    invoke-direct {v2, v0, v3, v4, v9}, Lcom/android/server/audio/PlaybackActivityMonitor;-><init>(Landroid/content/Context;ILcom/android/server/audio/AudioService$$ExternalSyntheticLambda16;Lcom/android/server/audio/AudioService;)V

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 204
    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mPlaybackActivityMonitor:Lcom/android/server/audio/AudioService$5;

    invoke-virtual {v2, v3, v12}, Lcom/android/server/audio/PlaybackActivityMonitor;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;Z)V

    .line 205
    new-instance v3, Lcom/android/server/audio/MediaFocusControl;

    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-direct {v3, v4, v2, v9}, Lcom/android/server/audio/MediaFocusControl;-><init>(Landroid/content/Context;Lcom/android/server/audio/PlaybackActivityMonitor;Lcom/android/server/audio/AudioService;)V

    iput-object v3, v9, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 206
    invoke-static {}, Lcom/android/server/audio/AudioService;->readAndSetLowRamDevice()V

    .line 207
    invoke-static {}, Landroid/media/AudioSystem;->isCallScreeningModeSupported()Z

    move-result v2

    iput-boolean v2, v9, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 208
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 209
    const-class v2, Landroid/media/AudioManagerInternal;

    new-instance v3, Lcom/android/server/audio/AudioService$AudioServiceInternal;

    invoke-direct {v3, v9}, Lcom/android/server/audio/AudioService$AudioServiceInternal;-><init>(Lcom/android/server/audio/AudioService;)V

    invoke-static {v2, v3}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 210
    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mUserRestrictionsListener:Lcom/android/server/audio/AudioService$11;

    invoke-virtual {v2, v3}, Lcom/android/server/pm/UserManagerInternal;->addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V

    .line 211
    invoke-static {v1}, Landroid/media/AudioSystem;->setRecordingCallback(Landroid/media/AudioSystem$AudioRecordingCallback;)V

    .line 212
    const-string/jumbo v1, "ro.audio.monitorRotation"

    invoke-static {v1, v10}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    .line 213
    const-string/jumbo v1, "ro.audio.spatializer_enabled"

    invoke-static {v1, v10}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v9, Lcom/android/server/audio/AudioService;->mHasSpatializerEffect:Z

    .line 214
    sget-object v1, Lcom/android/server/audio/AudioSystemAdapter;->sRoutingListenerLock:Ljava/lang/Object;

    monitor-enter v1

    .line 215
    :try_start_4
    sput-object v9, Lcom/android/server/audio/AudioSystemAdapter;->sRoutingListener:Lcom/android/server/audio/AudioSystemAdapter$OnRoutingUpdatedListener;

    .line 216
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 217
    sget-object v2, Lcom/android/server/audio/AudioSystemAdapter;->sVolRangeInitReqListenerLock:Ljava/lang/Object;

    monitor-enter v2

    .line 218
    :try_start_5
    sput-object v9, Lcom/android/server/audio/AudioSystemAdapter;->sVolRangeInitReqListener:Lcom/android/server/audio/AudioSystemAdapter$OnVolRangeInitRequestListener;

    .line 219
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 220
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x65

    invoke-virtual {v9, v1, v2, v10, v10}, Lcom/android/server/audio/AudioService;->queueMsgUnderWakeLock(Landroid/os/Handler;III)V

    .line 221
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x67

    invoke-virtual {v9, v1, v2, v10, v10}, Lcom/android/server/audio/AudioService;->queueMsgUnderWakeLock(Landroid/os/Handler;III)V

    .line 222
    iget-object v1, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x66

    invoke-virtual {v9, v1, v2, v10, v10}, Lcom/android/server/audio/AudioService;->queueMsgUnderWakeLock(Landroid/os/Handler;III)V

    .line 223
    const-class v1, Landroid/hardware/display/DisplayManager;

    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/hardware/display/DisplayManager;

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 224
    new-instance v1, Lcom/android/server/audio/MusicFxHelper;

    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    invoke-direct {v1, v2, v3}, Lcom/android/server/audio/MusicFxHelper;-><init>(Landroid/content/Context;Lcom/android/server/audio/AudioService$AudioHandler;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mMusicFxHelper:Lcom/android/server/audio/MusicFxHelper;

    .line 225
    new-instance v1, Lcom/android/server/audio/HardeningEnforcer;

    iget-object v2, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 226
    iget v3, v9, Lcom/android/server/audio/AudioService;->mPlatformType:I

    const/4 v4, 0x3

    if-ne v3, v4, :cond_8

    move v3, v12

    goto :goto_7

    :cond_8
    move v3, v10

    .line 227
    :goto_7
    iget-object v4, v9, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    .line 228
    invoke-virtual/range {p1 .. p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v0

    invoke-direct {v1, v2, v3, v4, v0}, Lcom/android/server/audio/HardeningEnforcer;-><init>(Landroid/content/Context;ZLandroid/app/AppOpsManager;Landroid/content/pm/PackageManager;)V

    iput-object v1, v9, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    const-wide/16 v0, 0x100

    .line 229
    const-string/jumbo v2, "setupCustomRoutine"

    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 230
    const-string/jumbo v0, "start setupCustomRoutine"

    const-string v1, "AS.AudioService"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 231
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v2, "alarm"

    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/AlarmManager;

    iput-object v0, v9, Lcom/android/server/audio/AudioService;->mAlarmManager:Landroid/app/AlarmManager;

    .line 232
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_KEY_SUPPORT_SILENT:Z

    const/16 v2, 0x190

    if-eqz v0, :cond_9

    .line 233
    new-instance v0, Landroid/media/VolumePolicy;

    invoke-direct {v0, v12, v12, v12, v2}, Landroid/media/VolumePolicy;-><init>(ZZZI)V

    iput-object v0, v9, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    goto :goto_8

    .line 234
    :cond_9
    new-instance v0, Landroid/media/VolumePolicy;

    iget-boolean v3, v9, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    xor-int/2addr v3, v12

    invoke-direct {v0, v3, v12, v12, v2}, Landroid/media/VolumePolicy;-><init>(ZZZI)V

    iput-object v0, v9, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 235
    :goto_8
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    const-string/jumbo v2, "sec_volume_steps"

    invoke-static {v0, v2}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    if-eqz v0, :cond_c

    .line 236
    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-nez v2, :cond_a

    goto :goto_b

    .line 237
    :cond_a
    :try_start_6
    const-string v2, ","

    invoke-virtual {v0, v2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    .line 238
    array-length v2, v0

    new-array v2, v2, [I

    iput-object v2, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    move v2, v10

    .line 239
    :goto_9
    array-length v3, v0

    if-ge v2, v3, :cond_b

    .line 240
    iget-object v3, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    aget-object v4, v0, v2

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v4

    aput v4, v3, v2

    add-int/2addr v2, v12

    goto :goto_9

    :catch_1
    move-exception v0

    goto :goto_a

    .line 241
    :cond_b
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    invoke-virtual {v9, v0}, Lcom/android/server/audio/AudioService;->createVariableMediaVolumeMap([I)V
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_1

    goto :goto_b

    .line 242
    :goto_a
    const-string/jumbo v2, "reloadVariableMediaVolumeSteps"

    invoke-static {v1, v2, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 243
    :cond_c
    :goto_b
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    const-string/jumbo v2, "speaker_media_index"

    invoke-virtual {v0, v14, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    move-result v0

    iput v0, v9, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 244
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 245
    const-string v2, "_key"

    const-string v3, "_value"

    filled-new-array {v2, v3}, [Ljava/lang/String;

    move-result-object v2

    const-string v3, "audio_settings"

    const-string v4, "_key=\'mute_media_by_vibrate_or_silent_mode\'"

    invoke-virtual {v0, v3, v2, v4, v14}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getInt(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;I)I

    move-result v0

    if-lez v0, :cond_d

    move v10, v12

    .line 246
    :cond_d
    iput-boolean v10, v9, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 247
    iget-object v0, v9, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 248
    new-instance v0, Lcom/samsung/android/server/audio/SemAudioServiceInternal;

    .line 249
    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    .line 250
    new-instance v2, Ljava/lang/ref/WeakReference;

    invoke-direct {v2, v9}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    iput-object v2, v0, Lcom/samsung/android/server/audio/SemAudioServiceInternal;->mAudioService:Ljava/lang/ref/WeakReference;

    .line 251
    const-class v2, Lcom/samsung/android/server/audio/SemAudioServiceInternal;

    invoke-static {v2, v0}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 252
    const-string/jumbo v0, "end setupCustomRoutine"

    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 253
    invoke-static {}, Landroid/os/Trace;->endSection()V

    return-void

    :catchall_2
    move-exception v0

    .line 254
    :try_start_7
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    throw v0

    :catchall_3
    move-exception v0

    .line 255
    :try_start_8
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    throw v0

    .line 256
    :goto_c
    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    throw v0

    nop

    :array_0
    .array-data 4
        0x0
        0x1
        0x2
        0x3
        0x4
        0x2
        0x6
        0x7
        0x2
        0x3
        0x3
        0x3
    .end array-data

    :array_1
    .array-data 4
        0x3
        0x3
        0x3
        0x3
        0x3
        0x3
        0x6
        0x3
        0x3
        0x3
        0x3
        0x3
    .end array-data

    :array_2
    .array-data 4
        0x0
        0x1
        0x2
        0x3
        0x4
        0x5
        0x6
        0x7
        0x8
        0x9
        0xa
        0xb
    .end array-data

    :array_3
    .array-data 4
        0x0
        0x1
        0x2
        0x3
        0x4
        0x2
        0x6
        0x7
        0x2
        0x3
        0x3
        0x3
    .end array-data
.end method

.method public static anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;
    .locals 2

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    .line 3
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 6
    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 9
    move-result-object p0

    .line 10
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 13
    move-result v1

    .line 14
    if-eqz v1, :cond_0

    .line 16
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 19
    move-result-object v1

    .line 20
    check-cast v1, Landroid/media/AudioDeviceAttributes;

    .line 22
    invoke-static {v1}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesUnchecked(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 25
    move-result-object v1

    .line 26
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 29
    goto :goto_0

    .line 30
    :cond_0
    return-object v0
.end method

.method public static anonymizeAudioDeviceAttributesUnchecked(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 4
    move-result v0

    .line 5
    invoke-static {v0}, Landroid/media/AudioSystem;->isBluetoothDevice(I)Z

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    return-object p0

    .line 12
    :cond_0
    new-instance v0, Landroid/media/AudioDeviceAttributes;

    .line 14
    invoke-direct {v0, p0}, Landroid/media/AudioDeviceAttributes;-><init>(Landroid/media/AudioDeviceAttributes;)V

    .line 17
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 20
    move-result-object p0

    .line 21
    invoke-static {p0}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 24
    move-result-object p0

    .line 25
    invoke-virtual {v0, p0}, Landroid/media/AudioDeviceAttributes;->setAddress(Ljava/lang/String;)V

    .line 28
    return-object v0
.end method

.method public static dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;
    .locals 3

    .line 1
    invoke-interface {p0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 4
    move-result-object p0

    .line 5
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    const-string p0, ""

    .line 13
    return-object p0

    .line 14
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 16
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 19
    new-instance v1, Ljava/lang/StringBuilder;

    .line 21
    const-string v2, "0x"

    .line 23
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 26
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 29
    move-result-object v2

    .line 30
    check-cast v2, Ljava/lang/Integer;

    .line 32
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 35
    move-result v2

    .line 36
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 39
    move-result-object v2

    .line 40
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 43
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 46
    move-result-object v1

    .line 47
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 50
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 53
    move-result v1

    .line 54
    if-eqz v1, :cond_1

    .line 56
    new-instance v1, Ljava/lang/StringBuilder;

    .line 58
    const-string v2, ",0x"

    .line 60
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 63
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 66
    move-result-object v2

    .line 67
    check-cast v2, Ljava/lang/Integer;

    .line 69
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 72
    move-result v2

    .line 73
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 76
    move-result-object v2

    .line 77
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 80
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 83
    move-result-object v1

    .line 84
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 87
    goto :goto_0

    .line 88
    :cond_1
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 91
    move-result-object p0

    .line 92
    return-object p0
.end method

.method public static dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .locals 7

    .line 1
    const-string v0, "- ringer mode "

    .line 3
    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 6
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 9
    const-string p1, " streams = 0x"

    .line 11
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14
    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 17
    move-result-object p1

    .line 18
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 21
    if-eqz p2, :cond_5

    .line 23
    const-string p1, " ("

    .line 25
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 28
    const/4 p1, 0x1

    .line 29
    const/4 v0, 0x0

    .line 30
    move v2, p1

    .line 31
    move v1, v0

    .line 32
    :goto_0
    sget-object v3, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    .line 34
    array-length v4, v3

    .line 35
    const/16 v5, 0x2c

    .line 37
    if-ge v1, v4, :cond_2

    .line 39
    shl-int v4, p1, v1

    .line 41
    and-int v6, p2, v4

    .line 43
    if-eqz v6, :cond_1

    .line 45
    if-nez v2, :cond_0

    .line 47
    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(C)V

    .line 50
    :cond_0
    aget-object v2, v3, v1

    .line 52
    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 55
    not-int v2, v4

    .line 56
    and-int/2addr p2, v2

    .line 57
    move v2, v0

    .line 58
    :cond_1
    add-int/lit8 v1, v1, 0x1

    .line 60
    goto :goto_0

    .line 61
    :cond_2
    if-eqz p2, :cond_4

    .line 63
    if-nez v2, :cond_3

    .line 65
    invoke-virtual {p0, v5}, Ljava/io/PrintWriter;->print(C)V

    .line 68
    :cond_3
    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(I)V

    .line 71
    :cond_4
    const/16 p1, 0x29

    .line 73
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(C)V

    .line 76
    :cond_5
    invoke-virtual {p0}, Ljava/io/PrintWriter;->println()V

    .line 79
    return-void
.end method

.method public static ensureValidAttributes(Landroid/media/audiopolicy/AudioVolumeGroup;)V
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/audiopolicy/AudioVolumeGroup;->getAudioAttributes()Ljava/util/List;

    .line 4
    move-result-object v0

    .line 5
    invoke-interface {v0}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 8
    move-result-object v0

    .line 9
    new-instance v1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;

    .line 11
    const/4 v2, 0x1

    .line 12
    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;-><init>(I)V

    .line 15
    invoke-interface {v0, v1}, Ljava/util/stream/Stream;->anyMatch(Ljava/util/function/Predicate;)Z

    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_0

    .line 21
    return-void

    .line 22
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 24
    new-instance v1, Ljava/lang/StringBuilder;

    .line 26
    const-string v2, "Volume Group "

    .line 28
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 31
    invoke-virtual {p0}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 34
    move-result-object p0

    .line 35
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 38
    const-string p0, " has no valid audio attributes"

    .line 40
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 43
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 46
    move-result-object p0

    .line 47
    invoke-direct {v0, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 50
    throw v0
.end method

.method public static ensureValidDirection(I)V
    .locals 2

    .line 1
    const/16 v0, -0x64

    .line 3
    if-eq p0, v0, :cond_1

    .line 5
    const/4 v0, -0x1

    .line 6
    if-eq p0, v0, :cond_1

    .line 8
    if-eqz p0, :cond_1

    .line 10
    const/4 v0, 0x1

    .line 11
    if-eq p0, v0, :cond_1

    .line 13
    const/16 v0, 0x64

    .line 15
    if-eq p0, v0, :cond_1

    .line 17
    const/16 v0, 0x65

    .line 19
    if-ne p0, v0, :cond_0

    .line 21
    goto :goto_0

    .line 22
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 24
    const-string v1, "Bad direction "

    .line 26
    invoke-static {p0, v1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 29
    move-result-object p0

    .line 30
    invoke-direct {v0, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 33
    throw v0

    .line 34
    :cond_1
    :goto_0
    return-void
.end method

.method public static getCurrentUserId()I
    .locals 3

    .line 1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 4
    move-result-wide v0

    .line 5
    :try_start_0
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    .line 8
    move-result-object v2

    .line 9
    invoke-interface {v2}, Landroid/app/IActivityManager;->getCurrentUser()Landroid/content/pm/UserInfo;

    .line 12
    move-result-object v2

    .line 13
    iget v2, v2, Landroid/content/pm/UserInfo;->id:I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 18
    return v2

    .line 19
    :catchall_0
    move-exception v2

    .line 20
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23
    throw v2

    .line 24
    :catch_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 27
    const/4 v0, 0x0

    .line 28
    return v0
.end method

.method public static getIndexDividedBy10(II)I
    .locals 1

    .line 1
    const/4 v0, 0x3

    .line 2
    if-ne p1, v0, :cond_0

    .line 4
    add-int/lit8 p0, p0, 0x9

    .line 6
    div-int/lit8 p0, p0, 0xa

    .line 8
    return p0

    .line 9
    :cond_0
    add-int/lit8 p0, p0, 0x5

    .line 11
    div-int/lit8 p0, p0, 0xa

    .line 13
    return p0
.end method

.method public static isMuteAdjust(I)Z
    .locals 1

    .line 1
    const/16 v0, -0x64

    .line 3
    if-eq p0, v0, :cond_1

    .line 5
    const/16 v0, 0x64

    .line 7
    if-eq p0, v0, :cond_1

    .line 9
    const/16 v0, 0x65

    .line 11
    if-ne p0, v0, :cond_0

    .line 13
    goto :goto_0

    .line 14
    :cond_0
    const/4 p0, 0x0

    .line 15
    goto :goto_1

    .line 16
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 17
    :goto_1
    return p0
.end method

.method public static isStreamMutedByRingerOrZenMode(I)Z
    .locals 2

    .line 1
    sget v0, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 3
    const/4 v1, 0x1

    .line 4
    shl-int p0, v1, p0

    .line 6
    and-int/2addr p0, v0

    .line 7
    if-eqz p0, :cond_0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 v1, 0x0

    .line 11
    :goto_0
    return v1
.end method

.method public static isSurroundFormat(I)Z
    .locals 5

    .line 1
    sget-object v0, Landroid/media/AudioFormat;->SURROUND_SOUND_ENCODING:[I

    .line 3
    array-length v1, v0

    .line 4
    const/4 v2, 0x0

    .line 5
    move v3, v2

    .line 6
    :goto_0
    if-ge v3, v1, :cond_1

    .line 8
    aget v4, v0, v3

    .line 10
    if-ne v4, p0, :cond_0

    .line 12
    const/4 p0, 0x1

    .line 13
    return p0

    .line 14
    :cond_0
    add-int/lit8 v3, v3, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_1
    return v2
.end method

.method public static readAndSetLowRamDevice()V
    .locals 4

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    .line 6
    move-result v1

    .line 7
    :try_start_0
    new-instance v2, Landroid/app/ActivityManager$MemoryInfo;

    .line 9
    invoke-direct {v2}, Landroid/app/ActivityManager$MemoryInfo;-><init>()V

    .line 12
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    .line 15
    move-result-object v3

    .line 16
    invoke-interface {v3, v2}, Landroid/app/IActivityManager;->getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V

    .line 19
    iget-wide v2, v2, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 21
    goto :goto_0

    .line 22
    :catch_0
    const-string v1, "Cannot obtain MemoryInfo from ActivityManager, assume low memory device"

    .line 24
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27
    const-wide/32 v2, 0x40000000

    .line 30
    const/4 v1, 0x1

    .line 31
    :goto_0
    invoke-static {v1, v2, v3}, Landroid/media/AudioSystem;->setLowRamDevice(ZJ)I

    .line 34
    move-result v1

    .line 35
    if-eqz v1, :cond_0

    .line 37
    const-string v2, "AudioFlinger informed of device\'s low RAM attribute; status "

    .line 39
    invoke-static {v1, v2, v0}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 42
    :cond_0
    return-void
.end method

.method public static rescaleIndex(IIIII)I
    .locals 0

    sub-int/2addr p2, p1

    sub-int/2addr p4, p3

    if-nez p2, :cond_0

    .line 19
    const-string p0, "AS.AudioService"

    const-string/jumbo p1, "rescaleIndex : index range should not be zero"

    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    return p3

    :cond_0
    sub-int/2addr p0, p1

    mul-int/2addr p0, p4

    .line 20
    div-int/lit8 p1, p2, 0x2

    add-int/2addr p1, p0

    div-int/2addr p1, p2

    add-int/2addr p1, p3

    return p1
.end method

.method public static sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V
    .locals 4

    .line 1
    if-nez p2, :cond_0

    .line 3
    invoke-virtual {p0, p1}, Landroid/os/Handler;->removeMessages(I)V

    .line 6
    goto :goto_0

    .line 7
    :cond_0
    const/4 v0, 0x1

    .line 8
    if-ne p2, v0, :cond_1

    .line 10
    invoke-virtual {p0, p1}, Landroid/os/Handler;->hasMessages(I)Z

    .line 13
    move-result p2

    .line 14
    if-eqz p2, :cond_1

    .line 16
    return-void

    .line 17
    :cond_1
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 20
    move-result-wide v0

    .line 21
    int-to-long v2, p6

    .line 22
    add-long/2addr v0, v2

    .line 23
    invoke-virtual {p0, p1, p3, p4, p5}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 26
    move-result-object p1

    .line 27
    invoke-virtual {p0, p1, v0, v1}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 30
    return-void
.end method

.method public static updateAudioHalPids()V
    .locals 7

    .line 1
    const-string v0, "android.hardware.audio"

    .line 3
    new-instance v1, Ljava/util/HashSet;

    .line 5
    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    .line 8
    :try_start_0
    invoke-static {}, Landroid/os/ServiceManager;->getServiceDebugInfo()[Landroid/os/ServiceDebugInfo;

    .line 11
    move-result-object v2

    .line 12
    if-nez v2, :cond_0

    .line 14
    goto :goto_1

    .line 15
    :cond_0
    array-length v3, v2

    .line 16
    const/4 v4, 0x0

    .line 17
    :goto_0
    if-ge v4, v3, :cond_2

    .line 19
    aget-object v5, v2, v4

    .line 21
    iget v6, v5, Landroid/os/ServiceDebugInfo;->debugPid:I

    .line 23
    if-lez v6, :cond_1

    .line 25
    iget-object v6, v5, Landroid/os/ServiceDebugInfo;->name:Ljava/lang/String;

    .line 27
    invoke-virtual {v6, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 30
    move-result v6

    .line 31
    if-eqz v6, :cond_1

    .line 33
    iget v5, v5, Landroid/os/ServiceDebugInfo;->debugPid:I

    .line 35
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 38
    move-result-object v5

    .line 39
    invoke-virtual {v1, v5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_0} :catch_0

    .line 42
    :cond_1
    add-int/lit8 v4, v4, 0x1

    .line 44
    goto :goto_0

    .line 45
    :catch_0
    :cond_2
    :goto_1
    :try_start_1
    invoke-static {}, Landroid/hidl/manager/V1_0/IServiceManager;->getService()Landroid/hidl/manager/V1_0/IServiceManager;

    .line 48
    move-result-object v2

    .line 49
    invoke-interface {v2}, Landroid/hidl/manager/V1_0/IServiceManager;->debugDump()Ljava/util/ArrayList;

    .line 52
    move-result-object v2

    .line 53
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 56
    move-result-object v2

    .line 57
    :cond_3
    :goto_2
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 60
    move-result v3

    .line 61
    if-eqz v3, :cond_4

    .line 63
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 66
    move-result-object v3

    .line 67
    check-cast v3, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;

    .line 69
    iget v4, v3, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->pid:I

    .line 71
    const/4 v5, -0x1

    .line 72
    if-eq v4, v5, :cond_3

    .line 74
    iget-object v4, v3, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->interfaceName:Ljava/lang/String;

    .line 76
    if-eqz v4, :cond_3

    .line 78
    invoke-virtual {v4, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 81
    move-result v4

    .line 82
    if-eqz v4, :cond_3

    .line 84
    iget v3, v3, Landroid/hidl/manager/V1_0/IServiceManager$InstanceDebugInfo;->pid:I

    .line 86
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 89
    move-result-object v3

    .line 90
    invoke-virtual {v1, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_1

    .line 93
    goto :goto_2

    .line 94
    :catch_1
    :cond_4
    invoke-virtual {v1}, Ljava/util/HashSet;->isEmpty()Z

    .line 97
    move-result v0

    .line 98
    if-eqz v0, :cond_5

    .line 100
    const-string v0, "AS.AudioService"

    .line 102
    const-string v1, "Could not retrieve audio HAL service pids"

    .line 104
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 107
    return-void

    .line 108
    :cond_5
    invoke-interface {v1}, Ljava/util/Set;->stream()Ljava/util/stream/Stream;

    .line 111
    move-result-object v0

    .line 112
    new-instance v1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 114
    const/4 v2, 0x2

    .line 115
    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 118
    invoke-interface {v0, v1}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 121
    move-result-object v0

    .line 122
    invoke-interface {v0}, Ljava/util/stream/IntStream;->toArray()[I

    .line 125
    move-result-object v0

    .line 126
    invoke-static {v0}, Landroid/media/AudioSystem;->setAudioHalPids([I)I

    .line 129
    return-void
.end method

.method public static updateDefaultStreamOverrideDelay(Z)V
    .locals 3

    .line 1
    if-eqz p0, :cond_0

    .line 3
    const/16 v0, 0x3e8

    .line 5
    sput v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 7
    goto :goto_0

    .line 8
    :cond_0
    const/4 v0, 0x0

    .line 9
    sput v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 11
    :goto_0
    const-string v0, "Touch exploration enabled="

    .line 13
    const-string v1, " stream override delay is now "

    .line 15
    invoke-static {v0, v1, p0}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 18
    move-result-object p0

    .line 19
    sget v0, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 21
    const-string v1, " ms"

    .line 23
    const-string v2, "AS.AudioService"

    .line 25
    invoke-static {p0, v0, v1, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/String;)V

    .line 28
    return-void
.end method


# virtual methods
.method public final abandonAudioFocus(Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)I
    .locals 2

    .line 1
    new-instance p1, Landroid/media/MediaMetrics$Item;

    .line 3
    const-string v0, "audio.service.focus"

    .line 5
    invoke-direct {p1, v0}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 8
    sget-object v0, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 10
    invoke-virtual {p1, v0, p4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 13
    move-result-object p1

    .line 14
    sget-object v0, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 16
    invoke-virtual {p1, v0, p2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 19
    move-result-object p1

    .line 20
    sget-object v0, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 22
    const-string v1, "abandonAudioFocus"

    .line 24
    invoke-virtual {p1, v0, v1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 27
    move-result-object p1

    .line 28
    if-eqz p3, :cond_0

    .line 30
    invoke-virtual {p0, p3}, Lcom/android/server/audio/AudioService;->isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z

    .line 33
    move-result v0

    .line 34
    if-nez v0, :cond_0

    .line 36
    const-string p0, "AS.AudioService"

    .line 38
    const-string p2, "Request using unsupported usage."

    .line 40
    invoke-static {p0, p2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 43
    sget-object p0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 45
    const-string/jumbo p2, "unsupported usage"

    .line 48
    invoke-virtual {p1, p0, p2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 51
    move-result-object p0

    .line 52
    invoke-virtual {p0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 55
    const/4 p0, 0x0

    .line 56
    return p0

    .line 57
    :cond_0
    invoke-virtual {p1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 60
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 62
    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/audio/MediaFocusControl;->abandonAudioFocus(Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)V

    .line 65
    const/4 p0, 0x1

    .line 66
    return p0
.end method

.method public final abandonAudioFocusForTest(Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)I
    .locals 0

    .line 1
    const-string/jumbo p1, "focus abandon"

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->enforceQueryAudioStateForTest(Ljava/lang/String;)Z

    .line 7
    move-result p1

    .line 8
    if-nez p1, :cond_0

    .line 10
    const/4 p0, 0x0

    .line 11
    return p0

    .line 12
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 14
    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/audio/MediaFocusControl;->abandonAudioFocus(Ljava/lang/String;Landroid/media/AudioAttributes;Ljava/lang/String;)V

    .line 17
    const/4 p0, 0x1

    .line 18
    return p0
.end method

.method public final addAssistantServiceUidsLocked([I)V
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    move v1, v0

    .line 3
    :goto_0
    array-length v2, p1

    .line 4
    if-ge v0, v2, :cond_2

    .line 6
    aget v2, p1, v0

    .line 8
    const/4 v3, -0x1

    .line 9
    if-ne v2, v3, :cond_0

    .line 11
    goto :goto_1

    .line 12
    :cond_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 14
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 17
    move-result-object v2

    .line 18
    invoke-virtual {v3, v2}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 21
    move-result v2

    .line 22
    if-nez v2, :cond_1

    .line 24
    aget v2, p1, v0

    .line 26
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 29
    move-result-object v2

    .line 30
    filled-new-array {v2}, [Ljava/lang/Object;

    .line 33
    move-result-object v2

    .line 34
    const-string v3, "Cannot add assistant service, uid(%d) already present"

    .line 36
    invoke-static {v3, v2}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 39
    move-result-object v2

    .line 40
    const-string v3, "AS.AudioService"

    .line 42
    invoke-static {v3, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 45
    goto :goto_1

    .line 46
    :cond_1
    const/4 v1, 0x1

    .line 47
    :goto_1
    add-int/lit8 v0, v0, 0x1

    .line 49
    goto :goto_0

    .line 50
    :cond_2
    if-eqz v1, :cond_3

    .line 52
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 54
    invoke-virtual {p0}, Landroid/util/ArraySet;->stream()Ljava/util/stream/Stream;

    .line 57
    move-result-object p0

    .line 58
    new-instance p1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 60
    const/4 v0, 0x2

    .line 61
    invoke-direct {p1, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 64
    invoke-interface {p0, p1}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 67
    move-result-object p0

    .line 68
    invoke-interface {p0}, Ljava/util/stream/IntStream;->toArray()[I

    .line 71
    move-result-object p0

    .line 72
    invoke-static {p0}, Landroid/media/AudioSystem;->setAssistantServicesUids([I)I

    .line 75
    :cond_3
    return-void
.end method

.method public final addAssistantServicesUids([I)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->addAssistantServicesUids_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 9
    monitor-enter v0

    .line 10
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->addAssistantServiceUidsLocked([I)V

    .line 13
    monitor-exit v0

    .line 14
    return-void

    .line 15
    :catchall_0
    move-exception p0

    .line 16
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17
    throw p0
.end method

.method public final addLoudnessCodecInfo(IILandroid/media/LoudnessCodecInfo;)V
    .locals 7

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string v0, "Cannot add new loudness info for stopped config "

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 11
    move-result v1

    .line 12
    new-instance v2, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;

    .line 14
    invoke-direct {v2, p1, v1}, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;-><init>(II)V

    .line 17
    iget-object v3, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 19
    monitor-enter v3

    .line 20
    :try_start_0
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 22
    invoke-virtual {v4, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 25
    move-result v4

    .line 26
    if-eqz v4, :cond_5

    .line 28
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 30
    invoke-virtual {v4, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 33
    move-result v4

    .line 34
    if-nez v4, :cond_0

    .line 36
    goto/16 :goto_3

    .line 38
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 40
    invoke-virtual {v0, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 43
    move-result-object v0

    .line 44
    check-cast v0, Ljava/util/Set;

    .line 46
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 48
    invoke-virtual {v4, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 51
    move-result-object v2

    .line 52
    check-cast v2, Ljava/util/Set;

    .line 54
    invoke-interface {v2, p3}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 57
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 58
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 61
    move-result-object v2

    .line 62
    :try_start_1
    new-instance v3, Landroid/os/PersistableBundle;

    .line 64
    invoke-direct {v3}, Landroid/os/PersistableBundle;-><init>()V

    .line 67
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 69
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService;->getActivePlaybackConfigurations()Ljava/util/List;

    .line 72
    move-result-object v4

    .line 73
    invoke-interface {v4}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 76
    move-result-object v4

    .line 77
    new-instance v5, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda1;

    .line 79
    const/4 v6, 0x1

    .line 80
    invoke-direct {v5, p1, v1, v6}, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda1;-><init>(III)V

    .line 83
    invoke-interface {v4, v5}, Ljava/util/stream/Stream;->filter(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;

    .line 86
    move-result-object v1

    .line 87
    invoke-interface {v1}, Ljava/util/stream/Stream;->findFirst()Ljava/util/Optional;

    .line 90
    move-result-object v1

    .line 91
    invoke-virtual {v1}, Ljava/util/Optional;->isEmpty()Z

    .line 94
    move-result v4

    .line 95
    if-eqz v4, :cond_1

    .line 97
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 100
    move-result-object p2

    .line 101
    invoke-virtual {p0, p3}, Lcom/android/server/audio/LoudnessCodecHelper;->getLoudnessParams(Landroid/media/LoudnessCodecInfo;)Landroid/os/PersistableBundle;

    .line 104
    move-result-object p3

    .line 105
    invoke-virtual {v3, p2, p3}, Landroid/os/PersistableBundle;->putPersistableBundle(Ljava/lang/String;Landroid/os/PersistableBundle;)V

    .line 108
    goto :goto_0

    .line 109
    :catchall_0
    move-exception p0

    .line 110
    goto :goto_1

    .line 111
    :cond_1
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    .line 114
    move-result-object v4

    .line 115
    check-cast v4, Landroid/media/AudioPlaybackConfiguration;

    .line 117
    invoke-virtual {v4}, Landroid/media/AudioPlaybackConfiguration;->getAudioDeviceInfo()Landroid/media/AudioDeviceInfo;

    .line 120
    move-result-object v4

    .line 121
    if-eqz v4, :cond_2

    .line 123
    iget-object v5, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 125
    monitor-enter v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 126
    :try_start_2
    invoke-virtual {v1}, Ljava/util/Optional;->get()Ljava/lang/Object;

    .line 129
    move-result-object v1

    .line 130
    check-cast v1, Landroid/media/AudioPlaybackConfiguration;

    .line 132
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getPlayerInterfaceId()I

    .line 135
    move-result v1

    .line 136
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 139
    move-result-object v1

    .line 140
    invoke-interface {v0, v1}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 143
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 146
    move-result-object p2

    .line 147
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->getInternalType()I

    .line 150
    move-result v0

    .line 151
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->getAddress()Ljava/lang/String;

    .line 154
    move-result-object v1

    .line 155
    invoke-virtual {p0, v0, v1, p3}, Lcom/android/server/audio/LoudnessCodecHelper;->getCodecBundle_l(ILjava/lang/String;Landroid/media/LoudnessCodecInfo;)Landroid/os/PersistableBundle;

    .line 158
    move-result-object p3

    .line 159
    invoke-virtual {v3, p2, p3}, Landroid/os/PersistableBundle;->putPersistableBundle(Ljava/lang/String;Landroid/os/PersistableBundle;)V

    .line 162
    monitor-exit v5

    .line 163
    goto :goto_0

    .line 164
    :catchall_1
    move-exception p0

    .line 165
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 166
    :try_start_3
    throw p0

    .line 167
    :cond_2
    :goto_0
    invoke-virtual {v3}, Landroid/os/PersistableBundle;->isDefinitelyEmpty()Z

    .line 170
    move-result p2

    .line 171
    if-nez p2, :cond_3

    .line 173
    invoke-virtual {p0, p1, v3}, Lcom/android/server/audio/LoudnessCodecHelper;->dispatchNewLoudnessParameters(ILandroid/os/PersistableBundle;)V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 176
    :cond_3
    if-eqz v2, :cond_6

    .line 178
    invoke-interface {v2}, Landroid/media/permission/SafeCloseable;->close()V

    .line 181
    goto :goto_4

    .line 182
    :goto_1
    if-eqz v2, :cond_4

    .line 184
    :try_start_4
    invoke-interface {v2}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 187
    goto :goto_2

    .line 188
    :catchall_2
    move-exception p1

    .line 189
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 192
    :cond_4
    :goto_2
    throw p0

    .line 193
    :catchall_3
    move-exception p0

    .line 194
    goto :goto_5

    .line 195
    :cond_5
    :goto_3
    :try_start_5
    const-string p0, "AS.LoudnessCodecHelper"

    .line 197
    new-instance p1, Ljava/lang/StringBuilder;

    .line 199
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 202
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 205
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 208
    move-result-object p1

    .line 209
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 212
    monitor-exit v3

    .line 213
    :cond_6
    :goto_4
    return-void

    .line 214
    :goto_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 215
    throw p0
.end method

.method public final addMixForPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;)I
    .locals 3

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string v2, "addMixForPolicy for "

    .line 7
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 10
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 13
    move-result-object v2

    .line 14
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 17
    const-string v2, " with config:"

    .line 19
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 22
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 25
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 28
    move-result-object v1

    .line 29
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 34
    monitor-enter v0

    .line 35
    :try_start_0
    const-string v1, "Cannot add AudioMix in audio policy"

    .line 37
    invoke-virtual {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 40
    move-result-object p0

    .line 41
    const/4 p2, -0x1

    .line 42
    if-nez p0, :cond_0

    .line 44
    monitor-exit v0

    .line 45
    return p2

    .line 46
    :catchall_0
    move-exception p0

    .line 47
    goto :goto_0

    .line 48
    :cond_0
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 51
    move-result-object p1

    .line 52
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->addMixes(Ljava/util/ArrayList;)I

    .line 55
    move-result p0

    .line 56
    if-nez p0, :cond_1

    .line 58
    const/4 p2, 0x0

    .line 59
    :cond_1
    monitor-exit v0

    .line 60
    return p2

    .line 61
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 62
    throw p0
.end method

.method public final addOnDevicesForAttributesChangedListener(Landroid/media/AudioAttributes;Landroid/media/IDevicesForAttributesCallback;)V
    .locals 5

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    new-instance v0, Landroid/util/Pair;

    .line 8
    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 10
    invoke-direct {v0, p1, v1}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 13
    iget-object v1, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 15
    monitor-enter v1

    .line 16
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 18
    invoke-interface {p2}, Landroid/media/IDevicesForAttributesCallback;->asBinder()Landroid/os/IBinder;

    .line 21
    move-result-object v3

    .line 22
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 25
    move-result-object v2

    .line 26
    check-cast v2, Ljava/util/List;

    .line 28
    if-nez v2, :cond_0

    .line 30
    new-instance v2, Ljava/util/ArrayList;

    .line 32
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 35
    iget-object v3, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 37
    invoke-interface {p2}, Landroid/media/IDevicesForAttributesCallback;->asBinder()Landroid/os/IBinder;

    .line 40
    move-result-object v4

    .line 41
    invoke-virtual {v3, v4, v2}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 44
    iget-object v3, p0, Lcom/android/server/audio/AudioSystemAdapter;->mDevicesForAttributesCallbacks:Landroid/os/RemoteCallbackList;

    .line 46
    invoke-virtual {v3, p2}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 49
    goto :goto_0

    .line 50
    :catchall_0
    move-exception p0

    .line 51
    goto :goto_1

    .line 52
    :cond_0
    :goto_0
    invoke-interface {v2, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    .line 55
    move-result p2

    .line 56
    if-nez p2, :cond_1

    .line 58
    invoke-interface {v2, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 61
    :cond_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 62
    const/4 p2, 0x0

    .line 63
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioSystemAdapter;->getDevicesForAttributes(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 66
    return-void

    .line 67
    :goto_1
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 68
    throw p0
.end method

.method public final addPackage(ILjava/lang/String;)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 4
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 6
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 8
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    invoke-static {p0, p2}, Lcom/samsung/android/server/audio/PackageListHelper;->addPackage(Landroid/content/Context;Ljava/lang/String;)V

    .line 14
    return-void
.end method

.method public final addSamsungExtraDump(Ljava/io/PrintWriter;)V
    .locals 11

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->sRingerModeLogger:Lcom/android/server/utils/EventLogger;

    .line 3
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 6
    sget-object v0, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/utils/EventLogger;

    .line 8
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 11
    sget-object v0, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 13
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 16
    sget-object v0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 18
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 21
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 23
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 26
    sget-object v0, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/utils/EventLogger;

    .line 28
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 31
    const-string v0, "\nAudio Setting:"

    .line 33
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 36
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 38
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 41
    const-string v1, "  mNbQualityMode="

    .line 43
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 46
    iget v1, v0, Lcom/android/server/audio/AudioServiceExt;->mNbQualityMode:I

    .line 48
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 51
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_CALL:Z

    .line 53
    if-eqz v1, :cond_0

    .line 55
    const-string v1, "  mScreenCall="

    .line 57
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 60
    iget-boolean v1, v0, Lcom/android/server/audio/AudioServiceExt;->mScreenCall:Z

    .line 62
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 65
    :cond_0
    const-string v1, "  mMasterMono="

    .line 67
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 70
    iget v1, v0, Lcom/android/server/audio/AudioServiceExt;->mMainMono:I

    .line 72
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 75
    const-string v1, "  mMainBalance="

    .line 77
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 80
    iget v1, v0, Lcom/android/server/audio/AudioServiceExt;->mMainBalance:F

    .line 82
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(F)V

    .line 85
    const-string v1, "  mAdaptSoundEnabled="

    .line 87
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 90
    iget v1, v0, Lcom/android/server/audio/AudioServiceExt;->mAdaptSoundEnabled:I

    .line 92
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 95
    const-string v1, "  mUpscalerEnabled="

    .line 97
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 100
    iget v1, v0, Lcom/android/server/audio/AudioServiceExt;->mUpscalerEnabled:I

    .line 102
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 105
    const-string v1, "  mIsPttCallVolumeEnabled="

    .line 107
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 110
    iget-boolean v1, v0, Lcom/android/server/audio/AudioServiceExt;->mIsPttCallVolumeEnabled:Z

    .line 112
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 115
    const-string v1, "  CPUBoostValueForVoIP="

    .line 117
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 120
    iget-object v1, v0, Lcom/android/server/audio/AudioServiceExt;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 122
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 125
    const/4 v1, 0x0

    .line 126
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 129
    const-string v2, "  mAllSoundMute="

    .line 131
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 134
    iget v2, v0, Lcom/android/server/audio/AudioServiceExt;->mAllSoundMute:I

    .line 136
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 139
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_KARAOKE_LISTENBACK:Z

    .line 141
    if-eqz v2, :cond_1

    .line 143
    const-string v2, "  mKaraokeListenbackEnabled="

    .line 145
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 148
    sget v2, Lcom/android/server/audio/AudioServiceExt;->mKaraokeListenbackEnabled:I

    .line 150
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 153
    :cond_1
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    .line 155
    if-eqz v2, :cond_2

    .line 157
    const-string v2, "  mVolumeMonitorValue="

    .line 159
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 162
    iget v0, v0, Lcom/android/server/audio/AudioServiceExt;->mVolumeMonitorValue:I

    .line 164
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 167
    :cond_2
    const-string v0, "  AudioHqmHelper.ResetCount="

    .line 169
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 172
    sget-boolean v0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCountMaxLimit:Z

    .line 174
    if-eqz v0, :cond_3

    .line 176
    const v0, 0x7fffffff

    .line 179
    goto :goto_0

    .line 180
    :cond_3
    sget v0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCount:I

    .line 182
    :goto_0
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 185
    const-string v0, "  mIsSupportDisplayVolumeControl="

    .line 187
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 190
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 192
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 195
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 198
    const-string v0, "  mIsDLNAEnabled="

    .line 200
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 203
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 205
    iget-boolean v0, v0, Lcom/samsung/android/server/audio/ScreenSharingHelper;->mIsDLNAEnabled:Z

    .line 207
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 210
    const-string v0, "  isTalkBackEnabled="

    .line 212
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 215
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 217
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 220
    const-string v0, "  mAdjustMediaVolumeOnly="

    .line 222
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 225
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 227
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 230
    const-string v0, "  mMuteMediaByVibrateOrSilentMode="

    .line 232
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 235
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 237
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 240
    const-string v0, "  mMediaVolumeStepIndex="

    .line 242
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 245
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 247
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 250
    const-string v0, "  mMediaVolumeSteps="

    .line 252
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 255
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 257
    invoke-static {v0}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    .line 260
    move-result-object v0

    .line 261
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 264
    const-string v0, "  mHeadsetOnlyStream="

    .line 266
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 269
    iget v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 271
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 274
    const-string v0, "  mIgnoreDuckingByNavigation="

    .line 276
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 279
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 281
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 284
    const-string v0, "  mIgnoreDuckingByAllApps="

    .line 286
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 289
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 291
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 294
    const-string v0, "  SEC_AUDIO_SUPPORT_DUAL_SPEAKER="

    .line 296
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 299
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 302
    const-string v0, "  mVolumeLimitOn="

    .line 304
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 307
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 309
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 312
    const-string v0, "  mVolumeLimitValue="

    .line 314
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 317
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 319
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 322
    const-string v0, "  OneUIVersion="

    .line 324
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 327
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 329
    sget v2, Landroid/os/Build$VERSION;->SEM_PLATFORM_INT:I

    .line 331
    const v3, 0x15f90

    .line 334
    sub-int v3, v2, v3

    .line 336
    div-int/lit16 v3, v3, 0x2710

    .line 338
    rem-int/lit16 v2, v2, 0x2710

    .line 340
    div-int/lit8 v2, v2, 0x64

    .line 342
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 345
    move-result-object v0

    .line 346
    const-string/jumbo v4, "com.samsung.feature.samsung_experience_mobile_lite"

    .line 349
    invoke-virtual {v0, v4}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    .line 352
    move-result v0

    .line 353
    if-eqz v0, :cond_4

    .line 355
    const-string/jumbo v0, "core"

    .line 358
    goto :goto_1

    .line 359
    :cond_4
    const-string v0, ""

    .line 361
    :goto_1
    new-instance v4, Ljava/lang/StringBuilder;

    .line 363
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 366
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 369
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 372
    const-string v0, "."

    .line 374
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 377
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 380
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 383
    move-result-object v0

    .line 384
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 387
    const-string v0, "  SEC_AUDIO_SUPPORT_ACH_RINGTONE="

    .line 389
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 392
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_ACH_RINGTONE:Z

    .line 394
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 397
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 399
    const-string v2, "\nMultiSound, size:"

    .line 401
    iget-object v3, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mMultiSoundLock:Ljava/lang/Object;

    .line 403
    monitor-enter v3

    .line 404
    :try_start_0
    new-instance v4, Ljava/lang/StringBuilder;

    .line 406
    invoke-direct {v4, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 409
    iget-object v2, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 411
    invoke-virtual {v2}, Ljava/util/HashMap;->size()I

    .line 414
    move-result v2

    .line 415
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 418
    const-string v2, ", isEnabled:"

    .line 420
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 423
    iget-boolean v2, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    .line 425
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 428
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 431
    move-result-object v2

    .line 432
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 435
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 436
    iget-object v2, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 438
    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    .line 441
    move-result-object v2

    .line 442
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 445
    move-result-object v2

    .line 446
    :goto_2
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 449
    move-result v3

    .line 450
    if-eqz v3, :cond_5

    .line 452
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 455
    move-result-object v3

    .line 456
    check-cast v3, Ljava/util/Map$Entry;

    .line 458
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    .line 461
    move-result-object v3

    .line 462
    check-cast v3, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 464
    iget-object v4, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mInterface:Lcom/android/server/audio/AudioService$11;

    .line 466
    iget v5, v3, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    .line 468
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 471
    iget-object v4, v4, Lcom/android/server/audio/AudioService$11;->this$0:Lcom/android/server/audio/AudioService;

    .line 473
    invoke-virtual {v4, v5}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 476
    move-result-object v4

    .line 477
    aget-object v4, v4, v1

    .line 479
    iget v5, v3, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mDevice:I

    .line 481
    new-instance v6, Ljava/lang/StringBuilder;

    .line 483
    const-string v7, "  uid = "

    .line 485
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 488
    iget v7, v3, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    .line 490
    const-string v8, "("

    .line 492
    const-string v9, "), device=0x"

    .line 494
    invoke-static {v7, v8, v4, v9, v6}, Lcom/android/server/alarm/AlarmManagerService$DeliveryTracker$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 497
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 500
    move-result-object v4

    .line 501
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 504
    const-string v4, ", "

    .line 506
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 509
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 512
    move-result-object v4

    .line 513
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 516
    new-instance v4, Ljava/lang/StringBuilder;

    .line 518
    const-string/jumbo v6, "name= "

    .line 521
    invoke-direct {v4, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 524
    invoke-static {v5}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 527
    move-result-object v5

    .line 528
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 531
    const-string v5, ", "

    .line 533
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 536
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 539
    move-result-object v4

    .line 540
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 543
    new-instance v4, Ljava/lang/StringBuilder;

    .line 545
    const-string/jumbo v5, "volume="

    .line 548
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 551
    iget v3, v3, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mRatio:I

    .line 553
    invoke-static {v4, v3, p1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/io/PrintWriter;)V

    .line 556
    goto :goto_2

    .line 557
    :cond_5
    iget-object v2, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mInterface:Lcom/android/server/audio/AudioService$11;

    .line 559
    iget-object v2, v2, Lcom/android/server/audio/AudioService$11;->this$0:Lcom/android/server/audio/AudioService;

    .line 561
    iget-object v2, v2, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 563
    const/4 v3, 0x3

    .line 564
    aget-object v2, v2, v3

    .line 566
    iget-object v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mObservedDeviceSet:Ljava/util/Set;

    .line 568
    invoke-static {v2}, Landroid/media/AudioSystem;->getDeviceMaskFromSet(Ljava/util/Set;)I

    .line 571
    move-result v2

    .line 572
    new-instance v3, Ljava/lang/StringBuilder;

    .line 574
    const-string v4, "  Current Default Device: 0x"

    .line 576
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 579
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 582
    move-result-object v4

    .line 583
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 586
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 589
    move-result-object v3

    .line 590
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 593
    new-instance v3, Ljava/lang/StringBuilder;

    .line 595
    const-string v4, " : "

    .line 597
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 600
    invoke-static {v2}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 603
    move-result-object v2

    .line 604
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 607
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 610
    move-result-object v2

    .line 611
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 614
    const/4 v2, 0x1

    .line 615
    invoke-virtual {v0, v2}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinDevice(Z)I

    .line 618
    move-result v3

    .line 619
    new-instance v4, Ljava/lang/StringBuilder;

    .line 621
    const-string v5, "  Pin Device (IgnoreConnection): 0x"

    .line 623
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 626
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 629
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 632
    move-result-object v4

    .line 633
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 636
    new-instance v4, Ljava/lang/StringBuilder;

    .line 638
    const-string v5, " : "

    .line 640
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 643
    invoke-virtual {v0, v2}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinDevice(Z)I

    .line 646
    move-result v5

    .line 647
    invoke-static {v5}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 650
    move-result-object v5

    .line 651
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 654
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 657
    move-result-object v4

    .line 658
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 661
    new-instance v4, Ljava/lang/StringBuilder;

    .line 663
    const-string v5, "  Pin Apps: "

    .line 665
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 668
    invoke-virtual {v0, v3}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinAppInfo(I)Ljava/lang/String;

    .line 671
    move-result-object v3

    .line 672
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 675
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 678
    move-result-object v3

    .line 679
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 682
    const-string v3, "  SEC_AUDIO_MULTI_SOUND=true"

    .line 684
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 687
    iget-object v3, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mInterface:Lcom/android/server/audio/AudioService$11;

    .line 689
    const-string/jumbo v4, "com.samsung.android.oneconnect"

    .line 692
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 695
    :try_start_1
    iget-object v3, v3, Lcom/android/server/audio/AudioService$11;->this$0:Lcom/android/server/audio/AudioService;

    .line 697
    iget-object v3, v3, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 699
    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 702
    move-result-object v3

    .line 703
    invoke-virtual {v3, v4, v1}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    .line 706
    move-result-object v3
    :try_end_1
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_1} :catch_0

    .line 707
    if-eqz v3, :cond_6

    .line 709
    const-string v3, "  Smart Things=install"

    .line 711
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 714
    :catch_0
    :cond_6
    const-string v3, "  mPreventOverheatState="

    .line 716
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 719
    iget-object v3, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPreventOverheatState:Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;

    .line 721
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 724
    const-string v3, "  Dual App : "

    .line 726
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 729
    iget-object v4, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 731
    monitor-enter v4

    .line 732
    :try_start_2
    iget-object v0, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 734
    check-cast v0, Ljava/util/HashSet;

    .line 736
    invoke-virtual {v0}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    .line 739
    move-result-object v0

    .line 740
    :goto_3
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 743
    move-result v3

    .line 744
    if-eqz v3, :cond_7

    .line 746
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 749
    move-result-object v3

    .line 750
    check-cast v3, Ljava/lang/Integer;

    .line 752
    new-instance v5, Ljava/lang/StringBuilder;

    .line 754
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 757
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 760
    const-string v3, " "

    .line 762
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 765
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 768
    move-result-object v3

    .line 769
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 772
    goto :goto_3

    .line 773
    :catchall_0
    move-exception p0

    .line 774
    goto/16 :goto_9

    .line 776
    :cond_7
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 777
    const-string v0, ""

    .line 779
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 782
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppCastingLogger:Lcom/android/server/utils/EventLogger;

    .line 784
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 787
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MIC_MODE_FOR_QUICK_PANEL_UI:Z

    .line 789
    if-eqz v0, :cond_8

    .line 791
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 793
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 796
    const-string v3, "\nMicModeManager dump:"

    .line 798
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 801
    iget-object v0, v0, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 803
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MicModeType;->getTypeToString()Ljava/lang/String;

    .line 806
    move-result-object v3

    .line 807
    const-string v4, "  mMicModeType:"

    .line 809
    invoke-virtual {v4, v3}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 812
    move-result-object v3

    .line 813
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 816
    new-instance v3, Ljava/lang/StringBuilder;

    .line 818
    const-string v4, "  mCallMicMode:"

    .line 820
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 823
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MicModeType;->getCallMicMode()I

    .line 826
    move-result v4

    .line 827
    invoke-virtual {v0, v4}, Lcom/samsung/android/server/audio/MicModeType;->getCallModeToString(I)Ljava/lang/String;

    .line 830
    move-result-object v4

    .line 831
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 834
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 837
    move-result-object v3

    .line 838
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 841
    new-instance v3, Ljava/lang/StringBuilder;

    .line 843
    const-string v4, "  mVoipCallMicMode:"

    .line 845
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 848
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MicModeType;->getVoipCallMicMode()I

    .line 851
    move-result v4

    .line 852
    invoke-virtual {v0, v4}, Lcom/samsung/android/server/audio/MicModeType;->getCallModeToString(I)Ljava/lang/String;

    .line 855
    move-result-object v0

    .line 856
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 859
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 862
    move-result-object v0

    .line 863
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 866
    sget-object v0, Lcom/samsung/android/server/audio/MicModeManager;->sMicModeLogger:Lcom/android/server/utils/EventLogger;

    .line 868
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 871
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 874
    :cond_8
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 876
    iget-object v3, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 878
    monitor-enter v3

    .line 879
    :try_start_3
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 881
    invoke-virtual {v0, p1}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->dump(Ljava/io/PrintWriter;)V

    .line 884
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 885
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceAliasManager:Lcom/samsung/android/server/audio/DeviceAliasManager;

    .line 887
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 890
    const-string v3, "\nDevice Aliases:"

    .line 892
    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 895
    move v3, v1

    .line 896
    :goto_4
    iget-object v4, v0, Lcom/samsung/android/server/audio/DeviceAliasManager;->mDevices:Landroid/util/SparseArray;

    .line 898
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    .line 901
    move-result v4

    .line 902
    if-ge v3, v4, :cond_d

    .line 904
    iget-object v4, v0, Lcom/samsung/android/server/audio/DeviceAliasManager;->mDevices:Landroid/util/SparseArray;

    .line 906
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->keyAt(I)I

    .line 909
    move-result v4

    .line 910
    new-instance v5, Ljava/lang/StringBuilder;

    .line 912
    const-string v6, "- "

    .line 914
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 917
    invoke-static {v4}, Landroid/media/AudioSystem;->getDeviceName(I)Ljava/lang/String;

    .line 920
    move-result-object v6

    .line 921
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 924
    const-string v6, ":"

    .line 926
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 929
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 932
    move-result-object v5

    .line 933
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 936
    iget-object v5, v0, Lcom/samsung/android/server/audio/DeviceAliasManager;->mDevices:Landroid/util/SparseArray;

    .line 938
    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 941
    move-result-object v4

    .line 942
    check-cast v4, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;

    .line 944
    if-eqz v4, :cond_c

    .line 946
    new-instance v5, Ljava/lang/StringBuilder;

    .line 948
    const-string v6, "  Alias: "

    .line 950
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 953
    iget-object v6, v4, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;->mAliases:[I

    .line 955
    array-length v7, v6

    .line 956
    move v8, v1

    .line 957
    :goto_5
    const-string v9, " "

    .line 959
    if-ge v8, v7, :cond_9

    .line 961
    aget v10, v6, v8

    .line 963
    invoke-static {v10}, Landroid/media/AudioSystem;->getDeviceName(I)Ljava/lang/String;

    .line 966
    move-result-object v10

    .line 967
    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 970
    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 973
    add-int/lit8 v8, v8, 0x1

    .line 975
    goto :goto_5

    .line 976
    :cond_9
    const-string v6, "\n  Exclude Streams: "

    .line 978
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 981
    move v6, v1

    .line 982
    :goto_6
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 985
    move-result v7

    .line 986
    if-ge v6, v7, :cond_b

    .line 988
    shl-int v7, v2, v6

    .line 990
    iget v8, v4, Lcom/samsung/android/server/audio/DeviceAliasManager$DeviceAlias;->mExcludeStreams:I

    .line 992
    and-int/2addr v7, v8

    .line 993
    if-lez v7, :cond_a

    .line 995
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 998
    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1001
    :cond_a
    add-int/lit8 v6, v6, 0x1

    .line 1003
    goto :goto_6

    .line 1004
    :cond_b
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1007
    move-result-object v4

    .line 1008
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1011
    :cond_c
    add-int/lit8 v3, v3, 0x1

    .line 1013
    goto :goto_4

    .line 1014
    :cond_d
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 1017
    sget-object v0, Lcom/android/server/audio/AudioService;->sScpmLogger:Lcom/android/server/utils/EventLogger;

    .line 1019
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 1022
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 1024
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1027
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 1030
    const-string v2, "  SCPM App List version = "

    .line 1032
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1035
    const-string v2, "APP_LIST_VERSION"

    .line 1037
    invoke-virtual {v0, v1, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 1040
    move-result v0

    .line 1041
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(I)V

    .line 1044
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 1047
    sget-object v0, Lcom/android/server/audio/AudioService;->sFactoryTestLogger:Lcom/android/server/utils/EventLogger;

    .line 1049
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 1052
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 1055
    const-string v0, "  Last Loopback on = "

    .line 1057
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1060
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mLastLoopbackOn:Ljava/lang/String;

    .line 1062
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1065
    const-string v0, "  Current Loopback state = "

    .line 1067
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1070
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mLoopbackState:Ljava/lang/String;

    .line 1072
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1075
    sget-object v0, Lcom/android/server/audio/AudioService;->sScoPreventionLogger:Lcom/android/server/utils/EventLogger;

    .line 1077
    invoke-virtual {v0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 1080
    const-string v0, "  mIsLeBroadCasting="

    .line 1082
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1085
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIsLeBroadCasting:Z

    .line 1087
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1090
    const-string p0, ""

    .line 1092
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1095
    sget-object p0, Lcom/samsung/android/server/audio/utils/BtUtils;->sAuracastLogger:Lcom/android/server/utils/EventLogger;

    .line 1097
    invoke-virtual {p0, p1}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 1100
    const-string p0, ""

    .line 1102
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1105
    new-instance p0, Ljava/lang/StringBuilder;

    .line 1107
    const-string v0, "BLE broadcast app uids = "

    .line 1109
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1112
    sget-object v0, Lcom/samsung/android/server/audio/utils/BtUtils;->sBtAppUidList:Ljava/util/ArrayList;

    .line 1114
    const-string v1, ""

    .line 1116
    if-nez v0, :cond_e

    .line 1118
    goto :goto_8

    .line 1119
    :cond_e
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 1122
    move-result-object v0

    .line 1123
    :goto_7
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 1126
    move-result v2

    .line 1127
    if-eqz v2, :cond_f

    .line 1129
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1132
    move-result-object v2

    .line 1133
    check-cast v2, Ljava/lang/Integer;

    .line 1135
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 1138
    move-result v2

    .line 1139
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1141
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 1144
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1147
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1150
    const-string v1, ";"

    .line 1152
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1155
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1158
    move-result-object v1

    .line 1159
    goto :goto_7

    .line 1160
    :cond_f
    :goto_8
    invoke-virtual {p0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1163
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1166
    move-result-object p0

    .line 1167
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1170
    const-string p0, ""

    .line 1172
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1175
    return-void

    .line 1176
    :catchall_1
    move-exception p0

    .line 1177
    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 1178
    throw p0

    .line 1179
    :goto_9
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 1180
    throw p0

    .line 1181
    :catchall_2
    move-exception p0

    .line 1182
    :try_start_6
    monitor-exit v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 1183
    throw p0
.end method

.method public final addSpatializerCompatibleAudioDevice(Landroid/media/AudioDeviceAttributes;)V
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->addSpatializerCompatibleAudioDevice_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    const/4 v0, 0x1

    .line 11
    const/4 v1, 0x0

    .line 12
    :try_start_0
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/audio/SpatializerHelper;->addCompatibleAudioDevice(Landroid/media/AudioDeviceAttributes;ZZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final adjustStreamVolume(IIILjava/lang/String;)V
    .locals 6

    const/4 v5, 0x0

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    .line 1
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->adjustStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method public final adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IILjava/lang/String;ZI)V
    .locals 35

    move-object/from16 v13, p0

    move/from16 v0, p1

    move/from16 v1, p3

    move-object/from16 v14, p5

    move/from16 v2, p6

    move/from16 v15, p7

    move/from16 v12, p10

    const/16 v11, 0xa

    const/4 v10, 0x2

    const/4 v9, 0x1

    .line 2
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FIXED_SCO_VOLUME:Z

    const/4 v4, 0x6

    if-eqz v3, :cond_0

    if-ne v0, v4, :cond_0

    .line 3
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v3}, Lcom/android/server/audio/AudioDeviceBroker;->isRemoteVolumeControlSupported()Z

    move-result v3

    if-nez v3, :cond_0

    .line 4
    const-string v3, "AS.AudioService"

    const-string v5, "adjustStreamVolume() connected BT doesn\'t support Remote Volume Control"

    invoke-static {v3, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v7, 0x0

    goto :goto_0

    :cond_0
    move/from16 v7, p2

    .line 5
    :goto_0
    iget-boolean v3, v13, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v3, :cond_1

    return-void

    .line 6
    :cond_1
    const-string v3, "AS.AudioService"

    const-string v5, "adjustStreamVolume() stream="

    const-string v6, ", dir="

    const-string v8, ", flags="

    .line 7
    invoke-static {v0, v7, v5, v6, v8}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 8
    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v6, ", caller="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 9
    invoke-static {v7}, Lcom/android/server/audio/AudioService;->ensureValidDirection(I)V

    .line 10
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 11
    invoke-static {v7}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    move-result v8

    if-eqz v8, :cond_2

    .line 12
    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v0

    invoke-virtual {v13, v3}, Lcom/android/server/audio/AudioService;->isStreamAffectedByMute(I)Z

    move-result v3

    if-nez v3, :cond_2

    return-void

    :cond_2
    if-eqz v8, :cond_4

    if-eqz v0, :cond_3

    if-ne v0, v4, :cond_4

    .line 13
    :cond_3
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v4, "android.permission.MODIFY_PHONE_STATE"

    .line 14
    invoke-virtual {v3, v4, v15, v2}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v3

    if-eqz v3, :cond_4

    .line 15
    const-string v0, "AS.AudioService"

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "MODIFY_PHONE_STATE Permission Denial: adjustStreamVolume from pid="

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 17
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    :cond_4
    const/16 v3, 0xb

    if-ne v0, v3, :cond_5

    .line 18
    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v5, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 19
    invoke-virtual {v4, v5, v15, v2}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    move-result v4

    if-eqz v4, :cond_5

    .line 20
    const-string v0, "AS.AudioService"

    new-instance v1, Ljava/lang/StringBuilder;

    const-string v2, "MODIFY_AUDIO_ROUTING Permission Denial: adjustStreamVolume from pid="

    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 22
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 23
    :cond_5
    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, v0

    .line 24
    iget-object v5, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, v4

    .line 25
    invoke-virtual {v13, v4}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v6

    move-object/from16 p2, v5

    const/4 v5, 0x3

    if-eq v0, v3, :cond_6

    if-ne v0, v11, :cond_7

    .line 26
    :cond_6
    invoke-virtual {v13, v6}, Lcom/android/server/audio/AudioService;->isA2dpAbsoluteVolumeDevice(I)Z

    move-result v17

    if-nez v17, :cond_8

    .line 27
    invoke-static {v6}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    move-result v17

    if-eqz v17, :cond_7

    goto :goto_1

    :cond_7
    move-object/from16 v5, p2

    move v11, v4

    move v4, v0

    goto :goto_2

    .line 28
    :cond_8
    :goto_1
    const-string v0, "AS.AudioService"

    const-string v4, "Change to music stream when bluetooth ABS volume is supported"

    invoke-static {v0, v4}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v5

    move v4, v5

    move v11, v4

    move-object v5, v0

    .line 30
    :goto_2
    invoke-virtual {v5, v6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v18

    .line 31
    sget-object v0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_9

    sget-object v0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_BLE_SET:Ljava/util/Set;

    .line 32
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v0, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_9

    and-int/lit8 v0, v1, 0x40

    if-eqz v0, :cond_9

    return-void

    :cond_9
    const/16 v0, 0x3e8

    if-ne v2, v0, :cond_a

    .line 33
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v0

    invoke-static/range {p6 .. p6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    invoke-static {v0, v2}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    move v3, v0

    goto :goto_3

    :cond_a
    move v3, v2

    .line 34
    :goto_3
    sget-object v0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    aget v0, v0, v11

    move-object/from16 v2, p4

    move-object/from16 v20, v5

    move-object/from16 v5, p8

    invoke-virtual {v13, v0, v3, v2, v5}, Lcom/android/server/audio/AudioService;->checkNoteAppOp(IILjava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_b

    return-void

    :cond_b
    and-int/lit8 v0, v1, 0x4

    const/4 v5, 0x5

    if-eqz v0, :cond_f

    .line 35
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-eqz v0, :cond_d

    if-eq v11, v5, :cond_e

    :cond_c
    :goto_4
    and-int/lit8 v0, v1, -0x5

    goto :goto_5

    :cond_d
    if-ne v11, v10, :cond_c

    .line 36
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    move-result v0

    if-eq v0, v9, :cond_c

    .line 37
    iget-boolean v0, v13, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    if-eqz v0, :cond_e

    goto :goto_4

    :cond_e
    move v0, v1

    :goto_5
    and-int/lit8 v1, v0, 0x4

    if-eqz v1, :cond_10

    .line 38
    const-string/jumbo v1, "l_record_active_enable"

    .line 39
    invoke-static {v1}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 40
    const-string/jumbo v5, "true"

    invoke-virtual {v5, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_10

    and-int/lit8 v0, v0, -0x5

    goto :goto_6

    :cond_f
    move v0, v1

    :cond_10
    :goto_6
    and-int/lit16 v1, v0, 0x200

    if-eqz v1, :cond_11

    if-eqz v7, :cond_11

    or-int/2addr v0, v9

    :cond_11
    const/4 v5, -0x1

    if-ne v7, v5, :cond_13

    const/high16 v1, 0x10000

    :goto_7
    or-int/2addr v0, v1

    :cond_12
    move v1, v0

    goto :goto_8

    :cond_13
    if-ne v7, v9, :cond_12

    const/high16 v1, 0x20000

    goto :goto_7

    .line 41
    :goto_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    move-result v0

    move/from16 v21, v11

    const/16 v11, 0x64

    const v22, 0x8000

    if-nez v0, :cond_18

    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    iget-object v5, v13, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 42
    iget-object v5, v5, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 43
    monitor-enter v5

    .line 44
    :try_start_0
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 45
    iget-object v5, v0, Lcom/samsung/android/server/audio/ScreenSharingHelper;->mDisplayVolumeControlChecker:Lcom/samsung/android/server/audio/ScreenSharingHelper$1;

    .line 46
    invoke-virtual {v5}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Boolean;

    invoke-virtual {v5}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v5

    if-eqz v5, :cond_14

    goto :goto_9

    .line 47
    :cond_14
    iget-boolean v0, v0, Lcom/samsung/android/server/audio/ScreenSharingHelper;->mScreenSharingStateResumed:Z

    if-nez v0, :cond_15

    goto :goto_c

    :cond_15
    and-int/lit8 v0, v1, 0x1

    if-nez v0, :cond_16

    goto :goto_c

    :cond_16
    const/4 v5, 0x0

    const/4 v9, 0x3

    .line 48
    invoke-static {v9, v5}, Landroid/media/AudioSystem;->isStreamActiveRemotely(II)Z

    move-result v0

    if-eqz v0, :cond_17

    goto :goto_9

    :cond_17
    and-int v0, v6, v22

    if-eqz v0, :cond_18

    if-ne v4, v9, :cond_18

    .line 49
    :goto_9
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v24

    .line 50
    :try_start_1
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    const-string/jumbo v5, "vkev"

    invoke-virtual {v0, v5, v7}, Landroid/hardware/display/DisplayManager;->semSetWifiDisplayConfiguration(Ljava/lang/String;I)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 51
    invoke-static/range {v24 .. v25}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    const/high16 v0, 0x400000

    or-int/2addr v0, v1

    .line 52
    iget-object v5, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v5, v4, v0}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 53
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->DISPLAY_VOLUME_CONTROL:Lcom/android/server/audio/AudioService$BypassReason;

    :goto_a
    move v12, v1

    move/from16 v25, v3

    move v9, v4

    move/from16 v28, v6

    move v15, v7

    move/from16 v30, v8

    move v11, v10

    move-object/from16 v27, v20

    move/from16 v31, v21

    const/4 v7, 0x1

    const/4 v8, 0x3

    const/4 v10, 0x5

    :goto_b
    const/16 v16, 0xa

    goto/16 :goto_24

    :catchall_0
    move-exception v0

    .line 54
    invoke-static/range {v24 .. v25}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 55
    throw v0

    :catchall_1
    move-exception v0

    .line 56
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v0

    :cond_18
    :goto_c
    if-ne v7, v11, :cond_1a

    and-int/lit8 v0, v1, 0x2

    if-nez v0, :cond_1a

    const/4 v5, 0x1

    if-eq v4, v5, :cond_19

    const/4 v5, 0x5

    if-ne v4, v5, :cond_1a

    goto :goto_d

    :cond_19
    const/4 v5, 0x5

    .line 57
    :goto_d
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v0

    if-eq v0, v10, :cond_1a

    .line 58
    invoke-static {v4}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v0

    if-eqz v0, :cond_1a

    .line 59
    const-string v0, "AS.AudioService"

    const-string v9, "Couldn\'t unmute "

    const-string v5, " in "

    .line 60
    invoke-static {v4, v9, v5}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 61
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    move-result v9

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v0, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 62
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CANNOT_UNMUTE_SILENT_VIBRATE:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_a

    .line 63
    :cond_1a
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 64
    iget v0, v0, Lcom/android/server/audio/AudioServiceExt;->mAllSoundMute:I

    const/4 v5, 0x1

    if-ne v0, v5, :cond_1c

    .line 65
    iget v0, v13, Lcom/android/server/audio/AudioService;->mRingerMode:I

    if-nez v0, :cond_1b

    if-ne v4, v10, :cond_1b

    if-eq v7, v5, :cond_1c

    .line 66
    :cond_1b
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v4, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 67
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->ALL_SOUND_MUTE:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_a

    .line 68
    :cond_1c
    invoke-virtual {v13, v6, v4}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByLeBroadcast(II)Z

    move-result v0

    if-nez v0, :cond_1d

    .line 69
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v4, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 70
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->LE_BROADCAST:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_a

    .line 71
    :cond_1d
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v0, v0, v4

    const/4 v5, 0x3

    if-ne v4, v5, :cond_1e

    const/4 v5, -0x1

    if-eq v7, v5, :cond_1f

    if-eqz v7, :cond_1f

    const/4 v9, 0x1

    if-eq v7, v9, :cond_20

    :cond_1e
    move/from16 v34, v1

    move/from16 v25, v3

    move/from16 v26, v4

    move/from16 v33, v6

    move v15, v7

    move/from16 v30, v8

    move-object/from16 v27, v20

    move/from16 v31, v21

    const/16 v16, 0xa

    goto/16 :goto_1b

    :cond_1f
    const/4 v9, 0x1

    .line 72
    :cond_20
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOnInternal()Z

    move-result v23

    if-nez v23, :cond_21

    :goto_e
    move v11, v6

    goto/16 :goto_12

    .line 73
    :cond_21
    const-string v5, "AS.AudioService"

    new-instance v9, Ljava/lang/StringBuilder;

    const-string/jumbo v10, "selectDevice : mForegroundUid="

    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget v10, v13, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    .line 74
    invoke-static {v9, v10, v5}, Lcom/android/server/accessibility/GestureWakeup$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 75
    iget-object v5, v13, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    iget v9, v13, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    invoke-virtual {v5, v9}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v5

    if-eqz v5, :cond_23

    .line 76
    iget v9, v13, Lcom/android/server/audio/AudioService;->mForegroundUid:I

    invoke-static {v9}, Lcom/samsung/android/server/audio/utils/AudioUtils;->isUsingAudioForUid(I)Z

    move-result v9

    if-nez v9, :cond_22

    iget-object v9, v13, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 77
    invoke-virtual {v9}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    const/4 v9, 0x0

    const/4 v10, 0x3

    .line 78
    invoke-static {v10, v9}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v16

    if-nez v16, :cond_24

    goto :goto_f

    :cond_22
    const/4 v9, 0x0

    :goto_f
    move v11, v5

    goto/16 :goto_12

    :cond_23
    const/4 v9, 0x0

    .line 79
    :cond_24
    sget-object v5, Lcom/samsung/android/server/audio/utils/AudioUtils;->DEVICE_OUT_WIRED_DEVICE_SET:Ljava/util/Set;

    .line 80
    new-instance v5, Ljava/lang/StringBuilder;

    const-string/jumbo v10, "l_multi_sound_active_track_device="

    invoke-direct {v5, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    .line 81
    invoke-static {v5}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 82
    const-string/jumbo v10, "true"

    invoke-virtual {v10, v5}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v5

    if-eqz v5, :cond_25

    goto :goto_e

    .line 83
    :cond_25
    iget-object v5, v13, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 84
    iget-object v10, v5, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 85
    monitor-enter v10

    .line 86
    :try_start_3
    iget-object v9, v5, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    check-cast v9, Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :cond_26
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v25

    if-eqz v25, :cond_27

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Ljava/lang/Integer;

    .line 87
    invoke-virtual/range {v25 .. v25}, Ljava/lang/Integer;->intValue()I

    move-result v25

    invoke-static/range {v25 .. v25}, Lcom/samsung/android/server/audio/utils/AudioUtils;->isUsingAudioForUid(I)Z

    move-result v25

    if-eqz v25, :cond_26

    .line 88
    monitor-exit v10

    move/from16 v5, v22

    goto :goto_11

    :catchall_2
    move-exception v0

    goto/16 :goto_1a

    .line 89
    :cond_27
    monitor-exit v10
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 90
    iget-boolean v9, v5, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    if-nez v9, :cond_29

    :cond_28
    const/4 v5, 0x0

    goto :goto_11

    .line 91
    :cond_29
    new-instance v9, Ljava/util/ArrayList;

    iget-object v10, v5, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    invoke-virtual {v10}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-direct {v9, v10}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 92
    invoke-virtual {v9}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    :goto_10
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_28

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 93
    iget v11, v10, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mDevice:I

    if-nez v11, :cond_2b

    :cond_2a
    const/16 v11, 0x64

    goto :goto_10

    .line 94
    :cond_2b
    iget v11, v10, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    invoke-static {v11}, Lcom/samsung/android/server/audio/utils/AudioUtils;->isUsingAudioForUid(I)Z

    move-result v11

    if-eqz v11, :cond_2a

    .line 95
    iget v9, v10, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    invoke-virtual {v5, v9}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v5

    :goto_11
    if-eqz v5, :cond_2c

    goto/16 :goto_f

    :cond_2c
    move v5, v6

    goto/16 :goto_f

    :goto_12
    const/high16 v5, 0x100000

    if-eq v6, v11, :cond_31

    .line 96
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 97
    iget-boolean v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mVisible:Z

    if-eqz v0, :cond_2d

    .line 98
    iget v0, v13, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    const/16 v9, 0x2713

    if-eq v0, v9, :cond_2d

    .line 99
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    :goto_13
    move v12, v1

    move/from16 v25, v3

    move v9, v4

    move/from16 v28, v6

    move v15, v7

    move/from16 v30, v8

    move-object/from16 v27, v20

    move/from16 v31, v21

    :goto_14
    const/4 v7, 0x1

    const/4 v8, 0x3

    const/4 v10, 0x5

    const/4 v11, 0x2

    goto/16 :goto_b

    :cond_2d
    if-nez v7, :cond_2f

    and-int/lit16 v0, v1, 0x1000

    if-eqz v0, :cond_2e

    .line 100
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_13

    .line 101
    :cond_2e
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_13

    .line 102
    :cond_2f
    iget v0, v13, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    const/16 v10, 0xa

    if-ne v0, v10, :cond_30

    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v0, :cond_30

    const/4 v9, 0x3

    .line 103
    invoke-virtual {v13, v9, v11}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    move-result v0

    add-int/2addr v0, v7

    const/16 v17, 0x1

    const/16 v19, 0x1

    const/4 v5, 0x0

    move/from16 p2, v1

    move-object/from16 v1, p0

    move v2, v4

    move/from16 v25, v3

    move v3, v0

    move/from16 v26, v4

    move/from16 v4, p2

    move-object/from16 v27, v20

    const/4 v9, -0x1

    move/from16 v28, v6

    move-object/from16 v6, p4

    move/from16 v29, v7

    move-object/from16 v7, p5

    move/from16 v30, v8

    move-object/from16 v8, p8

    move/from16 v9, v25

    move/from16 v16, v10

    move/from16 v10, v17

    move v0, v11

    move/from16 v31, v21

    move/from16 v11, v19

    move v15, v12

    move v12, v0

    .line 104
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    move/from16 v32, p2

    move/from16 v15, v29

    goto :goto_15

    :cond_30
    move/from16 p2, v1

    move/from16 v25, v3

    move/from16 v26, v4

    move/from16 v28, v6

    move/from16 v30, v8

    move v0, v11

    move v15, v12

    move-object/from16 v27, v20

    move/from16 v31, v21

    move v12, v7

    .line 105
    invoke-virtual {v13, v0, v12}, Lcom/android/server/audio/AudioService;->getNextFineMediaVolume(II)I

    move-result v3

    move/from16 v11, p2

    or-int v4, v11, v5

    const/4 v10, 0x1

    const/16 v16, 0x1

    const/4 v5, 0x0

    move-object/from16 v1, p0

    move/from16 v2, v26

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p8

    move/from16 v9, v25

    move/from16 v32, v11

    move/from16 v11, v16

    move v15, v12

    move v12, v0

    .line 106
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 107
    :goto_15
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->MULTISOUND:Lcom/android/server/audio/AudioService$BypassReason;

    move/from16 v9, v26

    move/from16 v12, v32

    goto/16 :goto_14

    :cond_31
    move/from16 v32, v1

    move/from16 v25, v3

    move/from16 v26, v4

    move/from16 v28, v6

    move v15, v7

    move/from16 v30, v8

    move-object/from16 v27, v20

    move/from16 v31, v21

    .line 108
    iget v1, v13, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    const/16 v12, 0xa

    if-ne v1, v12, :cond_33

    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    if-eqz v1, :cond_32

    goto :goto_16

    :cond_32
    move/from16 v16, v12

    move/from16 v33, v28

    move/from16 v34, v32

    goto :goto_1b

    :cond_33
    :goto_16
    if-nez v15, :cond_35

    move/from16 v11, v32

    and-int/lit16 v0, v11, 0x1000

    if-eqz v0, :cond_34

    .line 109
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    :goto_17
    move/from16 v16, v12

    move/from16 v9, v26

    const/4 v7, 0x1

    const/4 v8, 0x3

    const/4 v10, 0x5

    move v12, v11

    :goto_18
    const/4 v11, 0x2

    goto/16 :goto_24

    .line 110
    :cond_34
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_17

    :cond_35
    move/from16 v10, v28

    move/from16 v11, v32

    .line 111
    invoke-virtual {v13, v10, v15}, Lcom/android/server/audio/AudioService;->getNextFineMediaVolume(II)I

    move-result v3

    or-int v4, v11, v5

    const/4 v5, 0x0

    const/4 v0, 0x1

    const/16 v16, 0x1

    const/16 v17, 0x0

    move-object/from16 v1, p0

    move/from16 v2, v26

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move-object/from16 v8, p8

    move/from16 v9, v25

    move/from16 v33, v10

    move v10, v0

    move/from16 v34, v11

    move/from16 v11, v16

    move/from16 v16, v12

    move/from16 v12, v17

    .line 112
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 113
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->MEDIA_VOLUME_STEP_ON:Lcom/android/server/audio/AudioService$BypassReason;

    move/from16 v9, v26

    move/from16 v28, v33

    move/from16 v12, v34

    const/4 v7, 0x1

    const/4 v8, 0x3

    :goto_19
    const/4 v10, 0x5

    goto :goto_18

    .line 114
    :goto_1a
    :try_start_4
    monitor-exit v10
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v0

    .line 115
    :goto_1b
    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 116
    iget-boolean v2, v1, Lcom/android/server/audio/AudioService$VolumeController;->mSafetyDialogVisible:Z

    if-eqz v2, :cond_3a

    const/4 v7, 0x1

    if-eq v15, v7, :cond_36

    if-nez v15, :cond_37

    :cond_36
    const/16 v2, 0xb

    goto :goto_1e

    :cond_37
    move/from16 v9, v26

    :goto_1c
    const/4 v8, 0x3

    :goto_1d
    const/4 v10, 0x5

    goto :goto_20

    :goto_1e
    if-ne v0, v2, :cond_38

    const/4 v8, 0x3

    goto :goto_1f

    :cond_38
    const/4 v8, 0x3

    if-ne v0, v8, :cond_39

    :goto_1f
    move/from16 v9, v26

    goto :goto_1d

    .line 117
    :cond_39
    const-string v0, "AS.AudioService"

    const-string/jumbo v1, "bypassAdjustStreamVolume: stream("

    const-string v2, ") when ear safety pop-up is shown"

    move/from16 v9, v26

    .line 118
    invoke-static {v9, v1, v2, v0}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 119
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->SKIP_WARNING_POPUP_VISIBLE:Lcom/android/server/audio/AudioService$BypassReason;

    move/from16 v28, v33

    move/from16 v12, v34

    goto :goto_19

    :cond_3a
    move/from16 v9, v26

    const/4 v7, 0x1

    goto :goto_1c

    :goto_20
    const/4 v11, 0x2

    if-eq v9, v10, :cond_3c

    if-ne v9, v11, :cond_3b

    goto :goto_21

    :cond_3b
    move/from16 v28, v33

    move/from16 v12, v34

    goto :goto_22

    .line 120
    :cond_3c
    :goto_21
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService$VolumeController;->mVisible:Z

    if-nez v0, :cond_3b

    move/from16 v12, v34

    and-int/lit8 v0, v12, 0x1

    if-eqz v0, :cond_3d

    .line 121
    invoke-static {}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getInstance()Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;

    move-result-object v0

    if-eqz v0, :cond_3e

    .line 122
    invoke-virtual {v0}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getVolumePanelEnabledState()Z

    move-result v0

    if-nez v0, :cond_3e

    .line 123
    const-string v0, "AS.AudioService"

    const-string v1, "Allow volume increase action for stream: "

    const-string v2, " when volume panel hidden by Knox Custom"

    .line 124
    invoke-static {v9, v1, v2, v0}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_3d
    move/from16 v28, v33

    goto :goto_22

    .line 125
    :cond_3e
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    move/from16 v6, v33

    invoke-virtual {v0, v6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v4

    move-object/from16 v1, p0

    move v2, v9

    move v3, v4

    move v5, v12

    move/from16 v28, v6

    .line 126
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 127
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->SKIP_VOLUME_PANEL_NOT_VISIBLE:Lcom/android/server/audio/AudioService$BypassReason;

    goto/16 :goto_24

    .line 128
    :goto_22
    iget-boolean v0, v13, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v0, :cond_43

    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v0, v0, v9

    if-ne v0, v8, :cond_43

    .line 129
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    move/from16 v6, v28

    invoke-virtual {v0, v6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    if-ne v15, v7, :cond_42

    .line 130
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    move-result v1

    mul-int/lit8 v1, v1, 0xa

    add-int/lit8 v2, v0, 0xa

    if-ge v1, v2, :cond_42

    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 131
    invoke-virtual {v1, v6}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    move-result v1

    if-eqz v1, :cond_42

    const/16 v1, 0x96

    if-eq v0, v1, :cond_40

    .line 132
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    move-result v0

    const/16 v5, 0xf

    if-eq v0, v5, :cond_41

    .line 133
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 134
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    if-nez v0, :cond_3f

    goto :goto_23

    .line 135
    :cond_3f
    :try_start_5
    invoke-interface {v0}, Landroid/media/IVolumeController;->displayVolumeLimiterToast()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0

    goto :goto_23

    :catch_0
    move-exception v0

    move-object v1, v0

    .line 136
    const-string v0, "VolumeController"

    const-string v2, "Error calling displayVolumeLimiterToast"

    invoke-static {v0, v2, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_23

    :cond_40
    const/16 v5, 0xf

    .line 137
    :cond_41
    :goto_23
    const-string v0, "AS.AudioService"

    const-string v1, "Volume index is already reached at volume limit value"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 138
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    move-result v0

    mul-int/lit8 v3, v0, 0xa

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    move-result v0

    mul-int/lit8 v4, v0, 0xa

    move-object/from16 v1, p0

    move v2, v9

    move v5, v12

    move/from16 v28, v6

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 139
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->VOLUME_LIMITER:Lcom/android/server/audio/AudioService$BypassReason;

    goto :goto_24

    :cond_42
    move/from16 v28, v6

    .line 140
    :cond_43
    sget-object v0, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    .line 141
    :goto_24
    sget-object v1, Lcom/android/server/audio/AudioService$BypassReason;->NO_BYPASS:Lcom/android/server/audio/AudioService$BypassReason;

    if-eq v0, v1, :cond_45

    .line 142
    const-string v1, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    const-string/jumbo v3, "bypass adjustStreamVolume:"

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0}, Ljava/lang/Enum;->name()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 143
    sget-object v1, Lcom/android/server/audio/AudioService$BypassReason;->CONSUME_ADJUST_SAME:Lcom/android/server/audio/AudioService$BypassReason;

    if-ne v0, v1, :cond_44

    and-int/lit8 v0, v12, 0x1

    if-eqz v0, :cond_44

    move/from16 v5, v28

    const/4 v6, 0x0

    .line 144
    invoke-virtual {v13, v9, v12, v6, v5}, Lcom/android/server/audio/AudioService;->updateFlagsForSamsungVolume(IIII)I

    move-result v0

    .line 145
    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, v9, v0}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    :cond_44
    return-void

    :cond_45
    move/from16 v5, v28

    const/4 v6, 0x0

    if-ne v9, v8, :cond_47

    .line 146
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 147
    invoke-virtual {v0}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->isAudioMirroring()Z

    move-result v0

    if-eqz v0, :cond_47

    .line 148
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v19

    .line 149
    :try_start_6
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    move v1, v15

    move v2, v12

    move/from16 v3, v25

    move/from16 v4, p7

    move v10, v5

    move-object/from16 v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->adjustMirroringVolume(IIIILjava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_46

    .line 150
    const-string v0, "AS.AudioService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "adjusting "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " mirroring volume"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_3

    .line 151
    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_3
    move-exception v0

    goto :goto_25

    :cond_46
    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_26

    :goto_25
    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 152
    throw v0

    :cond_47
    move v10, v5

    .line 153
    :goto_26
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/android/server/audio/AudioService$13;

    invoke-virtual {v0}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    .line 154
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO_RECORDING:Z

    if-eqz v1, :cond_4c

    if-eqz v0, :cond_4c

    and-int/lit8 v0, v12, 0x1

    if-eqz v0, :cond_48

    .line 155
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    if-eqz v0, :cond_48

    invoke-virtual {v0}, Landroid/app/KeyguardManager;->isKeyguardLocked()Z

    move-result v0

    if-eqz v0, :cond_48

    and-int/lit8 v1, v12, -0x2

    goto :goto_27

    :cond_48
    move v1, v12

    .line 156
    :goto_27
    const-string v0, "AS.AudioService"

    const-string v2, "adjustStreamVolume - FM Recording... change adjustVolume value(false)"

    invoke-static {v0, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/high16 v0, 0x2000000

    if-eq v1, v0, :cond_4b

    const/16 v0, 0x1011

    if-eq v1, v0, :cond_4b

    if-nez v1, :cond_49

    if-eq v9, v8, :cond_49

    goto :goto_28

    :cond_49
    and-int/lit8 v0, v1, 0x1

    move/from16 v5, v31

    if-eqz v0, :cond_4a

    if-ne v5, v8, :cond_4a

    and-int/lit8 v1, v1, -0x2

    .line 157
    const-string v0, "AS.AudioService"

    const-string v2, "adjustStreamVolume - FM Recording... block Media volume bar"

    invoke-static {v0, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_4a
    move v0, v6

    goto :goto_29

    :cond_4b
    :goto_28
    return-void

    :cond_4c
    move/from16 v5, v31

    move v0, v7

    move v1, v12

    .line 158
    :goto_29
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 159
    iget-object v3, v2, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 160
    monitor-enter v3

    const/4 v4, 0x0

    .line 161
    :try_start_7
    iput-object v4, v2, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 162
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_7

    and-int/lit8 v1, v1, -0x21

    if-ne v5, v8, :cond_50

    .line 163
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v2

    if-eqz v2, :cond_50

    or-int/lit8 v1, v1, 0x20

    .line 164
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 165
    iget v3, v2, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    if-ne v3, v8, :cond_4d

    .line 166
    invoke-virtual {v2, v10}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    move-result v3

    if-eqz v3, :cond_4d

    .line 167
    invoke-virtual {v2, v10}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeIndex(I)I

    move-result v2

    goto :goto_2a

    :cond_4d
    const/4 v2, -0x1

    :goto_2a
    move-object/from16 v12, v27

    if-gez v2, :cond_4e

    .line 168
    iget v2, v12, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    :cond_4e
    if-eqz v18, :cond_4f

    move/from16 v16, v2

    move/from16 v18, v16

    goto :goto_2c

    :cond_4f
    :goto_2b
    move/from16 v16, v2

    goto :goto_2c

    :cond_50
    move-object/from16 v12, v27

    .line 169
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v2, v9

    .line 170
    iget v4, v3, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 171
    iget v3, v3, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    sub-int/2addr v4, v3

    .line 172
    aget-object v2, v2, v5

    .line 173
    iget v3, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 174
    iget v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    sub-int/2addr v3, v2

    if-nez v4, :cond_51

    .line 175
    const-string v2, "AS.AudioService"

    const-string/jumbo v3, "rescaleStep : index range should not be zero"

    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    move v2, v6

    goto :goto_2b

    :cond_51
    mul-int v2, v16, v3

    .line 176
    div-int/lit8 v3, v4, 0x2

    add-int/2addr v3, v2

    div-int v2, v3, v4

    goto :goto_2b

    :goto_2c
    and-int/lit8 v2, v1, 0x2

    const/16 v4, 0x65

    if-nez v2, :cond_53

    .line 177
    iget-boolean v2, v13, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    if-eqz v2, :cond_52

    .line 178
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    aget v3, v2, v5

    aget v2, v2, v11

    if-ne v3, v2, :cond_54

    goto :goto_2d

    .line 179
    :cond_52
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, v11

    if-ne v5, v2, :cond_54

    :cond_53
    :goto_2d
    const/16 v3, 0x64

    goto :goto_2f

    .line 180
    :cond_54
    invoke-static {v5}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    move-result v2

    if-eqz v2, :cond_56

    iget-boolean v2, v12, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-eqz v2, :cond_56

    const/16 v3, 0x64

    if-eq v15, v4, :cond_55

    if-eq v15, v3, :cond_55

    if-ne v15, v7, :cond_57

    :cond_55
    :goto_2e
    move v11, v5

    goto :goto_31

    :cond_56
    const/16 v3, 0x64

    :cond_57
    move v6, v0

    goto :goto_2e

    .line 181
    :goto_2f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    move-result v0

    if-ne v0, v7, :cond_58

    and-int/lit8 v1, v1, -0x11

    :cond_58
    move v0, v1

    move-object/from16 v1, p0

    move/from16 v2, v18

    move v11, v3

    move v3, v15

    move/from16 v4, v16

    move v11, v5

    move v5, v0

    move-object/from16 v6, p4

    .line 182
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->checkForRingerModeChange(IIIILjava/lang/String;)I

    move-result v1

    and-int/lit8 v2, v1, 0x1

    if-eqz v2, :cond_59

    move v2, v7

    goto :goto_30

    :cond_59
    const/4 v2, 0x0

    :goto_30
    and-int/lit16 v3, v1, 0x80

    if-eqz v3, :cond_5a

    or-int/lit16 v0, v0, 0x80

    :cond_5a
    and-int/lit16 v1, v1, 0x800

    if-eqz v1, :cond_5b

    or-int/lit16 v0, v0, 0x800

    :cond_5b
    move v1, v0

    move v6, v2

    .line 183
    :goto_31
    invoke-virtual {v13, v11, v1}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByDnd(II)Z

    move-result v0

    if-nez v0, :cond_5c

    const/4 v6, 0x0

    .line 184
    :cond_5c
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    invoke-virtual {v0, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    if-ne v11, v8, :cond_5d

    .line 185
    sget-object v2, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 186
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    invoke-interface {v2, v3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5d

    and-int/lit8 v2, v1, 0x40

    if-nez v2, :cond_5d

    .line 187
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v2, v15}, Lcom/android/server/audio/AudioDeviceBroker;->skipSendingAVRCPVolume(I)V

    .line 188
    :cond_5d
    invoke-virtual {v13, v9}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    move-result v2

    if-eqz v2, :cond_5f

    const/16 v2, 0x64

    if-eq v15, v2, :cond_5e

    const/16 v2, 0x65

    if-ne v15, v2, :cond_60

    goto :goto_32

    :cond_5e
    const/16 v2, 0x65

    :goto_32
    const/4 v0, 0x0

    goto :goto_33

    :cond_5f
    const/16 v2, 0x65

    .line 189
    :cond_60
    :goto_33
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v3

    const/16 v4, -0x64

    if-eqz v3, :cond_64

    and-int/lit16 v3, v1, 0x2000

    if-nez v3, :cond_64

    .line 190
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3, v5}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 191
    iget-boolean v5, v3, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mHandlesVolumeAdjustment:Z

    if-eqz v5, :cond_64

    .line 192
    invoke-static {v3, v9}, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->-$$Nest$mgetMatchingVolumeInfoForStream(Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;I)Landroid/media/VolumeInfo;

    move-result-object v1

    if-eqz v1, :cond_63

    .line 193
    :try_start_8
    iget-object v2, v3, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mCallback:Landroid/media/IAudioDeviceVolumeDispatcher;

    iget-object v3, v3, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mDevice:Landroid/media/AudioDeviceAttributes;

    new-instance v5, Landroid/media/VolumeInfo$Builder;

    invoke-direct {v5, v1}, Landroid/media/VolumeInfo$Builder;-><init>(Landroid/media/VolumeInfo;)V

    .line 194
    invoke-virtual {v1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v6

    .line 195
    invoke-virtual {v1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result v1

    if-eq v6, v4, :cond_62

    if-ne v1, v4, :cond_61

    goto :goto_34

    .line 196
    :cond_61
    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v9

    .line 197
    iget v7, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 198
    iget v4, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 199
    invoke-static {v0, v7, v4, v6, v1}, Lcom/android/server/audio/AudioService;->rescaleIndex(IIIII)I

    move-result v0

    .line 200
    :cond_62
    :goto_34
    invoke-virtual {v5, v0}, Landroid/media/VolumeInfo$Builder;->setVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    move-result-object v0

    .line 201
    invoke-virtual {v0}, Landroid/media/VolumeInfo$Builder;->build()Landroid/media/VolumeInfo;

    move-result-object v0

    move/from16 v5, p10

    .line 202
    invoke-interface {v2, v3, v0, v15, v5}, Landroid/media/IAudioDeviceVolumeDispatcher;->dispatchDeviceVolumeAdjusted(Landroid/media/AudioDeviceAttributes;Landroid/media/VolumeInfo;II)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1

    goto :goto_35

    .line 203
    :catch_1
    const-string v0, "AS.AudioService"

    const-string v1, "Couldn\'t dispatch absolute volume behavior volume adjustment"

    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_63
    :goto_35
    return-void

    :cond_64
    move/from16 v5, p10

    if-eqz v6, :cond_79

    if-eqz v15, :cond_79

    const/4 v3, 0x2

    if-eq v5, v3, :cond_79

    .line 204
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v8, 0x12

    invoke-virtual {v3, v8}, Landroid/os/Handler;->removeMessages(I)V

    move/from16 v8, v30

    if-eqz v8, :cond_67

    .line 205
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    check-cast v3, Ljava/util/HashSet;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_67

    if-ne v15, v2, :cond_65

    .line 206
    iget-boolean v3, v12, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    xor-int/2addr v3, v7

    goto :goto_36

    :cond_65
    const/16 v3, -0x64

    if-ne v15, v3, :cond_66

    move v3, v7

    goto :goto_36

    :cond_66
    const/4 v3, 0x0

    .line 207
    :goto_36
    invoke-virtual {v13, v11, v3}, Lcom/android/server/audio/AudioService;->muteAliasStreams(IZ)V

    const/4 v4, 0x3

    if-ne v9, v4, :cond_75

    const/4 v4, 0x2

    .line 208
    invoke-virtual {v13, v4, v3, v14}, Lcom/android/server/audio/AudioService;->sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V

    goto/16 :goto_3c

    :cond_67
    if-ne v15, v7, :cond_6b

    .line 209
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    add-int v4, v18, v16

    .line 210
    invoke-virtual {v3, v11, v4, v10}, Lcom/android/server/audio/SoundDoseHelper;->checkSafeMediaVolume(III)Z

    move-result v4

    if-nez v4, :cond_68

    goto :goto_37

    .line 211
    :cond_68
    iget-object v3, v3, Lcom/android/server/audio/SoundDoseHelper;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v3, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 212
    const-string v3, "AS.AudioService"

    new-instance v4, Ljava/lang/StringBuilder;

    const-string v12, "adjustStreamVolume() safe volume index = "

    invoke-direct {v4, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 213
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v3, :cond_75

    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 214
    iget-object v3, v3, Lcom/android/server/audio/AudioServiceExt;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    .line 215
    iget-object v3, v3, Lcom/samsung/android/server/audio/CoverHelper;->mCoverManager:Lcom/samsung/android/cover/CoverManager;

    if-nez v3, :cond_69

    goto/16 :goto_3c

    .line 216
    :cond_69
    invoke-virtual {v3}, Lcom/samsung/android/cover/CoverManager;->getCoverState()Lcom/samsung/android/cover/CoverState;

    move-result-object v3

    if-eqz v3, :cond_75

    .line 217
    invoke-virtual {v3}, Lcom/samsung/android/cover/CoverState;->getSwitchState()Z

    move-result v3

    if-eqz v3, :cond_6a

    goto/16 :goto_3c

    .line 218
    :cond_6a
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 219
    iget-object v3, v3, Lcom/android/server/audio/AudioServiceExt;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    .line 220
    iput-boolean v7, v3, Lcom/samsung/android/server/audio/CoverHelper;->mIsCoverSafetyVolume:Z

    goto/16 :goto_3c

    .line 221
    :cond_6b
    :goto_37
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v3, :cond_6c

    const/4 v3, -0x1

    if-ne v15, v3, :cond_6d

    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 222
    iget-boolean v2, v4, Lcom/android/server/audio/AudioService$VolumeController;->mSafetyDialogVisible:Z

    if-eqz v2, :cond_6d

    const/high16 v2, 0x8000000

    .line 223
    invoke-virtual {v4, v2}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    and-int/lit8 v1, v1, -0x2

    goto/16 :goto_3c

    :cond_6c
    const/4 v3, -0x1

    .line 224
    :cond_6d
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v2

    if-nez v2, :cond_75

    mul-int v2, v15, v16

    .line 225
    invoke-virtual {v12, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v4

    add-int/2addr v4, v2

    move/from16 v2, p9

    .line 226
    invoke-virtual {v12, v4, v10, v14, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    move-result v2

    if-nez v2, :cond_6e

    .line 227
    iget-boolean v2, v12, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-eqz v2, :cond_75

    .line 228
    :cond_6e
    iget-boolean v2, v12, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-eqz v2, :cond_73

    if-ne v15, v7, :cond_72

    .line 229
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    monitor-enter v2

    .line 230
    :try_start_9
    sget-boolean v4, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    if-nez v4, :cond_6f

    const/4 v4, 0x5

    if-ne v11, v4, :cond_6f

    .line 231
    iget v4, v13, Lcom/android/server/audio/AudioService;->mRingerMode:I

    const/4 v14, 0x2

    if-ne v4, v14, :cond_71

    .line 232
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "adjustStreamVolume: ringer_mode: "

    invoke-virtual {v4, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v14, v13, Lcom/android/server/audio/AudioService;->mRingerMode:I

    invoke-virtual {v4, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const/4 v14, 0x0

    invoke-virtual {v12, v4, v14}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    goto :goto_39

    :catchall_4
    move-exception v0

    goto :goto_3a

    :cond_6f
    const/4 v14, 0x0

    move v4, v14

    .line 233
    :goto_38
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    array-length v7, v3

    if-ge v4, v7, :cond_71

    .line 234
    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v7, v7, v4

    if-ne v11, v7, :cond_70

    .line 235
    aget-object v3, v3, v4

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "adjustStreamVolume: ringer_mode: "

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v14, v13, Lcom/android/server/audio/AudioService;->mRingerMode:I

    invoke-virtual {v7, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    const/4 v14, 0x0

    invoke-virtual {v3, v7, v14}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    :cond_70
    const/4 v3, 0x1

    add-int/2addr v4, v3

    move v7, v3

    const/4 v14, 0x0

    goto :goto_38

    .line 236
    :cond_71
    :goto_39
    monitor-exit v2

    goto :goto_3b

    :goto_3a
    monitor-exit v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    throw v0

    :cond_72
    if-ne v15, v3, :cond_73

    .line 237
    iget-boolean v2, v13, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    if-eqz v2, :cond_73

    .line 238
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v18, 0x12

    const/16 v19, 0x2

    const/16 v22, 0x0

    const/16 v23, 0x15e

    move-object/from16 v17, v2

    move/from16 v20, v11

    move/from16 v21, v1

    invoke-static/range {v17 .. v23}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 239
    :cond_73
    :goto_3b
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    if-eqz v2, :cond_74

    .line 240
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 241
    iget-object v2, v2, Lcom/android/server/audio/AudioServiceExt;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    .line 242
    iget-boolean v2, v2, Lcom/samsung/android/server/audio/CoverHelper;->mIsCoverSafetyVolume:Z

    if-eqz v2, :cond_74

    const/4 v2, -0x1

    if-ne v15, v2, :cond_74

    .line 243
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    invoke-virtual {v2, v10}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeIndex(I)I

    move-result v2

    if-ne v0, v2, :cond_74

    .line 244
    const-string v2, "AS.AudioService"

    const-string v3, "Remove the SafeVolumeWarning when cover is closed"

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 245
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    const/high16 v3, 0x8000000

    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 246
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 247
    iget-object v2, v2, Lcom/android/server/audio/AudioServiceExt;->mCoverHelper:Lcom/samsung/android/server/audio/CoverHelper;

    const/4 v3, 0x0

    .line 248
    iput-boolean v3, v2, Lcom/samsung/android/server/audio/CoverHelper;->mIsCoverSafetyVolume:Z

    .line 249
    :cond_74
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v18, 0x0

    const/16 v19, 0x2

    const/16 v21, 0x0

    const/16 v23, 0x0

    move-object/from16 v17, v2

    move/from16 v20, v10

    move-object/from16 v22, v12

    invoke-static/range {v17 .. v23}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 250
    :cond_75
    :goto_3c
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v9

    invoke-virtual {v2, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v2

    .line 251
    invoke-static {}, Lcom/android/media/audio/Flags;->absVolumeIndexFix()Z

    const/4 v3, 0x3

    if-ne v11, v3, :cond_76

    .line 252
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 253
    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_76

    and-int/lit8 v3, v1, 0x40

    if-nez v3, :cond_76

    .line 254
    const-string v3, "AS.AudioService"

    const-string v4, "adjustStreamVolume: postSetAvrcpAbsoluteVolumeIndex index="

    const-string/jumbo v7, "stream="

    .line 255
    invoke-static {v2, v9, v4, v7, v3}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 256
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v4, 0x0

    const/16 v7, 0xf

    .line 257
    invoke-virtual {v3, v7, v4, v2}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    goto :goto_3d

    .line 258
    :cond_76
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v3

    if-eqz v3, :cond_77

    and-int/lit16 v3, v1, 0x2000

    if-nez v3, :cond_77

    .line 259
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 260
    invoke-virtual {v13, v9, v3, v2}, Lcom/android/server/audio/AudioService;->dispatchAbsoluteVolumeChanged(ILcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;I)V

    .line 261
    :cond_77
    :goto_3d
    invoke-static {v10}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    move-result v3

    if-eqz v3, :cond_78

    .line 262
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getBluetoothContextualVolumeStream()I

    move-result v3

    if-ne v9, v3, :cond_78

    and-int/lit8 v3, v1, 0x40

    if-nez v3, :cond_78

    .line 263
    const-string v3, "AS.AudioService"

    const-string v4, "adjustStreamVolume postSetLeAudioVolumeIndex index="

    const-string v7, " stream="

    .line 264
    invoke-static {v2, v9, v4, v7, v3}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 265
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, v9

    .line 266
    iget v4, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 267
    invoke-virtual {v3, v2, v4, v9}, Lcom/android/server/audio/AudioDeviceBroker;->postSetLeAudioVolumeIndex(III)V

    :cond_78
    const/high16 v3, 0x8000000

    if-ne v10, v3, :cond_7a

    .line 268
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getBluetoothContextualVolumeStream()I

    move-result v3

    if-ne v9, v3, :cond_7a

    .line 269
    const-string v3, "AS.AudioService"

    const-string v4, "adjustStreamVolume postSetHearingAidVolumeIndex index="

    const-string v7, " stream="

    .line 270
    invoke-static {v2, v9, v4, v7, v3}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 271
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v18, 0xe

    const/16 v19, 0x0

    move-object/from16 v17, v3

    move/from16 v20, v2

    move/from16 v21, v9

    .line 272
    invoke-virtual/range {v17 .. v23}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    goto :goto_3e

    :cond_79
    move/from16 v8, v30

    .line 273
    :cond_7a
    :goto_3e
    iget-object v2, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v9

    invoke-virtual {v2, v10}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v2

    if-eqz v6, :cond_8b

    .line 274
    iget-object v3, v13, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v3

    .line 275
    :try_start_a
    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    if-eqz v4, :cond_89

    .line 276
    iget-object v4, v13, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 277
    iget-object v7, v13, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v7, :cond_7b

    goto :goto_3f

    :cond_7b
    move-object v7, v4

    :goto_3f
    if-eqz v4, :cond_7c

    .line 278
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    move-result v4

    if-eqz v4, :cond_7c

    const/4 v4, 0x1

    goto :goto_40

    :catchall_5
    move-exception v0

    goto/16 :goto_4a

    :cond_7c
    const/4 v4, 0x0

    .line 279
    :goto_40
    iget-object v12, v13, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    if-eqz v12, :cond_7d

    iget-boolean v12, v13, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    if-eqz v12, :cond_7d

    .line 280
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v12

    if-nez v12, :cond_7d

    .line 281
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AudioService;->isA2dpAbsoluteVolumeDevice(I)Z

    move-result v12

    if-nez v12, :cond_7d

    const/4 v12, 0x1

    goto :goto_41

    :cond_7d
    const/4 v12, 0x0

    :goto_41
    if-nez v4, :cond_80

    if-eqz v12, :cond_7e

    goto :goto_42

    :cond_7e
    const/4 v4, 0x3

    :cond_7f
    const/4 v5, 0x0

    goto/16 :goto_48

    .line 282
    :cond_80
    :goto_42
    iget-boolean v4, v13, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    if-eqz v4, :cond_87

    const/4 v4, 0x3

    if-ne v11, v4, :cond_7f

    const/16 v4, -0x64

    if-eq v15, v4, :cond_83

    const/4 v4, -0x1

    if-eq v15, v4, :cond_82

    const/4 v4, 0x1

    if-eq v15, v4, :cond_81

    const/16 v4, 0x64

    if-eq v15, v4, :cond_83

    const/16 v4, 0x65

    if-eq v15, v4, :cond_83

    const/4 v4, 0x0

    goto :goto_43

    :cond_81
    const/16 v4, 0x18

    goto :goto_43

    :cond_82
    const/16 v4, 0x19

    goto :goto_43

    :cond_83
    const/16 v4, 0xa4

    :goto_43
    if-eqz v4, :cond_87

    .line 283
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    if-eqz v5, :cond_86

    const/4 v12, 0x1

    if-eq v5, v12, :cond_85

    const/4 v12, 0x2

    if-eq v5, v12, :cond_84

    .line 284
    :try_start_b
    const-string v4, "AS.AudioService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Invalid keyEventMode "

    invoke-virtual {v7, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    :goto_44
    const/4 v5, 0x0

    goto :goto_45

    :catchall_6
    move-exception v0

    goto :goto_47

    :cond_84
    const/4 v5, 0x0

    .line 285
    invoke-virtual {v7, v4, v5}, Landroid/hardware/hdmi/HdmiClient;->sendVolumeKeyEvent(IZ)V

    goto :goto_44

    :cond_85
    move v5, v12

    .line 286
    invoke-virtual {v7, v4, v5}, Landroid/hardware/hdmi/HdmiClient;->sendVolumeKeyEvent(IZ)V

    goto :goto_44

    :cond_86
    const/4 v5, 0x1

    .line 287
    invoke-virtual {v7, v4, v5}, Landroid/hardware/hdmi/HdmiClient;->sendVolumeKeyEvent(IZ)V

    const/4 v5, 0x0

    .line 288
    invoke-virtual {v7, v4, v5}, Landroid/hardware/hdmi/HdmiClient;->sendVolumeKeyEvent(IZ)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_6

    .line 289
    :goto_45
    :try_start_c
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_46
    const/4 v4, 0x3

    goto :goto_48

    :goto_47
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 290
    throw v0

    :cond_87
    const/4 v5, 0x0

    goto :goto_46

    :goto_48
    if-ne v11, v4, :cond_8a

    if-ne v0, v2, :cond_88

    if-eqz v8, :cond_8a

    .line 291
    :cond_88
    invoke-virtual {v13, v8}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    goto :goto_49

    :cond_89
    const/4 v5, 0x0

    .line 292
    :cond_8a
    :goto_49
    monitor-exit v3

    goto :goto_4b

    :goto_4a
    monitor-exit v3
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    throw v0

    :cond_8b
    const/4 v5, 0x0

    :goto_4b
    move-object/from16 p5, p0

    move/from16 p6, v9

    move/from16 p7, v0

    move/from16 p8, v2

    move/from16 p9, v1

    move/from16 p10, v10

    .line 293
    invoke-virtual/range {p5 .. p10}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 294
    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    if-eqz v1, :cond_90

    .line 295
    const-string v3, "AudioService"

    iget-object v4, v1, Lcom/samsung/android/server/audio/GoodCatchManager;->mModule:Ljava/lang/String;

    invoke-static {v3, v4}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v3

    if-eqz v3, :cond_8c

    .line 296
    iget-object v1, v1, Lcom/samsung/android/server/audio/GoodCatchManager;->mSoundFunc:[Z

    const/4 v3, 0x2

    aget-boolean v8, v1, v3

    goto :goto_4c

    :cond_8c
    move v8, v5

    :goto_4c
    if-eqz v8, :cond_90

    const/4 v1, 0x3

    if-ne v9, v1, :cond_90

    if-eqz v6, :cond_8d

    if-lez v0, :cond_8d

    if-eqz v2, :cond_8f

    :cond_8d
    const/16 v0, 0x65

    if-ne v15, v0, :cond_8e

    .line 297
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v9

    iget-boolean v0, v0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-nez v0, :cond_8f

    :cond_8e
    const/16 v0, -0x64

    if-ne v15, v0, :cond_90

    .line 298
    :cond_8f
    iget-object v0, v13, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    iget-object v1, v13, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 299
    iget-object v0, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mSemGoodCatchManager:Lcom/samsung/android/sepunion/SemGoodCatchManager;

    .line 300
    sget-object v2, Lcom/samsung/android/server/audio/GoodCatchManager;->SOUND_FUNC:[Ljava/lang/String;

    const/4 v3, 0x2

    aget-object v2, v2, v3

    const/4 v3, 0x0

    const-string v4, ""

    move-object/from16 p5, v0

    move-object/from16 p6, v2

    move-object/from16 p7, p4

    move/from16 p8, v3

    move-object/from16 p9, v4

    move-object/from16 p10, v1

    invoke-virtual/range {p5 .. p10}, Lcom/samsung/android/sepunion/SemGoodCatchManager;->update(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    :cond_90
    return-void

    :catchall_7
    move-exception v0

    .line 301
    :try_start_d
    monitor-exit v3
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_7

    throw v0
.end method

.method public final adjustStreamVolumeForUid(IIILjava/lang/String;IILandroid/os/UserHandle;I)V
    .locals 13

    .line 1
    move/from16 v6, p5

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 6
    move-result v0

    .line 7
    const/16 v1, 0x3e8

    .line 9
    if-ne v0, v1, :cond_2

    .line 11
    if-eqz p2, :cond_0

    .line 13
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 15
    new-instance v1, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 17
    new-instance v2, Ljava/lang/StringBuilder;

    .line 19
    move-object/from16 v5, p4

    .line 21
    invoke-direct {v2, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 24
    const-string v3, " uid:"

    .line 26
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 29
    invoke-virtual {v2, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object v12

    .line 36
    const/4 v8, 0x5

    .line 37
    move-object v7, v1

    .line 38
    move v9, p1

    .line 39
    move v10, p2

    .line 40
    move/from16 v11, p3

    .line 42
    invoke-direct/range {v7 .. v12}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 45
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 48
    :goto_0
    move-object v0, p0

    .line 49
    goto :goto_1

    .line 50
    :cond_0
    move-object/from16 v5, p4

    .line 52
    goto :goto_0

    .line 53
    :goto_1
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 55
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 57
    move/from16 v7, p6

    .line 59
    invoke-virtual {v1, v2, v7, v6}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    .line 62
    move-result v1

    .line 63
    if-nez v1, :cond_1

    .line 65
    const/4 v1, 0x1

    .line 66
    :goto_2
    move v9, v1

    .line 67
    goto :goto_3

    .line 68
    :cond_1
    const/4 v1, 0x0

    .line 69
    goto :goto_2

    .line 70
    :goto_3
    const/4 v10, 0x0

    .line 71
    const/4 v8, 0x0

    .line 72
    move-object v0, p0

    .line 73
    move v1, p1

    .line 74
    move v2, p2

    .line 75
    move/from16 v3, p3

    .line 77
    move-object/from16 v4, p4

    .line 79
    move-object/from16 v5, p4

    .line 81
    move/from16 v6, p5

    .line 83
    move/from16 v7, p6

    .line 85
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/audio/AudioService;->adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IILjava/lang/String;ZI)V

    .line 88
    return-void

    .line 89
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    .line 91
    const-string v1, "Should only be called from system process"

    .line 93
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 96
    throw v0
.end method

.method public final adjustStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V
    .locals 12

    .line 1
    move-object v0, p0

    .line 2
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    .line 4
    const/16 v2, 0x67

    .line 6
    invoke-virtual {v1, v2}, Lcom/android/server/audio/HardeningEnforcer;->blockVolumeMethod(I)Z

    .line 9
    move-result v1

    .line 10
    if-eqz v1, :cond_0

    .line 12
    return-void

    .line 13
    :cond_0
    const/16 v1, 0xa

    .line 15
    move v8, p1

    .line 16
    if-ne v8, v1, :cond_1

    .line 18
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    .line 21
    move-result v1

    .line 22
    if-nez v1, :cond_1

    .line 24
    const-string v0, "Trying to call adjustStreamVolume() for a11y withoutCHANGE_ACCESSIBILITY_VOLUME / callingPackage="

    .line 26
    const-string v1, "AS.AudioService"

    .line 28
    move-object/from16 v9, p4

    .line 30
    invoke-static {v0, v9, v1}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 33
    return-void

    .line 34
    :cond_1
    move-object/from16 v9, p4

    .line 36
    new-instance v1, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 38
    const/4 v3, 0x1

    .line 39
    move-object v2, v1

    .line 40
    move v4, p1

    .line 41
    move v5, p2

    .line 42
    move v6, p3

    .line 43
    move-object/from16 v7, p4

    .line 45
    invoke-direct/range {v2 .. v7}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 48
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 50
    invoke-virtual {v2, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 53
    invoke-static {p2}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    .line 56
    move-result v2

    .line 57
    if-eqz v2, :cond_2

    .line 59
    sget-object v2, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 61
    invoke-virtual {v2, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 64
    :cond_2
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 67
    move-result v6

    .line 68
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 71
    move-result v7

    .line 72
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 74
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 76
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 79
    move-result v1

    .line 80
    if-nez v1, :cond_3

    .line 82
    const/4 v1, 0x1

    .line 83
    :goto_0
    move v10, v1

    .line 84
    goto :goto_1

    .line 85
    :cond_3
    const/4 v1, 0x0

    .line 86
    goto :goto_0

    .line 87
    :goto_1
    const/4 v11, 0x0

    .line 88
    move-object v0, p0

    .line 89
    move v1, p1

    .line 90
    move v2, p2

    .line 91
    move v3, p3

    .line 92
    move-object/from16 v4, p4

    .line 94
    move-object/from16 v5, p4

    .line 96
    move-object/from16 v8, p5

    .line 98
    move v9, v10

    .line 99
    move v10, v11

    .line 100
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/audio/AudioService;->adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IILjava/lang/String;ZI)V

    .line 103
    return-void
.end method

.method public final adjustSuggestedStreamVolume(III)V
    .locals 2

    .line 45
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    const/16 v1, 0x66

    invoke-virtual {v0, v1}, Lcom/android/server/audio/HardeningEnforcer;->blockVolumeMethod(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    .line 46
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    if-nez v0, :cond_1

    .line 47
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "media_session"

    .line 48
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/media/session/MediaSessionManager;

    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    .line 49
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    .line 50
    invoke-virtual {p0, p2, p1, p3}, Landroid/media/session/MediaSessionManager;->dispatchAdjustVolume(III)V

    return-void
.end method

.method public final adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IIZI)V
    .locals 14

    move-object v0, p0

    move/from16 v8, p2

    move-object/from16 v9, p4

    move-object/from16 v10, p5

    .line 1
    const-string v1, "AS.AudioService"

    const-string v2, "adjustSuggestedStreamVolume() stream="

    const-string v3, ", flags="

    const-string v4, ", caller="

    move/from16 v11, p3

    .line 2
    invoke-static {v8, v11, v2, v3, v4}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 3
    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v3, ", volControlStream="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget v3, v0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v3, ", userSelect="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    iget-boolean v3, v0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 4
    invoke-static {v1, v2, v3}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    if-eqz p1, :cond_0

    .line 5
    sget-object v7, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    new-instance v12, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    const-string v2, "/"

    .line 6
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v2, " uid:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move/from16 v13, p6

    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v2, 0x0

    move-object v1, v12

    move/from16 v3, p2

    move v4, p1

    move/from16 v5, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 7
    invoke-virtual {v7, v12}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    goto :goto_0

    :cond_0
    move/from16 v13, p6

    .line 8
    :goto_0
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mExtVolumeControllerLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9
    :try_start_0
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 10
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    const/4 v12, 0x0

    if-nez v6, :cond_1

    move v1, v12

    goto :goto_1

    .line 11
    :cond_1
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/16 v2, 0x16

    const/4 v3, 0x2

    const/4 v5, 0x0

    const/4 v7, 0x0

    move v4, p1

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    const/4 v1, 0x1

    .line 12
    :goto_1
    new-instance v2, Landroid/media/MediaMetrics$Item;

    const-string v3, "audio.service.adjustSuggestedStreamVolume"

    invoke-direct {v2, v3}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 13
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v3, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 14
    invoke-virtual {v2, v3, v9}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v3, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 15
    invoke-virtual {v2, v3, v10}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v3, Landroid/media/MediaMetrics$Property;->DIRECTION:Landroid/media/MediaMetrics$Key;

    if-lez p1, :cond_2

    .line 16
    const-string/jumbo v4, "up"

    goto :goto_2

    :cond_2
    const-string/jumbo v4, "down"

    .line 17
    :goto_2
    invoke-virtual {v2, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v3, Landroid/media/MediaMetrics$Property;->EXTERNAL:Landroid/media/MediaMetrics$Key;

    if-eqz v1, :cond_3

    .line 18
    const-string/jumbo v4, "yes"

    goto :goto_3

    :cond_3
    const-string/jumbo v4, "no"

    .line 19
    :goto_3
    invoke-virtual {v2, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    sget-object v3, Landroid/media/MediaMetrics$Property;->FLAGS:Landroid/media/MediaMetrics$Key;

    .line 20
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-virtual {v2, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    move-result-object v2

    .line 21
    invoke-virtual {v2}, Landroid/media/MediaMetrics$Item;->record()Z

    if-eqz v1, :cond_4

    return-void

    .line 22
    :cond_4
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    monitor-enter v2

    .line 23
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    if-eqz v1, :cond_6

    .line 24
    iget v1, v0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    :cond_5
    :goto_4
    move v3, v1

    goto :goto_7

    :catchall_0
    move-exception v0

    goto :goto_8

    .line 25
    :cond_6
    invoke-virtual {p0, v8}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    move-result v1

    const/4 v3, 0x2

    if-eq v1, v3, :cond_8

    const/4 v3, 0x5

    if-ne v1, v3, :cond_7

    goto :goto_5

    .line 26
    :cond_7
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 27
    invoke-static {v1, v12}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    move-result v3

    goto :goto_6

    .line 28
    :cond_8
    :goto_5
    invoke-virtual {p0, v1, v12}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    move-result v3

    :goto_6
    if-nez v3, :cond_5

    .line 29
    iget v3, v0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    const/4 v4, -0x1

    if-ne v3, v4, :cond_9

    goto :goto_4

    .line 30
    :cond_9
    :goto_7
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 31
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 32
    sget-object v1, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v1, v1, v3

    const/4 v12, 0x0

    move-object v1, p0

    move v2, v3

    move v3, p1

    move/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move-object v9, v12

    move/from16 v10, p8

    move/from16 v11, p9

    .line 33
    invoke-virtual/range {v1 .. v11}, Lcom/android/server/audio/AudioService;->adjustStreamVolume(IIILjava/lang/String;Ljava/lang/String;IILjava/lang/String;ZI)V

    return-void

    .line 34
    :goto_8
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    :catchall_1
    move-exception v0

    .line 35
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v0
.end method

.method public final adjustSuggestedStreamVolumeForUid(IIILjava/lang/String;IILandroid/os/UserHandle;I)V
    .locals 12

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-ne v0, v1, :cond_1

    .line 9
    move-object v0, p0

    .line 10
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 12
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 14
    move/from16 v8, p5

    .line 16
    move/from16 v9, p6

    .line 18
    invoke-virtual {v1, v2, v9, v8}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    .line 21
    move-result v1

    .line 22
    if-nez v1, :cond_0

    .line 24
    const/4 v1, 0x1

    .line 25
    :goto_0
    move v10, v1

    .line 26
    goto :goto_1

    .line 27
    :cond_0
    const/4 v1, 0x0

    .line 28
    goto :goto_0

    .line 29
    :goto_1
    const/4 v11, 0x0

    .line 30
    move-object v2, p0

    .line 31
    move v3, p2

    .line 32
    move v4, p1

    .line 33
    move v5, p3

    .line 34
    move-object/from16 v6, p4

    .line 36
    move-object/from16 v7, p4

    .line 38
    move/from16 v8, p5

    .line 40
    move/from16 v9, p6

    .line 42
    invoke-virtual/range {v2 .. v11}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IIZI)V

    .line 45
    return-void

    .line 46
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    .line 48
    const-string v1, "Should only be called from system process"

    .line 50
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 53
    throw v0
.end method

.method public final adjustVolume(II)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    .line 3
    const/16 v1, 0x65

    .line 5
    invoke-virtual {v0, v1}, Lcom/android/server/audio/HardeningEnforcer;->blockVolumeMethod(I)Z

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 11
    return-void

    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    .line 14
    if-nez v0, :cond_1

    .line 16
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 18
    const-string/jumbo v1, "media_session"

    .line 21
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 24
    move-result-object v0

    .line 25
    check-cast v0, Landroid/media/session/MediaSessionManager;

    .line 27
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    .line 29
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionManager:Landroid/media/session/MediaSessionManager;

    .line 31
    const/high16 v0, -0x80000000

    .line 33
    invoke-virtual {p0, v0, p1, p2}, Landroid/media/session/MediaSessionManager;->dispatchAdjustVolume(III)V

    .line 36
    return-void
.end method

.method public final adjustVolumeGroupVolume(IIILjava/lang/String;)V
    .locals 16

    .line 1
    move/from16 v0, p1

    .line 3
    move/from16 v7, p2

    .line 5
    move/from16 v8, p3

    .line 7
    invoke-static/range {p2 .. p2}, Lcom/android/server/audio/AudioService;->ensureValidDirection(I)V

    .line 10
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 12
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 15
    move-result v2

    .line 16
    if-gez v2, :cond_0

    .line 18
    const-string v1, "AS.AudioService"

    .line 20
    const-string v2, ": no volume group found for id "

    .line 22
    invoke-static {v0, v2, v1}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 25
    return-void

    .line 26
    :cond_0
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 29
    move-result-object v1

    .line 30
    move-object v9, v1

    .line 31
    check-cast v9, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 33
    iget-object v1, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 35
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getLegacyStreamTypes()[I

    .line 38
    move-result-object v10

    .line 39
    array-length v11, v10

    .line 40
    const/4 v12, 0x0

    .line 41
    move v1, v12

    .line 42
    move v13, v1

    .line 43
    :goto_0
    const/4 v14, 0x1

    .line 44
    if-ge v13, v11, :cond_3

    .line 46
    aget v2, v10, v13

    .line 48
    move-object/from16 v15, p0

    .line 50
    :try_start_0
    invoke-virtual {v15, v2}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 53
    invoke-virtual {v9, v2}, Lcom/android/server/audio/AudioService$VolumeGroupState;->isVssMuteBijective(I)Z

    .line 56
    move-result v3

    .line 57
    if-eqz v3, :cond_2

    .line 59
    const/4 v6, 0x0

    .line 60
    move-object/from16 v1, p0

    .line 62
    move/from16 v3, p2

    .line 64
    move/from16 v4, p3

    .line 66
    move-object/from16 v5, p4

    .line 68
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->adjustStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V

    .line 71
    invoke-static/range {p2 .. p2}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    .line 74
    move-result v1

    .line 75
    if-eqz v1, :cond_1

    .line 77
    return-void

    .line 78
    :cond_1
    move v1, v14

    .line 79
    goto :goto_1

    .line 80
    :catch_0
    const-string v3, "AS.AudioService"

    .line 82
    const-string/jumbo v4, "volume group "

    .line 85
    const-string v5, " has internal streams ("

    .line 87
    const-string v6, "), do not change associated stream volume"

    .line 89
    invoke-static {v0, v2, v4, v5, v6}, Lcom/android/server/DualAppManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 92
    move-result-object v2

    .line 93
    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 96
    :cond_2
    :goto_1
    add-int/lit8 v13, v13, 0x1

    .line 98
    goto :goto_0

    .line 99
    :cond_3
    if-eqz v1, :cond_4

    .line 101
    return-void

    .line 102
    :cond_4
    sget-object v6, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 104
    new-instance v10, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 106
    iget-object v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 108
    invoke-virtual {v0}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 111
    move-result-object v4

    .line 112
    const/16 v1, 0xb

    .line 114
    move-object v0, v10

    .line 115
    move/from16 v2, p2

    .line 117
    move/from16 v3, p3

    .line 119
    move-object/from16 v5, p4

    .line 121
    invoke-direct/range {v0 .. v5}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIILjava/lang/String;Ljava/lang/String;)V

    .line 124
    invoke-virtual {v6, v10}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 127
    const-string/jumbo v0, "invalid mute on unmutable volume group "

    .line 130
    iget-object v1, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 132
    iget-object v1, v1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 134
    monitor-enter v1

    .line 135
    :try_start_1
    const-class v2, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 137
    monitor-enter v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 138
    :try_start_2
    iget-object v3, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 140
    iget v4, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 142
    invoke-virtual {v3, v4}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 145
    move-result v3

    .line 146
    invoke-virtual {v9, v3}, Lcom/android/server/audio/AudioService$VolumeGroupState;->getIndex(I)I

    .line 149
    move-result v4

    .line 150
    iget-object v5, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 152
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 155
    invoke-static/range {p2 .. p2}, Lcom/android/server/audio/AudioService;->isMuteAdjust(I)Z

    .line 158
    move-result v5

    .line 159
    if-eqz v5, :cond_6

    .line 161
    iget v5, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMin:I

    .line 163
    if-eqz v5, :cond_6

    .line 165
    iget-boolean v5, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mHasValidStreamType:Z

    .line 167
    if-eqz v5, :cond_5

    .line 169
    iget v5, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 171
    invoke-virtual {v9, v5}, Lcom/android/server/audio/AudioService$VolumeGroupState;->isVssMuteBijective(I)Z

    .line 174
    move-result v5

    .line 175
    if-eqz v5, :cond_5

    .line 177
    goto :goto_2

    .line 178
    :cond_5
    const-string v3, "AS.AudioService"

    .line 180
    new-instance v4, Ljava/lang/StringBuilder;

    .line 182
    invoke-direct {v4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 185
    iget-object v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 187
    invoke-virtual {v0}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 190
    move-result-object v0

    .line 191
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 194
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 197
    move-result-object v0

    .line 198
    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 201
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 202
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 203
    goto :goto_4

    .line 204
    :catchall_0
    move-exception v0

    .line 205
    goto :goto_6

    .line 206
    :catchall_1
    move-exception v0

    .line 207
    goto :goto_5

    .line 208
    :cond_6
    :goto_2
    const/16 v0, -0x64

    .line 210
    if-eq v7, v0, :cond_c

    .line 212
    const/4 v0, -0x1

    .line 213
    if-eq v7, v0, :cond_a

    .line 215
    if-eq v7, v14, :cond_9

    .line 217
    const/16 v0, 0x64

    .line 219
    if-eq v7, v0, :cond_8

    .line 221
    const/16 v0, 0x65

    .line 223
    if-eq v7, v0, :cond_7

    .line 225
    goto :goto_3

    .line 226
    :cond_7
    :try_start_4
    iget-boolean v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 228
    xor-int/2addr v0, v14

    .line 229
    invoke-virtual {v9, v0}, Lcom/android/server/audio/AudioService$VolumeGroupState;->mute(Z)Z

    .line 232
    goto :goto_3

    .line 233
    :cond_8
    invoke-virtual {v9, v12}, Lcom/android/server/audio/AudioService$VolumeGroupState;->mute(Z)Z

    .line 236
    goto :goto_3

    .line 237
    :cond_9
    add-int/2addr v4, v14

    .line 238
    iget v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMax:I

    .line 240
    invoke-static {v4, v0}, Ljava/lang/Math;->min(II)I

    .line 243
    move-result v0

    .line 244
    invoke-virtual {v9, v0, v3, v8}, Lcom/android/server/audio/AudioService$VolumeGroupState;->setVolumeIndex(III)V

    .line 247
    goto :goto_3

    .line 248
    :cond_a
    iget-boolean v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 250
    if-eqz v0, :cond_b

    .line 252
    if-eqz v4, :cond_b

    .line 254
    invoke-virtual {v9, v12}, Lcom/android/server/audio/AudioService$VolumeGroupState;->mute(Z)Z

    .line 257
    goto :goto_3

    .line 258
    :cond_b
    sub-int/2addr v4, v14

    .line 259
    iget v0, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMin:I

    .line 261
    invoke-static {v4, v0}, Ljava/lang/Math;->max(II)I

    .line 264
    move-result v0

    .line 265
    invoke-virtual {v9, v0, v3, v8}, Lcom/android/server/audio/AudioService$VolumeGroupState;->setVolumeIndex(III)V

    .line 268
    goto :goto_3

    .line 269
    :cond_c
    if-eqz v4, :cond_d

    .line 271
    invoke-virtual {v9, v14}, Lcom/android/server/audio/AudioService$VolumeGroupState;->mute(Z)Z

    .line 274
    :cond_d
    iput-boolean v14, v9, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 276
    :goto_3
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 277
    :try_start_5
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 278
    :goto_4
    return-void

    .line 279
    :goto_5
    :try_start_6
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 280
    :try_start_7
    throw v0

    .line 281
    :goto_6
    monitor-exit v1
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 282
    throw v0
.end method

.method public final areNavigationRepeatSoundEffectsEnabled()Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mNavigationRepeatSoundEffectsEnabled:Z

    .line 3
    return p0
.end method

.method public final broadcastRingerMode(ILjava/lang/String;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    new-instance v0, Landroid/content/Intent;

    .line 8
    invoke-direct {v0, p2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11
    const-string p2, "android.media.EXTRA_RINGER_MODE"

    .line 13
    invoke-virtual {v0, p2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 16
    const/high16 p1, 0x24000000

    .line 18
    invoke-virtual {v0, p1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 21
    const/high16 p1, 0x10000000

    .line 23
    invoke-virtual {v0, p1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 26
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 29
    move-result-wide p1

    .line 30
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 32
    sget-object v1, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 34
    invoke-virtual {p0, v0, v1}, Landroid/content/Context;->sendStickyBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 37
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 40
    return-void

    .line 41
    :catchall_0
    move-exception p0

    .line 42
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 45
    throw p0
.end method

.method public final broadcastVibrateSetting(I)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mActivityManagerInternal:Landroid/app/ActivityManagerInternal;

    .line 8
    invoke-virtual {v0}, Landroid/app/ActivityManagerInternal;->isSystemReady()Z

    .line 11
    move-result v0

    .line 12
    if-eqz v0, :cond_0

    .line 14
    new-instance v0, Landroid/content/Intent;

    .line 16
    const-string v1, "android.media.VIBRATE_SETTING_CHANGED"

    .line 18
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 21
    const-string v1, "android.media.EXTRA_VIBRATE_TYPE"

    .line 23
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 26
    const-string v1, "android.media.EXTRA_VIBRATE_SETTING"

    .line 28
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getVibrateSetting(I)I

    .line 31
    move-result p1

    .line 32
    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 35
    const/4 p1, 0x0

    .line 36
    invoke-virtual {p0, v0, p1}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 39
    :cond_0
    return-void
.end method

.method public final callerHasPermission(Ljava/lang/String;)Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    invoke-virtual {p0, p1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 6
    move-result p0

    .line 7
    if-nez p0, :cond_0

    .line 9
    const/4 p0, 0x1

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    const/4 p0, 0x0

    .line 12
    :goto_0
    return p0
.end method

.method public final canBeSpatialized(Landroid/media/AudioAttributes;Landroid/media/AudioFormat;)Z
    .locals 8

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    const-string/jumbo v0, "canBeSpatialized false due to usage:"

    .line 12
    const-string/jumbo v1, "canBeSpatialized usage:"

    .line 15
    const-string/jumbo v2, "canBeSpatialized got no device for "

    .line 18
    const-string/jumbo v3, "canBeSpatialized false due to state:"

    .line 21
    monitor-enter p0

    .line 22
    :try_start_0
    iget v4, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 24
    const/4 v5, 0x0

    .line 25
    if-eqz v4, :cond_2

    .line 27
    const/4 v6, 0x1

    .line 28
    if-eq v4, v6, :cond_2

    .line 30
    const/4 v7, 0x3

    .line 31
    if-eq v4, v7, :cond_2

    .line 33
    const/4 v7, 0x4

    .line 34
    if-eq v4, v7, :cond_2

    .line 36
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getUsage()I

    .line 39
    move-result v3

    .line 40
    if-eq v3, v6, :cond_0

    .line 42
    const/16 v4, 0xe

    .line 44
    if-eq v3, v4, :cond_0

    .line 46
    new-instance p2, Ljava/lang/StringBuilder;

    .line 48
    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 51
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getUsage()I

    .line 54
    move-result p1

    .line 55
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 58
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 61
    move-result-object p1

    .line 62
    const-string p2, "AS.SpatializerHelper"

    .line 64
    invoke-static {p2, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 67
    monitor-exit p0

    .line 68
    goto :goto_0

    .line 69
    :catchall_0
    move-exception p1

    .line 70
    goto :goto_1

    .line 71
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->getRoutingDevices(Landroid/media/AudioAttributes;)Ljava/util/ArrayList;

    .line 74
    move-result-object v0

    .line 75
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    .line 78
    move-result v3

    .line 79
    if-eqz v3, :cond_1

    .line 81
    new-instance p2, Ljava/lang/StringBuilder;

    .line 83
    invoke-direct {p2, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 86
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 89
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 92
    move-result-object p1

    .line 93
    invoke-static {p1}, Lcom/android/server/audio/SpatializerHelper;->logloge(Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 96
    monitor-exit p0

    .line 97
    goto :goto_0

    .line 98
    :cond_1
    :try_start_2
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/audio/SpatializerHelper;->canBeSpatializedOnDevice(Landroid/media/AudioAttributes;Landroid/media/AudioFormat;Ljava/util/ArrayList;)Z

    .line 101
    move-result v5

    .line 102
    new-instance v0, Ljava/lang/StringBuilder;

    .line 104
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 107
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getUsage()I

    .line 110
    move-result p1

    .line 111
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 114
    const-string p1, " format:"

    .line 116
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 119
    invoke-virtual {p2}, Landroid/media/AudioFormat;->toLogFriendlyString()Ljava/lang/String;

    .line 122
    move-result-object p1

    .line 123
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 126
    const-string p1, " returning "

    .line 128
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 131
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 134
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 137
    move-result-object p1

    .line 138
    const-string p2, "AS.SpatializerHelper"

    .line 140
    invoke-static {p2, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 143
    monitor-exit p0

    .line 144
    goto :goto_0

    .line 145
    :cond_2
    :try_start_3
    new-instance p1, Ljava/lang/StringBuilder;

    .line 147
    invoke-direct {p1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 150
    iget p2, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 152
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 155
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 158
    move-result-object p1

    .line 159
    const-string p2, "AS.SpatializerHelper"

    .line 161
    invoke-static {p2, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 164
    monitor-exit p0

    .line 165
    :goto_0
    return v5

    .line 166
    :goto_1
    monitor-exit p0

    .line 167
    throw p1
.end method

.method public final canChangeAccessibilityVolume()Z
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 6
    const-string v2, "android.permission.CHANGE_ACCESSIBILITY_VOLUME"

    .line 8
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 11
    move-result v1

    .line 12
    const/4 v2, 0x1

    .line 13
    if-nez v1, :cond_0

    .line 15
    monitor-exit v0

    .line 16
    return v2

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    goto :goto_1

    .line 19
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 21
    const/4 v3, 0x0

    .line 22
    if-eqz v1, :cond_2

    .line 24
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 27
    move-result v1

    .line 28
    move v4, v3

    .line 29
    :goto_0
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 31
    array-length v6, v5

    .line 32
    if-ge v4, v6, :cond_2

    .line 34
    aget v5, v5, v4

    .line 36
    if-ne v5, v1, :cond_1

    .line 38
    monitor-exit v0

    .line 39
    return v2

    .line 40
    :cond_1
    add-int/lit8 v4, v4, 0x1

    .line 42
    goto :goto_0

    .line 43
    :cond_2
    monitor-exit v0

    .line 44
    return v3

    .line 45
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 46
    throw p0
.end method

.method public final cancelMuteAwaitConnection(Landroid/media/AudioDeviceAttributes;)V
    .locals 6

    .line 1
    const-string/jumbo v0, "cancelMuteAwaitConnection dev:"

    .line 4
    const-string/jumbo v1, "cancelMuteAwaitConnection ignored, got "

    .line 7
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 13
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 16
    move-result-object v2

    .line 17
    const-string v3, "AS.AudioService"

    .line 19
    new-instance v4, Ljava/lang/StringBuilder;

    .line 21
    const-string/jumbo v5, "cancelMuteAwaitConnection for device:"

    .line 24
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 27
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 30
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 33
    move-result-object v4

    .line 34
    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 37
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionLock:Ljava/lang/Object;

    .line 39
    monitor-enter v3

    .line 40
    :try_start_0
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 42
    if-nez v4, :cond_0

    .line 44
    const-string p0, "AS.AudioService"

    .line 46
    const-string/jumbo p1, "cancelMuteAwaitConnection ignored, no expected device"

    .line 49
    invoke-static {p0, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    monitor-exit v3

    .line 53
    return-void

    .line 54
    :catchall_0
    move-exception p0

    .line 55
    goto :goto_0

    .line 56
    :cond_0
    invoke-virtual {v2, v4}, Landroid/media/AudioDeviceAttributes;->equalTypeAddress(Ljava/lang/Object;)Z

    .line 59
    move-result v4

    .line 60
    if-eqz v4, :cond_1

    .line 62
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMutedUsagesAwaitingConnection:[I

    .line 64
    const/4 v4, 0x0

    .line 65
    iput-object v4, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 67
    iput-object v4, p0, Lcom/android/server/audio/AudioService;->mMutedUsagesAwaitingConnection:[I

    .line 69
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 71
    new-instance v5, Ljava/lang/StringBuilder;

    .line 73
    invoke-direct {v5, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 76
    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 79
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    move-result-object p1

    .line 83
    invoke-virtual {v4, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->cancelMuteAwaitConnection(Ljava/lang/String;)V

    .line 86
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 87
    new-instance p1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;

    .line 89
    const/4 v0, 0x0

    .line 90
    invoke-direct {p1, p0, v2, v1, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/AudioDeviceAttributes;[II)V

    .line 93
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->dispatchMuteAwaitConnection(Ljava/util/function/BiConsumer;)V

    .line 96
    return-void

    .line 97
    :cond_1
    :try_start_1
    const-string v0, "AS.AudioService"

    .line 99
    new-instance v2, Ljava/lang/StringBuilder;

    .line 101
    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 104
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 107
    const-string p1, "] but expected device is"

    .line 109
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 112
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 114
    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 117
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 120
    move-result-object p0

    .line 121
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 124
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 126
    const-string/jumbo p1, "cancelMuteAwaitConnection for wrong device"

    .line 129
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 132
    throw p0

    .line 133
    :goto_0
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 134
    throw p0
.end method

.method public final checkAllAliasStreamVolumes()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7
    :try_start_1
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 10
    move-result v2

    .line 11
    const/4 v3, 0x0

    .line 12
    :goto_0
    if-ge v3, v2, :cond_1

    .line 14
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 16
    aget-object v5, v4, v3

    .line 18
    sget-object v6, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 20
    aget v6, v6, v3

    .line 22
    aget-object v4, v4, v6

    .line 24
    const-string v6, "AS.AudioService"

    .line 26
    invoke-virtual {v5, v4, v6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 29
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 31
    aget-object v4, v4, v3

    .line 33
    iget-boolean v5, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 35
    if-nez v5, :cond_0

    .line 37
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 40
    goto :goto_1

    .line 41
    :catchall_0
    move-exception p0

    .line 42
    goto :goto_2

    .line 43
    :cond_0
    :goto_1
    add-int/lit8 v3, v3, 0x1

    .line 45
    goto :goto_0

    .line 46
    :cond_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 47
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 48
    return-void

    .line 49
    :catchall_1
    move-exception p0

    .line 50
    goto :goto_3

    .line 51
    :goto_2
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 52
    :try_start_4
    throw p0

    .line 53
    :goto_3
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 54
    throw p0
.end method

.method public final checkAudioSettingsPermission(Ljava/lang/String;)Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v0, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 5
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result p0

    .line 9
    if-nez p0, :cond_0

    .line 11
    const/4 p0, 0x1

    .line 12
    return p0

    .line 13
    :cond_0
    const-string p0, "Audio Settings Permission Denial: "

    .line 15
    const-string v0, " from pid="

    .line 17
    invoke-static {p0, p1, v0}, Lcom/android/internal/util/jobs/DumpUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    move-result-object p0

    .line 21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 24
    move-result p1

    .line 25
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 28
    const-string p1, ", uid="

    .line 30
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 33
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 36
    move-result p1

    .line 37
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 43
    move-result-object p0

    .line 44
    const-string p1, "AS.AudioService"

    .line 46
    invoke-static {p1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 49
    const/4 p0, 0x0

    .line 50
    return p0
.end method

.method public final checkForRingerModeChange(IIIILjava/lang/String;)I
    .locals 8

    .line 1
    iget v0, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 3
    const/4 v1, 0x0

    .line 4
    const/4 v2, 0x1

    .line 5
    const/4 v3, 0x2

    .line 6
    if-ne v0, v3, :cond_0

    .line 8
    move v0, v2

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    move v0, v1

    .line 11
    :goto_0
    if-nez v0, :cond_10

    .line 13
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 15
    if-eqz v0, :cond_1

    .line 17
    goto/16 :goto_5

    .line 19
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 22
    move-result v0

    .line 23
    const/16 v4, 0x64

    .line 25
    const/16 v5, 0x65

    .line 27
    if-eqz v0, :cond_b

    .line 29
    const-string v6, "AS.AudioService"

    .line 31
    const/4 v7, -0x1

    .line 32
    if-eq v0, v2, :cond_4

    .line 34
    if-eq v0, v3, :cond_2

    .line 36
    const-string/jumbo p1, "checkForRingerModeChange() wrong ringer mode: "

    .line 39
    invoke-static {v0, p1, v6}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 42
    goto :goto_1

    .line 43
    :cond_2
    if-ne p2, v7, :cond_5

    .line 45
    iget-boolean v4, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 47
    if-eqz v4, :cond_3

    .line 49
    if-gt p3, p1, :cond_5

    .line 51
    mul-int/2addr p3, v3

    .line 52
    if-ge p1, p3, :cond_5

    .line 54
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 57
    move-result-wide v3

    .line 58
    iput-wide v3, p0, Lcom/android/server/audio/AudioService;->mLoweredFromNormalToVibrateTime:J

    .line 60
    move p1, v2

    .line 61
    goto/16 :goto_3

    .line 63
    :cond_3
    if-ne p1, p3, :cond_5

    .line 65
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 67
    iget-boolean p1, p1, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    .line 69
    if-eqz p1, :cond_5

    .line 71
    move p1, v2

    .line 72
    move v2, v1

    .line 73
    goto :goto_3

    .line 74
    :cond_4
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 76
    if-nez p1, :cond_6

    .line 78
    const-string/jumbo p1, "checkForRingerModeChange() current ringer mode is vibratebut no vibrator is present"

    .line 81
    invoke-static {v6, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 84
    :cond_5
    :goto_1
    move p1, v2

    .line 85
    move v2, v0

    .line 86
    goto :goto_3

    .line 87
    :cond_6
    if-ne p2, v7, :cond_8

    .line 89
    iget p1, p0, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    .line 91
    if-eq p1, v7, :cond_a

    .line 93
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 95
    iget-boolean p1, p1, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    .line 97
    if-eqz p1, :cond_7

    .line 99
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 102
    move-result-wide v3

    .line 103
    iget-wide v5, p0, Lcom/android/server/audio/AudioService;->mLoweredFromNormalToVibrateTime:J

    .line 105
    sub-long/2addr v3, v5

    .line 106
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 108
    iget p1, p1, Landroid/media/VolumePolicy;->vibrateToSilentDebounce:I

    .line 110
    int-to-long v5, p1

    .line 111
    cmp-long p1, v3, v5

    .line 113
    if-lez p1, :cond_a

    .line 115
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 117
    invoke-interface {p1}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->canVolumeDownEnterSilent()Z

    .line 120
    move-result p1

    .line 121
    if-eqz p1, :cond_a

    .line 123
    move v0, v1

    .line 124
    goto :goto_2

    .line 125
    :cond_7
    const/16 v2, 0x801

    .line 127
    goto :goto_2

    .line 128
    :cond_8
    if-eq p2, v2, :cond_9

    .line 130
    if-eq p2, v5, :cond_9

    .line 132
    if-ne p2, v4, :cond_a

    .line 134
    :cond_9
    move v0, v3

    .line 135
    :cond_a
    :goto_2
    and-int/lit8 v2, v2, -0x2

    .line 137
    goto :goto_1

    .line 138
    :cond_b
    if-eq p2, v2, :cond_c

    .line 140
    if-eq p2, v5, :cond_c

    .line 142
    if-ne p2, v4, :cond_a

    .line 144
    :cond_c
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 146
    iget-boolean p1, p1, Landroid/media/VolumePolicy;->volumeUpToExitSilent:Z

    .line 148
    if-nez p1, :cond_d

    .line 150
    const/16 v2, 0x81

    .line 152
    goto :goto_2

    .line 153
    :cond_d
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 155
    if-eqz p1, :cond_9

    .line 157
    if-ne p2, v2, :cond_9

    .line 159
    move v0, v2

    .line 160
    goto :goto_2

    .line 161
    :goto_3
    invoke-virtual {p0, p5}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    .line 164
    move-result p3

    .line 165
    if-eqz p3, :cond_f

    .line 167
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    .line 170
    move-result p3

    .line 171
    if-eqz p3, :cond_f

    .line 173
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 175
    invoke-virtual {p3, p5}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    .line 178
    move-result p3

    .line 179
    if-nez p3, :cond_f

    .line 181
    and-int/lit16 p3, p4, 0x1000

    .line 183
    if-eqz p3, :cond_e

    .line 185
    goto :goto_4

    .line 186
    :cond_e
    new-instance p0, Ljava/lang/SecurityException;

    .line 188
    const-string p1, "Not allowed to change Do Not Disturb state"

    .line 190
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 193
    throw p0

    .line 194
    :cond_f
    :goto_4
    const-string p3, "AS.AudioService.checkForRingerModeChange"

    .line 196
    invoke-virtual {p0, v2, p3, v1}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 199
    iput p2, p0, Lcom/android/server/audio/AudioService;->mPrevVolDirection:I

    .line 201
    return p1

    .line 202
    :cond_10
    :goto_5
    return v2
.end method

.method public final checkModifyPhoneStateOrRoutingPermission()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_1

    .line 11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 15
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_1

    .line 21
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 23
    const-string/jumbo v0, "com.sec.android.permission.IN_APP_SOUND"

    .line 26
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 29
    move-result p0

    .line 30
    if-nez p0, :cond_0

    .line 32
    goto :goto_0

    .line 33
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 35
    const-string v0, "Not allowed to audio routing"

    .line 37
    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 40
    throw p0

    .line 41
    :cond_1
    :goto_0
    return-void
.end method

.method public final checkMonitorAudioServerStatePermission()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_1

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v0, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 15
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result p0

    .line 19
    if-nez p0, :cond_0

    .line 21
    goto :goto_0

    .line 22
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 24
    const-string v0, "Not allowed to monitor audioserver state"

    .line 26
    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 29
    throw p0

    .line 30
    :cond_1
    :goto_0
    return-void
.end method

.method public checkMusicActive(ILjava/lang/String;)V
    .locals 0

    .line 1
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 3
    invoke-virtual {p2, p1}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    .line 6
    move-result p1

    .line 7
    if-eqz p1, :cond_0

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 11
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->scheduleMusicActiveCheck()V

    .line 14
    :cond_0
    return-void
.end method

.method public final checkMuteAffectedStreams()V
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    :goto_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 4
    array-length v2, v1

    .line 5
    if-ge v0, v2, :cond_1

    .line 7
    aget-object v1, v1, v0

    .line 9
    iget v2, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 11
    if-lez v2, :cond_0

    .line 13
    iget v1, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 15
    if-eqz v1, :cond_0

    .line 17
    const/4 v2, 0x6

    .line 18
    if-eq v1, v2, :cond_0

    .line 20
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 22
    const/4 v3, 0x1

    .line 23
    shl-int v1, v3, v1

    .line 25
    not-int v1, v1

    .line 26
    and-int/2addr v1, v2

    .line 27
    iput v1, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 29
    :cond_0
    add-int/lit8 v0, v0, 0x1

    .line 31
    goto :goto_0

    .line 32
    :cond_1
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 34
    and-int/lit8 v0, v0, -0x42

    .line 36
    iput v0, p0, Lcom/android/server/audio/AudioService;->mUserMutableStreams:I

    .line 38
    return-void
.end method

.method public final checkNoteAppOp(IILjava/lang/String;Ljava/lang/String;)Z
    .locals 8

    .line 1
    const-string/jumbo v0, "com.android.server.media"

    .line 4
    invoke-virtual {v0, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 7
    move-result v0

    .line 8
    const/4 v1, 0x1

    .line 9
    if-eqz v0, :cond_0

    .line 11
    return v1

    .line 12
    :cond_0
    const/4 v0, 0x0

    .line 13
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAppOps:Landroid/app/AppOpsManager;

    .line 15
    const/4 v7, 0x0

    .line 16
    move v3, p1

    .line 17
    move v4, p2

    .line 18
    move-object v5, p3

    .line 19
    move-object v6, p4

    .line 20
    invoke-virtual/range {v2 .. v7}, Landroid/app/AppOpsManager;->noteOp(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    .line 23
    move-result p0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 24
    if-eqz p0, :cond_1

    .line 26
    return v0

    .line 27
    :cond_1
    return v1

    .line 28
    :catch_0
    move-exception p0

    .line 29
    const-string p4, "Error noting op:"

    .line 31
    const-string v1, " on uid:"

    .line 33
    const-string v2, " for package:"

    .line 35
    invoke-static {p1, p2, p4, v1, v2}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 38
    move-result-object p1

    .line 39
    invoke-virtual {p1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 45
    move-result-object p1

    .line 46
    const-string p2, "AS.AudioService"

    .line 48
    invoke-static {p2, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 51
    return v0
.end method

.method public final checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    const/4 v1, 0x0

    .line 10
    const-string v2, " / uid "

    .line 12
    const-string v3, " for pid "

    .line 14
    const-string v4, "AS.AudioService"

    .line 16
    if-nez v0, :cond_1

    .line 18
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 20
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 23
    move-result-object p1

    .line 24
    invoke-virtual {p0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 27
    move-result-object p0

    .line 28
    check-cast p0, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 30
    if-nez p0, :cond_0

    .line 32
    invoke-static {p2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 35
    move-result-object p0

    .line 36
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 39
    move-result p1

    .line 40
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 43
    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 49
    move-result p1

    .line 50
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 53
    const-string p1, ", unregistered policy"

    .line 55
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 58
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 61
    move-result-object p0

    .line 62
    invoke-static {v4, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 65
    return-object v1

    .line 66
    :cond_0
    return-object p0

    .line 67
    :cond_1
    invoke-static {p2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 70
    move-result-object p0

    .line 71
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 74
    move-result p1

    .line 75
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 78
    invoke-virtual {p0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 81
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 84
    move-result p1

    .line 85
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 88
    const-string p1, ", need MODIFY_AUDIO_ROUTING"

    .line 90
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 93
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 96
    move-result-object p0

    .line 97
    invoke-static {v4, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 100
    return-object v1
.end method

.method public final checkVolumeRangeInitialization(Ljava/lang/String;)Z
    .locals 12

    .line 1
    const/4 v0, 0x4

    .line 2
    const/4 v1, 0x2

    .line 3
    const/4 v2, 0x3

    .line 4
    const/4 v3, 0x0

    .line 5
    const/16 v4, 0xa

    .line 7
    filled-new-array {v0, v1, v2, v3, v4}, [I

    .line 10
    move-result-object v0

    .line 11
    move v2, v3

    .line 12
    :goto_0
    const/4 v4, 0x5

    .line 13
    if-ge v2, v4, :cond_1

    .line 15
    aget v4, v0, v2

    .line 17
    new-instance v5, Landroid/media/AudioAttributes$Builder;

    .line 19
    invoke-direct {v5}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 22
    invoke-virtual {v5, v4}, Landroid/media/AudioAttributes$Builder;->setInternalLegacyStreamType(I)Landroid/media/AudioAttributes$Builder;

    .line 25
    move-result-object v4

    .line 26
    invoke-virtual {v4}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 29
    move-result-object v4

    .line 30
    invoke-static {v4}, Landroid/media/AudioSystem;->getMaxVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I

    .line 33
    move-result v5

    .line 34
    if-ltz v5, :cond_2

    .line 36
    invoke-static {v4}, Landroid/media/AudioSystem;->getMinVolumeIndexForAttributes(Landroid/media/AudioAttributes;)I

    .line 39
    move-result v4

    .line 40
    if-gez v4, :cond_0

    .line 42
    goto :goto_1

    .line 43
    :cond_0
    add-int/lit8 v2, v2, 0x1

    .line 45
    goto :goto_0

    .line 46
    :cond_1
    const/4 v3, 0x1

    .line 47
    :cond_2
    :goto_1
    if-nez v3, :cond_3

    .line 49
    sget-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 51
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 53
    const-string v4, ": initStreamVolume succeeded but invalid mix/max levels, will retry"

    .line 55
    invoke-static {p1, v4}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 58
    move-result-object v4

    .line 59
    invoke-direct {v2, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 62
    const-string v4, "AS.AudioService"

    .line 64
    invoke-virtual {v2, v1, v4}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 67
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 70
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 72
    const/4 v7, 0x1

    .line 73
    const/4 v8, 0x0

    .line 74
    const/16 v6, 0x22

    .line 76
    const/4 v9, 0x0

    .line 77
    const/16 v11, 0x7d0

    .line 79
    move-object v10, p1

    .line 80
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 83
    :cond_3
    return v3
.end method

.method public final clearFadeManagerConfigurationForFocusLoss()I
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->clearFadeManagerConfigurationForFocusLoss_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 7
    move-result v0

    .line 8
    const-string v1, "Fade manager configuration not supported"

    .line 10
    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 13
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 15
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mFadeOutManager:Lcom/android/server/audio/FadeOutManager;

    .line 17
    iget-object v0, p0, Lcom/android/server/audio/FadeOutManager;->mLock:Ljava/lang/Object;

    .line 19
    monitor-enter v0

    .line 20
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/FadeOutManager;->mFadeConfigurations:Lcom/android/server/audio/FadeConfigurations;

    .line 22
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 25
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 28
    move-result v1

    .line 29
    if-nez v1, :cond_0

    .line 31
    const/4 p0, -0x1

    .line 32
    goto :goto_0

    .line 33
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/FadeConfigurations;->mLock:Ljava/lang/Object;

    .line 35
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 36
    const/4 v2, 0x0

    .line 37
    :try_start_1
    iput-object v2, p0, Lcom/android/server/audio/FadeConfigurations;->mUpdatedFadeManagerConfig:Landroid/media/FadeManagerConfiguration;

    .line 39
    invoke-virtual {p0}, Lcom/android/server/audio/FadeConfigurations;->getActiveFadeMgrConfigLocked()Landroid/media/FadeManagerConfiguration;

    .line 42
    move-result-object v2

    .line 43
    iput-object v2, p0, Lcom/android/server/audio/FadeConfigurations;->mActiveFadeManagerConfig:Landroid/media/FadeManagerConfiguration;

    .line 45
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 46
    const/4 p0, 0x0

    .line 47
    :goto_0
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 48
    return p0

    .line 49
    :catchall_0
    move-exception p0

    .line 50
    goto :goto_1

    .line 51
    :catchall_1
    move-exception p0

    .line 52
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 53
    :try_start_4
    throw p0

    .line 54
    :goto_1
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 55
    throw p0
.end method

.method public final clearPreferredDevicesForCapturePreset(I)I
    .locals 7

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->clearPreferredDevicesForCapturePreset_enforcePermission()V

    .line 4
    const-string/jumbo v0, "removePreferredDeviceForCapturePreset source:%d"

    .line 7
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 10
    move-result-object v1

    .line 11
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 14
    move-result-object v1

    .line 15
    invoke-static {v0, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 18
    move-result-object v0

    .line 19
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 21
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 23
    invoke-direct {v2, v0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 26
    const-string v3, "AS.AudioService"

    .line 28
    const/4 v4, 0x0

    .line 29
    invoke-virtual {v2, v4, v3}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 32
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 35
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 37
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 39
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 42
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 45
    move-result-object v1

    .line 46
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioDeviceInventory;->mAppliedPresetRoles:Landroid/util/ArrayMap;

    .line 48
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 49
    :try_start_1
    new-instance v3, Landroid/util/Pair;

    .line 51
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 54
    move-result-object v4

    .line 55
    const/4 v5, 0x1

    .line 56
    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 59
    move-result-object v6

    .line 60
    invoke-direct {v3, v4, v6}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 63
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 66
    move-result v4

    .line 67
    const/4 v6, -0x2

    .line 68
    if-nez v4, :cond_0

    .line 70
    monitor-exit v2

    .line 71
    move v4, v6

    .line 72
    goto :goto_0

    .line 73
    :catchall_0
    move-exception p0

    .line 74
    goto :goto_1

    .line 75
    :cond_0
    iget-object v4, p0, Lcom/android/server/audio/AudioDeviceInventory;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 77
    invoke-virtual {v4}, Lcom/android/server/audio/AudioSystemAdapter;->invalidateRoutingCache()V

    .line 80
    invoke-static {p1, v5}, Landroid/media/AudioSystem;->clearDevicesRoleForCapturePreset(II)I

    .line 83
    move-result v4

    .line 84
    if-nez v4, :cond_1

    .line 86
    invoke-virtual {v2, v3}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 89
    :cond_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 90
    :goto_0
    if-eqz v1, :cond_2

    .line 92
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V

    .line 95
    :cond_2
    if-nez v4, :cond_3

    .line 97
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 99
    const/16 v1, 0x26

    .line 101
    const/4 v2, 0x2

    .line 102
    invoke-virtual {p0, v1, v2, p1}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    .line 105
    :cond_3
    if-eqz v4, :cond_4

    .line 107
    if-eq v4, v6, :cond_4

    .line 109
    const-string p0, "AS.AudioService"

    .line 111
    const-string p1, "Error %d in %s"

    .line 113
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 116
    move-result-object v1

    .line 117
    filled-new-array {v1, v0}, [Ljava/lang/Object;

    .line 120
    move-result-object v0

    .line 121
    invoke-static {p1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 124
    move-result-object p1

    .line 125
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 128
    :cond_4
    return v4

    .line 129
    :goto_1
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 130
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 131
    :catchall_1
    move-exception p0

    .line 132
    if-eqz v1, :cond_5

    .line 134
    :try_start_4
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 137
    goto :goto_2

    .line 138
    :catchall_2
    move-exception p1

    .line 139
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 142
    :cond_5
    :goto_2
    throw p0
.end method

.method public final clearPreferredMixerAttributes(Landroid/media/AudioAttributes;I)I
    .locals 8

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6
    const-string/jumbo v1, "clearPreferredMixerAttributes()"

    .line 9
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 12
    move-result v1

    .line 13
    if-nez v1, :cond_0

    .line 15
    const/4 p0, -0x4

    .line 16
    return p0

    .line 17
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 20
    move-result v1

    .line 21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 24
    move-result v2

    .line 25
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 28
    move-result-wide v3

    .line 29
    :try_start_0
    const-string/jumbo v5, "clearPreferredMixerAttributes u/pid:%d/%d attr:%s"

    .line 32
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 35
    move-result-object v6

    .line 36
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 39
    move-result-object v2

    .line 40
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->toString()Ljava/lang/String;

    .line 43
    move-result-object v7

    .line 44
    filled-new-array {v6, v2, v7}, [Ljava/lang/Object;

    .line 47
    move-result-object v2

    .line 48
    invoke-static {v5, v2}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 51
    move-result-object v2

    .line 52
    sget-object v5, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 54
    new-instance v6, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 56
    invoke-direct {v6, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 59
    const/4 v7, 0x0

    .line 60
    invoke-virtual {v6, v7, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 63
    invoke-virtual {v5, v6}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 66
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 68
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 71
    invoke-static {p1, p2, v1}, Landroid/media/AudioSystem;->clearPreferredMixerAttributes(Landroid/media/AudioAttributes;II)I

    .line 74
    move-result v1

    .line 75
    if-nez v1, :cond_1

    .line 77
    const/4 v0, 0x0

    .line 78
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/audio/AudioService;->dispatchPreferredMixerAttributesChanged(Landroid/media/AudioAttributes;ILandroid/media/AudioMixerAttributes;)V

    .line 81
    goto :goto_0

    .line 82
    :catchall_0
    move-exception p0

    .line 83
    goto :goto_1

    .line 84
    :cond_1
    const-string p0, "Error %d in %s)"

    .line 86
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 89
    move-result-object p1

    .line 90
    filled-new-array {p1, v2}, [Ljava/lang/Object;

    .line 93
    move-result-object p1

    .line 94
    invoke-static {p0, p1}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 97
    move-result-object p0

    .line 98
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 101
    :goto_0
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 104
    return v1

    .line 105
    :goto_1
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 108
    throw p0
.end method

.method public final createVariableMediaVolumeMap([I)V
    .locals 11

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    .line 3
    const/4 v1, 0x3

    .line 4
    aget v0, v0, v1

    .line 6
    mul-int/lit8 v0, v0, 0xa

    .line 8
    add-int/lit8 v1, v0, 0x1

    .line 10
    new-array v1, v1, [Lcom/android/server/audio/AudioService$VolumeMap;

    .line 12
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 14
    const/4 v1, 0x0

    .line 15
    move v2, v1

    .line 16
    move v3, v2

    .line 17
    :goto_0
    array-length v4, p1

    .line 18
    if-ge v2, v4, :cond_3

    .line 20
    if-nez v2, :cond_0

    .line 22
    move v4, v1

    .line 23
    goto :goto_1

    .line 24
    :cond_0
    add-int/lit8 v4, v2, -0x1

    .line 26
    aget v4, p1, v4

    .line 28
    :goto_1
    array-length v5, p1

    .line 29
    add-int/lit8 v5, v5, -0x1

    .line 31
    if-ne v2, v5, :cond_1

    .line 33
    move v5, v0

    .line 34
    goto :goto_2

    .line 35
    :cond_1
    add-int/lit8 v5, v2, 0x1

    .line 37
    aget v5, p1, v5

    .line 39
    :goto_2
    aget v6, p1, v2

    .line 41
    :goto_3
    if-ge v3, v6, :cond_2

    .line 43
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 45
    new-instance v8, Lcom/android/server/audio/AudioService$VolumeMap;

    .line 47
    int-to-short v9, v4

    .line 48
    int-to-short v10, v6

    .line 49
    invoke-direct {v8, v9, v10}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    .line 52
    aput-object v8, v7, v3

    .line 54
    add-int/lit8 v3, v3, 0x1

    .line 56
    goto :goto_3

    .line 57
    :cond_2
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 59
    new-instance v7, Lcom/android/server/audio/AudioService$VolumeMap;

    .line 61
    int-to-short v4, v4

    .line 62
    int-to-short v5, v5

    .line 63
    invoke-direct {v7, v4, v5}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    .line 66
    aput-object v7, v3, v6

    .line 68
    add-int/lit8 v3, v6, 0x1

    .line 70
    add-int/lit8 v2, v2, 0x1

    .line 72
    goto :goto_0

    .line 73
    :cond_3
    add-int/lit8 p1, v3, -0x1

    .line 75
    :goto_4
    if-gt v3, v0, :cond_4

    .line 77
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 79
    add-int/lit8 v2, v3, 0x1

    .line 81
    new-instance v4, Lcom/android/server/audio/AudioService$VolumeMap;

    .line 83
    int-to-short v5, p1

    .line 84
    int-to-short v6, v0

    .line 85
    invoke-direct {v4, v5, v6}, Lcom/android/server/audio/AudioService$VolumeMap;-><init>(SS)V

    .line 88
    aput-object v4, v1, v3

    .line 90
    move v3, v2

    .line 91
    goto :goto_4

    .line 92
    :cond_4
    return-void
.end method

.method public final disableSafeMediaVolume(Ljava/lang/String;)V
    .locals 11

    .line 1
    const-string/jumbo v0, "disable the safe media volume"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 9
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 11
    monitor-enter v0

    .line 12
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 15
    move-result-wide v1

    .line 16
    const/4 v3, 0x0

    .line 17
    invoke-virtual {p0, p1, v3}, Lcom/android/server/audio/SoundDoseHelper;->setSafeMediaVolumeEnabled(Ljava/lang/String;Z)V

    .line 20
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 23
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 25
    if-eqz v1, :cond_2

    .line 27
    iget v2, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mStreamType:I

    .line 29
    const/4 v4, 0x3

    .line 30
    if-ne v2, v4, :cond_0

    .line 32
    sget-object v2, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 34
    iget v1, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mDevice:I

    .line 36
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 39
    move-result-object v1

    .line 40
    invoke-interface {v2, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 43
    move-result v1

    .line 44
    if-eqz v1, :cond_0

    .line 46
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 48
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 50
    iget v2, v2, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mIndex:I

    .line 52
    iget-boolean v4, v1, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 54
    if-eqz v4, :cond_0

    .line 56
    iget-object v1, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 58
    const/16 v4, 0xf

    .line 60
    invoke-virtual {v1, v4, v3, v2}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    .line 63
    goto :goto_0

    .line 64
    :catchall_0
    move-exception p0

    .line 65
    goto :goto_1

    .line 66
    :cond_0
    :goto_0
    iget-object v4, p0, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 68
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 70
    iget v5, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mStreamType:I

    .line 72
    iget v6, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mIndex:I

    .line 74
    iget v8, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mFlags:I

    .line 76
    iget v9, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mDevice:I

    .line 78
    const/4 v10, 0x1

    .line 79
    move-object v7, p1

    .line 80
    invoke-virtual/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->onSetStreamVolume(IILjava/lang/String;IIZ)V

    .line 83
    new-instance p1, Landroid/content/Intent;

    .line 85
    const-string v1, "android.media.VOLUME_CHANGED_ACTION"

    .line 87
    invoke-direct {p1, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 90
    const-string v1, "android.media.EXTRA_VOLUME_STREAM_TYPE"

    .line 92
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 94
    iget v2, v2, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mStreamType:I

    .line 96
    invoke-virtual {p1, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 99
    const-string v1, "android.media.EXTRA_VOLUME_STREAM_VALUE"

    .line 101
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 103
    iget v2, v2, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mIndex:I

    .line 105
    div-int/lit8 v2, v2, 0xa

    .line 107
    invoke-virtual {p1, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 110
    const-string v1, "android.media.EXTRA_VOLUME_SHOW_UI"

    .line 112
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 114
    iget v2, v2, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mFlags:I

    .line 116
    const/4 v4, 0x1

    .line 117
    and-int/2addr v2, v4

    .line 118
    if-eqz v2, :cond_1

    .line 120
    move v3, v4

    .line 121
    :cond_1
    invoke-virtual {p1, v1, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 124
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 126
    const/4 v2, 0x0

    .line 127
    invoke-virtual {v1, p1, v2}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 130
    iget-object p1, p0, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 132
    iget-object p1, p1, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 134
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 136
    iget v3, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mStreamType:I

    .line 138
    iget v1, v1, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;->mFlags:I

    .line 140
    invoke-virtual {p1, v3, v1}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 143
    iput-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 145
    :cond_2
    monitor-exit v0

    .line 146
    return-void

    .line 147
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 148
    throw p0
.end method

.method public final dismissVolumePanel()V
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 5
    if-nez p0, :cond_0

    .line 7
    goto :goto_0

    .line 8
    :cond_0
    :try_start_0
    invoke-interface {p0}, Landroid/media/IVolumeController;->dismiss()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11
    goto :goto_0

    .line 12
    :catch_0
    move-exception p0

    .line 13
    const-string v0, "VolumeController"

    .line 15
    const-string v1, "Error calling dismiss"

    .line 17
    invoke-static {v0, v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 20
    :goto_0
    return-void
.end method

.method public final dispatchAbsoluteVolumeChanged(ILcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;I)V
    .locals 5

    .line 1
    invoke-static {p2, p1}, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->-$$Nest$mgetMatchingVolumeInfoForStream(Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;I)Landroid/media/VolumeInfo;

    .line 4
    move-result-object v0

    .line 5
    if-eqz v0, :cond_2

    .line 7
    :try_start_0
    iget-object v1, p2, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mCallback:Landroid/media/IAudioDeviceVolumeDispatcher;

    .line 9
    iget-object p2, p2, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mDevice:Landroid/media/AudioDeviceAttributes;

    .line 11
    new-instance v2, Landroid/media/VolumeInfo$Builder;

    .line 13
    invoke-direct {v2, v0}, Landroid/media/VolumeInfo$Builder;-><init>(Landroid/media/VolumeInfo;)V

    .line 16
    invoke-virtual {v0}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    .line 19
    move-result v3

    .line 20
    invoke-virtual {v0}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    .line 23
    move-result v0

    .line 24
    const/16 v4, -0x64

    .line 26
    if-eq v3, v4, :cond_1

    .line 28
    if-ne v0, v4, :cond_0

    .line 30
    goto :goto_0

    .line 31
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 33
    aget-object p0, p0, p1

    .line 35
    iget p1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 37
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 39
    invoke-static {p3, p1, p0, v3, v0}, Lcom/android/server/audio/AudioService;->rescaleIndex(IIIII)I

    .line 42
    move-result p3

    .line 43
    :cond_1
    :goto_0
    invoke-virtual {v2, p3}, Landroid/media/VolumeInfo$Builder;->setVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 46
    move-result-object p0

    .line 47
    invoke-virtual {p0}, Landroid/media/VolumeInfo$Builder;->build()Landroid/media/VolumeInfo;

    .line 50
    move-result-object p0

    .line 51
    invoke-interface {v1, p2, p0}, Landroid/media/IAudioDeviceVolumeDispatcher;->dispatchDeviceVolumeChanged(Landroid/media/AudioDeviceAttributes;Landroid/media/VolumeInfo;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 54
    goto :goto_1

    .line 55
    :catch_0
    const-string p0, "AS.AudioService"

    .line 57
    const-string p1, "Couldn\'t dispatch absolute volume behavior volume change"

    .line 59
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 62
    :cond_2
    :goto_1
    return-void
.end method

.method public final dispatchDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;I)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 3
    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    :goto_0
    if-ge v1, v0, :cond_0

    .line 10
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v2, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    .line 15
    move-result-object v2

    .line 16
    check-cast v2, Landroid/media/IDeviceVolumeBehaviorDispatcher;

    .line 18
    invoke-interface {v2, p1, p2}, Landroid/media/IDeviceVolumeBehaviorDispatcher;->dispatchDeviceVolumeBehaviorChanged(Landroid/media/AudioDeviceAttributes;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 21
    :catch_0
    add-int/lit8 v1, v1, 0x1

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 26
    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 29
    return-void
.end method

.method public final dispatchFocusChange(Landroid/media/AudioFocusInfo;ILandroid/media/audiopolicy/IAudioPolicyCallback;)I
    .locals 2

    .line 1
    if-eqz p1, :cond_2

    .line 3
    if-eqz p3, :cond_1

    .line 5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 7
    monitor-enter v0

    .line 8
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 10
    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 13
    move-result-object p3

    .line 14
    invoke-virtual {v1, p3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 17
    move-result p3

    .line 18
    if-eqz p3, :cond_0

    .line 20
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 22
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/MediaFocusControl;->dispatchFocusChange(Landroid/media/AudioFocusInfo;I)I

    .line 25
    move-result p0

    .line 26
    monitor-exit v0

    .line 27
    return p0

    .line 28
    :catchall_0
    move-exception p0

    .line 29
    goto :goto_0

    .line 30
    :cond_0
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 32
    const-string p1, "Unregistered AudioPolicy for focus dispatch"

    .line 34
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 37
    throw p0

    .line 38
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 39
    throw p0

    .line 40
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 42
    const-string p1, "Illegal null AudioPolicy callback"

    .line 44
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 47
    throw p0

    .line 48
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 50
    const-string p1, "Illegal null AudioFocusInfo"

    .line 52
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 55
    throw p0
.end method

.method public final dispatchFocusChangeWithFade(Landroid/media/AudioFocusInfo;ILandroid/media/audiopolicy/IAudioPolicyCallback;Ljava/util/List;Landroid/media/FadeManagerConfiguration;)I
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->dispatchFocusChangeWithFade_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 7
    move-result v0

    .line 8
    const-string v1, "Fade manager configuration not supported"

    .line 10
    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 13
    const-string v0, "AudioFocusInfo cannot be null"

    .line 15
    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 18
    const-string v0, "AudioPolicy callback cannot be null"

    .line 20
    invoke-static {p3, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 23
    const-string v0, "Other active AudioFocusInfo list cannot be null"

    .line 25
    invoke-static {p4, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 28
    if-eqz p5, :cond_0

    .line 30
    invoke-virtual {p5}, Landroid/media/FadeManagerConfiguration;->getAudioAttributesWithVolumeShaperConfigs()Ljava/util/List;

    .line 33
    move-result-object v0

    .line 34
    const/4 v1, 0x0

    .line 35
    :goto_0
    invoke-interface {v0}, Ljava/util/List;->size()I

    .line 38
    move-result v2

    .line 39
    if-ge v1, v2, :cond_0

    .line 41
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 44
    move-result-object v2

    .line 45
    check-cast v2, Landroid/media/AudioAttributes;

    .line 47
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 50
    add-int/lit8 v1, v1, 0x1

    .line 52
    goto :goto_0

    .line 53
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 55
    monitor-enter v0

    .line 56
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 58
    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 61
    move-result-object p3

    .line 62
    invoke-virtual {v1, p3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 65
    move-result p3

    .line 66
    const-string v1, "Unregistered AudioPolicy for focus dispatch with fade"

    .line 68
    invoke-static {p3, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 71
    if-eqz p5, :cond_1

    .line 73
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 75
    invoke-virtual {p3, p5}, Lcom/android/server/audio/PlaybackActivityMonitor;->setTransientFadeManagerConfiguration(Landroid/media/FadeManagerConfiguration;)V

    .line 78
    goto :goto_1

    .line 79
    :catchall_0
    move-exception p0

    .line 80
    goto :goto_2

    .line 81
    :cond_1
    :goto_1
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 83
    invoke-virtual {p3, p1, p2, p4}, Lcom/android/server/audio/MediaFocusControl;->dispatchFocusChangeWithFade(Landroid/media/AudioFocusInfo;ILjava/util/List;)I

    .line 86
    move-result p1

    .line 87
    if-eqz p5, :cond_2

    .line 89
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 91
    invoke-virtual {p0}, Lcom/android/server/audio/PlaybackActivityMonitor;->clearTransientFadeManagerConfiguration()V

    .line 94
    :cond_2
    monitor-exit v0

    .line 95
    return p1

    .line 96
    :goto_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 97
    throw p0
.end method

.method public final dispatchMuteAwaitConnection(Ljava/util/function/BiConsumer;)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 3
    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    const/4 v2, 0x0

    .line 9
    :goto_0
    if-ge v2, v0, :cond_1

    .line 11
    :try_start_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 13
    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    .line 16
    move-result-object v3

    .line 17
    check-cast v3, Landroid/media/IMuteAwaitConnectionCallback;

    .line 19
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 21
    invoke-virtual {v4, v2}, Landroid/os/RemoteCallbackList;->getBroadcastCookie(I)Ljava/lang/Object;

    .line 24
    move-result-object v4

    .line 25
    check-cast v4, Ljava/lang/Boolean;

    .line 27
    invoke-interface {p1, v3, v4}, Ljava/util/function/BiConsumer;->accept(Ljava/lang/Object;Ljava/lang/Object;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 30
    goto :goto_1

    .line 31
    :catch_0
    if-nez v1, :cond_0

    .line 33
    new-instance v1, Ljava/util/ArrayList;

    .line 35
    const/4 v3, 0x1

    .line 36
    invoke-direct {v1, v3}, Ljava/util/ArrayList;-><init>(I)V

    .line 39
    :cond_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 41
    invoke-virtual {v3, v2}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    .line 44
    move-result-object v3

    .line 45
    check-cast v3, Landroid/media/IMuteAwaitConnectionCallback;

    .line 47
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 50
    :goto_1
    add-int/lit8 v2, v2, 0x1

    .line 52
    goto :goto_0

    .line 53
    :cond_1
    if-eqz v1, :cond_2

    .line 55
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 58
    move-result-object p1

    .line 59
    :goto_2
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 62
    move-result v0

    .line 63
    if-eqz v0, :cond_2

    .line 65
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 68
    move-result-object v0

    .line 69
    check-cast v0, Landroid/media/IMuteAwaitConnectionCallback;

    .line 71
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 73
    invoke-virtual {v1, v0}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 76
    goto :goto_2

    .line 77
    :cond_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 79
    invoke-virtual {p0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 82
    return-void
.end method

.method public final dispatchPreferredMixerAttributesChanged(Landroid/media/AudioAttributes;ILandroid/media/AudioMixerAttributes;)V
    .locals 5

    .line 1
    new-instance v0, Landroid/os/Bundle;

    .line 3
    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 6
    const-string v1, "audio_attributes"

    .line 8
    invoke-virtual {v0, v1, p1}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 11
    const-string p1, "audio_mixer_attributes"

    .line 13
    invoke-virtual {v0, p1, p3}, Landroid/os/Bundle;->putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V

    .line 16
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 18
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 21
    move-result-wide v1

    .line 22
    const/4 p1, 0x0

    .line 23
    int-to-long v3, p1

    .line 24
    add-long/2addr v1, v3

    .line 25
    const/16 p3, 0x34

    .line 27
    const/4 v3, 0x0

    .line 28
    invoke-virtual {p0, p3, p2, p1, v3}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 31
    move-result-object p1

    .line 32
    invoke-virtual {p1, v0}, Landroid/os/Message;->setData(Landroid/os/Bundle;)V

    .line 35
    invoke-virtual {p0, p1, v1, v2}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 38
    return-void
.end method

.method public final dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 16

    .line 1
    move-object/from16 v1, p0

    .line 3
    move-object/from16 v2, p2

    .line 5
    move-object/from16 v0, p3

    .line 7
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 9
    const-string v4, "AS.AudioService"

    .line 11
    invoke-static {v3, v4, v2}, Lcom/android/internal/util/DumpUtils;->checkDumpPermission(Landroid/content/Context;Ljava/lang/String;Ljava/io/PrintWriter;)Z

    .line 14
    move-result v3

    .line 15
    if-nez v3, :cond_0

    .line 17
    return-void

    .line 18
    :cond_0
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_CUSTOM_SHELL_COMMAND:Z

    .line 20
    const/4 v6, 0x0

    .line 21
    if-eqz v3, :cond_14

    .line 23
    array-length v3, v0

    .line 24
    if-eqz v3, :cond_14

    .line 26
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 28
    const-string v7, "  mSafeMediaVolumeState = "

    .line 30
    const-string v8, "  Success to set "

    .line 32
    const-string v9, "KEY : "

    .line 34
    const-string v10, "  Warning: "

    .line 36
    const-string v11, "  Success to set ["

    .line 38
    :try_start_0
    aget-object v12, v0, v6

    .line 40
    invoke-virtual {v12}, Ljava/lang/String;->hashCode()I

    .line 43
    move-result v13
    :try_end_0
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 44
    const-string/jumbo v14, "volumepanel"

    .line 47
    const-string/jumbo v15, "mediapanel"

    .line 50
    const/4 v6, 0x1

    .line 51
    sparse-switch v13, :sswitch_data_0

    .line 54
    goto :goto_0

    .line 55
    :sswitch_0
    :try_start_1
    invoke-virtual {v12, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 58
    move-result v12

    .line 59
    if-eqz v12, :cond_1

    .line 61
    const/4 v12, 0x2

    .line 62
    goto :goto_1

    .line 63
    :sswitch_1
    invoke-virtual {v12, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 66
    move-result v12

    .line 67
    if-eqz v12, :cond_1

    .line 69
    const/4 v12, 0x3

    .line 70
    goto :goto_1

    .line 71
    :sswitch_2
    const-string v13, "acparam"

    .line 73
    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 76
    move-result v12

    .line 77
    if-eqz v12, :cond_1

    .line 79
    move v12, v6

    .line 80
    goto :goto_1

    .line 81
    :sswitch_3
    const-string/jumbo v13, "safe-media"

    .line 84
    invoke-virtual {v12, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 87
    move-result v12
    :try_end_1
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    .line 88
    if-eqz v12, :cond_1

    .line 90
    const/4 v12, 0x0

    .line 91
    goto :goto_1

    .line 92
    :cond_1
    :goto_0
    const/4 v12, -0x1

    .line 93
    :goto_1
    const-string v13, "--get"

    .line 95
    const-string v4, "--set"

    .line 97
    const v5, 0x29025b6

    .line 100
    if-eqz v12, :cond_b

    .line 102
    if-eq v12, v6, :cond_4

    .line 104
    const/4 v7, 0x2

    .line 105
    if-eq v12, v7, :cond_3

    .line 107
    const/4 v4, 0x3

    .line 108
    if-eq v12, v4, :cond_2

    .line 110
    goto/16 :goto_b

    .line 112
    :cond_2
    :try_start_2
    invoke-static {v3, v14}, Lcom/samsung/android/server/audio/utils/CommandUtils;->executePanel(Landroid/content/Context;Ljava/lang/String;)V

    .line 115
    goto/16 :goto_a

    .line 117
    :cond_3
    invoke-static {v3, v15}, Lcom/samsung/android/server/audio/utils/CommandUtils;->executePanel(Landroid/content/Context;Ljava/lang/String;)V

    .line 120
    goto/16 :goto_a

    .line 122
    :cond_4
    aget-object v3, v0, v6

    .line 124
    invoke-virtual {v3}, Ljava/lang/String;->hashCode()I

    .line 127
    move-result v7

    .line 128
    if-eq v7, v5, :cond_6

    .line 130
    const v5, 0x29052c2

    .line 133
    if-eq v7, v5, :cond_5

    .line 135
    goto :goto_2

    .line 136
    :cond_5
    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 139
    move-result v3

    .line 140
    if-eqz v3, :cond_7

    .line 142
    move v3, v6

    .line 143
    goto :goto_3

    .line 144
    :cond_6
    invoke-virtual {v3, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 147
    move-result v3

    .line 148
    if-eqz v3, :cond_7

    .line 150
    const/4 v3, 0x0

    .line 151
    goto :goto_3

    .line 152
    :cond_7
    :goto_2
    const/4 v3, -0x1

    .line 153
    :goto_3
    if-eqz v3, :cond_9

    .line 155
    if-eq v3, v6, :cond_8

    .line 157
    goto/16 :goto_b

    .line 159
    :cond_8
    const/4 v3, 0x2

    .line 160
    aget-object v4, v0, v3

    .line 162
    invoke-static {v4}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 165
    new-instance v4, Ljava/lang/StringBuilder;

    .line 167
    invoke-direct {v4, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 170
    aget-object v0, v0, v3

    .line 172
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 175
    const-string v0, "]"

    .line 177
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 180
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 183
    move-result-object v0

    .line 184
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 187
    goto/16 :goto_a

    .line 189
    :cond_9
    const/4 v3, 0x2

    .line 190
    aget-object v4, v0, v3

    .line 192
    invoke-static {v4}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 195
    move-result-object v3

    .line 196
    const-string v4, ""

    .line 198
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 201
    move-result v4

    .line 202
    if-eqz v4, :cond_a

    .line 204
    new-instance v3, Ljava/lang/StringBuilder;

    .line 206
    invoke-direct {v3, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 209
    const/4 v4, 0x2

    .line 210
    aget-object v0, v0, v4

    .line 212
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 215
    const-string v0, " is Unknown arguments"

    .line 217
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 220
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 223
    move-result-object v0

    .line 224
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 227
    goto/16 :goto_a

    .line 229
    :cond_a
    new-instance v4, Ljava/lang/StringBuilder;

    .line 231
    invoke-direct {v4, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 234
    const/4 v5, 0x2

    .line 235
    aget-object v0, v0, v5

    .line 237
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 240
    const-string v0, "\nVALUE : "

    .line 242
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 245
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 248
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 251
    move-result-object v0

    .line 252
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 255
    goto/16 :goto_a

    .line 257
    :cond_b
    aget-object v3, v0, v6

    .line 259
    invoke-virtual {v3}, Ljava/lang/String;->hashCode()I

    .line 262
    move-result v9

    .line 263
    if-eq v9, v5, :cond_d

    .line 265
    const v5, 0x29052c2

    .line 268
    if-eq v9, v5, :cond_c

    .line 270
    goto :goto_4

    .line 271
    :cond_c
    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 274
    move-result v3

    .line 275
    if-eqz v3, :cond_e

    .line 277
    move v3, v6

    .line 278
    goto :goto_5

    .line 279
    :cond_d
    invoke-virtual {v3, v13}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 282
    move-result v3

    .line 283
    if-eqz v3, :cond_e

    .line 285
    const/4 v3, 0x0

    .line 286
    goto :goto_5

    .line 287
    :cond_e
    :goto_4
    const/4 v3, -0x1

    .line 288
    :goto_5
    if-eqz v3, :cond_13

    .line 290
    if-eq v3, v6, :cond_f

    .line 292
    goto/16 :goto_b

    .line 294
    :cond_f
    const/4 v3, 0x2

    .line 295
    aget-object v4, v0, v3

    .line 297
    invoke-virtual {v4}, Ljava/lang/String;->hashCode()I

    .line 300
    move-result v3

    .line 301
    packed-switch v3, :pswitch_data_0

    .line 304
    goto :goto_6

    .line 305
    :pswitch_0
    const-string v3, "3"

    .line 307
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 310
    move-result v3

    .line 311
    if-eqz v3, :cond_10

    .line 313
    const/4 v3, 0x3

    .line 314
    goto :goto_7

    .line 315
    :pswitch_1
    const-string v3, "2"

    .line 317
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 320
    move-result v3

    .line 321
    if-eqz v3, :cond_10

    .line 323
    const/4 v3, 0x2

    .line 324
    goto :goto_7

    .line 325
    :pswitch_2
    const-string v3, "1"

    .line 327
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 330
    move-result v3

    .line 331
    if-eqz v3, :cond_10

    .line 333
    move v3, v6

    .line 334
    goto :goto_7

    .line 335
    :pswitch_3
    const-string v3, "0"

    .line 337
    invoke-virtual {v4, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 340
    move-result v3

    .line 341
    if-eqz v3, :cond_10

    .line 343
    const/4 v3, 0x0

    .line 344
    goto :goto_7

    .line 345
    :cond_10
    :goto_6
    const/4 v3, -0x1

    .line 346
    :goto_7
    if-eqz v3, :cond_11

    .line 348
    if-eq v3, v6, :cond_11

    .line 350
    const/4 v4, 0x2

    .line 351
    if-eq v3, v4, :cond_11

    .line 353
    const/4 v4, 0x3

    .line 354
    if-eq v3, v4, :cond_11

    .line 356
    const-string v0, "  Warning : Only numbers between 0 and 3 are allowed."

    .line 358
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 361
    goto :goto_a

    .line 362
    :cond_11
    new-instance v3, Ljava/lang/StringBuilder;

    .line 364
    invoke-direct {v3, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 367
    const/4 v4, 0x2

    .line 368
    aget-object v0, v0, v4

    .line 370
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 373
    move-result v0

    .line 374
    iget-object v4, v1, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 376
    iget-object v5, v4, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 378
    monitor-enter v5
    :try_end_2
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_0

    .line 379
    const/4 v6, -0x1

    .line 380
    if-eq v0, v6, :cond_12

    .line 382
    :try_start_3
    iput v0, v4, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    .line 384
    goto :goto_8

    .line 385
    :catchall_0
    move-exception v0

    .line 386
    goto :goto_9

    .line 387
    :cond_12
    :goto_8
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 388
    :try_start_4
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 390
    iget v0, v0, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    .line 392
    invoke-static {v0}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeStateToString(I)Ljava/lang/String;

    .line 395
    move-result-object v0

    .line 396
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 399
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 402
    move-result-object v0

    .line 403
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_4
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_4 .. :try_end_4} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_4 .. :try_end_4} :catch_0

    .line 406
    goto :goto_a

    .line 407
    :goto_9
    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 408
    :try_start_6
    throw v0

    .line 409
    :cond_13
    new-instance v0, Ljava/lang/StringBuilder;

    .line 411
    invoke-direct {v0, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 414
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 416
    iget-object v3, v3, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 418
    monitor-enter v3
    :try_end_6
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_6 .. :try_end_6} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_6 .. :try_end_6} :catch_0

    .line 419
    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 420
    :try_start_8
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 422
    iget v3, v3, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    .line 424
    invoke-static {v3}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeStateToString(I)Ljava/lang/String;

    .line 427
    move-result-object v3

    .line 428
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 431
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 434
    move-result-object v0

    .line 435
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_8
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_8 .. :try_end_8} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_8 .. :try_end_8} :catch_0

    .line 438
    :goto_a
    return-void

    .line 439
    :catchall_1
    move-exception v0

    .line 440
    :try_start_9
    monitor-exit v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    .line 441
    :try_start_a
    throw v0
    :try_end_a
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_a .. :try_end_a} :catch_0
    .catch Ljava/lang/NumberFormatException; {:try_start_a .. :try_end_a} :catch_0

    .line 442
    :catch_0
    const-string v0, "  Warning : command requires the next arguments"

    .line 444
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 447
    :cond_14
    :goto_b
    sget-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 449
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 452
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 454
    if-eqz v0, :cond_15

    .line 456
    const-string v0, "\nMessage handler (watch for unhandled messages):"

    .line 458
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 461
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 463
    new-instance v3, Landroid/util/PrintWriterPrinter;

    .line 465
    invoke-direct {v3, v2}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    .line 468
    const-string v4, "  "

    .line 470
    invoke-virtual {v0, v3, v4}, Landroid/os/Handler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 473
    goto :goto_c

    .line 474
    :cond_15
    const-string v0, "\nMessage handler is null"

    .line 476
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 479
    :goto_c
    const-string v0, "\nFun with Flags:"

    .line 481
    const-string v3, "\tandroid.media.audio.autoPublicVolumeApiHardening:"

    .line 483
    invoke-static {v2, v0, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 486
    move-result-object v0

    .line 487
    invoke-static {}, Landroid/media/audio/Flags;->autoPublicVolumeApiHardening()Z

    .line 490
    move-result v3

    .line 491
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 494
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 497
    move-result-object v0

    .line 498
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 501
    new-instance v0, Ljava/lang/StringBuilder;

    .line 503
    const-string v3, "\tandroid.media.audio.Flags.automaticBtDeviceType:"

    .line 505
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 508
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 511
    move-result v3

    .line 512
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 515
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 518
    move-result-object v0

    .line 519
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 522
    new-instance v0, Ljava/lang/StringBuilder;

    .line 524
    const-string v3, "\tandroid.media.audio.featureSpatialAudioHeadtrackingLowLatency:"

    .line 526
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 529
    invoke-static {}, Landroid/media/audio/Flags;->featureSpatialAudioHeadtrackingLowLatency()Z

    .line 532
    move-result v3

    .line 533
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 536
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 539
    move-result-object v0

    .line 540
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 543
    new-instance v0, Ljava/lang/StringBuilder;

    .line 545
    const-string v3, "\tandroid.media.audio.focusFreezeTestApi:"

    .line 547
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 550
    invoke-static {}, Landroid/media/audio/Flags;->focusFreezeTestApi()Z

    .line 553
    move-result v3

    .line 554
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 557
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 560
    move-result-object v0

    .line 561
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 564
    invoke-static {}, Lcom/android/media/audio/Flags;->audioserverPermissions()Z

    .line 567
    const-string v0, "\tcom.android.media.audio.audioserverPermissions:false"

    .line 569
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 572
    invoke-static {}, Lcom/android/media/audio/Flags;->disablePrescaleAbsoluteVolume()Z

    .line 575
    const-string v0, "\tcom.android.media.audio.disablePrescaleAbsoluteVolume:true"

    .line 577
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 580
    invoke-static {}, Lcom/android/media/audio/Flags;->setStreamVolumeOrder()Z

    .line 583
    const-string v0, "\tcom.android.media.audio.setStreamVolumeOrder:true"

    .line 585
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 588
    new-instance v0, Ljava/lang/StringBuilder;

    .line 590
    const-string v3, "\tandroid.media.audio.roForegroundAudioControl:"

    .line 592
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 595
    invoke-static {}, Landroid/media/audio/Flags;->roForegroundAudioControl()Z

    .line 598
    move-result v3

    .line 599
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 602
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 605
    move-result-object v0

    .line 606
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 609
    new-instance v0, Ljava/lang/StringBuilder;

    .line 611
    const-string v3, "\tandroid.media.audio.scoManagedByAudio:"

    .line 613
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 616
    invoke-static {}, Landroid/media/audio/Flags;->scoManagedByAudio()Z

    .line 619
    move-result v3

    .line 620
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 623
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 626
    move-result-object v0

    .line 627
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 630
    invoke-static {}, Lcom/android/media/audio/Flags;->vgsVssSyncMuteOrder()Z

    .line 633
    const-string v0, "\tcom.android.media.audio.vgsVssSyncMuteOrder:true"

    .line 635
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 638
    invoke-static {}, Lcom/android/media/audio/Flags;->absVolumeIndexFix()Z

    .line 641
    const-string v0, "\tcom.android.media.audio.absVolumeIndexFix:false"

    .line 643
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 646
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    .line 648
    iget-object v0, v0, Lcom/android/server/audio/HardeningEnforcer;->mEventLogger:Lcom/android/server/utils/EventLogger;

    .line 650
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 653
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 655
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 658
    new-instance v3, Ljava/lang/StringBuilder;

    .line 660
    const-string v4, "\nMediaFocusControl dump time: "

    .line 662
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 665
    invoke-static {}, Ljava/text/DateFormat;->getTimeInstance()Ljava/text/DateFormat;

    .line 668
    move-result-object v4

    .line 669
    new-instance v5, Ljava/util/Date;

    .line 671
    invoke-direct {v5}, Ljava/util/Date;-><init>()V

    .line 674
    invoke-virtual {v4, v5}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    .line 677
    move-result-object v4

    .line 678
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 681
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 684
    move-result-object v3

    .line 685
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 688
    const-string v3, "External focus policy: "

    .line 690
    const-string v4, "\nAudio Focus stack entries (last is top of stack):"

    .line 692
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 695
    sget-object v4, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 697
    monitor-enter v4

    .line 698
    :try_start_b
    invoke-virtual {v0, v2}, Lcom/android/server/audio/MediaFocusControl;->dumpMultiSoundStack(Ljava/io/PrintWriter;)V

    .line 701
    const-string v5, "\n"

    .line 703
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 706
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusPolicy:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 708
    if-nez v5, :cond_16

    .line 710
    const-string v3, "No external focus policy\n"

    .line 712
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 715
    goto :goto_e

    .line 716
    :catchall_2
    move-exception v0

    .line 717
    goto/16 :goto_1e

    .line 719
    :cond_16
    new-instance v5, Ljava/lang/StringBuilder;

    .line 721
    invoke-direct {v5, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 724
    iget-object v3, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusPolicy:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 726
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 729
    const-string v3, ", focus owners:\n"

    .line 731
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 734
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 737
    move-result-object v3

    .line 738
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 741
    iget-object v3, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusOwnersForFocusPolicy:Ljava/util/HashMap;

    .line 743
    invoke-virtual {v3}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    .line 746
    move-result-object v3

    .line 747
    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 750
    move-result-object v3

    .line 751
    :goto_d
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 754
    move-result v5

    .line 755
    if-eqz v5, :cond_17

    .line 757
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 760
    move-result-object v5

    .line 761
    check-cast v5, Ljava/util/Map$Entry;

    .line 763
    invoke-interface {v5}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    .line 766
    move-result-object v5

    .line 767
    check-cast v5, Lcom/android/server/audio/FocusRequester;

    .line 769
    invoke-virtual {v5, v2}, Lcom/android/server/audio/FocusRequester;->dump(Ljava/io/PrintWriter;)V

    .line 772
    goto :goto_d

    .line 773
    :cond_17
    :goto_e
    monitor-exit v4
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    .line 774
    const-string v3, "\n"

    .line 776
    const-string v4, " Notify on duck:  "

    .line 778
    invoke-static {v2, v3, v4}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 781
    move-result-object v3

    .line 782
    iget-boolean v4, v0, Lcom/android/server/audio/MediaFocusControl;->mNotifyFocusOwnerOnDuck:Z

    .line 784
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 787
    const-string v4, "\n"

    .line 789
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 792
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 795
    move-result-object v3

    .line 796
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 799
    new-instance v3, Ljava/lang/StringBuilder;

    .line 801
    const-string v4, " In ring or call: "

    .line 803
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 806
    iget-boolean v4, v0, Lcom/android/server/audio/MediaFocusControl;->mRingOrCallActive:Z

    .line 808
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 811
    const-string v4, "\n"

    .line 813
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 816
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 819
    move-result-object v3

    .line 820
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 823
    const-string v3, "\n"

    .line 825
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 828
    sget-object v3, Lcom/android/server/audio/MediaFocusControl;->mEventLogger:Lcom/android/server/utils/EventLogger;

    .line 830
    invoke-virtual {v3, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 833
    new-instance v3, Ljava/lang/StringBuilder;

    .line 835
    const-string v4, "Multi Audio Focus enabled :"

    .line 837
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 840
    iget-boolean v4, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusEnabled:Z

    .line 842
    invoke-static {v3, v4, v2}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 845
    iget-object v3, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 847
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    .line 850
    move-result v3

    .line 851
    if-nez v3, :cond_19

    .line 853
    const-string v3, "Multi Audio Focus List:"

    .line 855
    const-string/jumbo v4, "device:"

    .line 858
    invoke-static {v2, v3, v4}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 861
    move-result-object v3

    .line 862
    iget v4, v0, Lcom/android/server/audio/MediaFocusControl;->mDevice:I

    .line 864
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 867
    move-result-object v4

    .line 868
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 871
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 874
    move-result-object v3

    .line 875
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 878
    new-instance v3, Ljava/lang/StringBuilder;

    .line 880
    const-string/jumbo v4, "size:"

    .line 883
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 886
    iget-object v4, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 888
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 891
    move-result v4

    .line 892
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 895
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 898
    move-result-object v3

    .line 899
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 902
    const-string v3, "------------------------------"

    .line 904
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 907
    iget-object v4, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 909
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 912
    move-result-object v4

    .line 913
    :goto_f
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 916
    move-result v5

    .line 917
    if-eqz v5, :cond_18

    .line 919
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 922
    move-result-object v5

    .line 923
    check-cast v5, Lcom/android/server/audio/FocusRequester;

    .line 925
    invoke-virtual {v5, v2}, Lcom/android/server/audio/FocusRequester;->dump(Ljava/io/PrintWriter;)V

    .line 928
    goto :goto_f

    .line 929
    :cond_18
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 932
    :cond_19
    new-instance v3, Ljava/lang/StringBuilder;

    .line 934
    const-string/jumbo v4, "mIgnoredAudioFocusUid:"

    .line 937
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 940
    iget v0, v0, Lcom/android/server/audio/MediaFocusControl;->mIgnoredUid:I

    .line 942
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 945
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 948
    move-result-object v0

    .line 949
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 952
    const-string v0, "\nStream volumes (device: index)"

    .line 954
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 957
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 960
    move-result v0

    .line 961
    const/4 v3, 0x0

    .line 962
    :goto_10
    const/4 v4, 0x5

    .line 963
    const/high16 v5, 0x40000000    # 2.0f

    .line 965
    if-ge v3, v0, :cond_22

    .line 967
    new-instance v6, Ljava/lang/StringBuilder;

    .line 969
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 972
    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 974
    aget v7, v7, v3

    .line 976
    const-string v8, ")"

    .line 978
    if-eq v7, v3, :cond_1a

    .line 980
    const-string v7, " (aliased to: "

    .line 982
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 985
    sget-object v7, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    .line 987
    sget-object v9, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 989
    aget v9, v9, v3

    .line 991
    aget-object v7, v7, v9

    .line 993
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 996
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 999
    :cond_1a
    new-instance v7, Ljava/lang/StringBuilder;

    .line 1001
    const-string v9, "- "

    .line 1003
    invoke-direct {v7, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1006
    sget-object v9, Landroid/media/AudioSystem;->STREAM_NAMES:[Ljava/lang/String;

    .line 1008
    aget-object v9, v9, v3

    .line 1010
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1013
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1016
    const-string v6, ":"

    .line 1018
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1021
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1024
    move-result-object v6

    .line 1025
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1028
    iget-object v6, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 1030
    aget-object v6, v6, v3

    .line 1032
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1035
    const-string v7, "   Muted: "

    .line 1037
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1040
    iget-boolean v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 1042
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->println(Z)V

    .line 1045
    const-string v7, "   Muted Internally: "

    .line 1047
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1050
    iget-boolean v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMutedInternally:Z

    .line 1052
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->println(Z)V

    .line 1055
    const-string v7, "   Min: "

    .line 1057
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1060
    iget v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 1062
    add-int/lit8 v9, v7, 0x5

    .line 1064
    div-int/lit8 v9, v9, 0xa

    .line 1066
    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(I)V

    .line 1069
    iget v9, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMinNoPerm:I

    .line 1071
    if-eq v7, v9, :cond_1b

    .line 1073
    const-string v7, " w/o perm:"

    .line 1075
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1078
    iget v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMinNoPerm:I

    .line 1080
    add-int/2addr v7, v4

    .line 1081
    div-int/lit8 v7, v7, 0xa

    .line 1083
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->println(I)V

    .line 1086
    goto :goto_11

    .line 1087
    :cond_1b
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 1090
    :goto_11
    const-string v7, "   Max: "

    .line 1092
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1095
    iget v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 1097
    add-int/2addr v7, v4

    .line 1098
    div-int/lit8 v7, v7, 0xa

    .line 1100
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->println(I)V

    .line 1103
    const-string v4, "   streamVolume:"

    .line 1105
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1108
    iget-object v4, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->this$0:Lcom/android/server/audio/AudioService;

    .line 1110
    iget v7, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 1112
    invoke-virtual {v4, v7}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    .line 1115
    move-result v9

    .line 1116
    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->println(I)V

    .line 1119
    const-string v9, "   Current: "

    .line 1121
    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1124
    const/4 v9, 0x0

    .line 1125
    :goto_12
    iget-object v10, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 1127
    invoke-virtual {v10}, Landroid/util/SparseIntArray;->size()I

    .line 1130
    move-result v10

    .line 1131
    if-ge v9, v10, :cond_20

    .line 1133
    if-lez v9, :cond_1c

    .line 1135
    const-string v10, ", "

    .line 1137
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1140
    :cond_1c
    iget-object v10, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 1142
    invoke-virtual {v10, v9}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 1145
    move-result v10

    .line 1146
    invoke-static {v10}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1149
    move-result-object v11

    .line 1150
    invoke-virtual {v2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1153
    if-ne v10, v5, :cond_1d

    .line 1155
    const-string/jumbo v10, "default"

    .line 1158
    goto :goto_13

    .line 1159
    :cond_1d
    invoke-static {v10}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 1162
    move-result-object v10

    .line 1163
    :goto_13
    invoke-virtual {v10}, Ljava/lang/String;->isEmpty()Z

    .line 1166
    move-result v11

    .line 1167
    if-nez v11, :cond_1e

    .line 1169
    const-string v11, " ("

    .line 1171
    invoke-virtual {v2, v11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1174
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1177
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1180
    :cond_1e
    const-string v10, ": "

    .line 1182
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1185
    iget-object v10, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 1187
    invoke-virtual {v10, v9}, Landroid/util/SparseIntArray;->valueAt(I)I

    .line 1190
    move-result v10

    .line 1191
    invoke-static {v10, v7}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    .line 1194
    move-result v10

    .line 1195
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 1198
    const/4 v10, 0x3

    .line 1199
    if-ne v7, v10, :cond_1f

    .line 1201
    const-string v10, "\\"

    .line 1203
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1206
    iget-object v10, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 1208
    invoke-virtual {v10, v9}, Landroid/util/SparseIntArray;->valueAt(I)I

    .line 1211
    move-result v10

    .line 1212
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->print(I)V

    .line 1215
    :cond_1f
    add-int/lit8 v9, v9, 0x1

    .line 1217
    goto :goto_12

    .line 1218
    :cond_20
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 1221
    const-string v5, "   Devices: "

    .line 1223
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1226
    invoke-virtual {v4, v7}, Lcom/android/server/audio/AudioService;->getDeviceSetForStream(I)Ljava/util/Set;

    .line 1229
    move-result-object v4

    .line 1230
    invoke-static {v4}, Landroid/media/AudioSystem;->deviceSetToString(Ljava/util/Set;)Ljava/lang/String;

    .line 1233
    move-result-object v4

    .line 1234
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1237
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 1240
    const-string v4, "   Volume Group: "

    .line 1242
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1245
    iget-object v4, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeGroupState:Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 1247
    if-eqz v4, :cond_21

    .line 1249
    iget-object v4, v4, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 1251
    invoke-virtual {v4}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 1254
    move-result-object v4

    .line 1255
    goto :goto_14

    .line 1256
    :cond_21
    const-string/jumbo v4, "n/a"

    .line 1259
    :goto_14
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1262
    const-string v4, ""

    .line 1264
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1267
    add-int/lit8 v3, v3, 0x1

    .line 1269
    goto/16 :goto_10

    .line 1271
    :cond_22
    const-string v0, "\n- mute affected streams = 0x"

    .line 1273
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1276
    iget v0, v1, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 1278
    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1281
    move-result-object v0

    .line 1282
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1285
    const-string v0, "\n- user mutable streams = 0x"

    .line 1287
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1290
    iget v0, v1, Lcom/android/server/audio/AudioService;->mUserMutableStreams:I

    .line 1292
    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1295
    move-result-object v0

    .line 1296
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1299
    const-string v0, "\nVolume Groups (device: index)"

    .line 1301
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1304
    const/4 v0, 0x0

    .line 1305
    :goto_15
    sget-object v3, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 1307
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    .line 1310
    move-result v6

    .line 1311
    if-ge v0, v6, :cond_2a

    .line 1313
    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 1316
    move-result-object v3

    .line 1317
    check-cast v3, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 1319
    new-instance v6, Ljava/lang/StringBuilder;

    .line 1321
    const-string v7, "- VOLUME GROUP "

    .line 1323
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1326
    iget-object v7, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 1328
    invoke-virtual {v7}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 1331
    move-result-object v7

    .line 1332
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1335
    const-string v7, ":"

    .line 1337
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1340
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1343
    move-result-object v6

    .line 1344
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1347
    const-string v6, "   Muted: "

    .line 1349
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1352
    iget-boolean v6, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 1354
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(Z)V

    .line 1357
    const-string v6, "   Min: "

    .line 1359
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1362
    iget v6, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMin:I

    .line 1364
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(I)V

    .line 1367
    const-string v6, "   Max: "

    .line 1369
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1372
    iget v6, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMax:I

    .line 1374
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(I)V

    .line 1377
    const-string v6, "   Current: "

    .line 1379
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1382
    const/4 v6, 0x0

    .line 1383
    :goto_16
    iget-object v7, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMap:Landroid/util/SparseIntArray;

    .line 1385
    invoke-virtual {v7}, Landroid/util/SparseIntArray;->size()I

    .line 1388
    move-result v7

    .line 1389
    const-string v8, ", "

    .line 1391
    if-ge v6, v7, :cond_26

    .line 1393
    if-lez v6, :cond_23

    .line 1395
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1398
    :cond_23
    iget-object v7, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMap:Landroid/util/SparseIntArray;

    .line 1400
    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 1403
    move-result v7

    .line 1404
    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1407
    move-result-object v8

    .line 1408
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1411
    if-ne v7, v5, :cond_24

    .line 1413
    const-string/jumbo v7, "default"

    .line 1416
    goto :goto_17

    .line 1417
    :cond_24
    invoke-static {v7}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 1420
    move-result-object v7

    .line 1421
    :goto_17
    invoke-virtual {v7}, Ljava/lang/String;->isEmpty()Z

    .line 1424
    move-result v8

    .line 1425
    if-nez v8, :cond_25

    .line 1427
    const-string v8, " ("

    .line 1429
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1432
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1435
    const-string v7, ")"

    .line 1437
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1440
    :cond_25
    const-string v7, ": "

    .line 1442
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1445
    iget-object v7, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMap:Landroid/util/SparseIntArray;

    .line 1447
    invoke-virtual {v7, v6}, Landroid/util/SparseIntArray;->valueAt(I)I

    .line 1450
    move-result v7

    .line 1451
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(I)V

    .line 1454
    add-int/lit8 v6, v6, 0x1

    .line 1456
    goto :goto_16

    .line 1457
    :cond_26
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 1460
    const-string v6, "   Devices: "

    .line 1462
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1465
    iget-object v6, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 1467
    iget v7, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 1469
    invoke-virtual {v6, v7}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 1472
    move-result v6

    .line 1473
    sget-object v7, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_SET:Ljava/util/Set;

    .line 1475
    invoke-interface {v7}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 1478
    move-result-object v7

    .line 1479
    const/4 v9, 0x0

    .line 1480
    :cond_27
    :goto_18
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    .line 1483
    move-result v10

    .line 1484
    if-eqz v10, :cond_29

    .line 1486
    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1489
    move-result-object v10

    .line 1490
    check-cast v10, Ljava/lang/Integer;

    .line 1492
    invoke-virtual {v10}, Ljava/lang/Integer;->intValue()I

    .line 1495
    move-result v10

    .line 1496
    and-int v11, v6, v10

    .line 1498
    if-ne v11, v10, :cond_27

    .line 1500
    add-int/lit8 v11, v9, 0x1

    .line 1502
    if-lez v9, :cond_28

    .line 1504
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1507
    :cond_28
    invoke-static {v10}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 1510
    move-result-object v9

    .line 1511
    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1514
    move v9, v11

    .line 1515
    goto :goto_18

    .line 1516
    :cond_29
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 1519
    const-string v6, "   Streams: "

    .line 1521
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1524
    iget-object v3, v3, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 1526
    invoke-virtual {v3}, Landroid/media/audiopolicy/AudioVolumeGroup;->getLegacyStreamTypes()[I

    .line 1529
    move-result-object v3

    .line 1530
    invoke-static {v3}, Ljava/util/Arrays;->stream([I)Ljava/util/stream/IntStream;

    .line 1533
    move-result-object v3

    .line 1534
    new-instance v6, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda11;

    .line 1536
    const/4 v7, 0x1

    .line 1537
    invoke-direct {v6, v7, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda11;-><init>(ILjava/lang/Object;)V

    .line 1540
    invoke-interface {v3, v6}, Ljava/util/stream/IntStream;->forEach(Ljava/util/function/IntConsumer;)V

    .line 1543
    const-string v3, ""

    .line 1545
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1548
    add-int/lit8 v0, v0, 0x1

    .line 1550
    goto/16 :goto_15

    .line 1552
    :cond_2a
    const-string v0, "\nRinger mode: "

    .line 1554
    const-string v3, "- mode (internal) = "

    .line 1556
    invoke-static {v2, v0, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1559
    move-result-object v0

    .line 1560
    sget-object v3, Lcom/android/server/audio/AudioService;->RINGER_MODE_NAMES:[Ljava/lang/String;

    .line 1562
    iget v5, v1, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 1564
    aget-object v5, v3, v5

    .line 1566
    const-string v6, "- mode (external) = "

    .line 1568
    invoke-static {v2, v5, v6, v0}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;

    .line 1571
    move-result-object v0

    .line 1572
    iget v5, v1, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 1574
    aget-object v3, v3, v5

    .line 1576
    const-string v5, "- zen mode:"

    .line 1578
    invoke-static {v2, v3, v5, v0}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;

    .line 1581
    move-result-object v0

    .line 1582
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 1584
    invoke-virtual {v3}, Landroid/app/NotificationManager;->getZenMode()I

    .line 1587
    move-result v3

    .line 1588
    invoke-static {v3}, Landroid/provider/Settings$Global;->zenModeToString(I)Ljava/lang/String;

    .line 1591
    move-result-object v3

    .line 1592
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1595
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1598
    move-result-object v0

    .line 1599
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1602
    const-string v0, "affected"

    .line 1604
    iget v3, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 1606
    invoke-static {v2, v0, v3}, Lcom/android/server/audio/AudioService;->dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 1609
    const-string/jumbo v0, "muted"

    .line 1612
    sget v3, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 1614
    invoke-static {v2, v0, v3}, Lcom/android/server/audio/AudioService;->dumpRingerModeStreams(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 1617
    const-string v0, "- delegate = "

    .line 1619
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1622
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 1624
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1627
    const-string v0, "\nAudio mode: "

    .line 1629
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1632
    new-instance v0, Ljava/lang/StringBuilder;

    .line 1634
    const-string v3, "- Requested mode = "

    .line 1636
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1639
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getMode()I

    .line 1642
    move-result v3

    .line 1643
    invoke-static {v3}, Landroid/media/AudioSystem;->modeToString(I)Ljava/lang/String;

    .line 1646
    move-result-object v3

    .line 1647
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1650
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1653
    move-result-object v0

    .line 1654
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1657
    new-instance v0, Ljava/lang/StringBuilder;

    .line 1659
    const-string v3, "- Actual mode = "

    .line 1661
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1664
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 1666
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 1669
    move-result v3

    .line 1670
    invoke-static {v3}, Landroid/media/AudioSystem;->modeToString(I)Ljava/lang/String;

    .line 1673
    move-result-object v3

    .line 1674
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1677
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1680
    move-result-object v0

    .line 1681
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1684
    const-string v0, "- Mode owner: "

    .line 1686
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1689
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 1692
    move-result-object v0

    .line 1693
    if-eqz v0, :cond_2b

    .line 1695
    const/4 v3, -0x1

    .line 1696
    invoke-virtual {v0, v3, v2}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->dump(ILjava/io/PrintWriter;)V

    .line 1699
    goto :goto_19

    .line 1700
    :cond_2b
    const-string v0, "   None"

    .line 1702
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1705
    :goto_19
    const-string v0, "- Mode owner stack: "

    .line 1707
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1710
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 1712
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    .line 1715
    move-result v0

    .line 1716
    if-eqz v0, :cond_2c

    .line 1718
    const-string v0, "   Empty"

    .line 1720
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1723
    goto :goto_1b

    .line 1724
    :cond_2c
    const/4 v0, 0x0

    .line 1725
    :goto_1a
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 1727
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 1730
    move-result v3

    .line 1731
    if-ge v0, v3, :cond_2d

    .line 1733
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 1735
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 1738
    move-result-object v3

    .line 1739
    check-cast v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 1741
    invoke-virtual {v3, v0, v2}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->dump(ILjava/io/PrintWriter;)V

    .line 1744
    add-int/lit8 v0, v0, 0x1

    .line 1746
    goto :goto_1a

    .line 1747
    :cond_2d
    :goto_1b
    const-string v0, "\nAudio routes:"

    .line 1749
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1752
    const-string v0, "  mMainType=0x"

    .line 1754
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1757
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1759
    iget-object v3, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 1761
    monitor-enter v3

    .line 1762
    :try_start_c
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 1764
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceInventory;->mCurAudioRoutes:Landroid/media/AudioRoutesInfo;

    .line 1766
    monitor-exit v3
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_6

    .line 1767
    iget v0, v0, Landroid/media/AudioRoutesInfo;->mainType:I

    .line 1769
    invoke-static {v0}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1772
    move-result-object v0

    .line 1773
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1776
    const-string v0, "  mBluetoothName="

    .line 1778
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1781
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1783
    iget-object v5, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 1785
    monitor-enter v5

    .line 1786
    :try_start_d
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 1788
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceInventory;->mCurAudioRoutes:Landroid/media/AudioRoutesInfo;

    .line 1790
    monitor-exit v5
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    .line 1791
    iget-object v0, v0, Landroid/media/AudioRoutesInfo;->bluetoothName:Ljava/lang/CharSequence;

    .line 1793
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1796
    const-string v0, "\nOther state:"

    .line 1798
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1801
    const-string v0, "  mUseVolumeGroupAliases="

    .line 1803
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1806
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 1808
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1811
    const-string v0, "  mVolumeController="

    .line 1813
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1816
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 1818
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1821
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 1823
    invoke-virtual {v0, v2}, Lcom/android/server/audio/SoundDoseHelper;->dump(Ljava/io/PrintWriter;)V

    .line 1826
    const-string v0, "  sIndependentA11yVolume="

    .line 1828
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1831
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 1833
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1836
    const-string v0, "  mCameraSoundForced="

    .line 1838
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1841
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isCameraSoundForced()Z

    .line 1844
    move-result v0

    .line 1845
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1848
    const-string v0, "  mHasVibrator="

    .line 1850
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1853
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 1855
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1858
    const-string v0, "  mVolumePolicy="

    .line 1860
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1863
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 1865
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1868
    const-string v0, "  mAvrcpAbsVolSupported="

    .line 1870
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1873
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 1875
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1878
    const-string v0, "  mBtScoOnByApp="

    .line 1880
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1883
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mBtScoOnByApp:Z

    .line 1885
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1888
    const-string v0, "  mIsSingleVolume="

    .line 1890
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1893
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 1895
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1898
    const-string v0, "  mUseFixedVolume="

    .line 1900
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1903
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 1905
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1908
    const-string v0, "  mNotifAliasRing="

    .line 1910
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1913
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mNotifAliasRing:Z

    .line 1915
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 1918
    const-string v0, "  mFixedVolumeDevices="

    .line 1920
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1923
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 1925
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;

    .line 1928
    move-result-object v0

    .line 1929
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1932
    const-string v0, "  mFullVolumeDevices="

    .line 1934
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1937
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 1939
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;

    .line 1942
    move-result-object v0

    .line 1943
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1946
    const-string v0, "  absolute volume devices="

    .line 1948
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1951
    const/4 v3, 0x3

    .line 1952
    invoke-virtual {v1, v3}, Lcom/android/server/audio/AudioService;->getAbsoluteVolumeDevicesWithBehavior(I)Ljava/util/Set;

    .line 1955
    move-result-object v0

    .line 1956
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;

    .line 1959
    move-result-object v0

    .line 1960
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1963
    const-string v0, "  adjust-only absolute volume devices="

    .line 1965
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1968
    invoke-virtual {v1, v4}, Lcom/android/server/audio/AudioService;->getAbsoluteVolumeDevicesWithBehavior(I)Ljava/util/Set;

    .line 1971
    move-result-object v0

    .line 1972
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->dumpDeviceTypes(Ljava/util/Set;)Ljava/lang/String;

    .line 1975
    move-result-object v0

    .line 1976
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1979
    const-string v0, "  pre-scale for bluetooth absolute volume "

    .line 1981
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1984
    invoke-static {}, Lcom/android/media/audio/Flags;->disablePrescaleAbsoluteVolume()Z

    .line 1987
    const-string v0, "= disabled"

    .line 1989
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1992
    const-string v0, "  mExtVolumeController="

    .line 1994
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1997
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mExtVolumeController:Landroid/media/audiopolicy/IAudioPolicyCallback;

    .line 1999
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 2002
    const-string v0, "  mHdmiAudioSystemClient="

    .line 2004
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2007
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 2009
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 2012
    const-string v0, "  mHdmiPlaybackClient="

    .line 2014
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2017
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 2019
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 2022
    const-string v0, "  mHdmiTvClient="

    .line 2024
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2027
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 2029
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 2032
    const-string v0, "  mHdmiSystemAudioSupported="

    .line 2034
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2037
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 2039
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2042
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 2044
    monitor-enter v3

    .line 2045
    :try_start_e
    const-string v0, "  mHdmiCecVolumeControlEnabled="

    .line 2047
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2050
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    .line 2052
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2055
    monitor-exit v3
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    .line 2056
    const-string v0, "  mIsCallScreeningModeSupported="

    .line 2058
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2061
    iget-boolean v0, v1, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 2063
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2066
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2068
    const-string v3, "  mic mute FromSwitch="

    .line 2070
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2073
    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    .line 2075
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2078
    const-string v3, " FromRestrictions="

    .line 2080
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2083
    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    .line 2085
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2088
    const-string v3, " FromApi="

    .line 2090
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2093
    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    .line 2095
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2098
    const-string v3, " from system="

    .line 2100
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2103
    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 2105
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2108
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2111
    move-result-object v0

    .line 2112
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2115
    const-string v0, "  mMasterMute="

    .line 2117
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2120
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mMasterMute:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 2122
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 2125
    move-result v0

    .line 2126
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2129
    iget-object v4, v1, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 2131
    monitor-enter v4

    .line 2132
    :try_start_f
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 2134
    if-eqz v0, :cond_2e

    .line 2136
    array-length v0, v0

    .line 2137
    if-lez v0, :cond_2e

    .line 2139
    const-string v0, "  Accessibility service Uids:"

    .line 2141
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2144
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 2146
    array-length v3, v0

    .line 2147
    const/4 v6, 0x0

    .line 2148
    :goto_1c
    if-ge v6, v3, :cond_2f

    .line 2150
    aget v5, v0, v6

    .line 2152
    new-instance v7, Ljava/lang/StringBuilder;

    .line 2154
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 2157
    const-string v8, "  - "

    .line 2159
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2162
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2165
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2168
    move-result-object v5

    .line 2169
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2172
    add-int/lit8 v6, v6, 0x1

    .line 2174
    goto :goto_1c

    .line 2175
    :catchall_3
    move-exception v0

    .line 2176
    goto/16 :goto_1d

    .line 2178
    :cond_2e
    const-string v0, "  No accessibility service Uids."

    .line 2180
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2183
    :cond_2f
    monitor-exit v4
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_3

    .line 2184
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->dumpAssistantServicesUids(Ljava/io/PrintWriter;)V

    .line 2187
    const-string v0, "  supportsBluetoothVariableLatency="

    .line 2189
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2192
    invoke-static {}, Landroid/media/AudioSystem;->supportsBluetoothVariableLatency()Z

    .line 2195
    move-result v0

    .line 2196
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2199
    const-string v0, "  isBluetoothVariableLatencyEnabled="

    .line 2201
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2204
    invoke-static {}, Landroid/media/AudioSystem;->isBluetoothVariableLatencyEnabled()Z

    .line 2207
    move-result v0

    .line 2208
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Z)V

    .line 2211
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->dumpAudioPolicies(Ljava/io/PrintWriter;)V

    .line 2214
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/utils/EventLogger;

    .line 2216
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2219
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 2221
    invoke-virtual {v0, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->dump(Ljava/io/PrintWriter;)V

    .line 2224
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 2226
    invoke-virtual {v0, v2}, Lcom/android/server/audio/RecordingActivityMonitor;->dump(Ljava/io/PrintWriter;)V

    .line 2229
    const-string v0, "\nAudioDeviceBroker:"

    .line 2231
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2234
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 2236
    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioDeviceBroker;->dump(Ljava/io/PrintWriter;)V

    .line 2239
    const-string v0, "\nSoundEffects:"

    .line 2241
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2244
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mSfxHelper:Lcom/android/server/audio/SoundEffectsHelper;

    .line 2246
    invoke-virtual {v0, v2}, Lcom/android/server/audio/SoundEffectsHelper;->dump(Ljava/io/PrintWriter;)V

    .line 2249
    const-string v0, "\n"

    .line 2251
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2254
    const-string v0, "\nEvent logs:"

    .line 2256
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2259
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/utils/EventLogger;

    .line 2261
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2264
    const-string v0, "\n"

    .line 2266
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2269
    sget-object v0, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 2271
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2274
    const-string v0, "\n"

    .line 2276
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2279
    sget-object v0, Lcom/android/server/audio/AudioService;->sForceUseLogger:Lcom/android/server/utils/EventLogger;

    .line 2281
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2284
    const-string v0, "\n"

    .line 2286
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2289
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 2291
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2294
    const-string v0, "\n"

    .line 2296
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2299
    sget-object v0, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 2301
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2304
    const-string v0, "\n"

    .line 2306
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2309
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->dumpSupportedSystemUsage(Ljava/io/PrintWriter;)V

    .line 2312
    const-string v0, "\n"

    .line 2314
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2317
    const-string v0, "\nSpatial audio:"

    .line 2319
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2322
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2324
    const-string/jumbo v3, "mHasSpatializerEffect:"

    .line 2327
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2330
    iget-boolean v3, v1, Lcom/android/server/audio/AudioService;->mHasSpatializerEffect:Z

    .line 2332
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2335
    const-string v3, " (effect present)"

    .line 2337
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2340
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2343
    move-result-object v0

    .line 2344
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2347
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2349
    const-string/jumbo v3, "isSpatializerEnabled:"

    .line 2352
    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2355
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isSpatializerEnabled()Z

    .line 2358
    move-result v3

    .line 2359
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2362
    const-string v3, " (routing dependent)"

    .line 2364
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2367
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2370
    move-result-object v0

    .line 2371
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2374
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 2376
    invoke-virtual {v0, v2}, Lcom/android/server/audio/SpatializerHelper;->dump(Ljava/io/PrintWriter;)V

    .line 2379
    sget-object v0, Lcom/android/server/audio/AudioService;->sSpatialLogger:Lcom/android/server/utils/EventLogger;

    .line 2381
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->dump(Ljava/io/PrintWriter;)V

    .line 2384
    const-string v0, "\n"

    .line 2386
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2389
    const-string v0, "\nLoudness alignment:"

    .line 2391
    invoke-virtual {v2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2394
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 2396
    invoke-virtual {v0, v2}, Lcom/android/server/audio/LoudnessCodecHelper;->dump(Ljava/io/PrintWriter;)V

    .line 2399
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 2401
    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioSystemAdapter;->dump(Ljava/io/PrintWriter;)V

    .line 2404
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->addSamsungExtraDump(Ljava/io/PrintWriter;)V

    .line 2407
    return-void

    .line 2408
    :goto_1d
    :try_start_10
    monitor-exit v4
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    .line 2409
    throw v0

    .line 2410
    :catchall_4
    move-exception v0

    .line 2411
    :try_start_11
    monitor-exit v3
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_4

    .line 2412
    throw v0

    .line 2413
    :catchall_5
    move-exception v0

    .line 2414
    :try_start_12
    monitor-exit v5
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_5

    .line 2415
    throw v0

    .line 2416
    :catchall_6
    move-exception v0

    .line 2417
    :try_start_13
    monitor-exit v3
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_6

    .line 2418
    throw v0

    .line 2419
    :goto_1e
    :try_start_14
    monitor-exit v4
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_2

    .line 2420
    throw v0

    .line 2421
    :sswitch_data_0
    .sparse-switch
        -0x7f8d5a5c -> :sswitch_3
        -0x457bae55 -> :sswitch_2
        -0x333c7cd6 -> :sswitch_1
        0x7486e8a0 -> :sswitch_0
    .end sparse-switch

    .line 2439
    :pswitch_data_0
    .packed-switch 0x30
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public final dumpAssistantServicesUids(Ljava/io/PrintWriter;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 6
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    .line 9
    move-result v1

    .line 10
    if-lez v1, :cond_0

    .line 12
    const-string v1, "  Assistant service UIDs:"

    .line 14
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 17
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 19
    invoke-virtual {p0}, Landroid/util/ArraySet;->iterator()Ljava/util/Iterator;

    .line 22
    move-result-object p0

    .line 23
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 26
    move-result v1

    .line 27
    if-eqz v1, :cond_1

    .line 29
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 32
    move-result-object v1

    .line 33
    check-cast v1, Ljava/lang/Integer;

    .line 35
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 38
    move-result v1

    .line 39
    new-instance v2, Ljava/lang/StringBuilder;

    .line 41
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 44
    const-string v3, "  - "

    .line 46
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 49
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 52
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 55
    move-result-object v1

    .line 56
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 59
    goto :goto_0

    .line 60
    :catchall_0
    move-exception p0

    .line 61
    goto :goto_1

    .line 62
    :cond_0
    const-string p0, "  No Assistant service Uids."

    .line 64
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 67
    :cond_1
    monitor-exit v0

    .line 68
    return-void

    .line 69
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 70
    throw p0
.end method

.method public final dumpAudioPolicies(Ljava/io/PrintWriter;)V
    .locals 2

    .line 1
    const-string v0, "\nAudio policies:"

    .line 3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 11
    invoke-virtual {p0}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 14
    move-result-object p0

    .line 15
    invoke-interface {p0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 18
    move-result-object p0

    .line 19
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 22
    move-result v1

    .line 23
    if-eqz v1, :cond_0

    .line 25
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 28
    move-result-object v1

    .line 29
    check-cast v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 31
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    .line 34
    move-result-object v1

    .line 35
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 38
    goto :goto_0

    .line 39
    :catchall_0
    move-exception p0

    .line 40
    goto :goto_1

    .line 41
    :cond_0
    monitor-exit v0

    .line 42
    return-void

    .line 43
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 44
    throw p0
.end method

.method public final dumpSupportedSystemUsage(Ljava/io/PrintWriter;)V
    .locals 4

    .line 1
    const-string v0, "Supported System Usages:"

    .line 3
    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    const/4 v1, 0x0

    .line 10
    :goto_0
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 12
    array-length v3, v2

    .line 13
    if-ge v1, v3, :cond_0

    .line 15
    const-string v3, "\t%s\n"

    .line 17
    aget v2, v2, v1

    .line 19
    invoke-static {v2}, Landroid/media/AudioAttributes;->usageToString(I)Ljava/lang/String;

    .line 22
    move-result-object v2

    .line 23
    filled-new-array {v2}, [Ljava/lang/Object;

    .line 26
    move-result-object v2

    .line 27
    invoke-virtual {p1, v3, v2}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    .line 30
    add-int/lit8 v1, v1, 0x1

    .line 32
    goto :goto_0

    .line 33
    :catchall_0
    move-exception p0

    .line 34
    goto :goto_1

    .line 35
    :cond_0
    monitor-exit v0

    .line 36
    return-void

    .line 37
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 38
    throw p0
.end method

.method public final enforceModifyAudioRoutingPermission()V
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v0, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result p0

    .line 9
    if-nez p0, :cond_0

    .line 11
    return-void

    .line 12
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 14
    const-string v0, "Missing MODIFY_AUDIO_ROUTING permission"

    .line 16
    invoke-direct {p0, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 19
    throw p0
.end method

.method public final enforceQueryAudioStateForTest(Ljava/lang/String;)Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v0, "android.permission.QUERY_AUDIO_STATE"

    .line 5
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result p0

    .line 9
    if-eqz p0, :cond_0

    .line 11
    const-string p0, "Doesn\'t have QUERY_AUDIO_STATE permission for "

    .line 13
    const-string v0, " test API"

    .line 15
    invoke-static {p0, p1, v0}, Lcom/android/internal/util/jobs/XmlUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 18
    move-result-object p0

    .line 19
    new-instance p1, Ljava/lang/Exception;

    .line 21
    invoke-direct {p1}, Ljava/lang/Exception;-><init>()V

    .line 24
    const-string v0, "AS.AudioService"

    .line 26
    invoke-static {v0, p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 29
    const/4 p0, 0x0

    .line 30
    return p0

    .line 31
    :cond_0
    const/4 p0, 0x1

    .line 32
    return p0
.end method

.method public final enforceVolumeController(Ljava/lang/String;)V
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v0, "Only SystemUI can "

    .line 5
    invoke-virtual {v0, p1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 8
    move-result-object p1

    .line 9
    const-string v0, "android.permission.STATUS_BAR_SERVICE"

    .line 11
    invoke-virtual {p0, v0, p1}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 14
    return-void
.end method

.method public final ensureValidStreamType(I)V
    .locals 1

    .line 1
    if-ltz p1, :cond_0

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 5
    array-length p0, p0

    .line 6
    if-ge p1, p0, :cond_0

    .line 8
    return-void

    .line 9
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 11
    const-string v0, "Bad stream type "

    .line 13
    invoke-static {p1, v0}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 16
    move-result-object p1

    .line 17
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 20
    throw p0
.end method

.method public final enterAudioFocusFreezeForTest(Landroid/os/IBinder;[I)Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->enterAudioFocusFreezeForTest_enforcePermission()V

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 12
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 15
    const-string v0, "MediaFocusControl"

    .line 17
    new-instance v1, Ljava/lang/StringBuilder;

    .line 19
    const-string/jumbo v2, "enterAudioFocusFreezeForTest UIDs exempt:"

    .line 22
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 25
    invoke-static {p2}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    .line 28
    move-result-object v2

    .line 29
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object v1

    .line 36
    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 41
    monitor-enter v0

    .line 42
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerForTest:Landroid/os/IBinder;

    .line 44
    const/4 v2, 0x0

    .line 45
    if-eqz v1, :cond_0

    .line 47
    const-string p0, "MediaFocusControl"

    .line 49
    const-string p1, "Error enterAudioFocusFreezeForTest: focus already frozen"

    .line 51
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 54
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 55
    goto :goto_0

    .line 56
    :catchall_0
    move-exception p0

    .line 57
    goto :goto_1

    .line 58
    :cond_0
    :try_start_1
    new-instance v1, Lcom/android/server/audio/MediaFocusControl$2;

    .line 60
    invoke-direct {v1, p0}, Lcom/android/server/audio/MediaFocusControl$2;-><init>(Lcom/android/server/audio/MediaFocusControl;)V

    .line 63
    iput-object v1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerDeathHandler:Lcom/android/server/audio/MediaFocusControl$2;

    .line 65
    invoke-interface {p1, v1, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 68
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerForTest:Landroid/os/IBinder;

    .line 70
    invoke-virtual {p2}, [I->clone()Ljava/lang/Object;

    .line 73
    move-result-object p1

    .line 74
    check-cast p1, [I

    .line 76
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezeExemptUids:[I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 78
    :try_start_2
    monitor-exit v0

    .line 79
    const/4 v2, 0x1

    .line 80
    goto :goto_0

    .line 81
    :catch_0
    const/4 p1, 0x0

    .line 82
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerForTest:Landroid/os/IBinder;

    .line 84
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezeExemptUids:[I

    .line 86
    monitor-exit v0

    .line 87
    :goto_0
    return v2

    .line 88
    :goto_1
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 89
    throw p0
.end method

.method public final exitAudioFocusFreezeForTest(Landroid/os/IBinder;)Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->exitAudioFocusFreezeForTest_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 9
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 12
    const-string v0, "Error exitAudioFocusFreezeForTest: "

    .line 14
    sget-object v1, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 16
    monitor-enter v1

    .line 17
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerForTest:Landroid/os/IBinder;

    .line 19
    const/4 v3, 0x0

    .line 20
    if-eq v2, p1, :cond_1

    .line 22
    const-string p0, "MediaFocusControl"

    .line 24
    if-nez v2, :cond_0

    .line 26
    const-string/jumbo p1, "call to exit while not frozen"

    .line 29
    goto :goto_0

    .line 30
    :catchall_0
    move-exception p0

    .line 31
    goto :goto_2

    .line 32
    :cond_0
    const-string/jumbo p1, "call to exit not coming from freeze owner"

    .line 35
    :goto_0
    invoke-virtual {v0, p1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 38
    move-result-object p1

    .line 39
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 42
    monitor-exit v1

    .line 43
    goto :goto_1

    .line 44
    :cond_1
    iget-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerDeathHandler:Lcom/android/server/audio/MediaFocusControl$2;

    .line 46
    invoke-interface {v2, p1, v3}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 49
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 50
    const/4 p1, 0x0

    .line 51
    :try_start_1
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerDeathHandler:Lcom/android/server/audio/MediaFocusControl$2;

    .line 53
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezeExemptUids:[I

    .line 55
    iput-object p1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusFreezerForTest:Landroid/os/IBinder;

    .line 57
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 58
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 59
    const/4 v3, 0x1

    .line 60
    :goto_1
    return v3

    .line 61
    :catchall_1
    move-exception p0

    .line 62
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 63
    :try_start_4
    throw p0

    .line 64
    :goto_2
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 65
    throw p0
.end method

.method public final forceComputeCsdOnAllDevices(Z)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->forceComputeCsdOnAllDevices_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    if-nez v0, :cond_0

    .line 14
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdForTestApi()Z

    .line 17
    move-result v0

    .line 18
    if-nez v0, :cond_0

    .line 20
    goto :goto_0

    .line 21
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 23
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 26
    move-result-object p0

    .line 27
    check-cast p0, Landroid/media/ISoundDose;

    .line 29
    const-string v0, "AS.SoundDoseHelper"

    .line 31
    if-nez p0, :cond_1

    .line 33
    const-string p0, "Sound dose interface not initialized"

    .line 35
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    goto :goto_0

    .line 39
    :cond_1
    :try_start_0
    invoke-interface {p0, p1}, Landroid/media/ISoundDose;->forceComputeCsdOnAllDevices(Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 42
    goto :goto_0

    .line 43
    :catch_0
    move-exception p0

    .line 44
    const-string p1, "Exception while forcing CSD computation on all devices"

    .line 46
    invoke-static {v0, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 49
    :goto_0
    return-void
.end method

.method public final forceRemoteSubmixFullVolume(ZLandroid/os/IBinder;)V
    .locals 3

    .line 1
    if-nez p2, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 6
    const-string v1, "android.permission.CAPTURE_AUDIO_OUTPUT"

    .line 8
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 11
    move-result v0

    .line 12
    if-eqz v0, :cond_1

    .line 14
    const-string p0, "AS.AudioService"

    .line 16
    const-string p1, "Trying to call forceRemoteSubmixFullVolume() without CAPTURE_AUDIO_OUTPUT"

    .line 18
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 21
    return-void

    .line 22
    :cond_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 24
    monitor-enter v0

    .line 25
    if-eqz p1, :cond_4

    .line 27
    :try_start_0
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 29
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 32
    move-result-object p1

    .line 33
    :cond_2
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 36
    move-result v1

    .line 37
    if-eqz v1, :cond_3

    .line 39
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 42
    move-result-object v1

    .line 43
    check-cast v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    .line 45
    iget-object v1, v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->mICallback:Landroid/os/IBinder;

    .line 47
    invoke-interface {v1, p2}, Landroid/os/IBinder;->equals(Ljava/lang/Object;)Z

    .line 50
    move-result v1

    .line 51
    if-eqz v1, :cond_2

    .line 53
    goto/16 :goto_1

    .line 55
    :cond_3
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 57
    new-instance v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    .line 59
    invoke-direct {v1, p0, p2}, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    .line 62
    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 65
    iget p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 67
    add-int/lit8 p1, p1, 0x1

    .line 69
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 71
    goto :goto_1

    .line 72
    :catchall_0
    move-exception p0

    .line 73
    goto :goto_2

    .line 74
    :cond_4
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 76
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 79
    move-result-object p1

    .line 80
    :cond_5
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 83
    move-result v1

    .line 84
    if-eqz v1, :cond_6

    .line 86
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 89
    move-result-object v1

    .line 90
    check-cast v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;

    .line 92
    iget-object v2, v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->mICallback:Landroid/os/IBinder;

    .line 94
    invoke-interface {v2, p2}, Landroid/os/IBinder;->equals(Ljava/lang/Object;)Z

    .line 97
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 98
    if-eqz v2, :cond_5

    .line 100
    :try_start_1
    iget-object p1, v1, Lcom/android/server/audio/AudioService$RmtSbmxFullVolDeathHandler;->mICallback:Landroid/os/IBinder;

    .line 102
    const/4 p2, 0x0

    .line 103
    invoke-interface {p1, v1, p2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_1
    .catch Ljava/util/NoSuchElementException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 106
    goto :goto_0

    .line 107
    :catch_0
    move-exception p1

    .line 108
    :try_start_2
    const-string p2, "AS.AudioService"

    .line 110
    const-string/jumbo v2, "error unlinking to death"

    .line 113
    invoke-static {p2, v2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 116
    :goto_0
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolDeathHandlers:Ljava/util/ArrayList;

    .line 118
    invoke-virtual {p1, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 121
    iget p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 123
    if-lez p1, :cond_6

    .line 125
    add-int/lit8 p1, p1, -0x1

    .line 127
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRmtSbmxFullVolRefCount:I

    .line 129
    if-nez p1, :cond_6

    .line 131
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 133
    const p2, 0x8000

    .line 136
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 139
    move-result-object v1

    .line 140
    check-cast p1, Ljava/util/HashSet;

    .line 142
    invoke-virtual {p1, v1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 145
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 147
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 150
    move-result-object p2

    .line 151
    check-cast p1, Ljava/util/HashSet;

    .line 153
    invoke-virtual {p1, p2}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 156
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 158
    const/4 p2, 0x3

    .line 159
    aget-object p1, p1, p2

    .line 161
    invoke-virtual {p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 164
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 166
    aget-object p0, p0, p2

    .line 168
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 171
    :cond_6
    :goto_1
    monitor-exit v0

    .line 172
    return-void

    .line 173
    :goto_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 174
    throw p0
.end method

.method public final forceUseFrameworkMel(Z)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->forceUseFrameworkMel_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    if-nez v0, :cond_0

    .line 14
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdForTestApi()Z

    .line 17
    move-result v0

    .line 18
    if-nez v0, :cond_0

    .line 20
    goto :goto_0

    .line 21
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 23
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 26
    move-result-object p0

    .line 27
    check-cast p0, Landroid/media/ISoundDose;

    .line 29
    const-string v0, "AS.SoundDoseHelper"

    .line 31
    if-nez p0, :cond_1

    .line 33
    const-string p0, "Sound dose interface not initialized"

    .line 35
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    goto :goto_0

    .line 39
    :cond_1
    :try_start_0
    invoke-interface {p0, p1}, Landroid/media/ISoundDose;->forceUseFrameworkMel(Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 42
    goto :goto_0

    .line 43
    :catch_0
    move-exception p0

    .line 44
    const-string p1, "Exception while forcing the internal MEL computation"

    .line 46
    invoke-static {v0, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 49
    :goto_0
    return-void
.end method

.method public final forceVolumeControlStream(ILandroid/os/IBinder;)V
    .locals 5

    .line 1
    const-string/jumbo v0, "forceVolumeControlStream cb:"

    .line 4
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 6
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    .line 8
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 11
    move-result v1

    .line 12
    if-eqz v1, :cond_0

    .line 14
    return-void

    .line 15
    :cond_0
    const-string v1, "AS.AudioService"

    .line 17
    const-string/jumbo v2, "forceVolumeControlStream(%d)"

    .line 20
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 23
    move-result-object v3

    .line 24
    filled-new-array {v3}, [Ljava/lang/Object;

    .line 27
    move-result-object v3

    .line 28
    invoke-static {v2, v3}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 31
    move-result-object v2

    .line 32
    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 35
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamLock:Ljava/lang/Object;

    .line 37
    monitor-enter v1

    .line 38
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOnInternal()Z

    .line 41
    move-result v2

    .line 42
    if-eqz v2, :cond_1

    .line 44
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeControllerStream:I

    .line 46
    goto :goto_0

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_2

    .line 49
    :cond_1
    :goto_0
    const/16 v2, 0x2713

    .line 51
    if-ne p1, v2, :cond_2

    .line 53
    const/4 p1, 0x3

    .line 54
    :cond_2
    iget v2, p0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .line 56
    const/4 v3, -0x1

    .line 57
    if-eq v2, v3, :cond_3

    .line 59
    if-eq p1, v3, :cond_3

    .line 61
    const/4 v2, 0x1

    .line 62
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 64
    :cond_3
    iput p1, p0, Lcom/android/server/audio/AudioService;->mVolumeControlStream:I

    .line 66
    const/4 v2, 0x0

    .line 67
    const/4 v4, 0x0

    .line 68
    if-ne p1, v3, :cond_6

    .line 70
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 72
    if-eqz p1, :cond_5

    .line 74
    iget-object p2, p1, Lcom/android/server/audio/AudioService$9;->val$controller:Ljava/lang/Object;

    .line 76
    check-cast p2, Landroid/os/IBinder;

    .line 78
    if-eqz p2, :cond_4

    .line 80
    invoke-interface {p2, p1, v4}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 83
    iput-object v2, p1, Lcom/android/server/audio/AudioService$9;->val$controller:Ljava/lang/Object;

    .line 85
    :cond_4
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 87
    :cond_5
    iput-boolean v4, p0, Lcom/android/server/audio/AudioService;->mUserSelectedVolumeControlStream:Z

    .line 89
    goto :goto_1

    .line 90
    :cond_6
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 92
    if-nez p1, :cond_7

    .line 94
    new-instance p1, Lcom/android/server/audio/AudioService$9;

    .line 96
    invoke-direct {p1, p0, p2}, Lcom/android/server/audio/AudioService$9;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    .line 99
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 101
    goto :goto_1

    .line 102
    :cond_7
    iget-object v3, p1, Lcom/android/server/audio/AudioService$9;->val$controller:Ljava/lang/Object;

    .line 104
    check-cast v3, Landroid/os/IBinder;

    .line 106
    if-ne v3, p2, :cond_8

    .line 108
    const-string p0, "AS.AudioService"

    .line 110
    new-instance p1, Ljava/lang/StringBuilder;

    .line 112
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 115
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 118
    const-string p2, " is already linked."

    .line 120
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 123
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 126
    move-result-object p1

    .line 127
    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 130
    goto :goto_1

    .line 131
    :cond_8
    if-eqz v3, :cond_9

    .line 133
    invoke-interface {v3, p1, v4}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 136
    iput-object v2, p1, Lcom/android/server/audio/AudioService$9;->val$controller:Ljava/lang/Object;

    .line 138
    :cond_9
    new-instance p1, Lcom/android/server/audio/AudioService$9;

    .line 140
    invoke-direct {p1, p0, p2}, Lcom/android/server/audio/AudioService$9;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;)V

    .line 143
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mForceControlStreamClient:Lcom/android/server/audio/AudioService$9;

    .line 145
    :goto_1
    monitor-exit v1

    .line 146
    return-void

    .line 147
    :goto_2
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 148
    throw p0
.end method

.method public final getA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;I)I
    .locals 2

    .line 1
    if-eqz p1, :cond_3

    .line 3
    const/4 v0, 0x3

    .line 4
    const/4 v1, -0x1

    .line 5
    if-ne p2, v0, :cond_0

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->getA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;)I

    .line 12
    move-result p1

    .line 13
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 15
    aget-object v0, v0, p2

    .line 17
    iget-boolean v0, v0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 19
    if-eqz v0, :cond_1

    .line 21
    const/4 p1, 0x0

    .line 22
    goto :goto_0

    .line 23
    :cond_0
    move p1, v1

    .line 24
    :cond_1
    :goto_0
    if-ne p1, v1, :cond_2

    .line 26
    const-string p1, "AS.AudioService"

    .line 28
    const-string v0, "Cannot find bluetooth device address"

    .line 30
    invoke-static {p1, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    const/16 p1, 0x80

    .line 35
    invoke-virtual {p0, p2, p1}, Lcom/android/server/audio/AudioService;->getFineVolume(II)I

    .line 38
    move-result p0

    .line 39
    return p0

    .line 40
    :cond_2
    return p1

    .line 41
    :cond_3
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 43
    const-string p1, "Invalid device: null "

    .line 45
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 48
    throw p0
.end method

.method public final getAbsoluteVolumeDevicesWithBehavior(I)Ljava/util/Set;
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 3
    check-cast p0, Landroid/util/ArrayMap;

    .line 5
    invoke-virtual {p0}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    .line 8
    move-result-object p0

    .line 9
    invoke-interface {p0}, Ljava/util/Set;->stream()Ljava/util/stream/Stream;

    .line 12
    move-result-object p0

    .line 13
    new-instance v0, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda14;

    .line 15
    invoke-direct {v0, p1}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda14;-><init>(I)V

    .line 18
    invoke-interface {p0, v0}, Ljava/util/stream/Stream;->filter(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;

    .line 21
    move-result-object p0

    .line 22
    new-instance p1, Lcom/android/server/UiModeManagerService$Stub$$ExternalSyntheticLambda3;

    .line 24
    invoke-direct {p1}, Ljava/lang/Object;-><init>()V

    .line 27
    invoke-interface {p0, p1}, Ljava/util/stream/Stream;->map(Ljava/util/function/Function;)Ljava/util/stream/Stream;

    .line 30
    move-result-object p0

    .line 31
    invoke-static {}, Ljava/util/stream/Collectors;->toSet()Ljava/util/stream/Collector;

    .line 34
    move-result-object p1

    .line 35
    invoke-interface {p0, p1}, Ljava/util/stream/Stream;->collect(Ljava/util/stream/Collector;)Ljava/lang/Object;

    .line 38
    move-result-object p0

    .line 39
    check-cast p0, Ljava/util/Set;

    .line 41
    return-object p0
.end method

.method public final getActiveAssistantServiceUids()[I
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getActiveAssistantServiceUids_enforcePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mActiveAssistantServiceUids:[I

    .line 9
    invoke-virtual {p0}, [I->clone()Ljava/lang/Object;

    .line 12
    move-result-object p0

    .line 13
    check-cast p0, [I

    .line 15
    monitor-exit v0

    .line 16
    return-object p0

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19
    throw p0
.end method

.method public final getActivePlaybackConfigurations()Ljava/util/List;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    const/4 v0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 v0, 0x0

    .line 14
    :goto_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 16
    invoke-virtual {p0, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->getActivePlaybackConfigurations(Z)Ljava/util/List;

    .line 19
    move-result-object p0

    .line 20
    return-object p0
.end method

.method public final getActiveRecordingConfigurations()Ljava/util/List;
    .locals 2

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-eq v0, v1, :cond_1

    .line 9
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 11
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 13
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 16
    move-result v0

    .line 17
    if-nez v0, :cond_0

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    const/4 v0, 0x0

    .line 21
    goto :goto_1

    .line 22
    :cond_1
    :goto_0
    const/4 v0, 0x1

    .line 23
    :goto_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 25
    invoke-virtual {p0, v0}, Lcom/android/server/audio/RecordingActivityMonitor;->getActiveRecordingConfigurations(Z)Ljava/util/List;

    .line 28
    move-result-object p0

    .line 29
    return-object p0
.end method

.method public final getActiveStreamType(I)I
    .locals 11

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x3

    .line 6
    const/4 v2, 0x1

    .line 7
    const/4 v3, 0x5

    .line 8
    const/4 v4, 0x2

    .line 9
    const/high16 v5, -0x80000000

    .line 11
    if-ne p1, v5, :cond_4

    .line 13
    if-nez v0, :cond_4

    .line 15
    invoke-static {}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getInstance()Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;

    .line 18
    move-result-object v6

    .line 19
    if-eqz v6, :cond_4

    .line 21
    invoke-virtual {v6}, Lcom/samsung/android/knox/custom/CustomDeviceManagerProxy;->getVolumeControlStream()I

    .line 24
    move-result v6

    .line 25
    if-eq v6, v2, :cond_3

    .line 27
    if-eq v6, v4, :cond_2

    .line 29
    if-eq v6, v1, :cond_1

    .line 31
    const/4 v7, 0x4

    .line 32
    if-eq v6, v7, :cond_0

    .line 34
    goto :goto_0

    .line 35
    :cond_0
    return v3

    .line 36
    :cond_1
    return v1

    .line 37
    :cond_2
    return v4

    .line 38
    :cond_3
    return v2

    .line 39
    :cond_4
    :goto_0
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 41
    if-eqz v6, :cond_5

    .line 43
    if-ne p1, v5, :cond_5

    .line 45
    return v1

    .line 46
    :cond_5
    iget v1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 48
    const-string/jumbo v6, "getActiveStreamType: Forcing STREAM_BLUETOOTH_SCO for remote mic"

    .line 51
    const/4 v7, 0x6

    .line 52
    const/4 v8, 0x7

    .line 53
    const/4 v9, 0x0

    .line 54
    const-string v10, "AS.AudioService"

    .line 56
    if-eq v1, v2, :cond_6

    .line 58
    goto :goto_1

    .line 59
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 62
    move-result v1

    .line 63
    if-nez v1, :cond_12

    .line 65
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 67
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 70
    invoke-static {v9, v9}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 73
    move-result v1

    .line 74
    if-eqz v1, :cond_7

    .line 76
    goto/16 :goto_2

    .line 78
    :cond_7
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_REMOTE_MIC:Z

    .line 80
    if-eqz v1, :cond_8

    .line 82
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 84
    if-eqz v1, :cond_8

    .line 86
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 88
    invoke-virtual {v1, v8}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceOnForCommunication(I)Z

    .line 91
    move-result v1

    .line 92
    if-eqz v1, :cond_8

    .line 94
    invoke-static {v10, v6}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 97
    return v7

    .line 98
    :cond_8
    if-ne p1, v5, :cond_9

    .line 100
    iget p1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 102
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 104
    invoke-static {p1, p0}, Lcom/samsung/android/server/audio/utils/AudioStreamUtils;->getActiveStreamTypeInternal(IZ)I

    .line 107
    move-result p0

    .line 108
    return p0

    .line 109
    :cond_9
    sget v1, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 111
    invoke-virtual {p0, v3, v1}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    .line 114
    move-result v1

    .line 115
    if-eqz v1, :cond_a

    .line 117
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_NOTIFICATION stream active"

    .line 120
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 123
    return v3

    .line 124
    :cond_a
    sget v1, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 126
    invoke-virtual {p0, v4, v1}, Lcom/android/server/audio/AudioService;->wasStreamActiveRecently(II)Z

    .line 129
    move-result v1

    .line 130
    if-eqz v1, :cond_b

    .line 132
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_RING stream active"

    .line 135
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 138
    return v4

    .line 139
    :cond_b
    :goto_1
    if-eqz v0, :cond_d

    .line 141
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 143
    invoke-virtual {p0, v8}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceActiveForCommunication(I)Z

    .line 146
    move-result p0

    .line 147
    if-eqz p0, :cond_c

    .line 149
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_BLUETOOTH_SCO"

    .line 152
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 155
    return v7

    .line 156
    :cond_c
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_VOICE_CALL"

    .line 159
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 162
    return v9

    .line 163
    :cond_d
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_REMOTE_MIC:Z

    .line 165
    if-eqz v0, :cond_e

    .line 167
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 169
    if-eqz v0, :cond_e

    .line 171
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 173
    invoke-virtual {v0, v8}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceOnForCommunication(I)Z

    .line 176
    move-result v0

    .line 177
    if-eqz v0, :cond_e

    .line 179
    invoke-static {v10, v6}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 182
    return v7

    .line 183
    :cond_e
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 185
    sget v1, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 187
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 190
    invoke-static {v3, v1}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 193
    move-result v0

    .line 194
    if-eqz v0, :cond_f

    .line 196
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_NOTIFICATION"

    .line 199
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 202
    return v3

    .line 203
    :cond_f
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 205
    sget v1, Lcom/android/server/audio/AudioService;->sStreamOverrideDelayMs:I

    .line 207
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 210
    invoke-static {v4, v1}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 213
    move-result v0

    .line 214
    if-eqz v0, :cond_10

    .line 216
    const-string/jumbo p0, "getActiveStreamType: Forcing STREAM_RING"

    .line 219
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 222
    return v4

    .line 223
    :cond_10
    if-ne p1, v5, :cond_11

    .line 225
    iget p1, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 227
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 229
    invoke-static {p1, p0}, Lcom/samsung/android/server/audio/utils/AudioStreamUtils;->getActiveStreamTypeInternal(IZ)I

    .line 232
    move-result p0

    .line 233
    return p0

    .line 234
    :cond_11
    new-instance p0, Ljava/lang/StringBuilder;

    .line 236
    const-string/jumbo v0, "getActiveStreamType: Returning suggested type "

    .line 239
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 242
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 245
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 248
    move-result-object p0

    .line 249
    invoke-static {v10, p0}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 252
    return p1

    .line 253
    :cond_12
    :goto_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 255
    invoke-virtual {p0, v8}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceActiveForCommunication(I)Z

    .line 258
    move-result p0

    .line 259
    if-eqz p0, :cond_13

    .line 261
    return v7

    .line 262
    :cond_13
    return v9
.end method

.method public final getActualHeadTrackingMode()I
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getActualHeadTrackingMode_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mActualHeadTrackingMode:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9
    monitor-exit p0

    .line 10
    return v0

    .line 11
    :catchall_0
    move-exception v0

    .line 12
    monitor-exit p0

    .line 13
    throw v0
.end method

.method public final getAdditionalOutputDeviceDelay(Landroid/media/AudioDeviceAttributes;)J
    .locals 1

    .line 1
    const-string/jumbo v0, "device must not be null"

    .line 4
    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p0

    .line 11
    new-instance p1, Ljava/lang/StringBuilder;

    .line 13
    const-string v0, "additional_output_device_delay="

    .line 15
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 18
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 21
    move-result v0

    .line 22
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 25
    const-string v0, ","

    .line 27
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 30
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 33
    move-result-object p0

    .line 34
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 37
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 40
    move-result-object p0

    .line 41
    invoke-static {p0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 44
    move-result-object p0

    .line 45
    const/16 p1, 0x1f

    .line 47
    :try_start_0
    invoke-virtual {p0, p1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    .line 50
    move-result-object p0

    .line 51
    invoke-static {p0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    .line 54
    move-result-wide p0
    :try_end_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_0

    .line 55
    goto :goto_0

    .line 56
    :catch_0
    const-wide/16 p0, 0x0

    .line 58
    :goto_0
    return-wide p0
.end method

.method public final getAllowedCapturePolicy()I
    .locals 4

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 8
    move-result-wide v1

    .line 9
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 13
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 16
    move-result-object v0

    .line 17
    const/4 v3, 0x1

    .line 18
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 21
    move-result-object v3

    .line 22
    invoke-virtual {p0, v0, v3}, Ljava/util/HashMap;->getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 25
    move-result-object p0

    .line 26
    check-cast p0, Ljava/lang/Integer;

    .line 28
    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    .line 31
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 32
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 35
    return p0

    .line 36
    :catchall_0
    move-exception p0

    .line 37
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 40
    throw p0
.end method

.method public final getAppDevice(I)I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    invoke-virtual {p0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    .line 6
    move-result p0

    .line 7
    return p0
.end method

.method public final getAppVolume(I)I
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    iget-object v0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mMultiSoundLock:Ljava/lang/Object;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    iget-object p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {p0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 15
    move-result-object p0

    .line 16
    check-cast p0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 18
    if-eqz p0, :cond_0

    .line 20
    iget p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mRatio:I

    .line 22
    monitor-exit v0

    .line 23
    goto :goto_0

    .line 24
    :catchall_0
    move-exception p0

    .line 25
    goto :goto_1

    .line 26
    :cond_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27
    const/16 p0, 0x64

    .line 29
    :goto_0
    const-string v0, "AS.AudioService"

    .line 31
    const-string/jumbo v1, "getAppVolume, uid:"

    .line 34
    const-string v2, ", volume="

    .line 36
    invoke-static {p1, p0, v1, v2, v0}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 39
    return p0

    .line 40
    :goto_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 41
    throw p0
.end method

.method public final getAssistantServicesUids()[I
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getAssistantServicesUids_enforcePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 9
    invoke-virtual {p0}, Landroid/util/ArraySet;->stream()Ljava/util/stream/Stream;

    .line 12
    move-result-object p0

    .line 13
    new-instance v1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 15
    const/4 v2, 0x2

    .line 16
    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 19
    invoke-interface {p0, v1}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 22
    move-result-object p0

    .line 23
    invoke-interface {p0}, Ljava/util/stream/IntStream;->toArray()[I

    .line 26
    move-result-object p0

    .line 27
    monitor-exit v0

    .line 28
    return-object p0

    .line 29
    :catchall_0
    move-exception p0

    .line 30
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 31
    throw p0
.end method

.method public final getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 6
    move-result-object v0

    .line 7
    const/4 v1, 0x0

    .line 8
    move-object v2, v1

    .line 9
    move-object v3, v2

    .line 10
    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 13
    move-result v4

    .line 14
    if-eqz v4, :cond_4

    .line 16
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 19
    move-result-object v4

    .line 20
    check-cast v4, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 22
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->isActive()Z

    .line 25
    move-result v5

    .line 26
    if-eqz v5, :cond_0

    .line 28
    iget-boolean v5, v4, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mIsPrivileged:Z

    .line 30
    if-eqz v5, :cond_2

    .line 32
    if-eqz v2, :cond_1

    .line 34
    iget-wide v5, v4, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 36
    iget-wide v7, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 38
    cmp-long v5, v5, v7

    .line 40
    if-lez v5, :cond_0

    .line 42
    :cond_1
    move-object v2, v4

    .line 43
    goto :goto_0

    .line 44
    :cond_2
    if-eqz v3, :cond_3

    .line 46
    iget-wide v5, v4, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 48
    iget-wide v7, v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 50
    cmp-long v5, v5, v7

    .line 52
    if-lez v5, :cond_0

    .line 54
    :cond_3
    move-object v3, v4

    .line 55
    goto :goto_0

    .line 56
    :cond_4
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 58
    if-eqz v0, :cond_5

    .line 60
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mExternalVoipModeOwner:Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 62
    if-eqz v2, :cond_5

    .line 64
    if-eqz v3, :cond_5

    .line 66
    iget v0, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 68
    const/4 v1, 0x3

    .line 69
    if-ne v0, v1, :cond_5

    .line 71
    iget v0, v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 73
    if-ne v0, v1, :cond_5

    .line 75
    iget-wide v0, v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 77
    iget-wide v4, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 79
    cmp-long v0, v0, v4

    .line 81
    if-lez v0, :cond_5

    .line 83
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mExternalVoipModeOwner:Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 85
    :cond_5
    if-eqz v2, :cond_6

    .line 87
    goto :goto_1

    .line 88
    :cond_6
    move-object v2, v3

    .line 89
    :goto_1
    return-object v2
.end method

.method public final getAudioProductStrategies()Ljava/util/List;
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getAudioProductStrategies_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioProductStrategies()Ljava/util/List;

    .line 7
    move-result-object p0

    .line 8
    return-object p0
.end method

.method public final getAudioServiceConfig(Ljava/lang/String;)Ljava/lang/String;
    .locals 9

    .line 1
    const/4 v0, 0x1

    .line 2
    const/4 v1, 0x0

    .line 3
    if-nez p1, :cond_0

    .line 5
    return-object v1

    .line 6
    :cond_0
    new-instance v2, Lcom/samsung/android/media/AudioParameter;

    .line 8
    invoke-direct {v2, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 11
    const-string/jumbo v3, "l_smart_view_split_sound_enable"

    .line 14
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 17
    move-result v3

    .line 18
    if-eqz v3, :cond_2

    .line 20
    sget-boolean p0, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sSplitSoundEnabled:Z

    .line 22
    if-eqz p0, :cond_1

    .line 24
    const-string/jumbo p0, "true"

    .line 27
    goto/16 :goto_12

    .line 29
    :cond_1
    const-string/jumbo p0, "false"

    .line 32
    goto/16 :goto_12

    .line 34
    :cond_2
    const-string/jumbo v3, "g_call_extra_volume_enable"

    .line 37
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 40
    move-result v3

    .line 41
    if-eqz v3, :cond_4

    .line 43
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 45
    iget-boolean p0, p0, Lcom/android/server/audio/AudioServiceExt;->mExtraVolume:Z

    .line 47
    if-eqz p0, :cond_3

    .line 49
    const-string/jumbo p0, "true"

    .line 52
    goto/16 :goto_12

    .line 54
    :cond_3
    const-string/jumbo p0, "false"

    .line 57
    goto/16 :goto_12

    .line 59
    :cond_4
    const-string/jumbo v3, "g_sound_path_available_devices"

    .line 62
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 65
    move-result v3

    .line 66
    if-eqz v3, :cond_6

    .line 68
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 70
    iget-object v3, p1, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 72
    monitor-enter v3

    .line 73
    :try_start_0
    iget-object p1, p1, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 75
    invoke-virtual {p1}, Lcom/android/server/audio/AudioDeviceInventory;->getAvailableDeviceSetForQuickSoundPath()Ljava/util/Set;

    .line 78
    move-result-object p1

    .line 79
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 80
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->makeDeviceBit(Ljava/util/Set;)I

    .line 83
    move-result p1

    .line 84
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 86
    invoke-virtual {p0}, Lcom/samsung/android/server/audio/MultiSoundManager;->isRemoteSubmixAppExist()Z

    .line 89
    move-result p0

    .line 90
    if-eqz p0, :cond_5

    .line 92
    const-string p0, "AS.AudioService"

    .line 94
    const-string v0, "TV app is exist, removed r-submix"

    .line 96
    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 99
    const p0, -0x8001

    .line 102
    and-int/2addr p1, p0

    .line 103
    :cond_5
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 106
    move-result-object p0

    .line 107
    goto/16 :goto_12

    .line 109
    :catchall_0
    move-exception p0

    .line 110
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 111
    throw p0

    .line 112
    :cond_6
    const-string/jumbo v3, "enable"

    .line 115
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 118
    move-result v3

    .line 119
    if-eqz v3, :cond_8

    .line 121
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 123
    if-eqz p0, :cond_7

    .line 125
    const-string/jumbo p0, "true"

    .line 128
    goto/16 :goto_12

    .line 130
    :cond_7
    const-string/jumbo p0, "false"

    .line 133
    goto/16 :goto_12

    .line 135
    :cond_8
    const-string/jumbo v3, "level"

    .line 138
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 141
    move-result v3

    .line 142
    if-eqz v3, :cond_9

    .line 144
    iget p0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 146
    invoke-static {p0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 149
    move-result-object p0

    .line 150
    goto/16 :goto_12

    .line 152
    :cond_9
    const-string/jumbo v3, "sound_assistant"

    .line 155
    invoke-virtual {v2, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 158
    move-result v3

    .line 159
    const/4 v4, 0x3

    .line 160
    const/4 v5, 0x0

    .line 161
    if-eqz v3, :cond_26

    .line 163
    const/16 v2, 0x10

    .line 165
    invoke-virtual {p1, v2}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    .line 168
    move-result-object p1

    .line 169
    const-string v2, "adjust_media_volume_only"

    .line 171
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 174
    move-result v2

    .line 175
    if-eqz v2, :cond_a

    .line 177
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 179
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 182
    move-result-object v1

    .line 183
    goto/16 :goto_7

    .line 185
    :cond_a
    const-string/jumbo v2, "version"

    .line 188
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 191
    move-result v2

    .line 192
    if-eqz v2, :cond_b

    .line 194
    const-string v1, "12"

    .line 196
    goto/16 :goto_7

    .line 198
    :cond_b
    const-string/jumbo v2, "get_app_volume_list"

    .line 201
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 204
    move-result v2

    .line 205
    if-eqz v2, :cond_e

    .line 207
    new-instance p1, Ljava/lang/StringBuilder;

    .line 209
    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    .line 212
    :goto_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 214
    invoke-virtual {v1}, Landroid/util/SparseIntArray;->size()I

    .line 217
    move-result v1

    .line 218
    if-ge v5, v1, :cond_d

    .line 220
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 222
    invoke-virtual {v1, v5}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 225
    move-result v1

    .line 226
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 228
    invoke-virtual {v2, v5}, Landroid/util/SparseIntArray;->valueAt(I)I

    .line 231
    move-result v2

    .line 232
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 235
    const-string v1, "="

    .line 237
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 240
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 243
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 245
    invoke-virtual {v1}, Landroid/util/SparseIntArray;->size()I

    .line 248
    move-result v1

    .line 249
    sub-int/2addr v1, v0

    .line 250
    if-eq v5, v1, :cond_c

    .line 252
    const-string v1, ";"

    .line 254
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 257
    :cond_c
    add-int/2addr v5, v0

    .line 258
    goto :goto_0

    .line 259
    :cond_d
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 262
    move-result-object v1

    .line 263
    goto/16 :goto_7

    .line 265
    :cond_e
    const-string/jumbo v2, "ignore_audio_focus"

    .line 268
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 271
    move-result v2

    .line 272
    if-eqz v2, :cond_f

    .line 274
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 276
    iget p0, p0, Lcom/android/server/audio/MediaFocusControl;->mIgnoredUid:I

    .line 278
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 281
    move-result-object v1

    .line 282
    goto/16 :goto_7

    .line 284
    :cond_f
    const-string/jumbo v2, "media_volume_step_index"

    .line 287
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 290
    move-result v2

    .line 291
    if-eqz v2, :cond_10

    .line 293
    iget p0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 295
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 298
    move-result-object v1

    .line 299
    goto/16 :goto_7

    .line 301
    :cond_10
    const-string/jumbo v2, "ring_through_headset"

    .line 304
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 307
    move-result v2

    .line 308
    if-eqz v2, :cond_11

    .line 310
    iget p0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 312
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 315
    move-result-object v1

    .line 316
    goto/16 :goto_7

    .line 318
    :cond_11
    const-string/jumbo v2, "using_audio_uids"

    .line 321
    invoke-virtual {v2, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 324
    move-result v2

    .line 325
    const/16 v3, 0x2710

    .line 327
    if-eqz v2, :cond_17

    .line 329
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 331
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 333
    invoke-virtual {p1, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 336
    move-result p1

    .line 337
    if-eqz p1, :cond_12

    .line 339
    new-instance p0, Ljava/lang/StringBuilder;

    .line 341
    const-string p1, "MODIFY_PHONE_STATE Permission Denial from pid="

    .line 343
    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 346
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 349
    move-result p1

    .line 350
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 353
    const-string p1, ", uid="

    .line 355
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 358
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 361
    move-result p1

    .line 362
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 365
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 368
    move-result-object p0

    .line 369
    const-string p1, "AS.AudioService"

    .line 371
    invoke-static {p1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 374
    const-string p0, ""

    .line 376
    :goto_1
    move-object v1, p0

    .line 377
    goto/16 :goto_7

    .line 379
    :cond_12
    new-instance p1, Ljava/lang/StringBuilder;

    .line 381
    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    .line 384
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 386
    invoke-virtual {p0, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->getActivePlaybackConfigurations(Z)Ljava/util/List;

    .line 389
    move-result-object p0

    .line 390
    check-cast p0, Ljava/util/ArrayList;

    .line 392
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 395
    move-result-object p0

    .line 396
    :cond_13
    :goto_2
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 399
    move-result v1

    .line 400
    if-eqz v1, :cond_16

    .line 402
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 405
    move-result-object v1

    .line 406
    check-cast v1, Landroid/media/AudioPlaybackConfiguration;

    .line 408
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 411
    move-result-object v2

    .line 412
    invoke-static {v2}, Landroid/media/AudioAttributes;->toLegacyStreamType(Landroid/media/AudioAttributes;)I

    .line 415
    move-result v2

    .line 416
    if-ne v2, v4, :cond_13

    .line 418
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getPlayerState()I

    .line 421
    move-result v2

    .line 422
    if-ne v2, v0, :cond_14

    .line 424
    goto :goto_2

    .line 425
    :cond_14
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    .line 428
    move-result v1

    .line 429
    if-ge v1, v3, :cond_15

    .line 431
    goto :goto_2

    .line 432
    :cond_15
    new-instance v2, Ljava/lang/StringBuilder;

    .line 434
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 437
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 440
    const-string v1, ";"

    .line 442
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 445
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 448
    move-result-object v1

    .line 449
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 452
    goto :goto_2

    .line 453
    :cond_16
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 456
    move-result-object p0

    .line 457
    goto :goto_1

    .line 458
    :cond_17
    const-string/jumbo v0, "media_button_package"

    .line 461
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 464
    move-result v0

    .line 465
    if-eqz v0, :cond_1a

    .line 467
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 469
    const-string v0, "android.permission.MEDIA_CONTENT_CONTROL"

    .line 471
    invoke-virtual {p1, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 474
    move-result p1

    .line 475
    const-string v0, ""

    .line 477
    if-eqz p1, :cond_18

    .line 479
    const-string p0, "AS.AudioService"

    .line 481
    const-string/jumbo p1, "media content control permission error"

    .line 484
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 487
    :goto_3
    move-object v1, v0

    .line 488
    goto/16 :goto_7

    .line 490
    :cond_18
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 493
    move-result-wide v1

    .line 494
    :try_start_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 496
    const-string/jumbo p1, "media_session"

    .line 499
    invoke-virtual {p0, p1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 502
    move-result-object p0

    .line 503
    check-cast p0, Landroid/media/session/MediaSessionManager;

    .line 505
    invoke-virtual {p0}, Landroid/media/session/MediaSessionManager;->getMediaKeyEventSession()Landroid/media/session/MediaSession$Token;

    .line 508
    move-result-object p1

    .line 509
    if-eqz p1, :cond_19

    .line 511
    invoke-virtual {p0}, Landroid/media/session/MediaSessionManager;->getMediaKeyEventSessionPackageName()Ljava/lang/String;

    .line 514
    move-result-object p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 515
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 518
    goto/16 :goto_1

    .line 520
    :catchall_1
    move-exception p0

    .line 521
    goto :goto_4

    .line 522
    :cond_19
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 525
    goto :goto_3

    .line 526
    :goto_4
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 529
    throw p0

    .line 530
    :cond_1a
    const-string/jumbo v0, "mute_media_by_vibrate_or_silent_mode"

    .line 533
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 536
    move-result v0

    .line 537
    if-eqz v0, :cond_1b

    .line 539
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 541
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 544
    move-result-object v1

    .line 545
    goto/16 :goto_7

    .line 547
    :cond_1b
    const-string/jumbo v0, "get_mode_owner_uids"

    .line 550
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 553
    move-result v0

    .line 554
    if-eqz v0, :cond_20

    .line 556
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 558
    const-string v0, "android.permission.MODIFY_PHONE_STATE"

    .line 560
    invoke-virtual {p1, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 563
    move-result p1

    .line 564
    if-eqz p1, :cond_1c

    .line 566
    const-string p0, "AS.AudioService"

    .line 568
    new-instance p1, Ljava/lang/StringBuilder;

    .line 570
    const-string v0, "MODIFY_PHONE_STATE Permission Denial from pid="

    .line 572
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 575
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 578
    move-result v0

    .line 579
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 582
    const-string v0, ", uid="

    .line 584
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 587
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 590
    move-result v0

    .line 591
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 594
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 597
    move-result-object p1

    .line 598
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 601
    const-string p0, ""

    .line 603
    goto/16 :goto_1

    .line 605
    :cond_1c
    new-instance p1, Ljava/lang/StringBuilder;

    .line 607
    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    .line 610
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 612
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 614
    monitor-enter v0

    .line 615
    :try_start_3
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 617
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 620
    move-result-object p0

    .line 621
    :cond_1d
    :goto_5
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 624
    move-result v1

    .line 625
    if-eqz v1, :cond_1f

    .line 627
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 630
    move-result-object v1

    .line 631
    check-cast v1, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 633
    iget v2, v1, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 635
    if-ne v2, v4, :cond_1d

    .line 637
    iget v1, v1, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUid:I

    .line 639
    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    .line 642
    move-result v1

    .line 643
    if-ge v1, v3, :cond_1e

    .line 645
    goto :goto_5

    .line 646
    :cond_1e
    new-instance v2, Ljava/lang/StringBuilder;

    .line 648
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 651
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 654
    const-string v1, ";"

    .line 656
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 659
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 662
    move-result-object v1

    .line 663
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 666
    goto :goto_5

    .line 667
    :catchall_2
    move-exception p0

    .line 668
    goto :goto_6

    .line 669
    :cond_1f
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 670
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 673
    move-result-object p0

    .line 674
    goto/16 :goto_1

    .line 676
    :goto_6
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 677
    throw p0

    .line 678
    :cond_20
    const-string/jumbo v0, "brand_sound_version"

    .line 681
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 684
    move-result v0

    .line 685
    if-eqz v0, :cond_21

    .line 687
    const-string p0, ""

    .line 689
    invoke-static {p0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 692
    const-string v1, ""

    .line 694
    goto :goto_7

    .line 695
    :cond_21
    const-string/jumbo v0, "ignore_ducking"

    .line 698
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 701
    move-result v0

    .line 702
    if-eqz v0, :cond_23

    .line 704
    const-string p1, "AS.AudioService"

    .line 706
    new-instance v0, Ljava/lang/StringBuilder;

    .line 708
    const-string/jumbo v1, "getSoundAssistant :: Ignore Ducking By Navigation = "

    .line 711
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 714
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 716
    invoke-static {p1, v0, v1}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 719
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 721
    if-eqz p0, :cond_22

    .line 723
    const-string p0, "1"

    .line 725
    goto/16 :goto_1

    .line 727
    :cond_22
    const-string p0, "0"

    .line 729
    goto/16 :goto_1

    .line 731
    :cond_23
    const-string/jumbo v0, "ignore_ducking_by_all_apps"

    .line 734
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 737
    move-result p1

    .line 738
    if-eqz p1, :cond_25

    .line 740
    const-string p1, "AS.AudioService"

    .line 742
    new-instance v0, Ljava/lang/StringBuilder;

    .line 744
    const-string/jumbo v1, "getSoundAssistant :: Ignore Ducking By AllApps = "

    .line 747
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 750
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 752
    invoke-static {p1, v0, v1}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 755
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 757
    if-eqz p0, :cond_24

    .line 759
    const-string p0, "1"

    .line 761
    goto/16 :goto_1

    .line 763
    :cond_24
    const-string p0, "0"

    .line 765
    goto/16 :goto_1

    .line 767
    :cond_25
    :goto_7
    return-object v1

    .line 768
    :cond_26
    const-string/jumbo v1, "l_multi_sound_key"

    .line 771
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 774
    move-result v1

    .line 775
    const/4 v3, -0x1

    .line 776
    if-nez v1, :cond_35

    .line 778
    const-string/jumbo v1, "l_safe_media_volume_enable"

    .line 781
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 784
    move-result v1

    .line 785
    if-nez v1, :cond_35

    .line 787
    const-string/jumbo v1, "g_multi_sound_pin_app_name"

    .line 790
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 793
    move-result v1

    .line 794
    if-nez v1, :cond_35

    .line 796
    const-string/jumbo v1, "g_multi_sound_priority_device"

    .line 799
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 802
    move-result v1

    .line 803
    if-eqz v1, :cond_27

    .line 805
    goto/16 :goto_a

    .line 807
    :cond_27
    const-string/jumbo v0, "l_record_active_enable"

    .line 810
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 813
    move-result v0

    .line 814
    if-eqz v0, :cond_2a

    .line 816
    const-string/jumbo p0, "l_record_active_enable"

    .line 819
    invoke-virtual {v2, p0, v3}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 822
    move-result p0

    .line 823
    sget-object p1, Lcom/samsung/android/server/audio/utils/AudioUtils;->DEVICE_OUT_WIRED_DEVICE_SET:Ljava/util/Set;

    .line 825
    if-ne p0, v3, :cond_28

    .line 827
    const-string/jumbo p0, "l_record_active_enable"

    .line 830
    invoke-static {p0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 833
    move-result-object p0

    .line 834
    const-string/jumbo p1, "true"

    .line 837
    invoke-virtual {p1, p0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    .line 840
    move-result v5

    .line 841
    goto :goto_8

    .line 842
    :cond_28
    invoke-static {p0}, Landroid/media/MediaRecorder;->isValidAudioSource(I)Z

    .line 845
    move-result p1

    .line 846
    if-nez p1, :cond_29

    .line 848
    invoke-static {p0}, Landroid/media/MediaRecorder;->isValidAudioSourceForSem(I)Z

    .line 851
    move-result p1

    .line 852
    if-nez p1, :cond_29

    .line 854
    const-string p1, "Invalid AudioSource : "

    .line 856
    const-string v0, "AS.AudioUtils"

    .line 858
    invoke-static {p0, p1, v0}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 861
    goto :goto_8

    .line 862
    :cond_29
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 865
    move-result-wide v0

    .line 866
    :try_start_5
    invoke-static {p0}, Landroid/media/AudioSystem;->isSourceActive(I)Z

    .line 869
    move-result v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 870
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 873
    :goto_8
    invoke-static {v5}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 876
    move-result-object p0

    .line 877
    goto/16 :goto_12

    .line 879
    :catchall_3
    move-exception p0

    .line 880
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 883
    throw p0

    .line 884
    :cond_2a
    const-string/jumbo v0, "l_stream_active"

    .line 887
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 890
    move-result v0

    .line 891
    if-eqz v0, :cond_2c

    .line 893
    const-string/jumbo p0, "l_stream_active"

    .line 896
    invoke-virtual {v2, p0, v3}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 899
    move-result p0

    .line 900
    if-ne p0, v3, :cond_2b

    .line 902
    goto :goto_9

    .line 903
    :cond_2b
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 906
    move-result-wide v0

    .line 907
    invoke-static {p0, v5}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 910
    move-result v5

    .line 911
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 914
    :goto_9
    invoke-static {v5}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 917
    move-result-object p0

    .line 918
    goto/16 :goto_12

    .line 920
    :cond_2c
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_CALL:Z

    .line 922
    if-eqz v0, :cond_2e

    .line 924
    const-string/jumbo v0, "l_screen_call"

    .line 927
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 930
    move-result v0

    .line 931
    if-eqz v0, :cond_2e

    .line 933
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 935
    iget-boolean p0, p0, Lcom/android/server/audio/AudioServiceExt;->mScreenCall:Z

    .line 937
    if-eqz p0, :cond_2d

    .line 939
    const-string/jumbo p0, "true"

    .line 942
    goto/16 :goto_12

    .line 944
    :cond_2d
    const-string/jumbo p0, "false"

    .line 947
    goto/16 :goto_12

    .line 949
    :cond_2e
    const-string/jumbo v0, "l_call_translation_mode"

    .line 952
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 955
    move-result v0

    .line 956
    if-eqz v0, :cond_30

    .line 958
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 960
    iget-boolean p0, p0, Lcom/android/server/audio/AudioServiceExt;->mCallTranslationMode:Z

    .line 962
    if-eqz p0, :cond_2f

    .line 964
    const-string/jumbo p0, "true"

    .line 967
    goto/16 :goto_12

    .line 969
    :cond_2f
    const-string/jumbo p0, "false"

    .line 972
    goto/16 :goto_12

    .line 974
    :cond_30
    const-string/jumbo v0, "l_voice_tx_control_mode"

    .line 977
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 980
    move-result v0

    .line 981
    if-eqz v0, :cond_31

    .line 983
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 985
    iget p0, p0, Lcom/android/server/audio/AudioServiceExt;->mVoiceTxControlMode:I

    .line 987
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 990
    move-result-object p0

    .line 991
    goto/16 :goto_12

    .line 993
    :cond_31
    const-string/jumbo v0, "l_voice_rx_control_mode"

    .line 996
    invoke-virtual {v2, v0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 999
    move-result v0

    .line 1000
    if-eqz v0, :cond_32

    .line 1002
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1004
    iget p0, p0, Lcom/android/server/audio/AudioServiceExt;->mVoiceRxControlMode:I

    .line 1006
    invoke-static {p0}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 1009
    move-result-object p0

    .line 1010
    goto/16 :goto_12

    .line 1012
    :cond_32
    const-string/jumbo p0, "g_ach_supported"

    .line 1015
    invoke-virtual {v2, p0}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1018
    move-result p0

    .line 1019
    if-eqz p0, :cond_34

    .line 1021
    sget-boolean p0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_ACH_RINGTONE:Z

    .line 1023
    if-eqz p0, :cond_33

    .line 1025
    const-string/jumbo p0, "true"

    .line 1028
    goto/16 :goto_12

    .line 1030
    :cond_33
    const-string/jumbo p0, "false"

    .line 1033
    goto/16 :goto_12

    .line 1035
    :cond_34
    invoke-static {p1}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 1038
    move-result-object p0

    .line 1039
    goto/16 :goto_12

    .line 1041
    :cond_35
    :goto_a
    const-string v1, "AS.AudioService"

    .line 1043
    new-instance v2, Lcom/samsung/android/media/AudioParameter;

    .line 1045
    invoke-direct {v2, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 1048
    const-string/jumbo p1, "g_multi_sound_pin_app_name"

    .line 1051
    invoke-virtual {v2, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1054
    move-result-object p1

    .line 1055
    if-eqz p1, :cond_37

    .line 1057
    :try_start_6
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1060
    move-result v3
    :try_end_6
    .catch Ljava/lang/NumberFormatException; {:try_start_6 .. :try_end_6} :catch_0

    .line 1061
    goto :goto_b

    .line 1062
    :catch_0
    const-string/jumbo v0, "invalid value "

    .line 1065
    invoke-virtual {v0, p1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 1068
    move-result-object p1

    .line 1069
    invoke-static {v1, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 1072
    :goto_b
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getPinAppInfo(I)Ljava/lang/String;

    .line 1075
    move-result-object p1

    .line 1076
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 1078
    iget-boolean p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    .line 1080
    if-eqz p0, :cond_36

    .line 1082
    new-instance p0, Ljava/lang/StringBuilder;

    .line 1084
    const-string/jumbo v0, "device=0x"

    .line 1087
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1090
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1093
    move-result-object v0

    .line 1094
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1097
    const-string v0, ", pinappinfo="

    .line 1099
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1102
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1105
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1108
    move-result-object p0

    .line 1109
    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1112
    :cond_36
    move-object p0, p1

    .line 1113
    goto/16 :goto_12

    .line 1115
    :cond_37
    const-string/jumbo p1, "g_multi_sound_priority_device"

    .line 1118
    invoke-virtual {v2, p1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1121
    move-result p1

    .line 1122
    if-eqz p1, :cond_38

    .line 1124
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1126
    const/16 p1, 0x19

    .line 1128
    invoke-static {p1}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    .line 1131
    move-result p1

    .line 1132
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioDeviceBroker;->getPriorityDevice(I)I

    .line 1135
    move-result p0

    .line 1136
    invoke-static {p0}, Landroid/media/AudioDeviceInfo;->convertInternalDeviceToDeviceType(I)I

    .line 1139
    move-result p0

    .line 1140
    invoke-static {p0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 1143
    move-result-object p0

    .line 1144
    goto/16 :goto_12

    .line 1146
    :cond_38
    const-string/jumbo p1, "pin_device_name"

    .line 1149
    invoke-virtual {v2, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1152
    move-result-object p1

    .line 1153
    const-string v1, ""

    .line 1155
    const/4 v3, 0x2

    .line 1156
    const v6, 0x8000

    .line 1159
    const/16 v7, 0x8

    .line 1161
    const/4 v8, 0x4

    .line 1162
    if-eqz p1, :cond_43

    .line 1164
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1167
    move-result p1

    .line 1168
    if-eq p1, v8, :cond_42

    .line 1170
    if-eq p1, v7, :cond_42

    .line 1172
    const/16 v2, 0x80

    .line 1174
    if-eq p1, v2, :cond_3e

    .line 1176
    const/high16 v2, 0x4000000

    .line 1178
    const/16 v4, 0x4000

    .line 1180
    if-eq p1, v4, :cond_3a

    .line 1182
    if-eq p1, v6, :cond_39

    .line 1184
    if-eq p1, v2, :cond_3a

    .line 1186
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 1188
    const p1, 0x1040444

    .line 1191
    invoke-virtual {p0, p1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    .line 1194
    move-result-object p0

    .line 1195
    goto/16 :goto_12

    .line 1197
    :cond_39
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 1199
    const p1, 0x10410b5

    .line 1202
    invoke-virtual {p0, p1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    .line 1205
    move-result-object p0

    .line 1206
    goto/16 :goto_12

    .line 1208
    :cond_3a
    invoke-static {v3}, Landroid/media/AudioManager;->getDevicesStatic(I)[Landroid/media/AudioDeviceInfo;

    .line 1211
    move-result-object p0

    .line 1212
    :goto_c
    array-length p1, p0

    .line 1213
    if-ge v5, p1, :cond_3d

    .line 1215
    aget-object p1, p0, v5

    .line 1217
    invoke-virtual {p1}, Landroid/media/AudioDeviceInfo;->semGetInternalType()I

    .line 1220
    move-result p1

    .line 1221
    if-eq p1, v4, :cond_3b

    .line 1223
    aget-object p1, p0, v5

    .line 1225
    invoke-virtual {p1}, Landroid/media/AudioDeviceInfo;->semGetInternalType()I

    .line 1228
    move-result p1

    .line 1229
    if-ne p1, v2, :cond_3c

    .line 1231
    :cond_3b
    aget-object p1, p0, v5

    .line 1233
    invoke-virtual {p1}, Landroid/media/AudioDeviceInfo;->getProductName()Ljava/lang/CharSequence;

    .line 1236
    move-result-object p1

    .line 1237
    invoke-interface {p1}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    .line 1240
    move-result-object p1

    .line 1241
    move-object v1, p1

    .line 1242
    :cond_3c
    add-int/2addr v5, v0

    .line 1243
    goto :goto_c

    .line 1244
    :cond_3d
    :goto_d
    move-object p0, v1

    .line 1245
    goto/16 :goto_12

    .line 1247
    :cond_3e
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1249
    invoke-virtual {p0}, Lcom/android/server/audio/AudioDeviceBroker;->getA2dp()Landroid/bluetooth/BluetoothA2dp;

    .line 1252
    move-result-object p0

    .line 1253
    if-eqz p0, :cond_3d

    .line 1255
    invoke-virtual {p0}, Landroid/bluetooth/BluetoothA2dp;->semIsDualPlayMode()Z

    .line 1258
    move-result p1

    .line 1259
    if-eqz p1, :cond_41

    .line 1261
    new-instance p1, Ljava/lang/StringBuilder;

    .line 1263
    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V

    .line 1266
    invoke-virtual {p0}, Landroid/bluetooth/BluetoothA2dp;->getConnectedDevices()Ljava/util/List;

    .line 1269
    move-result-object p0

    .line 1270
    if-eqz p0, :cond_40

    .line 1272
    invoke-interface {p0}, Ljava/util/List;->size()I

    .line 1275
    move-result v1

    .line 1276
    if-lt v1, v0, :cond_40

    .line 1278
    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 1281
    move-result-object p0

    .line 1282
    :goto_e
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 1285
    move-result v0

    .line 1286
    if-eqz v0, :cond_40

    .line 1288
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1291
    move-result-object v0

    .line 1292
    check-cast v0, Landroid/bluetooth/BluetoothDevice;

    .line 1294
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->length()I

    .line 1297
    move-result v1

    .line 1298
    if-lez v1, :cond_3f

    .line 1300
    const-string v1, ","

    .line 1302
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1305
    :cond_3f
    invoke-virtual {v0}, Landroid/bluetooth/BluetoothDevice;->semGetAliasName()Ljava/lang/String;

    .line 1308
    move-result-object v0

    .line 1309
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1312
    goto :goto_e

    .line 1313
    :cond_40
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1316
    move-result-object p0

    .line 1317
    goto :goto_12

    .line 1318
    :cond_41
    invoke-virtual {p0}, Landroid/bluetooth/BluetoothA2dp;->getActiveDevice()Landroid/bluetooth/BluetoothDevice;

    .line 1321
    move-result-object p0

    .line 1322
    if-eqz p0, :cond_3d

    .line 1324
    invoke-virtual {p0}, Landroid/bluetooth/BluetoothDevice;->semGetAliasName()Ljava/lang/String;

    .line 1327
    move-result-object v1

    .line 1328
    goto :goto_d

    .line 1329
    :cond_42
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 1331
    const p1, 0x1040447

    .line 1334
    invoke-virtual {p0, p1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    .line 1337
    move-result-object p0

    .line 1338
    goto :goto_12

    .line 1339
    :cond_43
    const-string/jumbo p1, "l_safe_media_volume_enable"

    .line 1342
    invoke-virtual {v2, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1345
    move-result-object p1

    .line 1346
    if-eqz p1, :cond_3d

    .line 1348
    :try_start_7
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1351
    move-result p1
    :try_end_7
    .catch Ljava/lang/NumberFormatException; {:try_start_7 .. :try_end_7} :catch_1

    .line 1352
    goto :goto_f

    .line 1353
    :catch_1
    invoke-virtual {p0, v4}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 1356
    move-result p1

    .line 1357
    :goto_f
    if-ne p1, v3, :cond_45

    .line 1359
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1361
    invoke-virtual {v0, v8}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    .line 1364
    move-result v0

    .line 1365
    if-eqz v0, :cond_44

    .line 1367
    move v7, v8

    .line 1368
    goto :goto_10

    .line 1369
    :cond_44
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 1371
    invoke-virtual {v0, v7}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    .line 1374
    move-result v0

    .line 1375
    if-eqz v0, :cond_45

    .line 1377
    goto :goto_10

    .line 1378
    :cond_45
    move v7, p1

    .line 1379
    :goto_10
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 1381
    invoke-virtual {p1, v7}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    .line 1384
    move-result p1

    .line 1385
    const-string/jumbo v0, "true"

    .line 1388
    if-eqz p1, :cond_46

    .line 1390
    :goto_11
    move-object p0, v0

    .line 1391
    goto :goto_12

    .line 1392
    :cond_46
    and-int p1, v7, v6

    .line 1394
    const-string/jumbo v1, "false"

    .line 1397
    if-eqz p1, :cond_3d

    .line 1399
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIsBluetoothCastState:Z

    .line 1401
    if-eqz p0, :cond_47

    .line 1403
    goto :goto_11

    .line 1404
    :cond_47
    move-object v0, v1

    .line 1405
    goto :goto_11

    .line 1406
    :goto_12
    return-object p0
.end method

.method public final getAudioVolumeGroups()Ljava/util/List;
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getAudioVolumeGroups_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioVolumeGroupHelper:Lcom/android/server/audio/AudioVolumeGroupHelperBase;

    .line 6
    invoke-virtual {p0}, Lcom/android/server/audio/AudioVolumeGroupHelperBase;->getAudioVolumeGroups()Ljava/util/List;

    .line 9
    move-result-object p0

    .line 10
    return-object p0
.end method

.method public final getAvailableCommunicationDeviceIds()[I
    .locals 2

    .line 1
    invoke-static {}, Lcom/android/server/audio/AudioDeviceBroker;->getAvailableCommunicationDevices()Ljava/util/List;

    .line 4
    move-result-object p0

    .line 5
    invoke-interface {p0}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 8
    move-result-object p0

    .line 9
    new-instance v0, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 11
    const/4 v1, 0x0

    .line 12
    invoke-direct {v0, v1}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 15
    invoke-interface {p0, v0}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 18
    move-result-object p0

    .line 19
    invoke-interface {p0}, Ljava/util/stream/IntStream;->toArray()[I

    .line 22
    move-result-object p0

    .line 23
    return-object p0
.end method

.method public final getBluetoothAudioDeviceCategory(Ljava/lang/String;)I
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getBluetoothAudioDeviceCategory_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 7
    move-result v0

    .line 8
    const/4 v1, 0x0

    .line 9
    if-nez v0, :cond_0

    .line 11
    return v1

    .line 12
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 14
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 16
    const/high16 v0, 0x20000000

    .line 18
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 21
    move-result-object v0

    .line 22
    const/4 v2, 0x1

    .line 23
    if-eqz v0, :cond_1

    .line 25
    invoke-virtual {p0, v0, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addOrUpdateAudioDeviceCategoryInInventory(Lcom/android/server/audio/AdiDeviceState;Z)V

    .line 28
    invoke-virtual {v0}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 31
    move-result v1

    .line 32
    move v0, v1

    .line 33
    move v1, v2

    .line 34
    goto :goto_0

    .line 35
    :cond_1
    move v0, v1

    .line 36
    :goto_0
    const/16 v3, 0x80

    .line 38
    invoke-virtual {p0, p1, v3}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 41
    move-result-object v3

    .line 42
    if-eqz v3, :cond_3

    .line 44
    invoke-virtual {p0, v3, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addOrUpdateAudioDeviceCategoryInInventory(Lcom/android/server/audio/AdiDeviceState;Z)V

    .line 47
    invoke-virtual {v3}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 50
    move-result p0

    .line 51
    if-eqz v1, :cond_2

    .line 53
    if-eq p0, v0, :cond_2

    .line 55
    const-string v0, "Found different audio device category for A2DP and BLE profiles with address "

    .line 57
    const-string v1, "AS.AudioDeviceInventory"

    .line 59
    invoke-static {v0, p1, v1}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 62
    :cond_2
    move v0, p0

    .line 63
    :cond_3
    return v0
.end method

.method public final getBluetoothAudioDeviceCategory_legacy(Ljava/lang/String;Z)I
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getBluetoothAudioDeviceCategory_legacy_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 7
    move-result v0

    .line 8
    const/4 v1, 0x0

    .line 9
    if-eqz v0, :cond_0

    .line 11
    return v1

    .line 12
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 14
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 17
    if-eqz p2, :cond_1

    .line 19
    const/high16 p2, 0x20000000

    .line 21
    goto :goto_0

    .line 22
    :cond_1
    const/16 p2, 0x80

    .line 24
    :goto_0
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 26
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 29
    move-result-object p0

    .line 30
    if-nez p0, :cond_2

    .line 32
    return v1

    .line 33
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 36
    move-result p0

    .line 37
    return p0
.end method

.method public getBluetoothContextualVolumeStream()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 3
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 6
    move-result p0

    .line 7
    if-nez p0, :cond_0

    .line 9
    const/4 p0, 0x3

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    const/4 p0, 0x0

    .line 12
    :goto_0
    return p0
.end method

.method public final getCommunicationDevice()I
    .locals 2

    .line 1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 4
    move-result-wide v0

    .line 5
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 7
    invoke-virtual {p0}, Lcom/android/server/audio/AudioDeviceBroker;->getCommunicationDevice()Landroid/media/AudioDeviceInfo;

    .line 10
    move-result-object p0

    .line 11
    if-eqz p0, :cond_0

    .line 13
    invoke-virtual {p0}, Landroid/media/AudioDeviceInfo;->getId()I

    .line 16
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17
    goto :goto_0

    .line 18
    :catchall_0
    move-exception p0

    .line 19
    goto :goto_1

    .line 20
    :cond_0
    const/4 p0, 0x0

    .line 21
    :goto_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 24
    return p0

    .line 25
    :goto_1
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 28
    throw p0
.end method

.method public final getCsd()F
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getCsd_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    const/high16 v1, -0x40800000    # -1.0f

    .line 14
    if-nez v0, :cond_0

    .line 16
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdForTestApi()Z

    .line 19
    move-result v0

    .line 20
    if-nez v0, :cond_0

    .line 22
    goto :goto_0

    .line 23
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 25
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 28
    move-result-object p0

    .line 29
    check-cast p0, Landroid/media/ISoundDose;

    .line 31
    const-string v0, "AS.SoundDoseHelper"

    .line 33
    if-nez p0, :cond_1

    .line 35
    const-string p0, "Sound dose interface not initialized"

    .line 37
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 40
    goto :goto_0

    .line 41
    :cond_1
    :try_start_0
    invoke-interface {p0}, Landroid/media/ISoundDose;->getCsd()F

    .line 44
    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 45
    goto :goto_0

    .line 46
    :catch_0
    move-exception p0

    .line 47
    const-string v2, "Exception while getting the CSD value"

    .line 49
    invoke-static {v0, v2, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 52
    :goto_0
    return v1
.end method

.method public final getCurrentAudioFocus()I
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 11
    invoke-virtual {v1}, Ljava/util/Stack;->empty()Z

    .line 14
    move-result v1

    .line 15
    if-eqz v1, :cond_0

    .line 17
    monitor-exit v0

    .line 18
    const/4 p0, 0x0

    .line 19
    goto :goto_0

    .line 20
    :catchall_0
    move-exception p0

    .line 21
    goto :goto_1

    .line 22
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 24
    invoke-virtual {p0}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 27
    move-result-object p0

    .line 28
    check-cast p0, Lcom/android/server/audio/FocusRequester;

    .line 30
    iget p0, p0, Lcom/android/server/audio/FocusRequester;->mFocusGainRequest:I

    .line 32
    monitor-exit v0

    .line 33
    :goto_0
    return p0

    .line 34
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 35
    throw p0
.end method

.method public final getCurrentAudioFocusPackageName()Ljava/lang/String;
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 11
    invoke-virtual {v1}, Ljava/util/Stack;->empty()Z

    .line 14
    move-result v1

    .line 15
    if-nez v1, :cond_0

    .line 17
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 19
    invoke-virtual {p0}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 22
    move-result-object p0

    .line 23
    check-cast p0, Lcom/android/server/audio/FocusRequester;

    .line 25
    iget-object p0, p0, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 27
    monitor-exit v0

    .line 28
    goto :goto_1

    .line 29
    :catchall_0
    move-exception p0

    .line 30
    goto :goto_2

    .line 31
    :cond_0
    const/4 v1, 0x0

    .line 32
    :goto_0
    iget-object v2, p0, Lcom/android/server/audio/MediaFocusControl;->mMultiFocusStack:Lcom/android/server/audio/MultiFocusStack;

    .line 34
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 37
    move-result v2

    .line 38
    if-ge v1, v2, :cond_2

    .line 40
    iget-object v2, p0, Lcom/android/server/audio/MediaFocusControl;->mMultiFocusStack:Lcom/android/server/audio/MultiFocusStack;

    .line 42
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 45
    move-result-object v2

    .line 46
    check-cast v2, Ljava/util/Stack;

    .line 48
    invoke-virtual {v2}, Ljava/util/Stack;->isEmpty()Z

    .line 51
    move-result v3

    .line 52
    if-nez v3, :cond_1

    .line 54
    invoke-virtual {v2}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 57
    move-result-object p0

    .line 58
    check-cast p0, Lcom/android/server/audio/FocusRequester;

    .line 60
    iget-object p0, p0, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 62
    monitor-exit v0

    .line 63
    goto :goto_1

    .line 64
    :cond_1
    add-int/lit8 v1, v1, 0x1

    .line 66
    goto :goto_0

    .line 67
    :cond_2
    monitor-exit v0

    .line 68
    const/4 p0, 0x0

    .line 69
    :goto_1
    return-object p0

    .line 70
    :goto_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 71
    throw p0
.end method

.method public final getDefaultVolumeInfo()Landroid/media/VolumeInfo;
    .locals 3

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->sDefaultVolumeInfo:Landroid/media/VolumeInfo;

    .line 3
    if-nez v0, :cond_0

    .line 5
    new-instance v0, Landroid/media/VolumeInfo$Builder;

    .line 7
    const/4 v1, 0x3

    .line 8
    invoke-direct {v0, v1}, Landroid/media/VolumeInfo$Builder;-><init>(I)V

    .line 11
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getStreamMinVolume(I)I

    .line 14
    move-result v2

    .line 15
    invoke-virtual {v0, v2}, Landroid/media/VolumeInfo$Builder;->setMinVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 18
    move-result-object v0

    .line 19
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    .line 22
    move-result p0

    .line 23
    invoke-virtual {v0, p0}, Landroid/media/VolumeInfo$Builder;->setMaxVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 26
    move-result-object p0

    .line 27
    invoke-virtual {p0}, Landroid/media/VolumeInfo$Builder;->build()Landroid/media/VolumeInfo;

    .line 30
    move-result-object p0

    .line 31
    sput-object p0, Lcom/android/server/audio/AudioService;->sDefaultVolumeInfo:Landroid/media/VolumeInfo;

    .line 33
    :cond_0
    sget-object p0, Lcom/android/server/audio/AudioService;->sDefaultVolumeInfo:Landroid/media/VolumeInfo;

    .line 35
    return-object p0
.end method

.method public final getDesiredHeadTrackingMode()I
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getDesiredHeadTrackingMode_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mDesiredHeadTrackingMode:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9
    monitor-exit p0

    .line 10
    return v0

    .line 11
    :catchall_0
    move-exception v0

    .line 12
    monitor-exit p0

    .line 13
    throw v0
.end method

.method public getDeviceForStream(I)I
    .locals 4

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceSetForStream(I)Ljava/util/Set;

    .line 4
    move-result-object v0

    .line 5
    const/4 v1, 0x3

    .line 6
    if-ne p1, v1, :cond_1

    .line 8
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 10
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 13
    move-result p0

    .line 14
    if-nez p0, :cond_1

    .line 16
    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 19
    move-result-object p0

    .line 20
    :cond_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 23
    move-result p1

    .line 24
    if-eqz p1, :cond_1

    .line 26
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 29
    move-result-object p1

    .line 30
    check-cast p1, Ljava/lang/Integer;

    .line 32
    invoke-virtual {p1}, Ljava/lang/Integer;->intValue()I

    .line 35
    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_SCO_SET:Ljava/util/Set;

    .line 37
    invoke-interface {v1, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 40
    move-result p1

    .line 41
    if-eqz p1, :cond_0

    .line 43
    const/16 p0, 0x80

    .line 45
    return p0

    .line 46
    :cond_1
    invoke-interface {v0}, Ljava/util/Set;->isEmpty()Z

    .line 49
    move-result p0

    .line 50
    const/4 p1, 0x0

    .line 51
    if-eqz p0, :cond_2

    .line 53
    goto/16 :goto_1

    .line 55
    :cond_2
    invoke-interface {v0}, Ljava/util/Set;->size()I

    .line 58
    move-result p0

    .line 59
    const/4 v1, 0x1

    .line 60
    if-ne p0, v1, :cond_3

    .line 62
    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 65
    move-result-object p0

    .line 66
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 69
    move-result-object p0

    .line 70
    check-cast p0, Ljava/lang/Integer;

    .line 72
    invoke-virtual {p0}, Ljava/lang/Integer;->intValue()I

    .line 75
    move-result p1

    .line 76
    goto/16 :goto_1

    .line 78
    :cond_3
    const/16 p0, 0x1000

    .line 80
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 83
    move-result-object v1

    .line 84
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 87
    move-result v1

    .line 88
    if-eqz v1, :cond_4

    .line 90
    :goto_0
    move p1, p0

    .line 91
    goto/16 :goto_1

    .line 93
    :cond_4
    const/4 p0, 0x2

    .line 94
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 97
    move-result-object v1

    .line 98
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 101
    move-result v1

    .line 102
    if-eqz v1, :cond_5

    .line 104
    goto :goto_0

    .line 105
    :cond_5
    const/high16 p0, 0x400000

    .line 107
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 110
    move-result-object v1

    .line 111
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 114
    move-result v1

    .line 115
    if-eqz v1, :cond_6

    .line 117
    goto :goto_0

    .line 118
    :cond_6
    const/high16 p0, 0x40000

    .line 120
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 123
    move-result-object v1

    .line 124
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 127
    move-result v1

    .line 128
    if-eqz v1, :cond_7

    .line 130
    goto :goto_0

    .line 131
    :cond_7
    const p0, 0x40001

    .line 134
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 137
    move-result-object v1

    .line 138
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 141
    move-result v1

    .line 142
    if-eqz v1, :cond_8

    .line 144
    goto :goto_0

    .line 145
    :cond_8
    const/high16 p0, 0x200000

    .line 147
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 150
    move-result-object v1

    .line 151
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 154
    move-result v1

    .line 155
    if-eqz v1, :cond_9

    .line 157
    goto :goto_0

    .line 158
    :cond_9
    const/high16 p0, 0x80000

    .line 160
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 163
    move-result-object v1

    .line 164
    invoke-interface {v0, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 167
    move-result v1

    .line 168
    if-eqz v1, :cond_a

    .line 170
    goto :goto_0

    .line 171
    :cond_a
    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 174
    move-result-object p0

    .line 175
    :cond_b
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 178
    move-result v1

    .line 179
    if-eqz v1, :cond_c

    .line 181
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 184
    move-result-object v1

    .line 185
    check-cast v1, Ljava/lang/Integer;

    .line 187
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 190
    move-result v2

    .line 191
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 193
    invoke-interface {v3, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 196
    move-result v1

    .line 197
    if-eqz v1, :cond_b

    .line 199
    move p1, v2

    .line 200
    goto :goto_1

    .line 201
    :cond_c
    new-instance p0, Ljava/lang/StringBuilder;

    .line 203
    const-string/jumbo v1, "selectOneAudioDevice returning DEVICE_NONE from invalid device combination "

    .line 206
    invoke-direct {p0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 209
    invoke-static {v0}, Landroid/media/AudioSystem;->deviceSetToString(Ljava/util/Set;)Ljava/lang/String;

    .line 212
    move-result-object v0

    .line 213
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 216
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 219
    move-result-object p0

    .line 220
    const-string v0, "AS.AudioService"

    .line 222
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 225
    :goto_1
    return p1
.end method

.method public final getDeviceMaskForStream(I)I
    .locals 3

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 7
    move-result-wide v0

    .line 8
    :try_start_0
    invoke-static {p1}, Landroid/media/audiopolicy/AudioProductStrategy;->getAudioAttributesForStrategyWithLegacyStreamType(I)Landroid/media/AudioAttributes;

    .line 11
    move-result-object p1

    .line 12
    const/4 v2, 0x1

    .line 13
    invoke-virtual {p0, p1, v2}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 16
    move-result-object p0

    .line 17
    invoke-static {p0}, Landroid/media/AudioSystem;->generateAudioDeviceTypesSet(Ljava/util/List;)Ljava/util/Set;

    .line 20
    move-result-object p0

    .line 21
    invoke-static {p0}, Landroid/media/AudioSystem;->getDeviceMaskFromSet(Ljava/util/Set;)I

    .line 24
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 28
    return p0

    .line 29
    :catchall_0
    move-exception p0

    .line 30
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 33
    throw p0
.end method

.method public final getDeviceSetForStream(I)Ljava/util/Set;
    .locals 1

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 4
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 9
    aget-object p0, p0, p1

    .line 11
    const/4 p1, 0x1

    .line 12
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->observeDevicesForStream_syncVSS(Z)Ljava/util/Set;

    .line 15
    move-result-object p0

    .line 16
    monitor-exit v0

    .line 17
    return-object p0

    .line 18
    :catchall_0
    move-exception p0

    .line 19
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 20
    throw p0
.end method

.method public final getDeviceVolume(Landroid/media/VolumeInfo;Landroid/media/AudioDeviceAttributes;Ljava/lang/String;)Landroid/media/VolumeInfo;
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getDeviceVolume_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    invoke-static {p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->hasStreamType()Z

    .line 16
    move-result p3

    .line 17
    if-nez p3, :cond_0

    .line 19
    const-string p1, "AS.AudioService"

    .line 21
    const-string p2, "Unsupported non-stream type based VolumeInfo"

    .line 23
    new-instance p3, Ljava/lang/Exception;

    .line 25
    invoke-direct {p3}, Ljava/lang/Exception;-><init>()V

    .line 28
    invoke-static {p1, p2, p3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 31
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getDefaultVolumeInfo()Landroid/media/VolumeInfo;

    .line 34
    move-result-object p0

    .line 35
    return-object p0

    .line 36
    :cond_0
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getStreamType()I

    .line 39
    move-result p3

    .line 40
    new-instance v0, Landroid/media/VolumeInfo$Builder;

    .line 42
    invoke-direct {v0, p1}, Landroid/media/VolumeInfo$Builder;-><init>(Landroid/media/VolumeInfo;)V

    .line 45
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 47
    aget-object p1, p1, p3

    .line 49
    iget p1, p1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 51
    add-int/lit8 p1, p1, 0x5

    .line 53
    div-int/lit8 p1, p1, 0xa

    .line 55
    invoke-virtual {v0, p1}, Landroid/media/VolumeInfo$Builder;->setMinVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 58
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 60
    aget-object p1, p1, p3

    .line 62
    iget p1, p1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 64
    add-int/lit8 p1, p1, 0x5

    .line 66
    div-int/lit8 p1, p1, 0xa

    .line 68
    invoke-virtual {v0, p1}, Landroid/media/VolumeInfo$Builder;->setMaxVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 71
    const-class p1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 73
    monitor-enter p1

    .line 74
    :try_start_0
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 77
    move-result v1

    .line 78
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    .line 81
    move-result v1

    .line 82
    if-eqz v1, :cond_1

    .line 84
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 86
    aget-object p2, p2, p3

    .line 88
    iget p2, p2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 90
    add-int/lit8 p2, p2, 0x5

    .line 92
    div-int/lit8 p2, p2, 0xa

    .line 94
    goto :goto_0

    .line 95
    :catchall_0
    move-exception p0

    .line 96
    goto :goto_1

    .line 97
    :cond_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 99
    aget-object v1, v1, p3

    .line 101
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 104
    move-result p2

    .line 105
    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 108
    move-result p2

    .line 109
    add-int/lit8 p2, p2, 0x5

    .line 111
    div-int/lit8 p2, p2, 0xa

    .line 113
    :goto_0
    invoke-virtual {v0, p2}, Landroid/media/VolumeInfo$Builder;->setVolumeIndex(I)Landroid/media/VolumeInfo$Builder;

    .line 116
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 118
    aget-object p0, p0, p3

    .line 120
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 122
    if-eqz p0, :cond_2

    .line 124
    const/4 p0, 0x1

    .line 125
    invoke-virtual {v0, p0}, Landroid/media/VolumeInfo$Builder;->setMuted(Z)Landroid/media/VolumeInfo$Builder;

    .line 128
    :cond_2
    invoke-virtual {v0}, Landroid/media/VolumeInfo$Builder;->build()Landroid/media/VolumeInfo;

    .line 131
    move-result-object p0

    .line 132
    monitor-exit p1

    .line 133
    return-object p0

    .line 134
    :goto_1
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 135
    throw p0
.end method

.method public final getDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;)I
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getDeviceVolumeBehavior_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p1

    .line 11
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceVolumeBehaviorInt(Landroid/media/AudioDeviceAttributes;)I

    .line 14
    move-result p0

    .line 15
    return p0
.end method

.method public final getDeviceVolumeBehaviorInt(Landroid/media/AudioDeviceAttributes;)I
    .locals 2

    .line 1
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 4
    move-result p1

    .line 5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 7
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 10
    move-result-object v1

    .line 11
    check-cast v0, Ljava/util/HashSet;

    .line 13
    invoke-virtual {v0, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 16
    move-result v0

    .line 17
    if-eqz v0, :cond_0

    .line 19
    const/4 p0, 0x1

    .line 20
    return p0

    .line 21
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 23
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 26
    move-result-object v1

    .line 27
    check-cast v0, Ljava/util/HashSet;

    .line 29
    invoke-virtual {v0, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 32
    move-result v0

    .line 33
    if-eqz v0, :cond_1

    .line 35
    const/4 p0, 0x2

    .line 36
    return p0

    .line 37
    :cond_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAbsVolumeMultiModeCaseDevices:Ljava/util/Set;

    .line 39
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 42
    move-result-object v1

    .line 43
    check-cast v0, Ljava/util/HashSet;

    .line 45
    invoke-virtual {v0, v1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 48
    move-result v0

    .line 49
    if-eqz v0, :cond_2

    .line 51
    const/4 p0, 0x4

    .line 52
    return p0

    .line 53
    :cond_2
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 55
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 58
    move-result-object v1

    .line 59
    check-cast v0, Landroid/util/ArrayMap;

    .line 61
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 64
    move-result v0

    .line 65
    if-eqz v0, :cond_3

    .line 67
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 69
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 72
    move-result-object p1

    .line 73
    check-cast p0, Landroid/util/ArrayMap;

    .line 75
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 78
    move-result-object p0

    .line 79
    check-cast p0, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 81
    iget p0, p0, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mDeviceVolumeBehavior:I

    .line 83
    return p0

    .line 84
    :cond_3
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isA2dpAbsoluteVolumeDevice(I)Z

    .line 87
    move-result p0

    .line 88
    if-nez p0, :cond_5

    .line 90
    invoke-static {p1}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    .line 93
    move-result p0

    .line 94
    if-eqz p0, :cond_4

    .line 96
    goto :goto_0

    .line 97
    :cond_4
    const/4 p0, 0x0

    .line 98
    return p0

    .line 99
    :cond_5
    :goto_0
    const/4 p0, 0x3

    .line 100
    return p0
.end method

.method public final getDevicesForAttributes(Landroid/media/AudioAttributes;)Ljava/util/List;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_1

    .line 11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v1, "android.permission.QUERY_AUDIO_STATE"

    .line 15
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result v0

    .line 19
    if-nez v0, :cond_0

    .line 21
    goto :goto_0

    .line 22
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 24
    const-string p1, "Missing MODIFY_AUDIO_ROUTING or QUERY_AUDIO_STATE permissions"

    .line 26
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 29
    throw p0

    .line 30
    :cond_1
    :goto_0
    new-instance v0, Ljava/util/ArrayList;

    .line 32
    const/4 v1, 0x0

    .line 33
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 36
    move-result-object p1

    .line 37
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 40
    move-result p0

    .line 41
    if-eqz p0, :cond_2

    .line 43
    goto :goto_1

    .line 44
    :cond_2
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;

    .line 47
    move-result-object p1

    .line 48
    :goto_1
    invoke-direct {v0, p1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 51
    return-object v0
.end method

.method public final getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;
    .locals 0

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 6
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioSystemAdapter;->getDevicesForAttributes(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 9
    move-result-object p0

    .line 10
    return-object p0
.end method

.method public final getDevicesForAttributesUnprotected(Landroid/media/AudioAttributes;)Ljava/util/List;
    .locals 2

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    .line 3
    const/4 v1, 0x0

    .line 4
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 7
    move-result-object p1

    .line 8
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 11
    move-result p0

    .line 12
    if-eqz p0, :cond_0

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;

    .line 18
    move-result-object p1

    .line 19
    :goto_0
    invoke-direct {v0, p1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 22
    return-object v0
.end method

.method public final getEarProtectLimit()I
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIsVolumeEffectOn:Z

    .line 3
    if-eqz p0, :cond_0

    .line 5
    const/4 p0, 0x7

    .line 6
    return p0

    .line 7
    :cond_0
    sget-boolean p0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR_PHASE_3:Z

    .line 9
    if-eqz p0, :cond_1

    .line 11
    const/16 p0, 0x8

    .line 13
    return p0

    .line 14
    :cond_1
    const/16 p0, 0xa

    .line 16
    return p0
.end method

.method public final getEnabledFormats()Ljava/util/HashSet;
    .locals 3

    .line 1
    new-instance v0, Ljava/util/HashSet;

    .line 3
    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 8
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 10
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 13
    const-string/jumbo v1, "encoded_surround_output_enabled_formats"

    .line 16
    invoke-static {p0, v1}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 19
    move-result-object p0

    .line 20
    if-eqz p0, :cond_0

    .line 22
    :try_start_0
    const-string v1, ","

    .line 24
    invoke-static {p0, v1}, Landroid/text/TextUtils;->split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    .line 27
    move-result-object p0

    .line 28
    invoke-static {p0}, Ljava/util/Arrays;->stream([Ljava/lang/Object;)Ljava/util/stream/Stream;

    .line 31
    move-result-object p0

    .line 32
    new-instance v1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 34
    const/4 v2, 0x1

    .line 35
    invoke-direct {v1, v2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 38
    invoke-interface {p0, v1}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 41
    move-result-object p0

    .line 42
    new-instance v1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda11;

    .line 44
    const/4 v2, 0x0

    .line 45
    invoke-direct {v1, v2, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda11;-><init>(ILjava/lang/Object;)V

    .line 48
    invoke-interface {p0, v1}, Ljava/util/stream/IntStream;->forEach(Ljava/util/function/IntConsumer;)V
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 51
    goto :goto_0

    .line 52
    :catch_0
    move-exception p0

    .line 53
    const-string v1, "AS.AudioService"

    .line 55
    const-string v2, "ENCODED_SURROUND_OUTPUT_ENABLED_FORMATS misformatted."

    .line 57
    invoke-static {v1, v2, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 60
    :cond_0
    :goto_0
    return-object v0
.end method

.method public final getEncodedSurroundMode(I)I
    .locals 7

    .line 1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 4
    move-result-wide v0

    .line 5
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 7
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8
    :try_start_1
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 10
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 12
    const-string/jumbo v4, "encoded_surround_output"

    .line 15
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 18
    const/4 v3, 0x0

    .line 19
    invoke-static {p0, v4, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 22
    move-result p0

    .line 23
    const/16 v4, 0x1f

    .line 25
    const/4 v5, -0x1

    .line 26
    const/4 v6, 0x3

    .line 27
    if-gt p1, v4, :cond_0

    .line 29
    if-le p0, v6, :cond_0

    .line 31
    :goto_0
    move v3, v5

    .line 32
    goto :goto_1

    .line 33
    :cond_0
    if-eqz p0, :cond_2

    .line 35
    const/4 v3, 0x1

    .line 36
    if-eq p0, v3, :cond_2

    .line 38
    const/4 v3, 0x2

    .line 39
    if-eq p0, v3, :cond_2

    .line 41
    if-eq p0, v6, :cond_1

    .line 43
    goto :goto_0

    .line 44
    :cond_1
    move v3, v6

    .line 45
    :cond_2
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 46
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 49
    return v3

    .line 50
    :catchall_0
    move-exception p0

    .line 51
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 52
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 53
    :catchall_1
    move-exception p0

    .line 54
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 57
    throw p0
.end method

.method public final getExcludedRingtoneTitles(I)Ljava/util/List;
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioServiceExt;->mOmcRingtoneManager:Lcom/samsung/android/server/audio/OmcRingtoneManager;

    .line 5
    const/4 v0, 0x2

    .line 6
    if-ne p1, v0, :cond_0

    .line 8
    iget-object p0, p0, Lcom/samsung/android/server/audio/OmcRingtoneManager;->mExcludeNotifications:Ljava/util/List;

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    iget-object p0, p0, Lcom/samsung/android/server/audio/OmcRingtoneManager;->mExcludeRingtones:Ljava/util/List;

    .line 13
    :goto_0
    return-object p0
.end method

.method public final getFadeManagerConfigurationForFocusLoss()Landroid/media/FadeManagerConfiguration;
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getFadeManagerConfigurationForFocusLoss_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 7
    move-result v0

    .line 8
    const-string v1, "Fade manager configuration not supported"

    .line 10
    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 13
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 15
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mFadeOutManager:Lcom/android/server/audio/FadeOutManager;

    .line 17
    iget-object p0, p0, Lcom/android/server/audio/FadeOutManager;->mFadeConfigurations:Lcom/android/server/audio/FadeConfigurations;

    .line 19
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 22
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 25
    move-result v0

    .line 26
    if-nez v0, :cond_0

    .line 28
    const/4 p0, 0x0

    .line 29
    goto :goto_0

    .line 30
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/FadeConfigurations;->mLock:Ljava/lang/Object;

    .line 32
    monitor-enter v0

    .line 33
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/FadeConfigurations;->mActiveFadeManagerConfig:Landroid/media/FadeManagerConfiguration;

    .line 35
    monitor-exit v0

    .line 36
    :goto_0
    return-object p0

    .line 37
    :catchall_0
    move-exception p0

    .line 38
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 39
    throw p0
.end method

.method public final getFadeOutDurationOnFocusLossMillis(Landroid/media/AudioAttributes;)J
    .locals 2

    .line 1
    const-string/jumbo p1, "fade out duration"

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->enforceQueryAudioStateForTest(Ljava/lang/String;)Z

    .line 7
    move-result p1

    .line 8
    const-wide/16 v0, 0x0

    .line 10
    if-nez p1, :cond_0

    .line 12
    return-wide v0

    .line 13
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 15
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 18
    return-wide v0
.end method

.method public final getFineVolume(II)I
    .locals 4

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 4
    if-nez p2, :cond_1

    .line 6
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 12
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 15
    move-result p2

    .line 16
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 18
    invoke-virtual {v0, p2}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    .line 21
    move-result p2

    .line 22
    :cond_0
    if-nez p2, :cond_1

    .line 24
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 27
    move-result p2

    .line 28
    :cond_1
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 30
    monitor-enter v0

    .line 31
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 33
    aget-object v1, v1, p1

    .line 35
    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 38
    move-result v1

    .line 39
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 41
    aget-object v2, v2, p1

    .line 43
    iget-boolean v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 45
    if-eqz v2, :cond_2

    .line 47
    const/4 v1, 0x0

    .line 48
    :cond_2
    if-eqz v1, :cond_3

    .line 50
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 52
    aget v2, v2, p1

    .line 54
    const/4 v3, 0x3

    .line 55
    if-ne v2, v3, :cond_3

    .line 57
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    .line 60
    move-result p2

    .line 61
    if-eqz p2, :cond_3

    .line 63
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 65
    aget-object p0, p0, p1

    .line 67
    iget v1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 69
    goto :goto_0

    .line 70
    :catchall_0
    move-exception p0

    .line 71
    goto :goto_1

    .line 72
    :cond_3
    :goto_0
    monitor-exit v0

    .line 73
    return v1

    .line 74
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 75
    throw p0
.end method

.method public final getFloatVolumeTable()[F
    .locals 0

    .line 1
    sget-object p0, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->FINE_VOLUME_TABLE:[F

    .line 3
    return-object p0
.end method

.method public final getFocusDuckedUidsForTest()Ljava/util/List;
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getFocusDuckedUidsForTest_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    new-instance v1, Ljava/util/ArrayList;

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mDuckingManager:Lcom/android/server/audio/PlaybackActivityMonitor$DuckingManager;

    .line 13
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor$DuckingManager;->mDuckers:Ljava/util/HashMap;

    .line 15
    invoke-virtual {p0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    .line 18
    move-result-object p0

    .line 19
    invoke-direct {v1, p0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 22
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23
    const-string p0, "AS.PlaybackActivityMon"

    .line 25
    new-instance v0, Ljava/lang/StringBuilder;

    .line 27
    const-string/jumbo v2, "current ducked UIDs: "

    .line 30
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 33
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 36
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 39
    move-result-object v0

    .line 40
    invoke-static {p0, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 43
    return-object v1

    .line 44
    :catchall_0
    move-exception p0

    .line 45
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 46
    throw p0
.end method

.method public final getFocusFadeOutDurationForTest()J
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getFocusFadeOutDurationForTest_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 6
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 9
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    .line 11
    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 14
    const/4 v1, 0x1

    .line 15
    invoke-virtual {v0, v1}, Landroid/media/AudioAttributes$Builder;->setUsage(I)Landroid/media/AudioAttributes$Builder;

    .line 18
    move-result-object v0

    .line 19
    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 22
    move-result-object v0

    .line 23
    invoke-virtual {p0, v0}, Lcom/android/server/audio/MediaFocusControl;->getFadeOutDurationMillis(Landroid/media/AudioAttributes;)J

    .line 26
    move-result-wide v0

    .line 27
    return-wide v0
.end method

.method public final getFocusRampTimeMs(ILandroid/media/AudioAttributes;)I
    .locals 0

    .line 1
    invoke-static {p2}, Lcom/android/server/audio/MediaFocusControl;->getFocusRampTimeMs(Landroid/media/AudioAttributes;)I

    .line 4
    move-result p0

    .line 5
    return p0
.end method

.method public final getFocusStack()Ljava/util/List;
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getFocusStack_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 6
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 9
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 11
    monitor-enter v0

    .line 12
    :try_start_0
    new-instance v1, Ljava/util/ArrayList;

    .line 14
    iget-object v2, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 16
    invoke-virtual {v2}, Ljava/util/Stack;->size()I

    .line 19
    move-result v2

    .line 20
    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 23
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 25
    invoke-virtual {p0}, Ljava/util/Stack;->iterator()Ljava/util/Iterator;

    .line 28
    move-result-object p0

    .line 29
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 32
    move-result v2

    .line 33
    if-eqz v2, :cond_0

    .line 35
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 38
    move-result-object v2

    .line 39
    check-cast v2, Lcom/android/server/audio/FocusRequester;

    .line 41
    invoke-virtual {v2}, Lcom/android/server/audio/FocusRequester;->toAudioFocusInfo()Landroid/media/AudioFocusInfo;

    .line 44
    move-result-object v2

    .line 45
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 48
    goto :goto_0

    .line 49
    :catchall_0
    move-exception p0

    .line 50
    goto :goto_1

    .line 51
    :cond_0
    monitor-exit v0

    .line 52
    return-object v1

    .line 53
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 54
    throw p0
.end method

.method public final getFocusUnmuteDelayAfterFadeOutForTest()J
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getFocusUnmuteDelayAfterFadeOutForTest_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 6
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 9
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    .line 11
    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 14
    const/4 v1, 0x1

    .line 15
    invoke-virtual {v0, v1}, Landroid/media/AudioAttributes$Builder;->setUsage(I)Landroid/media/AudioAttributes$Builder;

    .line 18
    move-result-object v0

    .line 19
    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 22
    move-result-object v0

    .line 23
    invoke-virtual {p0, v0}, Lcom/android/server/audio/MediaFocusControl;->getFadeInDelayForOffendersMillis(Landroid/media/AudioAttributes;)J

    .line 26
    move-result-wide v0

    .line 27
    return-wide v0
.end method

.method public final getHalVersion()Landroid/media/AudioHalVersionInfo;
    .locals 4

    .line 1
    sget-object p0, Landroid/media/AudioHalVersionInfo;->VERSIONS:Ljava/util/List;

    .line 3
    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 6
    move-result-object p0

    .line 7
    :catch_0
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_1

    .line 13
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 16
    move-result-object v0

    .line 17
    check-cast v0, Landroid/media/AudioHalVersionInfo;

    .line 19
    :try_start_0
    new-instance v1, Ljava/lang/StringBuilder;

    .line 21
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 24
    invoke-virtual {v0}, Landroid/media/AudioHalVersionInfo;->getMajorVersion()I

    .line 27
    move-result v2

    .line 28
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 31
    const-string v2, "."

    .line 33
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 36
    invoke-virtual {v0}, Landroid/media/AudioHalVersionInfo;->getMinorVersion()I

    .line 39
    move-result v2

    .line 40
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 43
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 46
    move-result-object v1

    .line 47
    new-instance v2, Ljava/lang/StringBuilder;

    .line 49
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 52
    const-string v3, "android.hardware.audio@"

    .line 54
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 60
    const-string v1, "::IDevicesFactory"

    .line 62
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 65
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 68
    move-result-object v1

    .line 69
    const-string v2, "android.hardware.audio.core.IModule/default"

    .line 71
    invoke-static {v2}, Landroid/os/ServiceManager;->checkService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 74
    move-result-object v2

    .line 75
    if-eqz v2, :cond_0

    .line 77
    return-object v0

    .line 78
    :cond_0
    const-string/jumbo v2, "default"

    .line 81
    invoke-static {v1, v2}, Landroid/os/HwBinder;->getService(Ljava/lang/String;Ljava/lang/String;)Landroid/os/IHwBinder;
    :try_end_0
    .catch Ljava/util/NoSuchElementException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 84
    return-object v0

    .line 85
    :catch_1
    move-exception v0

    .line 86
    const-string v1, "AS.AudioService"

    .line 88
    const-string v2, "Remote exception when getting hardware audio service:"

    .line 90
    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 93
    goto :goto_0

    .line 94
    :cond_1
    const/4 p0, 0x0

    .line 95
    return-object p0
.end method

.method public final getIndependentStreamTypes()Ljava/util/List;
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getIndependentStreamTypes_enforcePermission()V

    .line 4
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 6
    if-eqz p0, :cond_0

    .line 8
    new-instance p0, Ljava/util/ArrayList;

    .line 10
    invoke-static {}, Landroid/media/AudioManager;->getPublicStreamTypes()[I

    .line 13
    move-result-object v0

    .line 14
    invoke-static {v0}, Ljava/util/Arrays;->stream([I)Ljava/util/stream/IntStream;

    .line 17
    move-result-object v0

    .line 18
    invoke-interface {v0}, Ljava/util/stream/IntStream;->boxed()Ljava/util/stream/Stream;

    .line 21
    move-result-object v0

    .line 22
    invoke-interface {v0}, Ljava/util/stream/Stream;->toList()Ljava/util/List;

    .line 25
    move-result-object v0

    .line 26
    invoke-direct {p0, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 29
    goto :goto_1

    .line 30
    :cond_0
    new-instance p0, Ljava/util/ArrayList;

    .line 32
    const/4 v0, 0x1

    .line 33
    invoke-direct {p0, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 36
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 38
    array-length v1, v0

    .line 39
    const/4 v2, 0x0

    .line 40
    :goto_0
    if-ge v2, v1, :cond_2

    .line 42
    aget v3, v0, v2

    .line 44
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 47
    move-result-object v4

    .line 48
    invoke-virtual {p0, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 51
    move-result v4

    .line 52
    if-nez v4, :cond_1

    .line 54
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 57
    move-result-object v3

    .line 58
    invoke-virtual {p0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 61
    :cond_1
    add-int/lit8 v2, v2, 0x1

    .line 63
    goto :goto_0

    .line 64
    :cond_2
    :goto_1
    return-object p0
.end method

.method public final getLastAudibleStreamVolume(I)I
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getLastAudibleStreamVolume_enforcePermission()V

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 10
    move-result v0

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 13
    aget-object p0, p0, p1

    .line 15
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 18
    move-result p0

    .line 19
    invoke-static {p0, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    .line 22
    move-result p0

    .line 23
    return p0
.end method

.method public final getLastAudibleVolumeForVolumeGroup(I)I
    .locals 3

    .line 1
    const-string v0, ": no volume group found for id "

    .line 3
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getLastAudibleVolumeForVolumeGroup_enforcePermission()V

    .line 6
    const-class p0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 8
    monitor-enter p0

    .line 9
    :try_start_0
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 11
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 14
    move-result v2

    .line 15
    if-gez v2, :cond_0

    .line 17
    const-string v1, "AS.AudioService"

    .line 19
    new-instance v2, Ljava/lang/StringBuilder;

    .line 21
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 24
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 27
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 30
    move-result-object p1

    .line 31
    invoke-static {v1, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 34
    monitor-exit p0

    .line 35
    const/4 p0, 0x0

    .line 36
    return p0

    .line 37
    :catchall_0
    move-exception p1

    .line 38
    goto :goto_0

    .line 39
    :cond_0
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 42
    move-result-object p1

    .line 43
    check-cast p1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 45
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 48
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 50
    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 51
    :try_start_1
    iget-object v1, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 53
    iget v2, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 55
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 58
    move-result v1

    .line 59
    invoke-virtual {p1, v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->getIndex(I)I

    .line 62
    move-result p1

    .line 63
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 64
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 65
    return p1

    .line 66
    :catchall_1
    move-exception p1

    .line 67
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 68
    :try_start_4
    throw p1

    .line 69
    :goto_0
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 70
    throw p1
.end method

.method public final getLoudnessParams(Landroid/media/LoudnessCodecInfo;)Landroid/os/PersistableBundle;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0, p1}, Lcom/android/server/audio/LoudnessCodecHelper;->getLoudnessParams(Landroid/media/LoudnessCodecInfo;)Landroid/os/PersistableBundle;

    .line 6
    move-result-object p0

    .line 7
    return-object p0
.end method

.method public final getMaxAdditionalOutputDeviceDelay(Landroid/media/AudioDeviceAttributes;)J
    .locals 1

    .line 1
    const-string/jumbo v0, "device must not be null"

    .line 4
    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p0

    .line 11
    new-instance p1, Ljava/lang/StringBuilder;

    .line 13
    const-string/jumbo v0, "max_additional_output_device_delay="

    .line 16
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 19
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 22
    move-result v0

    .line 23
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 26
    const-string v0, ","

    .line 28
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 31
    invoke-virtual {p0}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 34
    move-result-object p0

    .line 35
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 38
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 41
    move-result-object p0

    .line 42
    invoke-static {p0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 45
    move-result-object p0

    .line 46
    const/16 p1, 0x23

    .line 48
    :try_start_0
    invoke-virtual {p0, p1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    .line 51
    move-result-object p0

    .line 52
    invoke-static {p0}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    .line 55
    move-result-wide p0
    :try_end_0
    .catch Ljava/lang/NullPointerException; {:try_start_0 .. :try_end_0} :catch_0

    .line 56
    goto :goto_0

    .line 57
    :catch_0
    const-wide/16 p0, 0x0

    .line 59
    :goto_0
    return-wide p0
.end method

.method public final getMediaVolumeSteps()[I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 3
    return-object p0
.end method

.method public final getMicModeType()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 3
    iget-object p0, p0, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 5
    invoke-virtual {p0}, Lcom/samsung/android/server/audio/MicModeType;->getType()I

    .line 8
    move-result p0

    .line 9
    return p0
.end method

.method public final getMode()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 9
    move-result-object p0

    .line 10
    if-eqz p0, :cond_0

    .line 12
    iget p0, p0, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 14
    monitor-exit v0

    .line 15
    return p0

    .line 16
    :catchall_0
    move-exception p0

    .line 17
    goto :goto_0

    .line 18
    :cond_0
    monitor-exit v0

    .line 19
    const/4 p0, 0x0

    .line 20
    return p0

    .line 21
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22
    throw p0
.end method

.method public final getModeInternal()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 3
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 6
    move-result p0

    .line 7
    return p0
.end method

.method public getMusicFxHelper()Lcom/android/server/audio/MusicFxHelper;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMusicFxHelper:Lcom/android/server/audio/MusicFxHelper;

    .line 3
    return-object p0
.end method

.method public final getMuteInterval()I
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 3
    const-string/jumbo v0, "mode_ringer_time"

    .line 6
    const/16 v1, 0x3c

    .line 8
    invoke-static {p0, v0, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 11
    move-result p0

    .line 12
    return p0
.end method

.method public final getMutingExpectedDevice()Landroid/media/AudioDeviceAttributes;
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getMutingExpectedDevice_enforcePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionLock:Ljava/lang/Object;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 9
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 12
    move-result p0

    .line 13
    if-eqz p0, :cond_0

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    invoke-static {v1}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesUnchecked(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 19
    move-result-object v1

    .line 20
    :goto_0
    monitor-exit v0

    .line 21
    return-object v1

    .line 22
    :catchall_0
    move-exception p0

    .line 23
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 24
    throw p0
.end method

.method public final getNewRingerMode(III)I
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 3
    if-eqz v0, :cond_0

    .line 5
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 8
    move-result p0

    .line 9
    return p0

    .line 10
    :cond_0
    const/4 v0, 0x2

    .line 11
    and-int/2addr p3, v0

    .line 12
    if-nez p3, :cond_2

    .line 14
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    .line 17
    move-result p3

    .line 18
    if-ne p1, p3, :cond_1

    .line 20
    goto :goto_0

    .line 21
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 24
    move-result p0

    .line 25
    return p0

    .line 26
    :cond_2
    :goto_0
    if-nez p2, :cond_4

    .line 28
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 30
    if-eqz p1, :cond_3

    .line 32
    const/4 v0, 0x1

    .line 33
    goto :goto_1

    .line 34
    :cond_3
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 36
    iget-boolean p0, p0, Landroid/media/VolumePolicy;->volumeDownToEnterSilent:Z

    .line 38
    if-eqz p0, :cond_4

    .line 40
    const/4 v0, 0x0

    .line 41
    :cond_4
    :goto_1
    return v0
.end method

.method public final getNextFineMediaVolume(II)I
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 3
    const/4 v1, 0x3

    .line 4
    aget-object v0, v0, v1

    .line 6
    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 9
    move-result p1

    .line 10
    if-ltz p1, :cond_4

    .line 12
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 14
    aget-object v0, v0, v1

    .line 16
    iget v0, v0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 18
    if-le p1, v0, :cond_0

    .line 20
    goto :goto_1

    .line 21
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 23
    if-eqz v0, :cond_2

    .line 25
    if-lez p2, :cond_1

    .line 27
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 29
    aget-object p0, p0, p1

    .line 31
    iget-short p0, p0, Lcom/android/server/audio/AudioService$VolumeMap;->raiseStep:S

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 36
    aget-object p0, p0, p1

    .line 38
    iget-short p0, p0, Lcom/android/server/audio/AudioService$VolumeMap;->lowerStep:S

    .line 40
    :goto_0
    return p0

    .line 41
    :cond_2
    iget p0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 43
    mul-int/2addr p2, p0

    .line 44
    add-int/2addr p2, p1

    .line 45
    if-gez p2, :cond_3

    .line 47
    const/4 p2, 0x0

    .line 48
    :cond_3
    return p2

    .line 49
    :cond_4
    :goto_1
    return p1
.end method

.method public final getNonDefaultDevicesForStrategy(I)Ljava/util/List;
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getNonDefaultDevicesForStrategy_enforcePermission()V

    .line 4
    new-instance v0, Ljava/util/ArrayList;

    .line 6
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 9
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 12
    move-result-object v1

    .line 13
    const/4 v2, 0x2

    .line 14
    :try_start_0
    invoke-static {p1, v2, v0}, Landroid/media/AudioSystem;->getDevicesForRoleAndStrategy(IILjava/util/List;)I

    .line 17
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18
    if-eqz v1, :cond_0

    .line 20
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V

    .line 23
    :cond_0
    if-eqz v2, :cond_1

    .line 25
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 28
    move-result-object p0

    .line 29
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 32
    move-result-object p1

    .line 33
    filled-new-array {p0, p1}, [Ljava/lang/Object;

    .line 36
    move-result-object p0

    .line 37
    const-string p1, "Error %d in getNonDefaultDeviceForStrategy(%d)"

    .line 39
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 42
    move-result-object p0

    .line 43
    const-string p1, "AS.AudioService"

    .line 45
    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 48
    new-instance p0, Ljava/util/ArrayList;

    .line 50
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 53
    return-object p0

    .line 54
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 57
    move-result p0

    .line 58
    if-eqz p0, :cond_2

    .line 60
    goto :goto_0

    .line 61
    :cond_2
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;

    .line 64
    move-result-object v0

    .line 65
    :goto_0
    return-object v0

    .line 66
    :catchall_0
    move-exception p0

    .line 67
    if-eqz v1, :cond_3

    .line 69
    :try_start_1
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 72
    goto :goto_1

    .line 73
    :catchall_1
    move-exception p1

    .line 74
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 77
    :cond_3
    :goto_1
    throw p0
.end method

.method public final getOutputRs2UpperBound()F
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getOutputRs2UpperBound_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    const/4 v1, 0x0

    .line 13
    if-nez v0, :cond_0

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 18
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 21
    move-result-object p0

    .line 22
    check-cast p0, Landroid/media/ISoundDose;

    .line 24
    const-string v0, "AS.SoundDoseHelper"

    .line 26
    if-nez p0, :cond_1

    .line 28
    const-string p0, "Sound dose interface not initialized"

    .line 30
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    :try_start_0
    invoke-interface {p0}, Landroid/media/ISoundDose;->getOutputRs2UpperBound()F

    .line 37
    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 38
    goto :goto_0

    .line 39
    :catch_0
    move-exception p0

    .line 40
    const-string v2, "Exception while getting the RS2 exposure value"

    .line 42
    invoke-static {v0, v2, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 45
    :goto_0
    return v1
.end method

.method public final getPackageName(I)[Ljava/lang/String;
    .locals 1

    .line 1
    const/16 v0, 0x3e8

    .line 3
    if-ne p1, v0, :cond_0

    .line 5
    sget-object p0, Lcom/android/server/audio/AudioService;->SYSTEM_PACKAGE:[Ljava/lang/String;

    .line 7
    return-object p0

    .line 8
    :cond_0
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPackageManager:Landroid/content/pm/PackageManager;

    .line 10
    invoke-virtual {p0, p1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    .line 13
    move-result-object p0
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14
    goto :goto_0

    .line 15
    :catch_0
    const-string/jumbo p0, "getPackageName:Invalid uid "

    .line 18
    const-string v0, "AS.AudioService"

    .line 20
    invoke-static {p1, p0, v0}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 23
    const/4 p0, 0x0

    .line 24
    :goto_0
    if-eqz p0, :cond_1

    .line 26
    goto :goto_1

    .line 27
    :cond_1
    sget-object p0, Lcom/android/server/audio/AudioService;->EMPTY_PACKAGE:[Ljava/lang/String;

    .line 29
    :goto_1
    return-object p0
.end method

.method public final getPinAppInfo(I)Ljava/lang/String;
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    invoke-virtual {p0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinAppInfo(I)Ljava/lang/String;

    .line 6
    move-result-object p0

    .line 7
    new-instance v0, Ljava/lang/StringBuilder;

    .line 9
    const-string/jumbo v1, "getPinAppInfo, device="

    .line 12
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 15
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 18
    const-string p1, ", pinappinfo="

    .line 20
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object p1

    .line 30
    const-string v0, "AS.AudioService"

    .line 32
    invoke-static {v0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 35
    return-object p0
.end method

.method public final getPinDevice()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->isRemoteSubmixAppExist()Z

    .line 6
    move-result v0

    .line 7
    if-eqz v0, :cond_0

    .line 9
    const p0, 0x8000

    .line 12
    return p0

    .line 13
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getPinDeviceInternal()I

    .line 16
    move-result p0

    .line 17
    return p0
.end method

.method public final getPinDeviceInternal()I
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    const/4 v0, 0x0

    .line 4
    invoke-virtual {p0, v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->getPinDevice(Z)I

    .line 7
    move-result p0

    .line 8
    return p0
.end method

.method public final getPreferredDevicesForCapturePreset(I)Ljava/util/List;
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getPreferredDevicesForCapturePreset_enforcePermission()V

    .line 4
    new-instance v0, Ljava/util/ArrayList;

    .line 6
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 9
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 12
    move-result-wide v1

    .line 13
    const/4 v3, 0x1

    .line 14
    :try_start_0
    invoke-static {p1, v3, v0}, Landroid/media/AudioSystem;->getDevicesForRoleAndCapturePreset(IILjava/util/List;)I

    .line 17
    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21
    if-eqz v3, :cond_0

    .line 23
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 26
    move-result-object p0

    .line 27
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 30
    move-result-object p1

    .line 31
    filled-new-array {p0, p1}, [Ljava/lang/Object;

    .line 34
    move-result-object p0

    .line 35
    const-string p1, "Error %d in getPreferredDeviceForCapturePreset(%d)"

    .line 37
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 40
    move-result-object p0

    .line 41
    const-string p1, "AS.AudioService"

    .line 43
    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    new-instance p0, Ljava/util/ArrayList;

    .line 48
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 51
    return-object p0

    .line 52
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 55
    move-result p0

    .line 56
    if-eqz p0, :cond_1

    .line 58
    goto :goto_0

    .line 59
    :cond_1
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;

    .line 62
    move-result-object v0

    .line 63
    :goto_0
    return-object v0

    .line 64
    :catchall_0
    move-exception p0

    .line 65
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 68
    throw p0
.end method

.method public final getPreferredDevicesForStrategy(I)Ljava/util/List;
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getPreferredDevicesForStrategy_enforcePermission()V

    .line 4
    new-instance v0, Ljava/util/ArrayList;

    .line 6
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 9
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 12
    move-result-wide v1

    .line 13
    const/4 v3, 0x1

    .line 14
    :try_start_0
    invoke-static {p1, v3, v0}, Landroid/media/AudioSystem;->getDevicesForRoleAndStrategy(IILjava/util/List;)I

    .line 17
    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 21
    if-eqz v3, :cond_0

    .line 23
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 26
    move-result-object p0

    .line 27
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 30
    move-result-object p1

    .line 31
    filled-new-array {p0, p1}, [Ljava/lang/Object;

    .line 34
    move-result-object p0

    .line 35
    const-string p1, "Error %d in getPreferredDeviceForStrategy(%d)"

    .line 37
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 40
    move-result-object p0

    .line 41
    const-string p1, "AS.AudioService"

    .line 43
    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    new-instance p0, Ljava/util/ArrayList;

    .line 48
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 51
    return-object p0

    .line 52
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 55
    move-result p0

    .line 56
    if-eqz p0, :cond_1

    .line 58
    goto :goto_0

    .line 59
    :cond_1
    invoke-static {v0}, Lcom/android/server/audio/AudioService;->anonymizeAudioDeviceAttributesListUnchecked(Ljava/util/List;)Ljava/util/List;

    .line 62
    move-result-object v0

    .line 63
    :goto_0
    return-object v0

    .line 64
    :catchall_0
    move-exception p0

    .line 65
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 68
    throw p0
.end method

.method public final getPrevRingerMode()I
    .locals 0

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 3
    return p0
.end method

.method public final getRadioOutputPath()I
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 3
    const/4 v0, 0x1

    .line 4
    if-ne p0, v0, :cond_0

    .line 6
    const/4 p0, 0x2

    .line 7
    return p0

    .line 8
    :cond_0
    const/4 p0, 0x3

    .line 9
    return p0
.end method

.method public final getRegisteredPolicyMixes()Ljava/util/List;
    .locals 3

    .line 1
    invoke-static {}, Landroid/media/audiopolicy/Flags;->audioMixTestApi()Z

    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_0

    .line 7
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    .line 10
    move-result-object p0

    .line 11
    return-object p0

    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 14
    monitor-enter v0

    .line 15
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 17
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 20
    invoke-static {}, Landroid/media/audiopolicy/Flags;->audioMixTestApi()Z

    .line 23
    move-result p0

    .line 24
    if-nez p0, :cond_1

    .line 26
    invoke-static {}, Ljava/util/Collections;->emptyList()Ljava/util/List;

    .line 29
    move-result-object p0

    .line 30
    goto :goto_0

    .line 31
    :cond_1
    new-instance p0, Ljava/util/ArrayList;

    .line 33
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 36
    invoke-static {p0}, Landroid/media/AudioSystem;->getRegisteredPolicyMixes(Ljava/util/List;)I

    .line 39
    move-result v1

    .line 40
    if-nez v1, :cond_2

    .line 42
    invoke-static {p0}, Ljava/util/Collections;->unmodifiableList(Ljava/util/List;)Ljava/util/List;

    .line 45
    move-result-object p0

    .line 46
    :goto_0
    monitor-exit v0

    .line 47
    return-object p0

    .line 48
    :catchall_0
    move-exception p0

    .line 49
    goto :goto_1

    .line 50
    :cond_2
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 52
    const-string v2, "Cannot fetch registered policy mixes. Result: "

    .line 54
    invoke-static {v1, v2}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 57
    move-result-object v1

    .line 58
    invoke-direct {p0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 61
    throw p0

    .line 62
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 63
    throw p0
.end method

.method public final getRemainingMuteIntervalMs()I
    .locals 6

    .line 1
    iget v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 3
    const v1, 0xea60

    .line 6
    if-eqz v0, :cond_1

    .line 8
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 11
    move-result-wide v2

    .line 12
    iget-wide v4, p0, Lcom/android/server/audio/AudioService;->mMuteTime:J

    .line 14
    cmp-long v0, v2, v4

    .line 16
    if-lez v0, :cond_0

    .line 18
    const/4 p0, 0x0

    .line 19
    return p0

    .line 20
    :cond_0
    sub-long/2addr v4, v2

    .line 21
    const-wide/32 v2, 0xea60

    .line 24
    div-long/2addr v4, v2

    .line 25
    long-to-int v0, v4

    .line 26
    mul-int/2addr v0, v1

    .line 27
    add-int/2addr v0, v1

    .line 28
    iput v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 30
    :cond_1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 32
    const-string v2, "[Mute Interval] remaining time="

    .line 34
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 37
    iget v2, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 39
    div-int/2addr v2, v1

    .line 40
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 43
    const-string v1, " mins"

    .line 45
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 48
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 51
    move-result-object v0

    .line 52
    const-string v1, "AS.AudioService"

    .line 54
    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 57
    iget p0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 59
    return p0
.end method

.method public final getReportedSurroundFormats()Ljava/util/List;
    .locals 2

    .line 1
    new-instance p0, Ljava/util/ArrayList;

    .line 3
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 6
    invoke-static {p0}, Landroid/media/AudioSystem;->getReportedSurroundFormats(Ljava/util/ArrayList;)I

    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 12
    new-instance p0, Ljava/lang/StringBuilder;

    .line 14
    const-string/jumbo v1, "getReportedSurroundFormats failed:"

    .line 17
    invoke-direct {p0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 20
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 26
    move-result-object p0

    .line 27
    const-string v0, "AS.AudioService"

    .line 29
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    new-instance p0, Ljava/util/ArrayList;

    .line 34
    invoke-direct {p0}, Ljava/util/ArrayList;-><init>()V

    .line 37
    :cond_0
    return-object p0
.end method

.method public final getRingerModeExternal()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget p0, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 6
    monitor-exit v0

    .line 7
    return p0

    .line 8
    :catchall_0
    move-exception p0

    .line 9
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10
    throw p0
.end method

.method public final getRingerModeInternal()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget p0, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 6
    monitor-exit v0

    .line 7
    return p0

    .line 8
    :catchall_0
    move-exception p0

    .line 9
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10
    throw p0
.end method

.method public final getRingtonePlayer()Landroid/media/IRingtonePlayer;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRingtonePlayer:Landroid/media/IRingtonePlayer;

    .line 3
    return-object p0
.end method

.method public final getSelectedAppList()[Ljava/lang/String;
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-object p0, Lcom/samsung/android/server/audio/PackageListHelper;->sCategorizer:Lcom/samsung/android/server/audio/AppCategorizer;

    .line 8
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    new-instance v0, Ljava/util/ArrayList;

    .line 13
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 16
    iget-object p0, p0, Lcom/samsung/android/server/audio/AppCategorizer;->appList:Ljava/util/Hashtable;

    .line 18
    invoke-virtual {p0}, Ljava/util/Hashtable;->values()Ljava/util/Collection;

    .line 21
    move-result-object p0

    .line 22
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 25
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 28
    move-result p0

    .line 29
    new-array p0, p0, [Ljava/lang/String;

    .line 31
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 34
    move-result-object p0

    .line 35
    check-cast p0, [Ljava/lang/String;

    .line 37
    return-object p0
.end method

.method public getSettings()Lcom/android/server/audio/SettingsAdapter;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 3
    return-object p0
.end method

.method public final getSpatializerCompatibleAudioDevices()Ljava/util/List;
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getSpatializerCompatibleAudioDevices_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    .line 9
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 12
    iget-object v1, p0, Lcom/android/server/audio/SpatializerHelper;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 14
    invoke-virtual {v1}, Lcom/android/server/audio/AudioDeviceBroker;->getImmutableDeviceInventory()Ljava/util/Collection;

    .line 17
    move-result-object v1

    .line 18
    check-cast v1, Ljava/util/ArrayList;

    .line 20
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 23
    move-result-object v1

    .line 24
    :cond_0
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    .line 27
    move-result v2

    .line 28
    if-eqz v2, :cond_1

    .line 30
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 33
    move-result-object v2

    .line 34
    check-cast v2, Lcom/android/server/audio/AdiDeviceState;

    .line 36
    invoke-virtual {v2}, Lcom/android/server/audio/AdiDeviceState;->isSAEnabled()Z

    .line 39
    move-result v3

    .line 40
    if-eqz v3, :cond_0

    .line 42
    invoke-virtual {p0, v2}, Lcom/android/server/audio/SpatializerHelper;->isSADevice(Lcom/android/server/audio/AdiDeviceState;)Z

    .line 45
    move-result v3

    .line 46
    if-eqz v3, :cond_0

    .line 48
    invoke-virtual {v2}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceAttributes()Landroid/media/AudioDeviceAttributes;

    .line 51
    move-result-object v2

    .line 52
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 55
    goto :goto_0

    .line 56
    :catchall_0
    move-exception v0

    .line 57
    goto :goto_1

    .line 58
    :cond_1
    monitor-exit p0

    .line 59
    return-object v0

    .line 60
    :goto_1
    monitor-exit p0

    .line 61
    throw v0
.end method

.method public final getSpatializerImmersiveAudioLevel()I
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 3
    monitor-enter p0

    .line 4
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mCapableSpatLevel:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    monitor-exit p0

    .line 7
    return v0

    .line 8
    :catchall_0
    move-exception v0

    .line 9
    monitor-exit p0

    .line 10
    throw v0
.end method

.method public final getSpatializerOutput()I
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getSpatializerOutput_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 9
    if-eqz v0, :cond_2

    .line 11
    const/4 v1, 0x1

    .line 12
    if-eq v0, v1, :cond_2

    .line 14
    const/4 v1, 0x3

    .line 15
    if-eq v0, v1, :cond_0

    .line 17
    const/4 v1, 0x4

    .line 18
    if-eq v0, v1, :cond_0

    .line 20
    const/4 v1, 0x5

    .line 21
    if-eq v0, v1, :cond_0

    .line 23
    const/4 v1, 0x6

    .line 24
    if-eq v0, v1, :cond_0

    .line 26
    goto :goto_0

    .line 27
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29
    if-eqz v0, :cond_1

    .line 31
    :goto_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 33
    invoke-interface {v0}, Landroid/media/ISpatializer;->getOutput()I

    .line 36
    move-result v0
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 37
    monitor-exit p0

    .line 38
    goto :goto_1

    .line 39
    :catchall_0
    move-exception v0

    .line 40
    goto :goto_2

    .line 41
    :catch_0
    move-exception v0

    .line 42
    :try_start_2
    const-string v1, "AS.SpatializerHelper"

    .line 44
    const-string v2, "Error in getOutput"

    .line 46
    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 49
    monitor-exit p0

    .line 50
    const/4 v0, 0x0

    .line 51
    :goto_1
    return v0

    .line 52
    :cond_1
    :try_start_3
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 54
    const-string/jumbo v1, "null Spatializer for getOutput"

    .line 57
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 60
    throw v0

    .line 61
    :cond_2
    new-instance v0, Ljava/lang/IllegalStateException;

    .line 63
    const-string v1, "Can\'t get output without a spatializer"

    .line 65
    invoke-direct {v0, v1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 68
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 69
    :goto_2
    monitor-exit p0

    .line 70
    throw v0
.end method

.method public final getSpatializerParameter(I[B)V
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getSpatializerParameter_enforcePermission()V

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    const-string v0, "Error in getParameter for key:"

    .line 11
    const-string v1, "Can\'t get parameter key:"

    .line 13
    const-string/jumbo v2, "getParameter("

    .line 16
    monitor-enter p0

    .line 17
    :try_start_0
    iget v3, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 19
    if-eqz v3, :cond_2

    .line 21
    const/4 v4, 0x1

    .line 22
    if-eq v3, v4, :cond_2

    .line 24
    const/4 v1, 0x3

    .line 25
    if-eq v3, v1, :cond_0

    .line 27
    const/4 v1, 0x4

    .line 28
    if-eq v3, v1, :cond_0

    .line 30
    const/4 v1, 0x5

    .line 31
    if-eq v3, v1, :cond_0

    .line 33
    const/4 v1, 0x6

    .line 34
    if-eq v3, v1, :cond_0

    .line 36
    goto :goto_0

    .line 37
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 39
    if-nez v1, :cond_1

    .line 41
    const-string p2, "AS.SpatializerHelper"

    .line 43
    new-instance v0, Ljava/lang/StringBuilder;

    .line 45
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 48
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 51
    const-string p1, "): null spatializer in state: "

    .line 53
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 56
    iget p1, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 58
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 61
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 64
    move-result-object p1

    .line 65
    invoke-static {p2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 68
    monitor-exit p0

    .line 69
    goto :goto_2

    .line 70
    :catchall_0
    move-exception p1

    .line 71
    goto :goto_3

    .line 72
    :cond_1
    :goto_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 74
    invoke-interface {v1, p1, p2}, Landroid/media/ISpatializer;->getParameter(I[B)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 77
    goto :goto_1

    .line 78
    :catch_0
    move-exception p2

    .line 79
    :try_start_2
    const-string v1, "AS.SpatializerHelper"

    .line 81
    new-instance v2, Ljava/lang/StringBuilder;

    .line 83
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 86
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 89
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 92
    move-result-object p1

    .line 93
    invoke-static {v1, p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 96
    :goto_1
    monitor-exit p0

    .line 97
    :goto_2
    return-void

    .line 98
    :cond_2
    :try_start_3
    new-instance p2, Ljava/lang/IllegalStateException;

    .line 100
    new-instance v0, Ljava/lang/StringBuilder;

    .line 102
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 105
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 108
    const-string p1, " without a spatializer"

    .line 110
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 113
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 116
    move-result-object p1

    .line 117
    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 120
    throw p2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 121
    :goto_3
    monitor-exit p0

    .line 122
    throw p1
.end method

.method public final getStreamMaxVolume(I)I
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    aget-object p0, p0, p1

    .line 8
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 10
    add-int/lit8 p0, p0, 0x5

    .line 12
    div-int/lit8 p0, p0, 0xa

    .line 14
    return p0
.end method

.method public final getStreamMinVolume(I)I
    .locals 2

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 4
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 7
    move-result v0

    .line 8
    const/16 v1, 0x3e8

    .line 10
    if-eq v0, v1, :cond_2

    .line 12
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 14
    const-string v1, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 16
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 19
    move-result v0

    .line 20
    if-nez v0, :cond_0

    .line 22
    goto :goto_0

    .line 23
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 25
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 27
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 30
    move-result v0

    .line 31
    if-nez v0, :cond_1

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    const/4 v0, 0x0

    .line 35
    goto :goto_1

    .line 36
    :cond_2
    :goto_0
    const/4 v0, 0x1

    .line 37
    :goto_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 39
    aget-object p0, p0, p1

    .line 41
    if-eqz v0, :cond_3

    .line 43
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 45
    goto :goto_2

    .line 46
    :cond_3
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMinNoPerm:I

    .line 48
    :goto_2
    add-int/lit8 p0, p0, 0x5

    .line 50
    div-int/lit8 p0, p0, 0xa

    .line 52
    return p0
.end method

.method public final getStreamTypeAlias(I)I
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getStreamTypeAlias_enforcePermission()V

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 7
    sget-object p0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 9
    aget p0, p0, p1

    .line 11
    return p0
.end method

.method public final getStreamVolume(I)I
    .locals 6

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 2
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x3

    if-eqz v0, :cond_0

    if-ne p1, v2, :cond_0

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 4
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v3, v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v0

    goto :goto_0

    :cond_0
    move v0, v1

    :goto_0
    if-nez v0, :cond_1

    .line 5
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v0

    .line 6
    :cond_1
    const-class v3, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v3

    .line 7
    :try_start_0
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v4, v4, p1

    invoke-virtual {v4, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v4

    .line 8
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v5, v5, p1

    iget-boolean v5, v5, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-eqz v5, :cond_2

    goto :goto_1

    :cond_2
    move v1, v4

    :goto_1
    if-eqz v1, :cond_3

    .line 9
    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v4, v4, p1

    if-ne v4, v2, :cond_3

    .line 10
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object p0, p0, p1

    .line 12
    iget v1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    goto :goto_2

    :catchall_0
    move-exception p0

    goto :goto_3

    .line 13
    :cond_3
    :goto_2
    invoke-static {v1, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result p0

    monitor-exit v3

    return p0

    .line 14
    :goto_3
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final getStreamVolume(II)I
    .locals 4

    .line 15
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 16
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, p1

    invoke-virtual {v1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v1

    .line 17
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, p1

    iget-boolean v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    if-eqz v2, :cond_0

    const/4 v1, 0x0

    :cond_0
    if-eqz v1, :cond_1

    .line 18
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v2, v2, p1

    const/4 v3, 0x3

    if-ne v2, v3, :cond_1

    .line 19
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result p2

    if-eqz p2, :cond_1

    .line 20
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object p0, p0, p1

    .line 21
    iget v1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    goto :goto_0

    :catchall_0
    move-exception p0

    goto :goto_1

    :cond_1
    :goto_0
    add-int/lit8 v1, v1, 0x5

    .line 22
    div-int/lit8 v1, v1, 0xa

    monitor-exit v0

    return v1

    .line 23
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final getStreamVolumeForDevice(II)I
    .locals 0

    .line 1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    .line 4
    move-result p0

    .line 5
    return p0
.end method

.method public final getSupportedHeadTrackingModes()[I
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getSupportedHeadTrackingModes_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mSupportedHeadTrackingModes:[I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9
    monitor-exit p0

    .line 10
    return-object v0

    .line 11
    :catchall_0
    move-exception v0

    .line 12
    monitor-exit p0

    .line 13
    throw v0
.end method

.method public final getSupportedSystemUsages()[I
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getSupportedSystemUsages_enforcePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 9
    array-length v1, p0

    .line 10
    invoke-static {p0, v1}, Ljava/util/Arrays;->copyOf([II)[I

    .line 13
    move-result-object p0

    .line 14
    monitor-exit v0

    .line 15
    return-object p0

    .line 16
    :catchall_0
    move-exception p0

    .line 17
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18
    throw p0
.end method

.method public final getSurroundFormats()Ljava/util/Map;
    .locals 2

    .line 1
    new-instance p0, Ljava/util/HashMap;

    .line 3
    invoke-direct {p0}, Ljava/util/HashMap;-><init>()V

    .line 6
    invoke-static {p0}, Landroid/media/AudioSystem;->getSurroundFormats(Ljava/util/Map;)I

    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 12
    new-instance p0, Ljava/lang/StringBuilder;

    .line 14
    const-string/jumbo v1, "getSurroundFormats failed:"

    .line 17
    invoke-direct {p0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 20
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 26
    move-result-object p0

    .line 27
    const-string v0, "AS.AudioService"

    .line 29
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    new-instance p0, Ljava/util/HashMap;

    .line 34
    invoke-direct {p0}, Ljava/util/HashMap;-><init>()V

    .line 37
    :cond_0
    return-object p0
.end method

.method public final getUiSoundsStreamType()I
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 3
    const/4 v1, 0x2

    .line 4
    if-eqz v0, :cond_0

    .line 6
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    .line 8
    aget p0, p0, v1

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    sget-object p0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 13
    aget p0, p0, v1

    .line 15
    :goto_0
    return p0
.end method

.method public final getUidForDevice(I)I
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 3
    const-string/jumbo v1, "getUidForDevice, "

    .line 6
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 9
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 12
    move-result-object v1

    .line 13
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 16
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 19
    move-result-object v0

    .line 20
    const-string v1, "AS.AudioService"

    .line 22
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 25
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 27
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mMultiFocusStack:Lcom/android/server/audio/MultiFocusStack;

    .line 29
    invoke-virtual {p0, p1}, Lcom/android/server/audio/MultiFocusStack;->getStackForDevice(I)Ljava/util/Stack;

    .line 32
    move-result-object p0

    .line 33
    invoke-virtual {p0}, Ljava/util/Stack;->isEmpty()Z

    .line 36
    move-result p1

    .line 37
    if-nez p1, :cond_0

    .line 39
    invoke-virtual {p0}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 42
    move-result-object p0

    .line 43
    check-cast p0, Lcom/android/server/audio/FocusRequester;

    .line 45
    iget p0, p0, Lcom/android/server/audio/FocusRequester;->mCallingUid:I

    .line 47
    goto :goto_0

    .line 48
    :cond_0
    const/4 p0, -0x1

    .line 49
    :goto_0
    const-string/jumbo p1, "getUidForDevice, uid:"

    .line 52
    const-string v0, "MediaFocusControl"

    .line 54
    invoke-static {p0, p1, v0}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 57
    return p0
.end method

.method public final getVibrateSetting(I)I
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 3
    if-nez v0, :cond_0

    .line 5
    const/4 p0, 0x0

    .line 6
    return p0

    .line 7
    :cond_0
    iget p0, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 9
    mul-int/lit8 p1, p1, 0x2

    .line 11
    shr-int/2addr p0, p1

    .line 12
    and-int/lit8 p0, p0, 0x3

    .line 14
    return p0
.end method

.method public final getVolumeController()Landroid/media/IVolumeController;
    .locals 2

    .line 1
    const-string/jumbo v0, "get the volume controller"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    new-instance v0, Ljava/lang/StringBuilder;

    .line 9
    const-string v1, "Volume controller: "

    .line 11
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 14
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 16
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 22
    move-result-object v0

    .line 23
    const-string v1, "AS.AudioService"

    .line 25
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 30
    iget-object p0, p0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 32
    return-object p0
.end method

.method public final getVolumeGroupMaxVolumeIndex(I)I
    .locals 3

    .line 1
    const-string v0, "No volume group for id "

    .line 3
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getVolumeGroupMaxVolumeIndex_enforcePermission()V

    .line 6
    const-class p0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 8
    monitor-enter p0

    .line 9
    :try_start_0
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 11
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 14
    move-result v2

    .line 15
    if-ltz v2, :cond_0

    .line 17
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 20
    move-result-object p1

    .line 21
    check-cast p1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 23
    iget p1, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMax:I

    .line 25
    monitor-exit p0

    .line 26
    return p1

    .line 27
    :catchall_0
    move-exception p1

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 31
    new-instance v2, Ljava/lang/StringBuilder;

    .line 33
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 36
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 39
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    move-result-object p1

    .line 43
    invoke-direct {v1, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 46
    throw v1

    .line 47
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 48
    throw p1
.end method

.method public final getVolumeGroupMinVolumeIndex(I)I
    .locals 3

    .line 1
    const-string v0, "No volume group for id "

    .line 3
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getVolumeGroupMinVolumeIndex_enforcePermission()V

    .line 6
    const-class p0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 8
    monitor-enter p0

    .line 9
    :try_start_0
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 11
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 14
    move-result v2

    .line 15
    if-ltz v2, :cond_0

    .line 17
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 20
    move-result-object p1

    .line 21
    check-cast p1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 23
    iget p1, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMin:I

    .line 25
    monitor-exit p0

    .line 26
    return p1

    .line 27
    :catchall_0
    move-exception p1

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 31
    new-instance v2, Ljava/lang/StringBuilder;

    .line 33
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 36
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 39
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    move-result-object p1

    .line 43
    invoke-direct {v1, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 46
    throw v1

    .line 47
    :goto_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 48
    throw p1
.end method

.method public final getVolumeGroupVolumeIndex(I)I
    .locals 3

    .line 1
    const-string v0, "No volume group for id "

    .line 3
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->getVolumeGroupVolumeIndex_enforcePermission()V

    .line 6
    const-class p0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 8
    monitor-enter p0

    .line 9
    :try_start_0
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 11
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 14
    move-result v2

    .line 15
    if-ltz v2, :cond_1

    .line 17
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 20
    move-result-object p1

    .line 21
    check-cast p1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 23
    iget-boolean v0, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 25
    if-eqz v0, :cond_0

    .line 27
    const/4 p1, 0x0

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 31
    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 32
    :try_start_1
    iget-object v1, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 34
    iget v2, p1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 36
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 39
    move-result v1

    .line 40
    invoke-virtual {p1, v1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->getIndex(I)I

    .line 43
    move-result p1

    .line 44
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 45
    :goto_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 46
    return p1

    .line 47
    :catchall_0
    move-exception p1

    .line 48
    goto :goto_1

    .line 49
    :catchall_1
    move-exception p1

    .line 50
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 51
    :try_start_4
    throw p1

    .line 52
    :cond_1
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 54
    new-instance v2, Ljava/lang/StringBuilder;

    .line 56
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 59
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 62
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 65
    move-result-object p1

    .line 66
    invoke-direct {v1, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 69
    throw v1

    .line 70
    :goto_1
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 71
    throw p1
.end method

.method public final getVolumeLimitValue()I
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsVolumeEffectOn:Z

    .line 3
    if-eqz v0, :cond_0

    .line 5
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 7
    add-int/lit8 v0, v0, -0x9

    .line 9
    if-ltz v0, :cond_0

    .line 11
    const/4 v1, 0x7

    .line 12
    if-ge v0, v1, :cond_0

    .line 14
    new-instance p0, Ljava/lang/StringBuilder;

    .line 16
    const-string/jumbo v1, "volume limit for effect change to "

    .line 19
    invoke-direct {p0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 22
    sget-object v1, Lcom/android/server/audio/AudioService;->VOLUME_LIMIT_INDEX_EFFECT_ON:[I

    .line 24
    aget v2, v1, v0

    .line 26
    const-string v3, "AS.AudioService"

    .line 28
    invoke-static {p0, v2, v3}, Lcom/android/server/accessibility/GestureWakeup$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 31
    aget p0, v1, v0

    .line 33
    return p0

    .line 34
    :cond_0
    iget p0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 36
    const/16 v0, 0xe

    .line 38
    invoke-static {p0, v0}, Ljava/lang/Math;->min(II)I

    .line 41
    move-result p0

    .line 42
    return p0
.end method

.method public final getVssVolumeForDevice(II)I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 3
    aget-object p0, p0, p1

    .line 5
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 8
    move-result p0

    .line 9
    return p0
.end method

.method public final handleBluetoothActiveDeviceChanged(Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/BluetoothDevice;Landroid/media/BluetoothProfileConnectionInfo;)V
    .locals 17

    .line 1
    move-object/from16 v0, p0

    .line 3
    move-object/from16 v1, p1

    .line 5
    move-object/from16 v2, p2

    .line 7
    move-object/from16 v3, p3

    .line 9
    invoke-virtual/range {p0 .. p0}, Landroid/media/IAudioService$Stub;->handleBluetoothActiveDeviceChanged_enforcePermission()V

    .line 12
    const-string v4, " -> "

    .line 14
    if-eqz v3, :cond_3

    .line 16
    invoke-virtual/range {p3 .. p3}, Landroid/media/BluetoothProfileConnectionInfo;->getProfile()I

    .line 19
    move-result v5

    .line 20
    const/4 v6, 0x2

    .line 21
    if-eq v5, v6, :cond_1

    .line 23
    const/16 v7, 0xb

    .line 25
    if-eq v5, v7, :cond_1

    .line 27
    const/16 v7, 0x16

    .line 29
    if-eq v5, v7, :cond_1

    .line 31
    const/16 v7, 0x1a

    .line 33
    if-eq v5, v7, :cond_1

    .line 35
    const/16 v7, 0x15

    .line 37
    if-eq v5, v7, :cond_1

    .line 39
    iget-object v7, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 41
    iget-boolean v7, v7, Lcom/android/server/audio/AudioDeviceBroker;->mScoManagedByAudio:Z

    .line 43
    if-eqz v7, :cond_0

    .line 45
    const/4 v7, 0x1

    .line 46
    if-ne v5, v7, :cond_0

    .line 48
    goto :goto_0

    .line 49
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 51
    new-instance v3, Ljava/lang/StringBuilder;

    .line 53
    const-string v6, "Illegal BluetoothProfile profile for device "

    .line 55
    invoke-direct {v3, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 58
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 61
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 64
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 67
    const-string v1, ". Got: "

    .line 69
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 72
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 75
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 78
    move-result-object v1

    .line 79
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 82
    throw v0

    .line 83
    :cond_1
    :goto_0
    sget-object v7, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 85
    new-instance v8, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 87
    new-instance v9, Ljava/lang/StringBuilder;

    .line 89
    const-string v10, "BluetoothActiveDeviceChanged for "

    .line 91
    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 94
    invoke-static {v5}, Landroid/bluetooth/BluetoothProfile;->getProfileName(I)Ljava/lang/String;

    .line 97
    move-result-object v10

    .line 98
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 101
    const-string v10, ", device update "

    .line 103
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 109
    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 112
    invoke-virtual {v9, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 115
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 118
    move-result-object v4

    .line 119
    invoke-direct {v8, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 122
    const/4 v4, 0x0

    .line 123
    const-string v9, "AS.AudioService"

    .line 125
    invoke-virtual {v8, v4, v9}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 128
    invoke-virtual {v7, v8}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 131
    new-instance v15, Lcom/android/server/audio/AudioDeviceBroker$BtDeviceChangedData;

    .line 133
    const-string v4, "AudioService"

    .line 135
    invoke-direct {v15, v1, v2, v3, v4}, Lcom/android/server/audio/AudioDeviceBroker$BtDeviceChangedData;-><init>(Landroid/bluetooth/BluetoothDevice;Landroid/bluetooth/BluetoothDevice;Landroid/media/BluetoothProfileConnectionInfo;Ljava/lang/String;)V

    .line 138
    if-ne v5, v6, :cond_2

    .line 140
    if-eqz v2, :cond_2

    .line 142
    invoke-virtual {v2, v1}, Landroid/bluetooth/BluetoothDevice;->equals(Ljava/lang/Object;)Z

    .line 145
    move-result v1

    .line 146
    if-eqz v1, :cond_2

    .line 148
    iget-object v10, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 150
    const/4 v12, 0x2

    .line 151
    const/4 v13, 0x0

    .line 152
    const/16 v11, 0x26

    .line 154
    const/4 v14, 0x0

    .line 155
    const/16 v16, 0xa

    .line 157
    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 160
    goto :goto_1

    .line 161
    :cond_2
    iget-object v10, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 163
    const/4 v12, 0x2

    .line 164
    const/4 v13, 0x0

    .line 165
    const/16 v11, 0x26

    .line 167
    const/4 v14, 0x0

    .line 168
    const/16 v16, 0x0

    .line 170
    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 173
    :goto_1
    return-void

    .line 174
    :cond_3
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 176
    new-instance v3, Ljava/lang/StringBuilder;

    .line 178
    const-string v5, "Illegal null BluetoothProfileConnectionInfo for device "

    .line 180
    invoke-direct {v3, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 183
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 186
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 189
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 192
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 195
    move-result-object v1

    .line 196
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 199
    throw v0
.end method

.method public final handleSetRingerMode(ILjava/lang/String;Z)V
    .locals 21

    .line 1
    move-object/from16 v1, p0

    .line 3
    move/from16 v4, p1

    .line 5
    move-object/from16 v2, p2

    .line 7
    move/from16 v0, p3

    .line 9
    new-instance v3, Ljava/lang/StringBuilder;

    .line 11
    const-string v5, "RingerMode="

    .line 13
    invoke-direct {v3, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 19
    const-string v5, ", caller="

    .line 21
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 27
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 30
    move-result-object v3

    .line 31
    const-string v5, "AS.AudioService"

    .line 33
    invoke-static {v5, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 36
    const-string/jumbo v3, "com.samsung.accessibility"

    .line 39
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 42
    move-result v3

    .line 43
    const/4 v12, 0x1

    .line 44
    const/4 v5, 0x2

    .line 45
    const/4 v13, 0x0

    .line 46
    if-nez v3, :cond_3

    .line 48
    const-string/jumbo v3, "com.samsung.android.app.routines"

    .line 51
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 54
    move-result v3

    .line 55
    if-nez v3, :cond_3

    .line 57
    const-string/jumbo v3, "com.android.systemui"

    .line 60
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 63
    move-result v3

    .line 64
    if-nez v3, :cond_3

    .line 66
    const-string/jumbo v3, "com.sec.android.emergencymode.service"

    .line 69
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 72
    move-result v3

    .line 73
    if-eqz v3, :cond_0

    .line 75
    goto :goto_0

    .line 76
    :cond_0
    if-ne v4, v5, :cond_2

    .line 78
    const-string/jumbo v3, "checkForRingerModeChange"

    .line 81
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 84
    move-result v3

    .line 85
    if-nez v3, :cond_1

    .line 87
    const-string/jumbo v3, "onSetStreamVolume"

    .line 90
    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 93
    move-result v3

    .line 94
    if-eqz v3, :cond_2

    .line 96
    :cond_1
    move v3, v13

    .line 97
    goto :goto_1

    .line 98
    :cond_2
    xor-int/lit8 v3, v0, 0x1

    .line 100
    goto :goto_1

    .line 101
    :cond_3
    :goto_0
    move v3, v12

    .line 102
    :goto_1
    if-eqz v3, :cond_5

    .line 104
    if-ne v4, v12, :cond_4

    .line 106
    iget-object v5, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 108
    const/4 v7, 0x1

    .line 109
    const/4 v8, 0x1

    .line 110
    const/16 v6, 0xac8

    .line 112
    const/4 v9, 0x0

    .line 113
    const/4 v11, 0x0

    .line 114
    move-object/from16 v10, p2

    .line 116
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 119
    goto :goto_2

    .line 120
    :cond_4
    if-ne v4, v5, :cond_5

    .line 122
    iget-object v14, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 124
    const/16 v17, 0x0

    .line 126
    const/16 v18, 0x0

    .line 128
    const/16 v15, 0xac7

    .line 130
    const/16 v16, 0x1

    .line 132
    const/16 v19, 0x0

    .line 134
    const/16 v20, 0x0

    .line 136
    invoke-static/range {v14 .. v20}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 139
    :cond_5
    :goto_2
    const-string/jumbo v3, "persist.audio.ringermode"

    .line 142
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 145
    move-result-object v5

    .line 146
    invoke-static {v3, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 149
    const-string/jumbo v3, "persist.sys.silent"

    .line 152
    const-string v5, "1"

    .line 154
    if-eqz v4, :cond_8

    .line 156
    if-ne v4, v12, :cond_6

    .line 158
    goto :goto_4

    .line 159
    :cond_6
    invoke-static {v12}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 162
    move-result v6

    .line 163
    if-eqz v6, :cond_7

    .line 165
    goto :goto_3

    .line 166
    :cond_7
    const-string v5, "0"

    .line 168
    :goto_3
    invoke-static {v3, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 171
    goto :goto_5

    .line 172
    :cond_8
    :goto_4
    invoke-static {v3, v5}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 175
    :goto_5
    sget-object v3, Lcom/android/server/audio/AudioService;->sRingerModeLogger:Lcom/android/server/utils/EventLogger;

    .line 177
    new-instance v5, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;

    .line 179
    invoke-direct {v5}, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;-><init>()V

    .line 182
    iput v4, v5, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;->mRequesterPid:I

    .line 184
    iput-object v2, v5, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;->mPackage:Ljava/lang/String;

    .line 186
    iput-boolean v0, v5, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;->mIsEnableMute:Z

    .line 188
    invoke-virtual {v3, v5}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 191
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 193
    if-eqz v0, :cond_b

    .line 195
    iget-object v3, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mModule:Ljava/lang/String;

    .line 197
    const-string v5, "AudioService"

    .line 199
    invoke-static {v5, v3}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 202
    move-result v3

    .line 203
    if-eqz v3, :cond_9

    .line 205
    iget-object v0, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mSoundFunc:[Z

    .line 207
    aget-boolean v0, v0, v13

    .line 209
    goto :goto_6

    .line 210
    :cond_9
    move v0, v13

    .line 211
    :goto_6
    if-eqz v0, :cond_b

    .line 213
    const-string v0, "AS.AudioService.onSetStreamVolume("

    .line 215
    invoke-virtual {v2, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 218
    move-result v0

    .line 219
    if-eqz v0, :cond_a

    .line 221
    const/16 v0, 0x28

    .line 223
    :try_start_0
    invoke-virtual {v2, v0}, Ljava/lang/String;->indexOf(I)I

    .line 226
    move-result v0

    .line 227
    add-int/2addr v0, v12

    .line 228
    const/16 v3, 0x29

    .line 230
    invoke-virtual {v2, v3}, Ljava/lang/String;->indexOf(I)I

    .line 233
    move-result v3

    .line 234
    invoke-virtual {v2, v0, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    .line 237
    move-result-object v0
    :try_end_0
    .catch Ljava/lang/IndexOutOfBoundsException; {:try_start_0 .. :try_end_0} :catch_0

    .line 238
    move-object v3, v0

    .line 239
    goto :goto_7

    .line 240
    :catch_0
    move-exception v0

    .line 241
    invoke-virtual {v0}, Ljava/lang/IndexOutOfBoundsException;->printStackTrace()V

    .line 244
    :cond_a
    move-object v3, v2

    .line 245
    :goto_7
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 247
    iget-object v1, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 249
    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    .line 252
    move-result-object v6

    .line 253
    iget-object v1, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mSemGoodCatchManager:Lcom/samsung/android/sepunion/SemGoodCatchManager;

    .line 255
    sget-object v0, Lcom/samsung/android/server/audio/GoodCatchManager;->SOUND_FUNC:[Ljava/lang/String;

    .line 257
    aget-object v2, v0, v13

    .line 259
    const-string v5, ""

    .line 261
    move/from16 v4, p1

    .line 263
    invoke-virtual/range {v1 .. v6}, Lcom/samsung/android/sepunion/SemGoodCatchManager;->update(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 266
    :cond_b
    return-void
.end method

.method public final handleVolumeKey(Landroid/view/KeyEvent;ZLjava/lang/String;Ljava/lang/String;)V
    .locals 21

    .line 1
    if-eqz p2, :cond_1

    .line 3
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getAction()I

    .line 6
    move-result v0

    .line 7
    if-nez v0, :cond_0

    .line 9
    const/4 v0, 0x1

    .line 10
    :goto_0
    move v10, v0

    .line 11
    goto :goto_1

    .line 12
    :cond_0
    const/4 v0, 0x2

    .line 13
    goto :goto_0

    .line 14
    :cond_1
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getAction()I

    .line 17
    move-result v0

    .line 18
    if-eqz v0, :cond_2

    .line 20
    return-void

    .line 21
    :cond_2
    const/4 v0, 0x0

    .line 22
    goto :goto_0

    .line 23
    :goto_1
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getKeyCode()I

    .line 26
    move-result v0

    .line 27
    const/16 v1, 0x18

    .line 29
    const/16 v14, 0x1005

    .line 31
    if-eq v0, v1, :cond_5

    .line 33
    const/16 v1, 0x19

    .line 35
    if-eq v0, v1, :cond_4

    .line 37
    const/16 v1, 0xa4

    .line 39
    if-eq v0, v1, :cond_3

    .line 41
    new-instance v0, Ljava/lang/StringBuilder;

    .line 43
    const-string v1, "Invalid key code "

    .line 45
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 48
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getKeyCode()I

    .line 51
    move-result v1

    .line 52
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 55
    const-string v1, " sent by "

    .line 57
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 60
    move-object/from16 v5, p3

    .line 62
    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 65
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 68
    move-result-object v0

    .line 69
    const-string v1, "AS.AudioService"

    .line 71
    invoke-static {v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 74
    return-void

    .line 75
    :cond_3
    move-object/from16 v5, p3

    .line 77
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getAction()I

    .line 80
    move-result v0

    .line 81
    if-nez v0, :cond_6

    .line 83
    invoke-virtual/range {p1 .. p1}, Landroid/view/KeyEvent;->getRepeatCount()I

    .line 86
    move-result v0

    .line 87
    if-nez v0, :cond_6

    .line 89
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 92
    move-result v17

    .line 93
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 96
    move-result v18

    .line 97
    const/16 v19, 0x1

    .line 99
    const/16 v20, 0x0

    .line 101
    const/16 v12, 0x65

    .line 103
    const/high16 v13, -0x80000000

    .line 105
    move-object/from16 v11, p0

    .line 107
    move-object/from16 v15, p3

    .line 109
    move-object/from16 v16, p4

    .line 111
    invoke-virtual/range {v11 .. v20}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IIZI)V

    .line 114
    goto :goto_2

    .line 115
    :cond_4
    move-object/from16 v5, p3

    .line 117
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 120
    move-result v7

    .line 121
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 124
    move-result v8

    .line 125
    const/4 v9, 0x1

    .line 126
    const/4 v2, -0x1

    .line 127
    const/high16 v3, -0x80000000

    .line 129
    move-object/from16 v1, p0

    .line 131
    move v4, v14

    .line 132
    move-object/from16 v6, p4

    .line 134
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IIZI)V

    .line 137
    goto :goto_2

    .line 138
    :cond_5
    move-object/from16 v5, p3

    .line 140
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 143
    move-result v7

    .line 144
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 147
    move-result v8

    .line 148
    const/4 v9, 0x1

    .line 149
    const/4 v2, 0x1

    .line 150
    const/high16 v3, -0x80000000

    .line 152
    move-object/from16 v1, p0

    .line 154
    move v4, v14

    .line 155
    move-object/from16 v6, p4

    .line 157
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/audio/AudioService;->adjustSuggestedStreamVolume(IIILjava/lang/String;Ljava/lang/String;IIZI)V

    .line 160
    :cond_6
    :goto_2
    return-void
.end method

.method public hasAudioFocusUsers()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 11
    invoke-virtual {p0}, Ljava/util/Stack;->empty()Z

    .line 14
    move-result p0

    .line 15
    xor-int/lit8 p0, p0, 0x1

    .line 17
    monitor-exit v0

    .line 18
    return p0

    .line 19
    :catchall_0
    move-exception p0

    .line 20
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 21
    throw p0
.end method

.method public final hasHapticChannels(Landroid/net/Uri;)Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    invoke-static {p0, p1}, Landroid/media/AudioManager;->hasHapticChannelsImpl(Landroid/content/Context;Landroid/net/Uri;)Z

    .line 6
    move-result p0

    .line 7
    return p0
.end method

.method public final hasHeadTracker(Landroid/media/AudioDeviceAttributes;)Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->hasHeadTracker_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    move-object v0, p1

    .line 10
    check-cast v0, Landroid/media/AudioDeviceAttributes;

    .line 12
    const-string/jumbo v0, "no headtracking support, hasHeadTracker always false for "

    .line 15
    monitor-enter p0

    .line 16
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/audio/SpatializerHelper;->mIsHeadTrackingSupported:Z

    .line 18
    const/4 v2, 0x0

    .line 19
    if-nez v1, :cond_0

    .line 21
    const-string v1, "AS.SpatializerHelper"

    .line 23
    new-instance v3, Ljava/lang/StringBuilder;

    .line 25
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 34
    move-result-object p1

    .line 35
    invoke-static {v1, p1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 38
    monitor-exit p0

    .line 39
    goto :goto_0

    .line 40
    :catchall_0
    move-exception p1

    .line 41
    goto :goto_1

    .line 42
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->findSACompatibleDeviceStateForAudioDeviceAttributes(Landroid/media/AudioDeviceAttributes;)Lcom/android/server/audio/AdiDeviceState;

    .line 45
    move-result-object p1

    .line 46
    if-eqz p1, :cond_1

    .line 48
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->hasHeadTracker()Z

    .line 51
    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 52
    if-eqz p1, :cond_1

    .line 54
    const/4 v2, 0x1

    .line 55
    :cond_1
    monitor-exit p0

    .line 56
    :goto_0
    return v2

    .line 57
    :goto_1
    monitor-exit p0

    .line 58
    throw p1
.end method

.method public hasMediaDynamicPolicy()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 6
    invoke-virtual {v1}, Ljava/util/HashMap;->isEmpty()Z

    .line 9
    move-result v1

    .line 10
    const/4 v2, 0x0

    .line 11
    if-eqz v1, :cond_0

    .line 13
    monitor-exit v0

    .line 14
    return v2

    .line 15
    :catchall_0
    move-exception p0

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 19
    invoke-virtual {p0}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 22
    move-result-object p0

    .line 23
    invoke-interface {p0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 26
    move-result-object p0

    .line 27
    :cond_1
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 30
    move-result v1

    .line 31
    if-eqz v1, :cond_2

    .line 33
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 36
    move-result-object v1

    .line 37
    check-cast v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 39
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixAffectingUsage()Z

    .line 42
    move-result v1

    .line 43
    if-eqz v1, :cond_1

    .line 45
    monitor-exit v0

    .line 46
    const/4 p0, 0x1

    .line 47
    return p0

    .line 48
    :cond_2
    monitor-exit v0

    .line 49
    return v2

    .line 50
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 51
    throw p0
.end method

.method public final hasRegisteredDynamicPolicy()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 6
    invoke-virtual {p0}, Ljava/util/HashMap;->isEmpty()Z

    .line 9
    move-result p0

    .line 10
    xor-int/lit8 p0, p0, 0x1

    .line 12
    monitor-exit v0

    .line 13
    return p0

    .line 14
    :catchall_0
    move-exception p0

    .line 15
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16
    throw p0
.end method

.method public final isA2dpAbsoluteVolumeDevice(I)Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 3
    if-eqz p0, :cond_0

    .line 5
    sget-object p0, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 7
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 10
    move-result-object p1

    .line 11
    invoke-interface {p0, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 14
    move-result p0

    .line 15
    if-eqz p0, :cond_0

    .line 17
    const/4 p0, 0x1

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    const/4 p0, 0x0

    .line 20
    :goto_0
    return p0
.end method

.method public final isAbsoluteVolumeDevice(I)Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 3
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 6
    move-result-object p1

    .line 7
    invoke-interface {p0, p1}, Ljava/util/Map;->containsKey(Ljava/lang/Object;)Z

    .line 10
    move-result p0

    .line 11
    return p0
.end method

.method public final isAlreadyInDB(Ljava/lang/String;)Z
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 3
    const/4 v0, 0x0

    .line 4
    :goto_0
    iget-object v1, p0, Lcom/samsung/android/server/audio/PackageListHelper;->mRestrictedPackageList:Ljava/util/List;

    .line 6
    invoke-interface {v1}, Ljava/util/List;->size()I

    .line 9
    move-result v1

    .line 10
    if-ge v0, v1, :cond_1

    .line 12
    iget-object v1, p0, Lcom/samsung/android/server/audio/PackageListHelper;->mRestrictedPackageList:Ljava/util/List;

    .line 14
    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 17
    move-result-object v1

    .line 18
    check-cast v1, Ljava/lang/CharSequence;

    .line 20
    invoke-static {p1, v1}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 23
    move-result v1

    .line 24
    if-eqz v1, :cond_0

    .line 26
    const/4 p0, 0x1

    .line 27
    goto :goto_1

    .line 28
    :cond_0
    add-int/lit8 v0, v0, 0x1

    .line 30
    goto :goto_0

    .line 31
    :cond_1
    sget-object p0, Lcom/samsung/android/server/audio/PackageListHelper;->sCategorizer:Lcom/samsung/android/server/audio/AppCategorizer;

    .line 33
    iget-object p0, p0, Lcom/samsung/android/server/audio/AppCategorizer;->appList:Ljava/util/Hashtable;

    .line 35
    invoke-virtual {p0, p1}, Ljava/util/Hashtable;->containsValue(Ljava/lang/Object;)Z

    .line 38
    move-result p0

    .line 39
    :goto_1
    return p0
.end method

.method public final isAndroidNPlus(Ljava/lang/String;)Z
    .locals 3

    .line 1
    const/4 v0, 0x1

    .line 2
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 4
    invoke-virtual {p0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 7
    move-result-object p0

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 11
    move-result v1

    .line 12
    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    .line 15
    move-result v1

    .line 16
    const/4 v2, 0x0

    .line 17
    invoke-virtual {p0, p1, v2, v1}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    .line 20
    move-result-object p0

    .line 21
    iget p0, p0, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 23
    const/16 p1, 0x18

    .line 25
    if-lt p0, p1, :cond_0

    .line 27
    return v0

    .line 28
    :cond_0
    return v2

    .line 29
    :catch_0
    return v0
.end method

.method public final isAppMute(I)Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    iget-object v0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mMultiSoundLock:Ljava/lang/Object;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    iget-object p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {p0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 15
    move-result-object p0

    .line 16
    check-cast p0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 18
    invoke-static {p0}, Ljava/util/Optional;->ofNullable(Ljava/lang/Object;)Ljava/util/Optional;

    .line 21
    move-result-object p0

    .line 22
    new-instance v1, Lcom/samsung/android/server/audio/MultiSoundManager$$ExternalSyntheticLambda0;

    .line 24
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 27
    invoke-virtual {p0, v1}, Ljava/util/Optional;->map(Ljava/util/function/Function;)Ljava/util/Optional;

    .line 30
    move-result-object p0

    .line 31
    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 33
    invoke-virtual {p0, v1}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    .line 36
    move-result-object p0

    .line 37
    check-cast p0, Ljava/lang/Boolean;

    .line 39
    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z

    .line 42
    move-result p0

    .line 43
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 44
    const-string v0, "AS.AudioService"

    .line 46
    new-instance v1, Ljava/lang/StringBuilder;

    .line 48
    const-string/jumbo v2, "isAppMute, uid:"

    .line 51
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 54
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 57
    const-string p1, ", mute="

    .line 59
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 62
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 65
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 68
    move-result-object p1

    .line 69
    invoke-static {v0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 72
    return p0

    .line 73
    :catchall_0
    move-exception p0

    .line 74
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 75
    throw p0
.end method

.method public final isAudioServerRunning()Z
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 4
    invoke-static {}, Landroid/media/AudioSystem;->checkAudioFlinger()I

    .line 7
    move-result p0

    .line 8
    if-nez p0, :cond_0

    .line 10
    const/4 p0, 0x1

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 p0, 0x0

    .line 13
    :goto_0
    return p0
.end method

.method public final isBluetoothA2dpOn()Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mBluetoothA2dpEnabled:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 5
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 8
    move-result p0

    .line 9
    return p0
.end method

.method public final isBluetoothAudioDeviceCategoryFixed(Ljava/lang/String;)Z
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isBluetoothAudioDeviceCategoryFixed_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 7
    move-result v0

    .line 8
    const/4 v1, 0x0

    .line 9
    if-nez v0, :cond_0

    .line 11
    return v1

    .line 12
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 14
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 16
    const/high16 v0, 0x20000000

    .line 18
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 21
    move-result-object v0

    .line 22
    if-eqz v0, :cond_2

    .line 24
    monitor-enter v0

    .line 25
    :try_start_0
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 28
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29
    if-nez p0, :cond_1

    .line 31
    monitor-exit v0

    .line 32
    goto :goto_0

    .line 33
    :cond_1
    :try_start_1
    invoke-virtual {v0}, Lcom/android/server/audio/AdiDeviceState;->updateAudioDeviceCategory()Z

    .line 36
    iget-boolean v1, v0, Lcom/android/server/audio/AdiDeviceState;->mAutoBtCategorySet:Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 38
    monitor-exit v0

    .line 39
    goto :goto_0

    .line 40
    :catchall_0
    move-exception p0

    .line 41
    monitor-exit v0

    .line 42
    throw p0

    .line 43
    :cond_2
    const/16 v0, 0x80

    .line 45
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 48
    move-result-object p0

    .line 49
    if-eqz p0, :cond_4

    .line 51
    monitor-enter p0

    .line 52
    :try_start_2
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 55
    move-result p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 56
    if-nez p1, :cond_3

    .line 58
    monitor-exit p0

    .line 59
    goto :goto_0

    .line 60
    :cond_3
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/audio/AdiDeviceState;->updateAudioDeviceCategory()Z

    .line 63
    iget-boolean v1, p0, Lcom/android/server/audio/AdiDeviceState;->mAutoBtCategorySet:Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 65
    monitor-exit p0

    .line 66
    goto :goto_0

    .line 67
    :catchall_1
    move-exception p1

    .line 68
    monitor-exit p0

    .line 69
    throw p1

    .line 70
    :cond_4
    :goto_0
    return v1
.end method

.method public final isBluetoothPrividged()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v0, "android.permission.BLUETOOTH_CONNECT"

    .line 5
    invoke-virtual {p0, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result p0

    .line 9
    if-eqz p0, :cond_1

    .line 11
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result p0

    .line 15
    const/16 v0, 0x3e8

    .line 17
    if-ne p0, v0, :cond_0

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    const/4 p0, 0x0

    .line 21
    goto :goto_1

    .line 22
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 23
    :goto_1
    return p0
.end method

.method public final isBluetoothScoOn()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mBtScoOnByApp:Z

    .line 3
    if-nez v0, :cond_1

    .line 5
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 7
    const/4 v0, 0x7

    .line 8
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceOnForCommunication(I)Z

    .line 11
    move-result p0

    .line 12
    if-eqz p0, :cond_0

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    const/4 p0, 0x0

    .line 16
    goto :goto_1

    .line 17
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 18
    :goto_1
    return p0
.end method

.method public final isBluetoothVariableLatencyEnabled()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isBluetoothVariableLatencyEnabled_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 7
    move-result-object p0

    .line 8
    :try_start_0
    invoke-static {}, Landroid/media/AudioSystem;->isBluetoothVariableLatencyEnabled()Z

    .line 11
    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12
    if-eqz p0, :cond_0

    .line 14
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V

    .line 17
    :cond_0
    return v0

    .line 18
    :catchall_0
    move-exception v0

    .line 19
    if-eqz p0, :cond_1

    .line 21
    :try_start_1
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 24
    goto :goto_0

    .line 25
    :catchall_1
    move-exception p0

    .line 26
    invoke-virtual {v0, p0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 29
    :cond_1
    :goto_0
    throw v0
.end method

.method public final isCallScreeningModeSupported()Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 3
    return p0
.end method

.method public final isCameraSoundForced()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 6
    monitor-exit v0

    .line 7
    return p0

    .line 8
    :catchall_0
    move-exception p0

    .line 9
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10
    throw p0
.end method

.method public final isCsdAsAFeatureAvailable()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isCsdAsAFeatureAvailable_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mCsdAsAFeatureLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-boolean p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureAvailable:Z

    .line 11
    monitor-exit v0

    .line 12
    return p0

    .line 13
    :catchall_0
    move-exception p0

    .line 14
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    throw p0
.end method

.method public final isCsdAsAFeatureEnabled()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isCsdAsAFeatureEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mCsdAsAFeatureLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-boolean p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureEnabled:Z

    .line 11
    monitor-exit v0

    .line 12
    return p0

    .line 13
    :catchall_0
    move-exception p0

    .line 14
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    throw p0
.end method

.method public final isCsdEnabled()Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isCsdEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    const/4 v1, 0x0

    .line 13
    if-nez v0, :cond_0

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 18
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 21
    move-result-object p0

    .line 22
    check-cast p0, Landroid/media/ISoundDose;

    .line 24
    const-string v0, "AS.SoundDoseHelper"

    .line 26
    if-nez p0, :cond_1

    .line 28
    const-string p0, "Sound dose interface not initialized"

    .line 30
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    :try_start_0
    invoke-interface {p0}, Landroid/media/ISoundDose;->isSoundDoseHalSupported()Z

    .line 37
    move-result v1
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 38
    goto :goto_0

    .line 39
    :catch_0
    move-exception p0

    .line 40
    const-string v2, "Exception while querying the csd enabled status"

    .line 42
    invoke-static {v0, v2, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 45
    :goto_0
    return v1
.end method

.method public final isFixedVolumeDevice(I)Z
    .locals 1

    .line 1
    const v0, 0x8000

    .line 4
    if-ne p1, v0, :cond_0

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 8
    iget-object v0, v0, Lcom/android/server/audio/RecordingActivityMonitor;->mLegacyRemoteSubmixActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 10
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_0

    .line 16
    const/4 p0, 0x0

    .line 17
    return p0

    .line 18
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 20
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 23
    move-result-object p1

    .line 24
    invoke-interface {p0, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 27
    move-result p0

    .line 28
    return p0
.end method

.method public final isForceSpeakerOn()Z
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 3
    const/4 v0, 0x1

    .line 4
    if-ne p0, v0, :cond_0

    .line 6
    goto :goto_0

    .line 7
    :cond_0
    const/4 v0, 0x0

    .line 8
    :goto_0
    return v0
.end method

.method public final isFullVolumeDevice(I)Z
    .locals 1

    .line 1
    const v0, 0x8000

    .line 4
    if-ne p1, v0, :cond_0

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 8
    iget-object v0, v0, Lcom/android/server/audio/RecordingActivityMonitor;->mLegacyRemoteSubmixActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 10
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_0

    .line 16
    const/4 p0, 0x0

    .line 17
    return p0

    .line 18
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 20
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 23
    move-result-object p1

    .line 24
    invoke-interface {p0, p1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 27
    move-result p0

    .line 28
    return p0
.end method

.method public final isHdmiSystemAudioSupported()Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 3
    return p0
.end method

.method public final isHeadTrackerAvailable()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 3
    monitor-enter p0

    .line 4
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/audio/SpatializerHelper;->mGlobalHeadTrackerAvailable:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    monitor-exit p0

    .line 7
    return v0

    .line 8
    :catchall_0
    move-exception v0

    .line 9
    monitor-exit p0

    .line 10
    throw v0
.end method

.method public final isHeadTrackerEnabled(Landroid/media/AudioDeviceAttributes;)Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isHeadTrackerEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    move-object v0, p1

    .line 10
    check-cast v0, Landroid/media/AudioDeviceAttributes;

    .line 12
    const-string/jumbo v0, "no headtracking support, isHeadTrackerEnabled always false for "

    .line 15
    monitor-enter p0

    .line 16
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/audio/SpatializerHelper;->mIsHeadTrackingSupported:Z

    .line 18
    const/4 v2, 0x0

    .line 19
    if-nez v1, :cond_0

    .line 21
    const-string v1, "AS.SpatializerHelper"

    .line 23
    new-instance v3, Ljava/lang/StringBuilder;

    .line 25
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 31
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 34
    move-result-object p1

    .line 35
    invoke-static {v1, p1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 38
    monitor-exit p0

    .line 39
    goto :goto_0

    .line 40
    :catchall_0
    move-exception p1

    .line 41
    goto :goto_1

    .line 42
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->findSACompatibleDeviceStateForAudioDeviceAttributes(Landroid/media/AudioDeviceAttributes;)Lcom/android/server/audio/AdiDeviceState;

    .line 45
    move-result-object p1

    .line 46
    if-eqz p1, :cond_1

    .line 48
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->hasHeadTracker()Z

    .line 51
    move-result v0

    .line 52
    if-eqz v0, :cond_1

    .line 54
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->isHeadTrackerEnabled()Z

    .line 57
    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 58
    if-eqz p1, :cond_1

    .line 60
    const/4 v2, 0x1

    .line 61
    :cond_1
    monitor-exit p0

    .line 62
    :goto_0
    return v2

    .line 63
    :goto_1
    monitor-exit p0

    .line 64
    throw p1
.end method

.method public final isHomeSoundEffectEnabled()Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mHomeSoundEffectEnabled:Z

    .line 3
    return p0
.end method

.method public final isHotwordStreamSupported(Z)Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isHotwordStreamSupported_enforcePermission()V

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicy:Lcom/android/server/audio/DefaultAudioPolicyFacade;

    .line 6
    invoke-virtual {p0, p1}, Lcom/android/server/audio/DefaultAudioPolicyFacade;->isHotwordStreamSupported(Z)Z

    .line 9
    move-result p0
    :try_end_0
    .catch Ljava/lang/IllegalStateException; {:try_start_0 .. :try_end_0} :catch_0

    .line 10
    return p0

    .line 11
    :catch_0
    move-exception p0

    .line 12
    const-string p1, "AS.AudioService"

    .line 14
    const-string v0, "Suppressing exception calling into AudioPolicy"

    .line 16
    invoke-static {p1, v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 19
    const/4 p0, 0x0

    .line 20
    return p0
.end method

.method public final isInAllowedList(Ljava/lang/String;)Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 3
    const/4 v0, 0x0

    .line 4
    move v1, v0

    .line 5
    :goto_0
    iget-object v2, p0, Lcom/samsung/android/server/audio/PackageListHelper;->mAllowedPackageList:Ljava/util/List;

    .line 7
    invoke-interface {v2}, Ljava/util/List;->size()I

    .line 10
    move-result v2

    .line 11
    if-ge v1, v2, :cond_1

    .line 13
    iget-object v2, p0, Lcom/samsung/android/server/audio/PackageListHelper;->mAllowedPackageList:Ljava/util/List;

    .line 15
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 18
    move-result-object v2

    .line 19
    check-cast v2, Ljava/lang/CharSequence;

    .line 21
    invoke-static {p1, v2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 24
    move-result v2

    .line 25
    if-eqz v2, :cond_0

    .line 27
    const/4 v0, 0x1

    .line 28
    goto :goto_1

    .line 29
    :cond_0
    add-int/lit8 v1, v1, 0x1

    .line 31
    goto :goto_0

    .line 32
    :cond_1
    :goto_1
    return v0
.end method

.method public isInCommunication()Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 3
    iget-boolean v0, v0, Lcom/android/server/audio/AudioServiceExt;->mIsPttCallVolumeEnabled:Z

    .line 5
    const/4 v1, 0x1

    .line 6
    if-eqz v0, :cond_0

    .line 8
    return v1

    .line 9
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 11
    const-string/jumbo v2, "telecom"

    .line 14
    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 17
    move-result-object v0

    .line 18
    check-cast v0, Landroid/telecom/TelecomManager;

    .line 20
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 23
    move-result-wide v2

    .line 24
    :try_start_0
    invoke-virtual {v0}, Landroid/telecom/TelecomManager;->isInCall()Z

    .line 27
    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 31
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 33
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 36
    move-result p0

    .line 37
    if-nez v0, :cond_2

    .line 39
    const/4 v0, 0x3

    .line 40
    if-eq p0, v0, :cond_2

    .line 42
    const/4 v0, 0x2

    .line 43
    if-ne p0, v0, :cond_1

    .line 45
    goto :goto_0

    .line 46
    :cond_1
    const/4 v1, 0x0

    .line 47
    :cond_2
    :goto_0
    return v1

    .line 48
    :catchall_0
    move-exception p0

    .line 49
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 52
    throw p0
.end method

.method public final isLeBroadcastWithoutLeDevice()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsLeBroadCasting:Z

    .line 3
    if-eqz v0, :cond_0

    .line 5
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/BtHelper;->mLeAudio:Landroid/bluetooth/BluetoothLeAudio;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12
    monitor-exit p0

    .line 13
    if-eqz v0, :cond_0

    .line 15
    invoke-virtual {v0}, Landroid/bluetooth/BluetoothLeAudio;->getConnectedDevices()Ljava/util/List;

    .line 18
    move-result-object p0

    .line 19
    invoke-interface {p0}, Ljava/util/List;->size()I

    .line 22
    move-result p0

    .line 23
    if-nez p0, :cond_0

    .line 25
    const/4 p0, 0x1

    .line 26
    return p0

    .line 27
    :catchall_0
    move-exception v0

    .line 28
    monitor-exit p0

    .line 29
    throw v0

    .line 30
    :cond_0
    const/4 p0, 0x0

    .line 31
    return p0
.end method

.method public final isMasterMute()Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMasterMute:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 3
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 6
    move-result p0

    .line 7
    return p0
.end method

.method public final isMicrophoneMuted()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 3
    if-eqz v0, :cond_1

    .line 5
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromPrivacyToggle:Z

    .line 7
    if-eqz v0, :cond_0

    .line 9
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    .line 11
    if-nez v0, :cond_0

    .line 13
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    .line 15
    if-nez v0, :cond_0

    .line 17
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    .line 19
    if-eqz p0, :cond_1

    .line 21
    :cond_0
    const/4 p0, 0x1

    .line 22
    goto :goto_0

    .line 23
    :cond_1
    const/4 p0, 0x0

    .line 24
    :goto_0
    return p0
.end method

.method public final isMultiSoundOn()Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    if-nez p0, :cond_0

    .line 5
    const/4 p0, 0x0

    .line 6
    return p0

    .line 7
    :cond_0
    iget-boolean p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    .line 9
    return p0
.end method

.method public final isMultiSoundOnInternal()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_2

    .line 6
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 15
    iget-boolean v2, v0, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    .line 17
    if-nez v2, :cond_1

    .line 19
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->isRemoteSubmixAppExist()Z

    .line 22
    move-result v0

    .line 23
    if-eqz v0, :cond_2

    .line 25
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 27
    invoke-virtual {p0}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->isAudioMirroring()Z

    .line 30
    move-result p0

    .line 31
    if-nez p0, :cond_2

    .line 33
    :cond_1
    const/4 v1, 0x1

    .line 34
    :cond_2
    :goto_0
    return v1
.end method

.method public final isMusicActive(Z)Z
    .locals 3

    .line 1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 4
    move-result-wide v0

    .line 5
    const/4 p0, 0x0

    .line 6
    const/4 v2, 0x3

    .line 7
    if-eqz p1, :cond_0

    .line 9
    :try_start_0
    invoke-static {v2, p0}, Landroid/media/AudioSystem;->isStreamActiveRemotely(II)Z

    .line 12
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16
    return p0

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    :try_start_1
    invoke-static {v2, p0}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 22
    move-result p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 23
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 26
    return p0

    .line 27
    :goto_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 30
    throw p0
.end method

.method public final isPlaybackActiveForUid(I)Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    iget-object v0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 8
    invoke-virtual {p0}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 11
    move-result-object p0

    .line 12
    invoke-interface {p0}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 15
    move-result-object p0

    .line 16
    :cond_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 19
    move-result v1

    .line 20
    if-eqz v1, :cond_1

    .line 22
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 25
    move-result-object v1

    .line 26
    check-cast v1, Landroid/media/AudioPlaybackConfiguration;

    .line 28
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->isActive()Z

    .line 31
    move-result v2

    .line 32
    if-eqz v2, :cond_0

    .line 34
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    .line 37
    move-result v1

    .line 38
    if-ne v1, p1, :cond_0

    .line 40
    monitor-exit v0

    .line 41
    const/4 p0, 0x1

    .line 42
    goto :goto_0

    .line 43
    :catchall_0
    move-exception p0

    .line 44
    goto :goto_1

    .line 45
    :cond_1
    monitor-exit v0

    .line 46
    const/4 p0, 0x0

    .line 47
    :goto_0
    return p0

    .line 48
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 49
    throw p0
.end method

.method public final isPstnCallAudioInterceptable()Z
    .locals 9

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isPstnCallAudioInterceptable_enforcePermission()V

    .line 4
    const/4 p0, 0x3

    .line 5
    invoke-static {p0}, Landroid/media/AudioManager;->getDevicesStatic(I)[Landroid/media/AudioDeviceInfo;

    .line 8
    move-result-object p0

    .line 9
    array-length v0, p0

    .line 10
    const/4 v1, 0x0

    .line 11
    move v2, v1

    .line 12
    move v3, v2

    .line 13
    move v4, v3

    .line 14
    :goto_0
    if-ge v2, v0, :cond_3

    .line 16
    aget-object v5, p0, v2

    .line 18
    invoke-virtual {v5}, Landroid/media/AudioDeviceInfo;->getInternalType()I

    .line 21
    move-result v6

    .line 22
    const/high16 v7, 0x10000

    .line 24
    const/4 v8, 0x1

    .line 25
    if-ne v6, v7, :cond_0

    .line 27
    move v3, v8

    .line 28
    goto :goto_1

    .line 29
    :cond_0
    invoke-virtual {v5}, Landroid/media/AudioDeviceInfo;->getInternalType()I

    .line 32
    move-result v5

    .line 33
    const v6, -0x7fffffc0

    .line 36
    if-ne v5, v6, :cond_1

    .line 38
    move v4, v8

    .line 39
    :cond_1
    :goto_1
    if-eqz v3, :cond_2

    .line 41
    if-eqz v4, :cond_2

    .line 43
    return v8

    .line 44
    :cond_2
    add-int/lit8 v2, v2, 0x1

    .line 46
    goto :goto_0

    .line 47
    :cond_3
    return v1
.end method

.method public final isSafeMediaVolumeStateActive()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    .line 8
    if-eqz v0, :cond_0

    .line 10
    iget p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateForBlueTooth:I

    .line 12
    const/4 v0, 0x3

    .line 13
    if-ne p0, v0, :cond_0

    .line 15
    const/4 p0, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    const/4 p0, 0x0

    .line 18
    :goto_0
    return p0
.end method

.method public final isSpatializerAvailable()Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 3
    monitor-enter p0

    .line 4
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    if-eqz v0, :cond_0

    .line 8
    const/4 v1, 0x1

    .line 9
    if-eq v0, v1, :cond_0

    .line 11
    const/4 v2, 0x3

    .line 12
    if-eq v0, v2, :cond_0

    .line 14
    const/4 v2, 0x4

    .line 15
    if-eq v0, v2, :cond_0

    .line 17
    monitor-exit p0

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    monitor-exit p0

    .line 20
    const/4 v1, 0x0

    .line 21
    :goto_0
    return v1

    .line 22
    :catchall_0
    move-exception v0

    .line 23
    monitor-exit p0

    .line 24
    throw v0
.end method

.method public final isSpatializerAvailableForDevice(Landroid/media/AudioDeviceAttributes;)Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isSpatializerAvailableForDevice_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getRole()I

    .line 13
    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14
    const/4 v1, 0x2

    .line 15
    const/4 v2, 0x0

    .line 16
    if-eq v0, v1, :cond_0

    .line 18
    monitor-exit p0

    .line 19
    goto :goto_1

    .line 20
    :cond_0
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->findSACompatibleDeviceStateForAudioDeviceAttributes(Landroid/media/AudioDeviceAttributes;)Lcom/android/server/audio/AdiDeviceState;

    .line 23
    move-result-object p1

    .line 24
    if-nez p1, :cond_1

    .line 26
    goto :goto_0

    .line 27
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getInternalDeviceType()I

    .line 30
    move-result v0

    .line 31
    invoke-static {v0}, Landroid/media/AudioSystem;->isBluetoothDevice(I)Z

    .line 34
    move-result v0

    .line 35
    if-eqz v0, :cond_2

    .line 37
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 40
    move-result v0

    .line 41
    if-eqz v0, :cond_2

    .line 43
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 46
    move-result p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 47
    const/4 v0, 0x3

    .line 48
    if-eq p1, v0, :cond_2

    .line 50
    goto :goto_0

    .line 51
    :cond_2
    const/4 v2, 0x1

    .line 52
    :goto_0
    monitor-exit p0

    .line 53
    :goto_1
    return v2

    .line 54
    :catchall_0
    move-exception p1

    .line 55
    monitor-exit p0

    .line 56
    throw p1
.end method

.method public final isSpatializerEnabled()Z
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 3
    monitor-enter p0

    .line 4
    :try_start_0
    iget v0, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    if-eqz v0, :cond_0

    .line 8
    const/4 v1, 0x1

    .line 9
    if-eq v0, v1, :cond_0

    .line 11
    const/4 v2, 0x3

    .line 12
    if-eq v0, v2, :cond_0

    .line 14
    const/4 v2, 0x6

    .line 15
    if-eq v0, v2, :cond_0

    .line 17
    monitor-exit p0

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    monitor-exit p0

    .line 20
    const/4 v1, 0x0

    .line 21
    :goto_0
    return v1

    .line 22
    :catchall_0
    move-exception v0

    .line 23
    monitor-exit p0

    .line 24
    throw v0
.end method

.method public final isSpeakerphoneOn()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    const/4 v0, 0x2

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceOnForCommunication(I)Z

    .line 7
    move-result p0

    .line 8
    return p0
.end method

.method public final isStreamAffectedByMute(I)Z
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 3
    const/4 v0, 0x1

    .line 4
    shl-int p1, v0, p1

    .line 6
    and-int/2addr p0, p1

    .line 7
    if-eqz p0, :cond_0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 v0, 0x0

    .line 11
    :goto_0
    return v0
.end method

.method public final isStreamAffectedByRingerMode(I)Z
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 3
    const/4 v0, 0x1

    .line 4
    shl-int p1, v0, p1

    .line 6
    and-int/2addr p0, p1

    .line 7
    if-eqz p0, :cond_0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 v0, 0x0

    .line 11
    :goto_0
    return v0
.end method

.method public final isStreamMutableByUi(I)Z
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/audio/AudioService;->mUserMutableStreams:I

    .line 3
    const/4 v0, 0x1

    .line 4
    shl-int p1, v0, p1

    .line 6
    and-int/2addr p0, p1

    .line 7
    if-eqz p0, :cond_0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 v0, 0x0

    .line 11
    :goto_0
    return v0
.end method

.method public final isStreamMute(I)Z
    .locals 1

    .line 1
    const/high16 v0, -0x80000000

    .line 3
    if-ne p1, v0, :cond_0

    .line 5
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    .line 8
    move-result p1

    .line 9
    :cond_0
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 11
    monitor-enter v0

    .line 12
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 15
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 17
    aget-object p0, p0, p1

    .line 19
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 21
    monitor-exit v0

    .line 22
    return p0

    .line 23
    :catchall_0
    move-exception p0

    .line 24
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25
    throw p0
.end method

.method public final isSupportedSystemUsage(I)Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    const/4 v1, 0x0

    .line 5
    move v2, v1

    .line 6
    :goto_0
    :try_start_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 8
    array-length v4, v3

    .line 9
    if-ge v2, v4, :cond_1

    .line 11
    aget v3, v3, v2

    .line 13
    if-ne v3, p1, :cond_0

    .line 15
    monitor-exit v0

    .line 16
    const/4 p0, 0x1

    .line 17
    return p0

    .line 18
    :catchall_0
    move-exception p0

    .line 19
    goto :goto_1

    .line 20
    :cond_0
    add-int/lit8 v2, v2, 0x1

    .line 22
    goto :goto_0

    .line 23
    :cond_1
    monitor-exit v0

    .line 24
    return v1

    .line 25
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 26
    throw p0
.end method

.method public final isSurroundFormatEnabled(I)Z
    .locals 3

    .line 1
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->isSurroundFormat(I)Z

    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_0

    .line 7
    const-string p0, "AS.AudioService"

    .line 9
    const-string p1, "audioFormat to enable is not a surround format."

    .line 11
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14
    const/4 p0, 0x0

    .line 15
    return p0

    .line 16
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 19
    move-result-wide v0

    .line 20
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 22
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 23
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getEnabledFormats()Ljava/util/HashSet;

    .line 26
    move-result-object p0

    .line 27
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 30
    move-result-object p1

    .line 31
    invoke-virtual {p0, p1}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 34
    move-result p0

    .line 35
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 36
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 39
    return p0

    .line 40
    :catchall_0
    move-exception p0

    .line 41
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 42
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 43
    :catchall_1
    move-exception p0

    .line 44
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 47
    throw p0
.end method

.method public final isUltrasoundSupported()Z
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isUltrasoundSupported_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/AudioSystem;->isUltrasoundSupported()Z

    .line 7
    move-result p0

    .line 8
    return p0
.end method

.method public final isUsingAudio(I)Z
    .locals 5

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    const/4 v1, 0x0

    .line 4
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isAudioServerRunning()Z

    .line 7
    move-result p0

    .line 8
    if-nez p0, :cond_0

    .line 10
    sget-object p0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 12
    new-instance p1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 14
    const-string/jumbo v2, "isUsingAudio audioserver is died"

    .line 17
    invoke-direct {p1, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 20
    invoke-virtual {p1, v1, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 23
    invoke-virtual {p0, p1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V
    :try_end_0
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_0} :catch_0

    .line 26
    return v1

    .line 27
    :catch_0
    move-exception p0

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    new-instance p0, Lcom/samsung/android/media/AudioParameter$Builder;

    .line 31
    invoke-direct {p0}, Lcom/samsung/android/media/AudioParameter$Builder;-><init>()V

    .line 34
    const-string/jumbo v2, "l_is_using_audio"

    .line 37
    invoke-virtual {p0, v2, p1}, Lcom/samsung/android/media/AudioParameter$Builder;->setParam(Ljava/lang/String;I)Lcom/samsung/android/media/AudioParameter$Builder;

    .line 40
    move-result-object p0

    .line 41
    invoke-virtual {p0}, Lcom/samsung/android/media/AudioParameter$Builder;->build()Lcom/samsung/android/media/AudioParameter;

    .line 44
    move-result-object p0

    .line 45
    invoke-virtual {p0}, Lcom/samsung/android/media/AudioParameter;->toString()Ljava/lang/String;

    .line 48
    move-result-object p0

    .line 49
    invoke-static {p0}, Landroid/media/AudioSystem;->getParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 52
    move-result-object p0

    .line 53
    const-string/jumbo v2, "true"

    .line 56
    invoke-virtual {v2, p0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 59
    move-result p0

    .line 60
    if-eqz p0, :cond_1

    .line 62
    sget-object p0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 64
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 66
    const-string/jumbo v3, "uid: "

    .line 69
    const-string v4, " is using audio"

    .line 71
    invoke-static {p1, v3, v4}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 74
    move-result-object p1

    .line 75
    invoke-direct {v2, p1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 78
    invoke-virtual {v2, v1, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 81
    invoke-virtual {p0, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 84
    const/4 p0, 0x1

    .line 85
    return p0

    .line 86
    :cond_1
    return v1

    .line 87
    :goto_0
    sget-object p1, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 89
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 91
    new-instance v3, Ljava/lang/StringBuilder;

    .line 93
    const-string/jumbo v4, "isUsingAudio permission error"

    .line 96
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 99
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 102
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 105
    move-result-object p0

    .line 106
    invoke-direct {v2, p0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 109
    invoke-virtual {v2, v1, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 112
    invoke-virtual {p1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 115
    return v1
.end method

.method public final isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z
    .locals 3

    .line 1
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getSystemUsage()I

    .line 4
    move-result v0

    .line 5
    invoke-static {v0}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    .line 8
    move-result v1

    .line 9
    const/4 v2, 0x1

    .line 10
    if-eqz v1, :cond_2

    .line 12
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->isSupportedSystemUsage(I)Z

    .line 15
    move-result v1

    .line 16
    if-eqz v1, :cond_1

    .line 18
    const/16 v1, 0x11

    .line 20
    if-ne v0, v1, :cond_0

    .line 22
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getAllFlags()I

    .line 25
    move-result p1

    .line 26
    const/high16 v0, 0x10000

    .line 28
    and-int/2addr p1, v0

    .line 29
    if-eqz p1, :cond_0

    .line 31
    const-string p1, "android.permission.CALL_AUDIO_INTERCEPTION"

    .line 33
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 36
    move-result p1

    .line 37
    if-nez p1, :cond_2

    .line 39
    :cond_0
    const-string p1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 41
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 44
    move-result p0

    .line 45
    if-eqz p0, :cond_1

    .line 47
    goto :goto_0

    .line 48
    :cond_1
    const/4 v2, 0x0

    .line 49
    :cond_2
    :goto_0
    return v2
.end method

.method public final isValidRingerMode(I)Z
    .locals 0

    .line 1
    if-ltz p1, :cond_0

    .line 3
    const/4 p0, 0x2

    .line 4
    if-gt p1, p0, :cond_0

    .line 6
    const/4 p0, 0x1

    .line 7
    goto :goto_0

    .line 8
    :cond_0
    const/4 p0, 0x0

    .line 9
    :goto_0
    return p0
.end method

.method public final isVolumeControlUsingVolumeGroups()Z
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->isVolumeControlUsingVolumeGroups_enforcePermission()V

    .line 4
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 6
    return p0
.end method

.method public final isVolumeFixed()Z
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 3
    const/4 v1, 0x1

    .line 4
    if-eqz v0, :cond_0

    .line 6
    return v1

    .line 7
    :cond_0
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    .line 9
    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 12
    invoke-virtual {v0, v1}, Landroid/media/AudioAttributes$Builder;->setUsage(I)Landroid/media/AudioAttributes$Builder;

    .line 15
    move-result-object v0

    .line 16
    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 19
    move-result-object v0

    .line 20
    invoke-virtual {p0, v0, v1}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 23
    move-result-object v0

    .line 24
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 27
    move-result-object v0

    .line 28
    :cond_1
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 31
    move-result v2

    .line 32
    if-eqz v2, :cond_2

    .line 34
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 37
    move-result-object v2

    .line 38
    check-cast v2, Landroid/media/AudioDeviceAttributes;

    .line 40
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->getDeviceVolumeBehaviorInt(Landroid/media/AudioDeviceAttributes;)I

    .line 43
    move-result v2

    .line 44
    const/4 v3, 0x2

    .line 45
    if-ne v2, v3, :cond_1

    .line 47
    return v1

    .line 48
    :cond_2
    const/4 p0, 0x0

    .line 49
    return p0
.end method

.method public final isVolumeGroupMuted(I)Z
    .locals 3

    .line 1
    const-string p0, ": no volume group found for id "

    .line 3
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 8
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 11
    move-result v2

    .line 12
    if-gez v2, :cond_0

    .line 14
    const-string v1, "AS.AudioService"

    .line 16
    new-instance v2, Ljava/lang/StringBuilder;

    .line 18
    invoke-direct {v2, p0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 21
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 24
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 27
    move-result-object p0

    .line 28
    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 31
    monitor-exit v0

    .line 32
    const/4 p0, 0x0

    .line 33
    return p0

    .line 34
    :catchall_0
    move-exception p0

    .line 35
    goto :goto_0

    .line 36
    :cond_0
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 39
    move-result-object p0

    .line 40
    check-cast p0, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 42
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIsMuted:Z

    .line 44
    monitor-exit v0

    .line 45
    return p0

    .line 46
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 47
    throw p0
.end method

.method public final loadSoundEffects()Z
    .locals 9

    .line 1
    new-instance v7, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;

    .line 3
    invoke-direct {v7}, Ljava/lang/Object;-><init>()V

    .line 6
    const/4 v8, 0x1

    .line 7
    iput v8, v7, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;->mStatus:I

    .line 9
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 11
    const/4 v4, 0x0

    .line 12
    const/4 v6, 0x0

    .line 13
    const/4 v1, 0x7

    .line 14
    const/4 v2, 0x2

    .line 15
    const/4 v3, 0x0

    .line 16
    move-object v5, v7

    .line 17
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 20
    monitor-enter v7

    .line 21
    const/4 p0, 0x3

    .line 22
    :goto_0
    :try_start_0
    iget v0, v7, Lcom/android/server/audio/AudioService$LoadSoundEffectReply;->mStatus:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 24
    if-ne v0, v8, :cond_0

    .line 26
    add-int/lit8 v1, p0, -0x1

    .line 28
    if-lez p0, :cond_0

    .line 30
    const-wide/16 v2, 0x1388

    .line 32
    :try_start_1
    invoke-virtual {v7, v2, v3}, Ljava/lang/Object;->wait(J)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 35
    goto :goto_1

    .line 36
    :catchall_0
    move-exception p0

    .line 37
    goto :goto_3

    .line 38
    :catch_0
    :try_start_2
    const-string p0, "AS.AudioService"

    .line 40
    const-string v0, "Interrupted while waiting sound pool loaded."

    .line 42
    invoke-static {p0, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 45
    :goto_1
    move p0, v1

    .line 46
    goto :goto_0

    .line 47
    :cond_0
    if-nez v0, :cond_1

    .line 49
    goto :goto_2

    .line 50
    :cond_1
    const/4 v8, 0x0

    .line 51
    :goto_2
    monitor-exit v7

    .line 52
    return v8

    .line 53
    :goto_3
    monitor-exit v7

    .line 54
    throw p0
.end method

.method public final lowerVolumeToRs1(Ljava/lang/String;)V
    .locals 7

    .line 1
    const-string/jumbo p1, "lowerVolumeToRs1"

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 9
    const/4 v3, 0x0

    .line 10
    const/4 v4, 0x0

    .line 11
    const/16 v1, 0x3ef

    .line 13
    const/4 v2, 0x2

    .line 14
    const/4 v5, 0x0

    .line 15
    const/4 v6, 0x0

    .line 16
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 19
    return-void
.end method

.method public final maybeSendSystemAudioStatusCommand(Z)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 3
    if-eqz v0, :cond_1

    .line 5
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 7
    if-eqz v0, :cond_1

    .line 9
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    .line 11
    if-nez v0, :cond_0

    .line 13
    goto :goto_0

    .line 14
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 17
    move-result-wide v0

    .line 18
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 20
    const/4 v3, 0x3

    .line 21
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    .line 24
    move-result v4

    .line 25
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    .line 28
    move-result v5

    .line 29
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    .line 32
    move-result p0

    .line 33
    invoke-virtual {v2, p1, v4, v5, p0}, Landroid/hardware/hdmi/HdmiAudioSystemClient;->sendReportAudioStatusCecCommand(ZIIZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 36
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 39
    return-void

    .line 40
    :catchall_0
    move-exception p0

    .line 41
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 44
    throw p0

    .line 45
    :cond_1
    :goto_0
    return-void
.end method

.method public final muteAliasStreams(IZ)V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 7
    :try_start_1
    new-instance v2, Ljava/util/ArrayList;

    .line 9
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 12
    const/4 v3, 0x0

    .line 13
    move v4, v3

    .line 14
    :goto_0
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 16
    array-length v6, v5

    .line 17
    if-ge v4, v6, :cond_3

    .line 19
    aget-object v5, v5, v4

    .line 21
    sget-object v6, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 23
    aget v6, v6, v4

    .line 25
    if-ne p1, v6, :cond_2

    .line 27
    iget-object v6, v5, Lcom/android/server/audio/AudioService$VolumeStreamState;->this$0:Lcom/android/server/audio/AudioService;

    .line 29
    iget v7, v5, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 31
    invoke-virtual {v6, v7}, Lcom/android/server/audio/AudioService;->isStreamAffectedByMute(I)Z

    .line 34
    move-result v6

    .line 35
    if-eqz v6, :cond_2

    .line 37
    iget v6, v5, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 39
    if-eqz v6, :cond_0

    .line 41
    if-eqz v7, :cond_0

    .line 43
    const/4 v6, 0x6

    .line 44
    if-ne v7, v6, :cond_2

    .line 46
    :cond_0
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 48
    if-eqz v6, :cond_1

    .line 50
    iget v6, v5, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 52
    const/4 v7, 0x7

    .line 53
    if-eq v6, v7, :cond_2

    .line 55
    :cond_1
    const-string/jumbo v6, "muteAliasStreams"

    .line 58
    invoke-virtual {v5, v6, p2, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;ZZ)Z

    .line 61
    move-result v5

    .line 62
    if-eqz v5, :cond_2

    .line 64
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 67
    move-result-object v5

    .line 68
    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 71
    goto :goto_1

    .line 72
    :catchall_0
    move-exception p0

    .line 73
    goto :goto_2

    .line 74
    :cond_2
    :goto_1
    add-int/lit8 v4, v4, 0x1

    .line 76
    goto :goto_0

    .line 77
    :cond_3
    new-instance p1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda15;

    .line 79
    invoke-direct {p1, p0, p2}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda15;-><init>(Lcom/android/server/audio/AudioService;Z)V

    .line 82
    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 85
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 86
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 87
    return-void

    .line 88
    :catchall_1
    move-exception p0

    .line 89
    goto :goto_3

    .line 90
    :goto_2
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 91
    :try_start_4
    throw p0

    .line 92
    :goto_3
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 93
    throw p0
.end method

.method public final muteAwaitConnection([ILandroid/media/AudioDeviceAttributes;J)V
    .locals 5

    .line 1
    const-string/jumbo v0, "muteAwaitConnection ignored, another in progress for device:"

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 13
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 16
    move-result-object v1

    .line 17
    const-wide/16 v2, 0x0

    .line 19
    cmp-long v2, p3, v2

    .line 21
    if-lez v2, :cond_2

    .line 23
    array-length v2, p1

    .line 24
    if-eqz v2, :cond_2

    .line 26
    const-string v2, "AS.AudioService"

    .line 28
    new-instance v3, Ljava/lang/StringBuilder;

    .line 30
    const-string/jumbo v4, "muteAwaitConnection dev:"

    .line 33
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 36
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 39
    const-string v4, " timeOutMs:"

    .line 41
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 44
    invoke-virtual {v3, p3, p4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 47
    const-string v4, " usages:"

    .line 49
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 52
    invoke-static {p1}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    .line 55
    move-result-object v4

    .line 56
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 59
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 62
    move-result-object v3

    .line 63
    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 66
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 68
    invoke-virtual {v2, v1}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceConnected(Landroid/media/AudioDeviceAttributes;)Z

    .line 71
    move-result v2

    .line 72
    if-eqz v2, :cond_0

    .line 74
    const-string p0, "AS.AudioService"

    .line 76
    new-instance p1, Ljava/lang/StringBuilder;

    .line 78
    const-string/jumbo p3, "muteAwaitConnection ignored, device ("

    .line 81
    invoke-direct {p1, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 84
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 87
    const-string p2, ") already connected"

    .line 89
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 92
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 95
    move-result-object p1

    .line 96
    invoke-static {p0, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 99
    return-void

    .line 100
    :cond_0
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionLock:Ljava/lang/Object;

    .line 102
    monitor-enter p2

    .line 103
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 105
    if-nez v2, :cond_1

    .line 107
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 109
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mMutedUsagesAwaitingConnection:[I

    .line 111
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 113
    invoke-virtual {v0, p1, v1, p3, p4}, Lcom/android/server/audio/PlaybackActivityMonitor;->muteAwaitConnection([ILandroid/media/AudioDeviceAttributes;J)V

    .line 116
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 117
    new-instance p2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;

    .line 119
    const/4 p3, 0x1

    .line 120
    invoke-direct {p2, p0, v1, p1, p3}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/AudioDeviceAttributes;[II)V

    .line 123
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->dispatchMuteAwaitConnection(Ljava/util/function/BiConsumer;)V

    .line 126
    return-void

    .line 127
    :catchall_0
    move-exception p0

    .line 128
    goto :goto_0

    .line 129
    :cond_1
    :try_start_1
    const-string p1, "AS.AudioService"

    .line 131
    new-instance p3, Ljava/lang/StringBuilder;

    .line 133
    invoke-direct {p3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 136
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 138
    invoke-virtual {p3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 141
    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 144
    move-result-object p0

    .line 145
    invoke-static {p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 148
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 150
    const-string/jumbo p1, "muteAwaitConnection already in progress"

    .line 153
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 156
    throw p0

    .line 157
    :goto_0
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 158
    throw p0

    .line 159
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 161
    const-string p1, "Invalid timeOutMs/usagesToMute"

    .line 163
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 166
    throw p0
.end method

.method public final muteMediaStreamOfSpeaker(Z)V
    .locals 9

    .line 1
    new-instance v5, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    .line 3
    sget-object v0, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    .line 5
    const/4 v1, 0x3

    .line 6
    if-eqz p1, :cond_0

    .line 8
    aget v2, v0, v1

    .line 10
    :goto_0
    move v4, v2

    .line 11
    goto :goto_1

    .line 12
    :cond_0
    iget v2, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 14
    goto :goto_0

    .line 15
    :goto_1
    const/4 v2, 0x2

    .line 16
    const-string/jumbo v3, "muteMediaStreamOfSpeaker"

    .line 19
    invoke-direct {v5, v1, v4, v2, v3}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;-><init>(IIILjava/lang/String;)V

    .line 22
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 24
    aget-object v3, v3, v1

    .line 26
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 29
    move-result v3

    .line 30
    const/4 v2, 0x0

    .line 31
    const/4 v6, 0x1

    .line 32
    const-string/jumbo v7, "speaker_media_index"

    .line 35
    const/4 v8, -0x1

    .line 36
    if-eqz p1, :cond_2

    .line 38
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 40
    if-eqz p1, :cond_2

    .line 42
    iget p1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 44
    if-ne p1, v8, :cond_1

    .line 46
    iput v3, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 48
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 50
    invoke-virtual {p1, v3, v7}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(ILjava/lang/String;)V

    .line 53
    move p1, v6

    .line 54
    goto :goto_3

    .line 55
    :cond_1
    move p1, v2

    .line 56
    goto :goto_3

    .line 57
    :cond_2
    iget p1, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 59
    if-eq p1, v8, :cond_3

    .line 61
    aget p1, v0, v1

    .line 63
    if-ne v3, p1, :cond_3

    .line 65
    move p1, v6

    .line 66
    goto :goto_2

    .line 67
    :cond_3
    move p1, v2

    .line 68
    :goto_2
    iput v8, p0, Lcom/android/server/audio/AudioService;->mSavedSpeakerMediaIndex:I

    .line 70
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 72
    invoke-virtual {v0, v8, v7}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(ILjava/lang/String;)V

    .line 75
    :goto_3
    if-eqz p1, :cond_5

    .line 77
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 79
    const/16 p0, -0x801

    .line 81
    if-eq v4, p0, :cond_4

    .line 83
    move v2, v6

    .line 84
    :cond_4
    invoke-static {v2}, Lcom/android/internal/util/Preconditions;->checkState(Z)V

    .line 87
    const/16 v1, 0x1a

    .line 89
    const/4 v2, 0x2

    .line 90
    const/4 v6, 0x0

    .line 91
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 94
    :cond_5
    return-void
.end method

.method public final muteRingerModeStreams()V
    .locals 18

    .line 1
    move-object/from16 v0, p0

    .line 3
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 6
    move-result v1

    .line 7
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 9
    if-nez v2, :cond_0

    .line 11
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string/jumbo v3, "notification"

    .line 16
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 19
    move-result-object v2

    .line 20
    check-cast v2, Landroid/app/NotificationManager;

    .line 22
    iput-object v2, v0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 24
    :cond_0
    iget v2, v0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 26
    const/4 v3, 0x1

    .line 27
    const/4 v4, 0x0

    .line 28
    if-eq v2, v3, :cond_2

    .line 30
    if-nez v2, :cond_1

    .line 32
    goto :goto_0

    .line 33
    :cond_1
    move v5, v4

    .line 34
    goto :goto_1

    .line 35
    :cond_2
    :goto_0
    move v5, v3

    .line 36
    :goto_1
    if-ne v2, v3, :cond_3

    .line 38
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 40
    const/4 v6, 0x7

    .line 41
    invoke-virtual {v2, v6}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceActiveForCommunication(I)Z

    .line 44
    move-result v2

    .line 45
    if-eqz v2, :cond_3

    .line 47
    move v2, v3

    .line 48
    goto :goto_2

    .line 49
    :cond_3
    move v2, v4

    .line 50
    :goto_2
    new-instance v6, Ljava/lang/StringBuilder;

    .line 52
    const-string/jumbo v7, "muteRingerModeStreams() from u/pid:"

    .line 55
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 58
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 61
    move-result v7

    .line 62
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 65
    const-string v7, "/"

    .line 67
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 70
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 73
    move-result v7

    .line 74
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 77
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 80
    move-result-object v13

    .line 81
    if-eqz v2, :cond_4

    .line 83
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 85
    iget-object v6, v6, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 87
    invoke-virtual {v6}, Lcom/android/server/audio/BtHelper;->isBluetoothScoOn()Z

    .line 90
    move-result v6

    .line 91
    if-nez v6, :cond_4

    .line 93
    const-string v2, "AS.AudioService"

    .line 95
    const-string/jumbo v6, "shouldRingSco set to false. because, BT SCO state is not connected."

    .line 98
    invoke-static {v2, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 101
    move v2, v4

    .line 102
    :cond_4
    iget-object v8, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 104
    if-eqz v2, :cond_5

    .line 106
    const/4 v6, 0x3

    .line 107
    move v12, v6

    .line 108
    goto :goto_3

    .line 109
    :cond_5
    move v12, v4

    .line 110
    :goto_3
    const/4 v10, 0x2

    .line 111
    const/4 v11, 0x7

    .line 112
    const/16 v9, 0x8

    .line 114
    const/4 v14, 0x0

    .line 115
    invoke-static/range {v8 .. v14}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 118
    sub-int/2addr v1, v3

    .line 119
    :goto_4
    if-ltz v1, :cond_12

    .line 121
    invoke-static {v1}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 124
    move-result v6

    .line 125
    const/4 v7, 0x2

    .line 126
    if-eqz v2, :cond_7

    .line 128
    if-eq v1, v7, :cond_6

    .line 130
    goto :goto_5

    .line 131
    :cond_6
    move v8, v4

    .line 132
    goto :goto_6

    .line 133
    :cond_7
    :goto_5
    move v8, v3

    .line 134
    :goto_6
    iget v9, v0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 136
    shl-int v10, v3, v1

    .line 138
    and-int/2addr v9, v10

    .line 139
    if-eqz v9, :cond_8

    .line 141
    move v9, v3

    .line 142
    goto :goto_7

    .line 143
    :cond_8
    move v9, v4

    .line 144
    :goto_7
    if-nez v9, :cond_a

    .line 146
    if-eqz v5, :cond_9

    .line 148
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService;->isStreamAffectedByRingerMode(I)Z

    .line 151
    move-result v11

    .line 152
    if-eqz v11, :cond_9

    .line 154
    if-eqz v8, :cond_9

    .line 156
    goto :goto_8

    .line 157
    :cond_9
    move v8, v4

    .line 158
    goto :goto_9

    .line 159
    :cond_a
    :goto_8
    move v8, v3

    .line 160
    :goto_9
    if-ne v6, v8, :cond_b

    .line 162
    if-eqz v9, :cond_11

    .line 164
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 166
    aget-object v6, v6, v1

    .line 168
    const-string/jumbo v7, "muteRingerModeStreams"

    .line 171
    invoke-virtual {v6, v7, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 174
    goto/16 :goto_e

    .line 176
    :cond_b
    if-nez v8, :cond_10

    .line 178
    sget-boolean v6, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 180
    if-eqz v6, :cond_c

    .line 182
    const/4 v7, 0x5

    .line 183
    :cond_c
    sget-object v6, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 185
    aget v6, v6, v1

    .line 187
    if-ne v6, v7, :cond_f

    .line 189
    const-class v6, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 191
    monitor-enter v6

    .line 192
    :try_start_0
    iget-object v7, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 194
    aget-object v7, v7, v1

    .line 196
    move v8, v4

    .line 197
    :goto_a
    iget-object v9, v7, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 199
    invoke-virtual {v9}, Landroid/util/SparseIntArray;->size()I

    .line 202
    move-result v9

    .line 203
    if-ge v8, v9, :cond_e

    .line 205
    iget-object v9, v7, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 207
    invoke-virtual {v9, v8}, Landroid/util/SparseIntArray;->keyAt(I)I

    .line 210
    move-result v9

    .line 211
    iget-object v11, v7, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 213
    invoke-virtual {v11, v8}, Landroid/util/SparseIntArray;->valueAt(I)I

    .line 216
    move-result v11

    .line 217
    if-nez v11, :cond_d

    .line 219
    const-string v11, "AS.AudioService"

    .line 221
    const/16 v12, 0xa

    .line 223
    invoke-virtual {v7, v12, v9, v11, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 226
    goto :goto_b

    .line 227
    :catchall_0
    move-exception v0

    .line 228
    goto :goto_c

    .line 229
    :cond_d
    :goto_b
    add-int/lit8 v8, v8, 0x1

    .line 231
    goto :goto_a

    .line 232
    :cond_e
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 235
    move-result v14

    .line 236
    iget-object v11, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 238
    iget-object v7, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 240
    aget-object v16, v7, v1

    .line 242
    const/4 v13, 0x2

    .line 243
    const/4 v15, 0x0

    .line 244
    const/16 v17, 0x1f4

    .line 246
    const/4 v12, 0x1

    .line 247
    invoke-static/range {v11 .. v17}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 250
    monitor-exit v6

    .line 251
    goto :goto_d

    .line 252
    :goto_c
    monitor-exit v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 253
    throw v0

    .line 254
    :cond_f
    :goto_d
    sget v6, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 256
    not-int v7, v10

    .line 257
    and-int/2addr v6, v7

    .line 258
    sput v6, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 260
    sget-object v6, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 262
    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;

    .line 264
    sget v8, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 266
    const-string/jumbo v9, "muteRingerModeStreams"

    .line 269
    invoke-direct {v7, v8, v9}, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;-><init>(ILjava/lang/String;)V

    .line 272
    invoke-virtual {v6, v7}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 275
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 277
    aget-object v6, v6, v1

    .line 279
    const-string/jumbo v7, "muteRingerModeStreams"

    .line 282
    invoke-virtual {v6, v7, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 285
    goto :goto_e

    .line 286
    :cond_10
    sget v6, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 288
    or-int/2addr v6, v10

    .line 289
    sput v6, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 291
    sget-object v6, Lcom/android/server/audio/AudioService;->sMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 293
    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;

    .line 295
    sget v8, Lcom/android/server/audio/AudioService;->sRingerAndZenModeMutedStreams:I

    .line 297
    const-string/jumbo v9, "muteRingerModeStreams"

    .line 300
    invoke-direct {v7, v8, v9}, Lcom/android/server/audio/AudioServiceEvents$RingerZenMutedStreamsEvent;-><init>(ILjava/lang/String;)V

    .line 303
    invoke-virtual {v6, v7}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 306
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 308
    aget-object v6, v6, v1

    .line 310
    const-string/jumbo v7, "muteRingerModeStreams"

    .line 313
    invoke-virtual {v6, v7, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 316
    :cond_11
    :goto_e
    add-int/lit8 v1, v1, -0x1

    .line 318
    goto/16 :goto_4

    .line 320
    :cond_12
    invoke-static {v3}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 323
    move-result v0

    .line 324
    if-eqz v0, :cond_13

    .line 326
    const-string v0, "1"

    .line 328
    goto :goto_f

    .line 329
    :cond_13
    const-string v0, "0"

    .line 331
    :goto_f
    const-string/jumbo v1, "persist.sys.silent"

    .line 334
    invoke-static {v1, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 337
    return-void
.end method

.method public final notifySafetyVolumeDialogVisible(Landroid/media/IVolumeController;Z)V
    .locals 2

    .line 1
    const-string/jumbo v0, "notify about volume controller visibility"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 9
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 11
    const/4 v1, 0x0

    .line 12
    if-nez v0, :cond_0

    .line 14
    move-object v0, v1

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    invoke-interface {v0}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 19
    move-result-object v0

    .line 20
    :goto_0
    if-nez p1, :cond_1

    .line 22
    goto :goto_1

    .line 23
    :cond_1
    invoke-interface {p1}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 26
    move-result-object v1

    .line 27
    :goto_1
    invoke-static {v0, v1}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 30
    move-result p1

    .line 31
    if-nez p1, :cond_2

    .line 33
    return-void

    .line 34
    :cond_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 36
    iput-boolean p2, p0, Lcom/android/server/audio/AudioService$VolumeController;->mSafetyDialogVisible:Z

    .line 38
    const-string p0, "Safety Volume controller visible: "

    .line 40
    const-string p1, "AS.AudioService"

    .line 42
    invoke-static {p0, p1, p2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)V

    .line 45
    return-void
.end method

.method public final notifyVolumeControllerVisible(Landroid/media/IVolumeController;Z)V
    .locals 2

    .line 1
    const-string/jumbo v0, "notify about volume controller visibility"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 9
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 11
    const/4 v1, 0x0

    .line 12
    if-nez v0, :cond_0

    .line 14
    move-object v0, v1

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    invoke-interface {v0}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 19
    move-result-object v0

    .line 20
    :goto_0
    if-nez p1, :cond_1

    .line 22
    goto :goto_1

    .line 23
    :cond_1
    invoke-interface {p1}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 26
    move-result-object v1

    .line 27
    :goto_1
    invoke-static {v0, v1}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 30
    move-result p1

    .line 31
    if-nez p1, :cond_2

    .line 33
    return-void

    .line 34
    :cond_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 36
    iput-boolean p2, p0, Lcom/android/server/audio/AudioService$VolumeController;->mVisible:Z

    .line 38
    const-string p0, "Volume controller visible: "

    .line 40
    const-string p1, "AS.AudioService"

    .line 42
    invoke-static {p0, p1, p2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)V

    .line 45
    return-void
.end method

.method public final observeDevicesForMediaStream()V
    .locals 2

    .line 1
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 6
    const/4 v1, 0x3

    .line 7
    aget-object p0, p0, v1

    .line 9
    const/4 v1, 0x0

    .line 10
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->observeDevicesForStream_syncVSS(Z)Ljava/util/Set;

    .line 13
    monitor-exit v0

    .line 14
    return-void

    .line 15
    :catchall_0
    move-exception p0

    .line 16
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17
    throw p0
.end method

.method public final onAccessibilityServicesStateChanged(Landroid/view/accessibility/AccessibilityManager;)V
    .locals 2

    .line 1
    const/16 v0, 0x20

    .line 3
    invoke-virtual {p1, v0}, Landroid/view/accessibility/AccessibilityManager;->semIsAccessibilityServiceEnabled(I)Z

    .line 6
    move-result v0

    .line 7
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 9
    const/16 v1, 0x10

    .line 11
    invoke-virtual {p1, v1}, Landroid/view/accessibility/AccessibilityManager;->semIsAccessibilityServiceEnabled(I)Z

    .line 14
    move-result v1

    .line 15
    or-int/2addr v0, v1

    .line 16
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsTalkBackEnabled:Z

    .line 18
    invoke-virtual {p1}, Landroid/view/accessibility/AccessibilityManager;->isAccessibilityVolumeStreamActive()Z

    .line 21
    move-result p1

    .line 22
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->updateA11yVolumeAlias(Z)V

    .line 25
    return-void
.end method

.method public final onAudioServerDied()V
    .locals 10

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 3
    if-eqz v0, :cond_d

    .line 5
    invoke-static {}, Landroid/media/AudioSystem;->checkAudioFlinger()I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 11
    goto/16 :goto_8

    .line 13
    :cond_0
    const-string v0, "AS.AudioService"

    .line 15
    const-string v1, "Audioserver started."

    .line 17
    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 20
    sget-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 22
    new-instance v1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 24
    const-string/jumbo v2, "onAudioServerDied() audioserver started"

    .line 27
    invoke-direct {v1, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 30
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 33
    invoke-static {}, Lcom/android/server/audio/AudioService;->updateAudioHalPids()V

    .line 36
    const-string/jumbo v0, "restarting=true"

    .line 39
    invoke-static {v0}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 42
    invoke-static {}, Lcom/android/server/audio/AudioService;->readAndSetLowRamDevice()V

    .line 45
    invoke-static {}, Landroid/media/AudioSystem;->isCallScreeningModeSupported()Z

    .line 48
    move-result v0

    .line 49
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 51
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onCustomAudioServerDied()V

    .line 54
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 56
    const/4 v6, 0x0

    .line 57
    const/4 v7, 0x0

    .line 58
    const/4 v0, 0x1

    .line 59
    const/4 v8, 0x0

    .line 60
    const/4 v4, 0x0

    .line 61
    const/4 v5, 0x0

    .line 62
    move v2, v0

    .line 63
    move v3, v8

    .line 64
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 67
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO:Z

    .line 69
    if-eqz v1, :cond_1

    .line 71
    invoke-static {}, Lcom/samsung/android/audio/AudioManagerHelper;->isFMPlayerActive()Z

    .line 74
    move-result v1

    .line 75
    if-eqz v1, :cond_1

    .line 77
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 79
    const/16 v2, 0x8

    .line 81
    iget v3, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 83
    invoke-virtual {v1, v2, v3}, Lcom/android/server/audio/AudioSystemAdapter;->setForceUse(II)V

    .line 86
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 88
    invoke-virtual {v1}, Lcom/android/server/audio/AudioDeviceBroker;->handleFmRadioDeviceConnection()V

    .line 91
    :cond_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mBtScoDeviceInfo:Ljava/lang/String;

    .line 93
    if-eqz v1, :cond_2

    .line 95
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    .line 98
    move-result v1

    .line 99
    if-eqz v1, :cond_2

    .line 101
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 103
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mBtScoDeviceInfo:Ljava/lang/String;

    .line 105
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 108
    :cond_2
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 110
    iget-object v1, v1, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 112
    monitor-enter v1

    .line 113
    :try_start_0
    invoke-static {}, Landroid/os/Process;->myPid()I

    .line 116
    move-result v2

    .line 117
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 119
    invoke-virtual {v3}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    .line 122
    move-result-object v3

    .line 123
    const/4 v4, -0x1

    .line 124
    invoke-virtual {p0, v4, v2, v3, v0}, Lcom/android/server/audio/AudioService;->onUpdateAudioMode(IILjava/lang/String;Z)V

    .line 127
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_9

    .line 128
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 130
    monitor-enter v2

    .line 131
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mCameraSoundForced:Z

    .line 133
    if-eqz v1, :cond_3

    .line 135
    const/16 v1, 0xb

    .line 137
    goto :goto_0

    .line 138
    :cond_3
    move v1, v8

    .line 139
    :goto_0
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_8

    .line 140
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 142
    const/4 v3, 0x4

    .line 143
    const-string/jumbo v4, "onAudioServerDied"

    .line 146
    invoke-virtual {v2, v3, v1, v4}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 149
    const-string v1, "after audioserver restart"

    .line 151
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->onReinitVolumes(Ljava/lang/String;)V

    .line 154
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->restoreVolumeGroups()V

    .line 157
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 159
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->updateMasterMono(Landroid/content/ContentResolver;)V

    .line 162
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 164
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->updateMasterBalance(Landroid/content/ContentResolver;)V

    .line 167
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 170
    move-result v1

    .line 171
    invoke-virtual {p0, v1, v8}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 174
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    .line 176
    if-eqz v1, :cond_4

    .line 178
    invoke-static {}, Lcom/android/server/audio/RotationHelper;->updateOrientation()V

    .line 181
    :cond_4
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mRestorableParameters:Lcom/android/server/audio/AudioService$RestorableParameters;

    .line 183
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$RestorableParameters;->restoreAll()V

    .line 186
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 188
    monitor-enter v1

    .line 189
    :try_start_2
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    .line 191
    if-eqz v2, :cond_5

    .line 193
    const/16 v2, 0x9

    .line 195
    goto :goto_1

    .line 196
    :cond_5
    move v2, v8

    .line 197
    :goto_1
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 199
    const-string/jumbo v4, "onAudioServerDied"

    .line 202
    const/4 v5, 0x3

    .line 203
    invoke-virtual {v3, v5, v2, v4}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 206
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 208
    const-string/jumbo v3, "onAudioServerDied"

    .line 211
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 213
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 216
    const-string/jumbo v4, "encoded_surround_output"

    .line 219
    const/4 v5, 0x0

    .line 220
    invoke-static {v2, v4, v5}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 223
    move-result v2

    .line 224
    invoke-virtual {p0, v2, v3}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(ILjava/lang/String;)V

    .line 227
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 229
    invoke-virtual {p0, v2, v0}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    .line 232
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 234
    invoke-static {v2}, Landroid/media/AudioSystem;->setRttEnabled(Z)I

    .line 237
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 239
    invoke-virtual {v2}, Landroid/util/ArraySet;->clear()V

    .line 242
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->updateAssistantUIdLocked(Z)V

    .line 245
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_7

    .line 246
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 248
    monitor-enter v2

    .line 249
    :try_start_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 251
    invoke-static {v1}, Landroid/media/AudioSystem;->setA11yServicesUids([I)I

    .line 254
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_6

    .line 255
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUidLock:Ljava/lang/Object;

    .line 257
    monitor-enter v1

    .line 258
    :try_start_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 260
    iget v3, p0, Lcom/android/server/audio/AudioService;->mInputMethodServiceUid:I

    .line 262
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 265
    invoke-static {v3}, Landroid/media/AudioSystem;->setCurrentImeUid(I)I

    .line 268
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_5

    .line 269
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 271
    monitor-enter v2

    .line 272
    :try_start_5
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 274
    if-eqz v1, :cond_6

    .line 276
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 278
    if-eqz v1, :cond_6

    .line 280
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 282
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->setHdmiSystemAudioSupported(Z)I

    .line 285
    goto :goto_2

    .line 286
    :catchall_0
    move-exception p0

    .line 287
    goto/16 :goto_7

    .line 289
    :cond_6
    :goto_2
    monitor-exit v2
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 290
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 292
    monitor-enter v1

    .line 293
    :try_start_6
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 295
    invoke-static {v2}, Landroid/media/AudioSystem;->setSupportedSystemUsages([I)I

    .line 298
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_4

    .line 299
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 301
    monitor-enter v2

    .line 302
    :try_start_7
    new-instance v1, Ljava/util/ArrayList;

    .line 304
    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 307
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 309
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 312
    move-result-object v3

    .line 313
    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 316
    move-result-object v3

    .line 317
    :cond_7
    :goto_3
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 320
    move-result v4

    .line 321
    if-eqz v4, :cond_9

    .line 323
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 326
    move-result-object v4

    .line 327
    check-cast v4, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 329
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->connectMixes()I

    .line 332
    move-result v5

    .line 333
    if-eqz v5, :cond_8

    .line 335
    const-string v6, "AS.AudioService"

    .line 337
    new-instance v7, Ljava/lang/StringBuilder;

    .line 339
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 342
    const-string/jumbo v9, "onAudioServerDied: error "

    .line 345
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 348
    invoke-static {v5}, Landroid/media/AudioSystem;->audioSystemErrorToString(I)Ljava/lang/String;

    .line 351
    move-result-object v5

    .line 352
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 355
    const-string v5, " when connecting mixes for policy "

    .line 357
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 360
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    .line 363
    move-result-object v5

    .line 364
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 367
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 370
    move-result-object v5

    .line 371
    invoke-static {v6, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 374
    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 377
    goto :goto_3

    .line 378
    :catchall_1
    move-exception p0

    .line 379
    goto/16 :goto_6

    .line 381
    :cond_8
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setupDeviceAffinities()I

    .line 384
    move-result v5

    .line 385
    if-eqz v5, :cond_7

    .line 387
    const-string v6, "AS.AudioService"

    .line 389
    new-instance v7, Ljava/lang/StringBuilder;

    .line 391
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 394
    const-string/jumbo v9, "onAudioServerDied: error "

    .line 397
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 400
    invoke-static {v5}, Landroid/media/AudioSystem;->audioSystemErrorToString(I)Ljava/lang/String;

    .line 403
    move-result-object v5

    .line 404
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 407
    const-string v5, " when connecting device affinities for policy "

    .line 409
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 412
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->toLogFriendlyString()Ljava/lang/String;

    .line 415
    move-result-object v5

    .line 416
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 419
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 422
    move-result-object v5

    .line 423
    invoke-static {v6, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 426
    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 429
    goto :goto_3

    .line 430
    :cond_9
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda22;

    .line 432
    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    .line 435
    invoke-virtual {v1, v3}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 438
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 439
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 441
    monitor-enter v1

    .line 442
    :try_start_8
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 444
    invoke-virtual {v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->getAllAllowedCapturePolicies()Ljava/util/HashMap;

    .line 447
    move-result-object v2

    .line 448
    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    .line 451
    move-result-object v2

    .line 452
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 455
    move-result-object v2

    .line 456
    :cond_a
    :goto_4
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 459
    move-result v3

    .line 460
    if-eqz v3, :cond_b

    .line 462
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 465
    move-result-object v3

    .line 466
    check-cast v3, Ljava/util/Map$Entry;

    .line 468
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 470
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    .line 473
    move-result-object v5

    .line 474
    check-cast v5, Ljava/lang/Integer;

    .line 476
    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    .line 479
    move-result v5

    .line 480
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    .line 483
    move-result-object v6

    .line 484
    check-cast v6, Ljava/lang/Integer;

    .line 486
    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I

    .line 489
    move-result v6

    .line 490
    invoke-static {v6, v8}, Landroid/media/AudioAttributes;->capturePolicyToFlags(II)I

    .line 493
    move-result v6

    .line 494
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 497
    invoke-static {v5, v6}, Landroid/media/AudioSystem;->setAllowedCapturePolicy(II)I

    .line 500
    move-result v4

    .line 501
    if-eqz v4, :cond_a

    .line 503
    const-string v5, "AS.AudioService"

    .line 505
    new-instance v6, Ljava/lang/StringBuilder;

    .line 507
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 510
    const-string v7, "Failed to restore capture policy, uid: "

    .line 512
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 515
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    .line 518
    move-result-object v7

    .line 519
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 522
    const-string v7, ", capture policy: "

    .line 524
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 527
    invoke-interface {v3}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    .line 530
    move-result-object v7

    .line 531
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 534
    const-string v7, ", result: "

    .line 536
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 539
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 542
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 545
    move-result-object v4

    .line 546
    invoke-static {v5, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 549
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 551
    invoke-interface {v3}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    .line 554
    move-result-object v3

    .line 555
    check-cast v3, Ljava/lang/Integer;

    .line 557
    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    .line 560
    move-result v3

    .line 561
    invoke-virtual {v4, v3, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->setAllowedCapturePolicy(II)V

    .line 564
    goto :goto_4

    .line 565
    :catchall_2
    move-exception p0

    .line 566
    goto :goto_5

    .line 567
    :cond_b
    monitor-exit v1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 568
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 570
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHasSpatializerEffect:Z

    .line 572
    invoke-virtual {v1, v2}, Lcom/android/server/audio/SpatializerHelper;->reset(Z)V

    .line 575
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMonitorRotation:Z

    .line 577
    if-eqz v1, :cond_c

    .line 579
    invoke-static {}, Lcom/android/server/audio/RotationHelper;->forceUpdate()V

    .line 582
    :cond_c
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onIndicateSystemReady()V

    .line 585
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreamsLock:Ljava/lang/Object;

    .line 587
    monitor-enter v2

    .line 588
    :try_start_9
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreams:Ljava/util/HashMap;

    .line 590
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda23;

    .line 592
    const/4 v4, 0x0

    .line 593
    invoke-direct {v3, p0, v4}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda23;-><init>(Lcom/android/server/audio/AudioService;I)V

    .line 596
    invoke-virtual {v1, v3}, Ljava/util/HashMap;->forEach(Ljava/util/function/BiConsumer;)V

    .line 599
    monitor-exit v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 600
    const-string/jumbo v1, "restarting=false"

    .line 603
    invoke-static {v1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 606
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 608
    invoke-virtual {v1, v0}, Lcom/android/server/audio/SoundDoseHelper;->reset(Z)V

    .line 611
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 613
    const-string/jumbo v1, "ring_through_headset"

    .line 616
    const/16 v2, 0x20

    .line 618
    invoke-virtual {v0, v2, v1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 621
    move-result v0

    .line 622
    iput v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 624
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 627
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 629
    const/4 v4, 0x1

    .line 630
    const/4 v5, 0x0

    .line 631
    const/16 v2, 0x17

    .line 633
    const/4 v3, 0x2

    .line 634
    const/4 v6, 0x0

    .line 635
    const/4 v7, 0x0

    .line 636
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 639
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 642
    move-result v0

    .line 643
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 646
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->setMicMuteFromSwitchInput()V

    .line 649
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateVibratorInfos()V

    .line 652
    return-void

    .line 653
    :catchall_3
    move-exception p0

    .line 654
    :try_start_a
    monitor-exit v2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 655
    throw p0

    .line 656
    :goto_5
    :try_start_b
    monitor-exit v1
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    .line 657
    throw p0

    .line 658
    :goto_6
    :try_start_c
    monitor-exit v2
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 659
    throw p0

    .line 660
    :catchall_4
    move-exception p0

    .line 661
    :try_start_d
    monitor-exit v1
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_4

    .line 662
    throw p0

    .line 663
    :goto_7
    :try_start_e
    monitor-exit v2
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_0

    .line 664
    throw p0

    .line 665
    :catchall_5
    move-exception p0

    .line 666
    :try_start_f
    monitor-exit v1
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_5

    .line 667
    throw p0

    .line 668
    :catchall_6
    move-exception p0

    .line 669
    :try_start_10
    monitor-exit v2
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_6

    .line 670
    throw p0

    .line 671
    :catchall_7
    move-exception p0

    .line 672
    :try_start_11
    monitor-exit v1
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_7

    .line 673
    throw p0

    .line 674
    :catchall_8
    move-exception p0

    .line 675
    :try_start_12
    monitor-exit v2
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_8

    .line 676
    throw p0

    .line 677
    :catchall_9
    move-exception p0

    .line 678
    :try_start_13
    monitor-exit v1
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_9

    .line 679
    throw p0

    .line 680
    :cond_d
    :goto_8
    const-string v0, "AS.AudioService"

    .line 682
    const-string v1, "Audioserver died."

    .line 684
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 687
    sget-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 689
    new-instance v1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 691
    const-string/jumbo v2, "onAudioServerDied() audioserver died"

    .line 694
    invoke-direct {v1, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 697
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 700
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 702
    const/4 v6, 0x0

    .line 703
    const/4 v7, 0x0

    .line 704
    const/4 v4, 0x4

    .line 705
    const/4 v5, 0x1

    .line 706
    const/4 v8, 0x0

    .line 707
    const/16 v9, 0x1f4

    .line 709
    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 712
    return-void
.end method

.method public final onCustomAudioServerDied()V
    .locals 11

    .line 1
    const/4 v0, 0x1

    .line 2
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 4
    iget-object v2, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mMultiSoundLock:Ljava/lang/Object;

    .line 6
    monitor-enter v2

    .line 7
    :try_start_0
    const-string v3, "AS.MultiSoundManager"

    .line 9
    const-string/jumbo v4, "resetByAudioServerDied"

    .line 12
    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15
    iget-object v3, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 17
    invoke-virtual {v3}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    .line 20
    move-result-object v3

    .line 21
    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 24
    move-result-object v3

    .line 25
    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 28
    move-result v4

    .line 29
    if-eqz v4, :cond_0

    .line 31
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 34
    move-result-object v4

    .line 35
    check-cast v4, Ljava/util/Map$Entry;

    .line 37
    invoke-interface {v4}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    .line 40
    move-result-object v4

    .line 41
    check-cast v4, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 43
    iget v5, v4, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    .line 45
    iget v6, v4, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mDevice:I

    .line 47
    invoke-virtual {v1, v5, v6}, Lcom/samsung/android/server/audio/MultiSoundManager;->setDeviceToNative(II)V

    .line 50
    iget v4, v4, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mUid:I

    .line 52
    invoke-virtual {v1, v4}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolumeToNative(I)V

    .line 55
    goto :goto_0

    .line 56
    :catchall_0
    move-exception p0

    .line 57
    goto/16 :goto_7

    .line 59
    :cond_0
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->setStateToNative()V

    .line 62
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 63
    iget-object v3, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 65
    monitor-enter v3

    .line 66
    :try_start_1
    iget-object v2, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 68
    check-cast v2, Ljava/util/HashSet;

    .line 70
    invoke-virtual {v2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    .line 73
    move-result-object v2

    .line 74
    const/4 v4, -0x1

    .line 75
    move v5, v4

    .line 76
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 79
    move-result v6

    .line 80
    if-eqz v6, :cond_1

    .line 82
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 85
    move-result-object v5

    .line 86
    check-cast v5, Ljava/lang/Integer;

    .line 88
    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    .line 91
    move-result v5

    .line 92
    const v6, 0x8000

    .line 95
    invoke-virtual {v1, v5, v6}, Lcom/samsung/android/server/audio/MultiSoundManager;->setRemoteSubmixAppToNative(II)V

    .line 98
    goto :goto_1

    .line 99
    :catchall_1
    move-exception p0

    .line 100
    goto/16 :goto_6

    .line 102
    :cond_1
    iget-object v2, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mRemoteSubmixApps:Ljava/util/Set;

    .line 104
    check-cast v2, Ljava/util/HashSet;

    .line 106
    invoke-virtual {v2}, Ljava/util/HashSet;->isEmpty()Z

    .line 109
    move-result v2

    .line 110
    if-nez v2, :cond_2

    .line 112
    invoke-virtual {v1, v5, v0}, Lcom/samsung/android/server/audio/MultiSoundManager;->enableSeparateRemoteSubmix(IZ)V

    .line 115
    :cond_2
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 116
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    .line 118
    if-eqz v1, :cond_3

    .line 120
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 122
    new-instance v2, Ljava/lang/StringBuilder;

    .line 124
    const-string/jumbo v3, "g_effect_dv_adapt_sound="

    .line 127
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 130
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    .line 132
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 135
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 138
    move-result-object v2

    .line 139
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 142
    const-string v1, "AS.AudioService"

    .line 144
    new-instance v2, Ljava/lang/StringBuilder;

    .line 146
    const-string/jumbo v3, "onRestoreAudioServerDied - setAdaptSound: gain dv dha Parameter : "

    .line 149
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 152
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    .line 154
    invoke-static {v2, v3, v1}, Lcom/android/server/VpnManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 157
    :cond_3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 159
    new-instance v2, Ljava/lang/StringBuilder;

    .line 161
    const-string v3, "HACSetting="

    .line 163
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 166
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHAC:Ljava/lang/String;

    .line 168
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 171
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 174
    move-result-object v2

    .line 175
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 178
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 181
    move-result v1

    .line 182
    if-eqz v1, :cond_8

    .line 184
    new-instance v1, Ljava/lang/StringBuilder;

    .line 186
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 189
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 191
    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 194
    move-result v2

    .line 195
    const/4 v3, 0x2

    .line 196
    if-ne v2, v3, :cond_7

    .line 198
    const-string/jumbo v2, "g_call_state=2;"

    .line 201
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 204
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 206
    if-eqz v2, :cond_4

    .line 208
    const-string/jumbo v2, "g_call_sim_slot="

    .line 211
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 214
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 216
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 219
    const-string v2, ";"

    .line 221
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 224
    :cond_4
    const-string/jumbo v2, "false"

    .line 227
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    .line 229
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 232
    move-result v2

    .line 233
    if-nez v2, :cond_5

    .line 235
    const-string/jumbo v2, "g_call_memo_state="

    .line 238
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 241
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    .line 243
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 246
    const-string v2, ";"

    .line 248
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 251
    :cond_5
    const-string/jumbo v2, "true"

    .line 254
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    .line 256
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 259
    move-result v2

    .line 260
    if-eqz v2, :cond_6

    .line 262
    const-string/jumbo v2, "g_call_forwarding_enable="

    .line 265
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 268
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    .line 270
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 273
    const-string v2, ";"

    .line 275
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 278
    :cond_6
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_CALL:Z

    .line 280
    if-eqz v2, :cond_7

    .line 282
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 284
    iget-boolean v2, v2, Lcom/android/server/audio/AudioServiceExt;->mScreenCall:Z

    .line 286
    if-eqz v2, :cond_7

    .line 288
    const-string/jumbo v2, "l_screen_call=on;"

    .line 291
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 294
    :cond_7
    const-string v2, "AS.AudioService"

    .line 296
    new-instance v3, Ljava/lang/StringBuilder;

    .line 298
    const-string/jumbo v5, "onAudioServerDied(): "

    .line 301
    invoke-direct {v3, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 304
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 307
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 310
    move-result-object v3

    .line 311
    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 314
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 316
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 319
    move-result-object v1

    .line 320
    invoke-virtual {v2, v1}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 323
    :cond_8
    sget-object v1, Lcom/samsung/android/server/audio/utils/BtUtils;->SAP_UUID:Landroid/os/ParcelUuid;

    .line 325
    new-instance v1, Ljava/lang/StringBuilder;

    .line 327
    const-string/jumbo v2, "recoveryAuracastAppListToNative sBtAppUidList size = "

    .line 330
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 333
    sget-object v2, Lcom/samsung/android/server/audio/utils/BtUtils;->sBtAppUidList:Ljava/util/ArrayList;

    .line 335
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 338
    move-result v3

    .line 339
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 342
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 345
    move-result-object v1

    .line 346
    const-string v3, "AS.BtUtils"

    .line 348
    invoke-static {v3, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 351
    new-instance v1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 353
    new-instance v3, Ljava/lang/StringBuilder;

    .line 355
    const-string v5, "AudioServer died recoveryAuracastAppList start ! sBtAppUidList size = "

    .line 357
    invoke-direct {v3, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 360
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 363
    move-result v5

    .line 364
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 367
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 370
    move-result-object v3

    .line 371
    invoke-direct {v1, v3}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 374
    sget-object v3, Lcom/samsung/android/server/audio/utils/BtUtils;->sAuracastLogger:Lcom/android/server/utils/EventLogger;

    .line 376
    invoke-virtual {v3, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 379
    const/4 v1, 0x0

    .line 380
    sput v1, Lcom/samsung/android/server/audio/utils/BtUtils;->sSetParamCnt:I

    .line 382
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 385
    move-result-object v2

    .line 386
    const-string v5, ""

    .line 388
    :goto_2
    move v6, v1

    .line 389
    move-object v7, v5

    .line 390
    :cond_9
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 393
    move-result v8

    .line 394
    const/16 v9, 0x64

    .line 396
    if-eqz v8, :cond_a

    .line 398
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 401
    move-result-object v8

    .line 402
    check-cast v8, Ljava/lang/Integer;

    .line 404
    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I

    .line 407
    move-result v8

    .line 408
    new-instance v10, Ljava/lang/StringBuilder;

    .line 410
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    .line 413
    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 416
    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 419
    const-string v7, ";"

    .line 421
    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 424
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 427
    move-result-object v7

    .line 428
    add-int/2addr v6, v0

    .line 429
    if-ne v6, v9, :cond_9

    .line 431
    sget v6, Lcom/samsung/android/server/audio/utils/BtUtils;->sSetParamCnt:I

    .line 433
    invoke-static {v6, v7}, Lcom/samsung/android/server/audio/utils/BtUtils;->sendAuracastAppListToNative(ILjava/lang/String;)V

    .line 436
    goto :goto_2

    .line 437
    :cond_a
    if-eqz v6, :cond_b

    .line 439
    if-ge v6, v9, :cond_b

    .line 441
    sget v2, Lcom/samsung/android/server/audio/utils/BtUtils;->sSetParamCnt:I

    .line 443
    invoke-static {v2, v7}, Lcom/samsung/android/server/audio/utils/BtUtils;->sendAuracastAppListToNative(ILjava/lang/String;)V

    .line 446
    :cond_b
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 448
    const-string v5, "AudioServer died recoveryAuracastAppList done !"

    .line 450
    invoke-direct {v2, v5}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 453
    invoke-virtual {v3, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 456
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 458
    invoke-virtual {p0}, Lcom/android/server/audio/AudioServiceExt;->setAllSoundMute()V

    .line 461
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_VOIP_SOUND_LOUDER:Z

    .line 463
    if-eqz v2, :cond_c

    .line 465
    new-instance v2, Ljava/lang/StringBuilder;

    .line 467
    const-string/jumbo v3, "l_call_voip_extra_volume_enable="

    .line 470
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 473
    iget-boolean v3, p0, Lcom/android/server/audio/AudioServiceExt;->mVoipExtraVolume:Z

    .line 475
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 478
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 481
    move-result-object v2

    .line 482
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 484
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 487
    :cond_c
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_VOIP_ANTI_HOWLING:Z

    .line 489
    if-eqz v2, :cond_d

    .line 491
    new-instance v2, Ljava/lang/StringBuilder;

    .line 493
    const-string/jumbo v3, "l_call_voip_extra_volume_enable="

    .line 496
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 499
    iget-boolean v3, p0, Lcom/android/server/audio/AudioServiceExt;->mVoipAntiHowling:Z

    .line 501
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 504
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 507
    move-result-object v2

    .line 508
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 510
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 513
    :cond_d
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VIDEO_CALL_VOICE_EFFECT:Z

    .line 515
    if-eqz v2, :cond_10

    .line 517
    if-eqz v2, :cond_e

    .line 519
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mVideoCallVoiceEffectMode:I

    .line 521
    if-ne v2, v4, :cond_f

    .line 523
    :cond_e
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VIDEO_CALL_VOICE_DEFAULT_EFFECT:Z

    .line 525
    if-eqz v2, :cond_10

    .line 527
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mVideoCallVoiceEffectMode:I

    .line 529
    if-eq v2, v9, :cond_10

    .line 531
    :cond_f
    new-instance v2, Ljava/lang/StringBuilder;

    .line 533
    const-string/jumbo v3, "l_mic_input_control_mode="

    .line 536
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 539
    iget v3, p0, Lcom/android/server/audio/AudioServiceExt;->mVideoCallVoiceEffectMode:I

    .line 541
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 544
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 547
    move-result-object v2

    .line 548
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 550
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 553
    :cond_10
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MIC_MODE_FOR_QUICK_PANEL_UI:Z

    .line 555
    if-eqz v2, :cond_11

    .line 557
    iget-object v2, p0, Lcom/android/server/audio/AudioServiceExt;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 559
    if-eqz v2, :cond_11

    .line 561
    iget-object v2, v2, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 563
    sget-object v3, Lcom/samsung/android/server/audio/MicModeManager;->mCr:Landroid/content/ContentResolver;

    .line 565
    invoke-virtual {v2, v3}, Lcom/samsung/android/server/audio/MicModeType;->restoreMicMode(Landroid/content/ContentResolver;)V

    .line 568
    :cond_11
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 570
    if-eqz v2, :cond_12

    .line 572
    invoke-virtual {p0}, Lcom/android/server/audio/AudioServiceExt;->restoreLiveTranslator()V

    .line 575
    :cond_12
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_CALL_MONSTER_SOUND:Z

    .line 577
    if-eqz v2, :cond_14

    .line 579
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mVoiceCallMonsterSoundMode:I

    .line 581
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 583
    if-eq v2, v0, :cond_13

    .line 585
    new-instance v2, Ljava/lang/StringBuilder;

    .line 587
    const-string/jumbo v5, "l_call_nc_booster_enable="

    .line 590
    invoke-direct {v2, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 593
    iget v5, p0, Lcom/android/server/audio/AudioServiceExt;->mVoiceCallMonsterSoundMode:I

    .line 595
    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 598
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 601
    move-result-object v2

    .line 602
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 605
    :cond_13
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mVideoCallMonsterSoundMode:I

    .line 607
    if-eq v2, v4, :cond_14

    .line 609
    new-instance v2, Ljava/lang/StringBuilder;

    .line 611
    const-string/jumbo v4, "l_mic_input_control_mode_2mic="

    .line 614
    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 617
    iget v4, p0, Lcom/android/server/audio/AudioServiceExt;->mVideoCallMonsterSoundMode:I

    .line 619
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 622
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 625
    move-result-object v2

    .line 626
    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 629
    :cond_14
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mUpscalerEnabled:I

    .line 631
    invoke-static {v2}, Lcom/samsung/android/server/audio/utils/CoreFxUtils;->setUpScalerMode(I)V

    .line 634
    iget-object v2, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 636
    iget v3, p0, Lcom/android/server/audio/AudioServiceExt;->mAdaptSoundEnabled:I

    .line 638
    invoke-static {v2, v3}, Lcom/samsung/android/server/audio/utils/CoreFxUtils;->setAdaptSound(Landroid/content/Context;I)V

    .line 641
    new-instance v2, Landroid/content/Intent;

    .line 643
    const-string/jumbo v3, "com.samsung.intent.action.MEDIA_SERVER_REBOOTED"

    .line 646
    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 649
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 651
    sget-object v4, Landroid/os/UserHandle;->CURRENT:Landroid/os/UserHandle;

    .line 653
    sget-object v5, Lcom/samsung/android/server/audio/utils/AudioUtils;->DEVICE_OUT_WIRED_DEVICE_SET:Ljava/util/Set;

    .line 655
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 658
    move-result-wide v5

    .line 659
    const/4 v7, 0x0

    .line 660
    :try_start_2
    invoke-virtual {v3, v2, v4, v7}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_3

    .line 663
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 666
    iget v2, p0, Lcom/android/server/audio/AudioServiceExt;->mNbQualityMode:I

    .line 668
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioServiceExt;->setNbQualityMode(I)V

    .line 671
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    .line 673
    if-eqz v2, :cond_16

    .line 675
    iget-object p0, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 677
    invoke-static {p0}, Lcom/samsung/android/server/audio/VolumeMonitorService;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/VolumeMonitorService;

    .line 680
    move-result-object p0

    .line 681
    monitor-enter p0

    .line 682
    :try_start_3
    iget-object v2, p0, Lcom/samsung/android/server/audio/VolumeMonitorService;->mSemVolumeMonitor:Lcom/samsung/android/media/audiofx/SemVolumeMonitor;

    .line 684
    if-eqz v2, :cond_15

    .line 686
    invoke-virtual {v2}, Lcom/samsung/android/media/audiofx/SemVolumeMonitor;->release()V

    .line 689
    iput-object v7, p0, Lcom/samsung/android/server/audio/VolumeMonitorService;->mSemVolumeMonitor:Lcom/samsung/android/media/audiofx/SemVolumeMonitor;

    .line 691
    goto :goto_3

    .line 692
    :catchall_2
    move-exception v0

    .line 693
    goto :goto_4

    .line 694
    :cond_15
    :goto_3
    iget-boolean v2, p0, Lcom/samsung/android/server/audio/VolumeMonitorService;->mEnabled:Z

    .line 696
    iput-boolean v1, p0, Lcom/samsung/android/server/audio/VolumeMonitorService;->mEnabled:Z

    .line 698
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 699
    invoke-virtual {p0, v2}, Lcom/samsung/android/server/audio/VolumeMonitorService;->setVolumeMonitorOnOff(Z)V

    .line 702
    goto :goto_5

    .line 703
    :goto_4
    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 704
    throw v0

    .line 705
    :cond_16
    :goto_5
    sget p0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCount:I

    .line 707
    add-int/2addr p0, v0

    .line 708
    sput p0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCount:I

    .line 710
    const v2, 0x7fffffff

    .line 713
    if-ne p0, v2, :cond_17

    .line 715
    sget v2, Lcom/samsung/android/server/audio/AudioHqmHelper;->mPreAudioServerResetCount:I

    .line 717
    sub-int/2addr p0, v2

    .line 718
    sput p0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCount:I

    .line 720
    sput v1, Lcom/samsung/android/server/audio/AudioHqmHelper;->mPreAudioServerResetCount:I

    .line 722
    sput-boolean v0, Lcom/samsung/android/server/audio/AudioHqmHelper;->mAudioServerResetCountMaxLimit:Z

    .line 724
    :cond_17
    return-void

    .line 725
    :catchall_3
    move-exception p0

    .line 726
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 729
    throw p0

    .line 730
    :goto_6
    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 731
    throw p0

    .line 732
    :goto_7
    :try_start_6
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 733
    throw p0
.end method

.method public final onIndicateSystemReady()V
    .locals 7

    .line 1
    invoke-static {}, Landroid/media/AudioSystem;->systemReady()I

    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_0

    .line 7
    const-string/jumbo p0, "l_system_ready"

    .line 10
    invoke-static {p0}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 13
    return-void

    .line 14
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 16
    const/4 v5, 0x0

    .line 17
    const/16 v6, 0x3e8

    .line 19
    const/16 v1, 0x14

    .line 21
    const/4 v2, 0x0

    .line 22
    const/4 v3, 0x0

    .line 23
    const/4 v4, 0x0

    .line 24
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 27
    return-void
.end method

.method public final onInitAdiDeviceStates()V
    .locals 15

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    iget-object v1, v0, Lcom/android/server/audio/AudioDeviceBroker;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 5
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService;->getSettings()Lcom/android/server/audio/SettingsAdapter;

    .line 8
    move-result-object v1

    .line 9
    iget-object v2, v0, Lcom/android/server/audio/AudioDeviceBroker;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 11
    iget-object v2, v2, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 13
    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->readDeviceSettings()Ljava/lang/String;

    .line 16
    move-result-object v3

    .line 17
    if-nez v3, :cond_2

    .line 19
    const-string v3, "AS.AudioDeviceBroker"

    .line 21
    const-string/jumbo v4, "reading AdiDeviceState from legacy keyspatial_audio_enabled"

    .line 24
    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 27
    const-string/jumbo v3, "spatial_audio_enabled"

    .line 30
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 33
    const/4 v1, -0x2

    .line 34
    invoke-static {v2, v3, v1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    .line 37
    move-result-object v3

    .line 38
    if-nez v3, :cond_0

    .line 40
    const-string v1, "AS.AudioDeviceBroker"

    .line 42
    const-string/jumbo v2, "no AdiDeviceState stored with legacy key"

    .line 45
    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 48
    goto :goto_0

    .line 49
    :cond_0
    const-string v4, ""

    .line 51
    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 54
    move-result v4

    .line 55
    if-nez v4, :cond_2

    .line 57
    const-string/jumbo v4, "spatial_audio_enabled"

    .line 60
    const-string v5, ""

    .line 62
    invoke-static {v2, v4, v5, v1}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z

    .line 65
    move-result v4

    .line 66
    if-nez v4, :cond_1

    .line 68
    const-string v4, "AS.AudioDeviceBroker"

    .line 70
    const-string/jumbo v5, "cannot erase the legacy AdiDeviceState with key spatial_audio_enabled"

    .line 73
    invoke-static {v4, v5}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 76
    :cond_1
    const-string v4, "audio_device_inventory"

    .line 78
    invoke-static {v2, v4, v3, v1}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z

    .line 81
    move-result v1

    .line 82
    if-nez v1, :cond_2

    .line 84
    const-string v1, "AS.AudioDeviceBroker"

    .line 86
    const-string/jumbo v2, "error updating the new AdiDeviceState with key audio_device_inventory"

    .line 89
    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 92
    :cond_2
    :goto_0
    const/4 v1, 0x3

    .line 93
    const/4 v2, 0x0

    .line 94
    const/4 v4, 0x1

    .line 95
    if-eqz v3, :cond_d

    .line 97
    const-string v5, ""

    .line 99
    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 102
    move-result v5

    .line 103
    if-nez v5, :cond_d

    .line 105
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 107
    iget-object v5, v0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceInventoryLock:Ljava/lang/Object;

    .line 109
    monitor-enter v5

    .line 110
    :try_start_0
    iget-object v6, v0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceInventory:Ljava/util/LinkedHashMap;

    .line 112
    invoke-virtual {v6}, Ljava/util/LinkedHashMap;->clear()V

    .line 115
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 116
    const-string v5, "\\|"

    .line 118
    invoke-static {v3, v5}, Landroid/text/TextUtils;->split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    .line 121
    move-result-object v3

    .line 122
    array-length v5, v3

    .line 123
    move v6, v2

    .line 124
    :goto_1
    if-ge v6, v5, :cond_d

    .line 126
    aget-object v7, v3, v6

    .line 128
    const/4 v8, 0x0

    .line 129
    if-nez v7, :cond_3

    .line 131
    goto/16 :goto_8

    .line 133
    :cond_3
    invoke-virtual {v7}, Ljava/lang/String;->isEmpty()Z

    .line 136
    move-result v9

    .line 137
    if-eqz v9, :cond_4

    .line 139
    goto/16 :goto_8

    .line 141
    :cond_4
    const-string v9, ","

    .line 143
    invoke-static {v7, v9}, Landroid/text/TextUtils;->split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    .line 146
    move-result-object v9

    .line 147
    array-length v10, v9

    .line 148
    const/4 v11, 0x5

    .line 149
    if-lt v10, v11, :cond_b

    .line 151
    array-length v10, v9

    .line 152
    const/4 v12, 0x7

    .line 153
    if-le v10, v12, :cond_5

    .line 155
    goto/16 :goto_8

    .line 157
    :cond_5
    :try_start_1
    aget-object v10, v9, v2

    .line 159
    invoke-static {v10}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 162
    move-result v10

    .line 163
    array-length v13, v9

    .line 164
    const/4 v14, 0x6

    .line 165
    if-lt v13, v14, :cond_6

    .line 167
    aget-object v11, v9, v11

    .line 169
    invoke-static {v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 172
    move-result v11

    .line 173
    goto :goto_2

    .line 174
    :catch_0
    move-exception v9

    .line 175
    goto :goto_7

    .line 176
    :cond_6
    const/4 v11, -0x1

    .line 177
    :goto_2
    array-length v13, v9

    .line 178
    if-ne v13, v12, :cond_7

    .line 180
    aget-object v12, v9, v14

    .line 182
    invoke-static {v12}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 185
    move-result v12

    .line 186
    goto :goto_3

    .line 187
    :cond_7
    move v12, v2

    .line 188
    :goto_3
    new-instance v13, Lcom/android/server/audio/AdiDeviceState;

    .line 190
    aget-object v14, v9, v4

    .line 192
    invoke-direct {v13, v10, v11, v14}, Lcom/android/server/audio/AdiDeviceState;-><init>(IILjava/lang/String;)V

    .line 195
    const/4 v10, 0x2

    .line 196
    aget-object v10, v9, v10

    .line 198
    invoke-static {v10}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 201
    move-result v10

    .line 202
    if-ne v10, v4, :cond_8

    .line 204
    move v10, v4

    .line 205
    goto :goto_4

    .line 206
    :cond_8
    move v10, v2

    .line 207
    :goto_4
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AdiDeviceState;->setSAEnabled(Z)V

    .line 210
    aget-object v10, v9, v1

    .line 212
    invoke-static {v10}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 215
    move-result v10

    .line 216
    if-ne v10, v4, :cond_9

    .line 218
    move v10, v4

    .line 219
    goto :goto_5

    .line 220
    :cond_9
    move v10, v2

    .line 221
    :goto_5
    invoke-virtual {v13, v10}, Lcom/android/server/audio/AdiDeviceState;->setHasHeadTracker(Z)V

    .line 224
    const/4 v10, 0x4

    .line 225
    aget-object v9, v9, v10

    .line 227
    invoke-static {v9}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 230
    move-result v9

    .line 231
    if-ne v9, v4, :cond_a

    .line 233
    move v9, v4

    .line 234
    goto :goto_6

    .line 235
    :cond_a
    move v9, v2

    .line 236
    :goto_6
    invoke-virtual {v13, v9}, Lcom/android/server/audio/AdiDeviceState;->setHeadTrackerEnabled(Z)V

    .line 239
    invoke-virtual {v13, v12}, Lcom/android/server/audio/AdiDeviceState;->setAudioDeviceCategory(I)V

    .line 242
    invoke-virtual {v13}, Lcom/android/server/audio/AdiDeviceState;->updateAudioDeviceCategory()Z
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0

    .line 245
    move-object v8, v13

    .line 246
    goto :goto_8

    .line 247
    :goto_7
    const-string/jumbo v10, "unable to parse setting for AdiDeviceState: "

    .line 250
    invoke-virtual {v10, v7}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 253
    move-result-object v7

    .line 254
    const-string v10, "AS.AdiDeviceState"

    .line 256
    invoke-static {v10, v7, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 259
    :cond_b
    :goto_8
    if-eqz v8, :cond_c

    .line 261
    invoke-virtual {v0, v8, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addOrUpdateDeviceSAStateInInventory(Lcom/android/server/audio/AdiDeviceState;Z)V

    .line 264
    invoke-virtual {v0, v8, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addOrUpdateAudioDeviceCategoryInInventory(Lcom/android/server/audio/AdiDeviceState;Z)V

    .line 267
    :cond_c
    add-int/lit8 v6, v6, 0x1

    .line 269
    goto/16 :goto_1

    .line 271
    :catchall_0
    move-exception p0

    .line 272
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 273
    throw p0

    .line 274
    :cond_d
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 276
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 278
    invoke-virtual {p0}, Lcom/android/server/audio/AudioDeviceBroker;->getImmutableDeviceInventory()Ljava/util/Collection;

    .line 281
    move-result-object p0

    .line 282
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 285
    check-cast p0, Ljava/util/ArrayList;

    .line 287
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 290
    move-result-object p0

    .line 291
    :cond_e
    :goto_9
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 294
    move-result v3

    .line 295
    if-eqz v3, :cond_10

    .line 297
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 300
    move-result-object v3

    .line 301
    check-cast v3, Lcom/android/server/audio/AdiDeviceState;

    .line 303
    invoke-virtual {v3}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 306
    move-result v5

    .line 307
    if-eqz v5, :cond_e

    .line 309
    new-instance v5, Landroid/media/ISoundDose$AudioDeviceCategory;

    .line 311
    invoke-direct {v5}, Landroid/media/ISoundDose$AudioDeviceCategory;-><init>()V

    .line 314
    invoke-virtual {v3}, Lcom/android/server/audio/AdiDeviceState;->getDeviceAddress()Ljava/lang/String;

    .line 317
    move-result-object v6

    .line 318
    iput-object v6, v5, Landroid/media/ISoundDose$AudioDeviceCategory;->address:Ljava/lang/String;

    .line 320
    invoke-virtual {v3}, Lcom/android/server/audio/AdiDeviceState;->getInternalDeviceType()I

    .line 323
    move-result v6

    .line 324
    iput v6, v5, Landroid/media/ISoundDose$AudioDeviceCategory;->internalAudioType:I

    .line 326
    invoke-virtual {v3}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 329
    move-result v3

    .line 330
    if-ne v3, v1, :cond_f

    .line 332
    move v3, v4

    .line 333
    goto :goto_a

    .line 334
    :cond_f
    move v3, v2

    .line 335
    :goto_a
    iput-boolean v3, v5, Landroid/media/ISoundDose$AudioDeviceCategory;->csdCompatible:Z

    .line 337
    iget-object v3, v0, Lcom/android/server/audio/SoundDoseHelper;->mCachedAudioDeviceCategories:Ljava/util/ArrayList;

    .line 339
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 342
    goto :goto_9

    .line 343
    :cond_10
    return-void
.end method

.method public final onReinitVolumes(Ljava/lang/String;)V
    .locals 12

    .line 1
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x1

    .line 6
    sub-int/2addr v0, v1

    .line 7
    :goto_0
    const-string v2, "AS.AudioService"

    .line 9
    const/4 v3, 0x0

    .line 10
    if-ltz v0, :cond_1

    .line 12
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 14
    aget-object v4, v4, v0

    .line 16
    iget v5, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 18
    div-int/lit8 v5, v5, 0xa

    .line 20
    iget v6, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 22
    div-int/lit8 v6, v6, 0xa

    .line 24
    invoke-static {v0, v5, v6}, Landroid/media/AudioSystem;->initStreamVolume(III)I

    .line 27
    move-result v5

    .line 28
    if-eqz v5, :cond_0

    .line 30
    new-instance v4, Ljava/lang/StringBuilder;

    .line 32
    const-string v6, "Failed to initStreamVolume ("

    .line 34
    invoke-direct {v4, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 37
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 40
    const-string v6, ") for stream "

    .line 42
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 45
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 48
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 51
    move-result-object v0

    .line 52
    invoke-static {v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 55
    goto :goto_1

    .line 56
    :cond_0
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 59
    add-int/lit8 v0, v0, -0x1

    .line 61
    goto :goto_0

    .line 62
    :cond_1
    move v5, v3

    .line 63
    :goto_1
    if-eqz v5, :cond_2

    .line 65
    sget-object v0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 67
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 69
    new-instance v4, Ljava/lang/StringBuilder;

    .line 71
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 74
    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 77
    const-string v6, ": initStreamVolume failed with "

    .line 79
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 82
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 85
    const-string v5, " will retry"

    .line 87
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 90
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 93
    move-result-object v4

    .line 94
    invoke-direct {v3, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 97
    invoke-virtual {v3, v1, v2}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 100
    invoke-virtual {v0, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 103
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 105
    const/4 v7, 0x1

    .line 106
    const/4 v8, 0x0

    .line 107
    const/16 v6, 0x22

    .line 109
    const/4 v9, 0x0

    .line 110
    const/16 v11, 0x7d0

    .line 112
    move-object v10, p1

    .line 113
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 116
    return-void

    .line 117
    :cond_2
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->checkVolumeRangeInitialization(Ljava/lang/String;)Z

    .line 120
    move-result p0

    .line 121
    if-nez p0, :cond_3

    .line 123
    return-void

    .line 124
    :cond_3
    sget-object p0, Lcom/android/server/audio/AudioService;->sLifecycleLogger:Lcom/android/server/utils/EventLogger;

    .line 126
    new-instance v0, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 128
    const-string v1, ": initStreamVolume succeeded"

    .line 130
    invoke-static {p1, v1}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 133
    move-result-object p1

    .line 134
    invoke-direct {v0, p1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 137
    invoke-virtual {v0, v3, v2}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 140
    invoke-virtual {p0, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 143
    return-void
.end method

.method public final onRoutingUpdatedFromAudioThread()V
    .locals 6

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasSpatializerEffect:Z

    .line 3
    if-eqz v0, :cond_0

    .line 5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 7
    invoke-virtual {v0}, Lcom/android/server/audio/SpatializerHelper;->onRoutingUpdated()V

    .line 10
    :cond_0
    const-string/jumbo v0, "checkMuteAwaitConnection device "

    .line 13
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionLock:Ljava/lang/Object;

    .line 15
    monitor-enter v1

    .line 16
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 18
    if-nez v2, :cond_1

    .line 20
    monitor-exit v1

    .line 21
    goto :goto_0

    .line 22
    :catchall_0
    move-exception p0

    .line 23
    goto :goto_1

    .line 24
    :cond_1
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMutedUsagesAwaitingConnection:[I

    .line 26
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 28
    invoke-virtual {v4, v2}, Lcom/android/server/audio/AudioDeviceBroker;->isDeviceConnected(Landroid/media/AudioDeviceAttributes;)Z

    .line 31
    move-result v4

    .line 32
    if-nez v4, :cond_2

    .line 34
    monitor-exit v1

    .line 35
    goto :goto_0

    .line 36
    :cond_2
    const/4 v4, 0x0

    .line 37
    iput-object v4, p0, Lcom/android/server/audio/AudioService;->mMutingExpectedDevice:Landroid/media/AudioDeviceAttributes;

    .line 39
    iput-object v4, p0, Lcom/android/server/audio/AudioService;->mMutedUsagesAwaitingConnection:[I

    .line 41
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 43
    new-instance v5, Ljava/lang/StringBuilder;

    .line 45
    invoke-direct {v5, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 48
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 51
    const-string v0, " connected, unmuting"

    .line 53
    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 56
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 59
    move-result-object v0

    .line 60
    invoke-virtual {v4, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->cancelMuteAwaitConnection(Ljava/lang/String;)V

    .line 63
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 64
    new-instance v0, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;

    .line 66
    const/4 v1, 0x2

    .line 67
    invoke-direct {v0, p0, v2, v3, v1}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/AudioDeviceAttributes;[II)V

    .line 70
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->dispatchMuteAwaitConnection(Ljava/util/function/BiConsumer;)V

    .line 73
    :goto_0
    return-void

    .line 74
    :goto_1
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 75
    throw p0
.end method

.method public final onRoutingUpdatedFromNative()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 3
    const/4 v5, 0x0

    .line 4
    const/4 v6, 0x0

    .line 5
    const/16 v1, 0x29

    .line 7
    const/4 v2, 0x0

    .line 8
    const/4 v3, 0x0

    .line 9
    const/4 v4, 0x0

    .line 10
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13
    return-void
.end method

.method public final onSetAppDevice(IIZ)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 3
    invoke-virtual {v0, p1, p2, p3}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppDevice(IIZ)V

    .line 6
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 8
    const/4 v0, 0x0

    .line 9
    invoke-virtual {p2, p1, v0}, Lcom/android/server/audio/MediaFocusControl;->updateFocusRequester(IZ)V

    .line 12
    new-instance p1, Landroid/content/Intent;

    .line 14
    const-string p2, "android.intent.action.MULTISOUND_STATE_CHANGE"

    .line 16
    invoke-direct {p1, p2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 19
    const/4 p2, 0x0

    .line 20
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 23
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 25
    if-eqz p1, :cond_0

    .line 27
    const/4 p2, -0x1

    .line 28
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOn()Z

    .line 31
    move-result v0

    .line 32
    invoke-virtual {p1, p2, v0}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->updateMultiSoundInfo(IZ)V

    .line 35
    :cond_0
    if-eqz p3, :cond_1

    .line 37
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 39
    invoke-virtual {p0}, Lcom/samsung/android/server/audio/MultiSoundManager;->showNotification()V

    .line 42
    :cond_1
    return-void
.end method

.method public final onSetStreamVolume(IILjava/lang/String;IIZ)V
    .locals 9

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 3
    aget p1, v0, p1

    .line 5
    and-int/lit8 v0, p4, 0x2

    .line 7
    const/4 v8, 0x0

    .line 8
    if-nez v0, :cond_1

    .line 10
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getUiSoundsStreamType()I

    .line 13
    move-result v0

    .line 14
    if-ne p1, v0, :cond_0

    .line 16
    goto :goto_1

    .line 17
    :cond_0
    :goto_0
    move-object v2, p3

    .line 18
    goto :goto_2

    .line 19
    :cond_1
    :goto_1
    const-string v0, "AS.AudioService.onSetStreamVolume("

    .line 21
    const-string v1, ")"

    .line 23
    invoke-static {v0, p3, v1}, Lcom/android/internal/util/jobs/XmlUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 26
    move-result-object p3

    .line 27
    invoke-virtual {p0, p1, p2, p4}, Lcom/android/server/audio/AudioService;->getNewRingerMode(III)I

    .line 30
    move-result p4

    .line 31
    invoke-virtual {p0, p4, p3, v8}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 34
    goto :goto_0

    .line 35
    :goto_2
    const/4 v6, 0x0

    .line 36
    move-object v1, p0

    .line 37
    move v3, p1

    .line 38
    move v4, p2

    .line 39
    move v5, p5

    .line 40
    move v7, p6

    .line 41
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(Ljava/lang/String;IIIZZ)V

    .line 44
    if-eqz p2, :cond_4

    .line 46
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 48
    monitor-enter p2

    .line 49
    move p3, v8

    .line 50
    :goto_3
    :try_start_0
    iget-object p4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 52
    array-length p5, p4

    .line 53
    if-ge p3, p5, :cond_3

    .line 55
    sget-object p5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 57
    aget p5, p5, p3

    .line 59
    if-ne p1, p5, :cond_2

    .line 61
    aget-object p4, p4, p3

    .line 63
    const-string/jumbo p5, "onSetStreamVolume"

    .line 66
    invoke-virtual {p4, p5, v8}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 69
    goto :goto_4

    .line 70
    :catchall_0
    move-exception p0

    .line 71
    goto :goto_5

    .line 72
    :cond_2
    :goto_4
    add-int/lit8 p3, p3, 0x1

    .line 74
    goto :goto_3

    .line 75
    :cond_3
    monitor-exit p2

    .line 76
    goto :goto_6

    .line 77
    :goto_5
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 78
    throw p0

    .line 79
    :cond_4
    :goto_6
    return-void
.end method

.method public final onShellCommand(Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)V
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MANAGE_AUDIO_POLICY"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    new-instance v1, Lcom/android/server/audio/AudioManagerShellCommand;

    .line 13
    invoke-direct {v1, p0}, Lcom/android/server/audio/AudioManagerShellCommand;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 16
    move-object v2, p0

    .line 17
    move-object v3, p1

    .line 18
    move-object v4, p2

    .line 19
    move-object v5, p3

    .line 20
    move-object v6, p4

    .line 21
    move-object v7, p5

    .line 22
    move-object v8, p6

    .line 23
    invoke-virtual/range {v1 .. v8}, Landroid/os/ShellCommand;->exec(Landroid/os/Binder;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;[Ljava/lang/String;Landroid/os/ShellCallback;Landroid/os/ResultReceiver;)I

    .line 26
    return-void

    .line 27
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 29
    const-string p1, "Missing MANAGE_AUDIO_POLICY permission"

    .line 31
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 34
    throw p0
.end method

.method public final onSystemReady()V
    .locals 15

    .line 1
    const/4 v0, -0x1

    .line 2
    const/4 v1, 0x1

    .line 3
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 5
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 7
    const/4 v7, 0x0

    .line 8
    const/4 v8, 0x0

    .line 9
    const/4 v3, 0x7

    .line 10
    const/4 v4, 0x2

    .line 11
    const/4 v5, 0x0

    .line 12
    const/4 v6, 0x0

    .line 13
    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 16
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 18
    iget-object v3, v2, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 20
    monitor-enter v3

    .line 21
    :try_start_0
    iget-object v4, v2, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 23
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_4

    .line 24
    :try_start_1
    iget-object v5, v2, Lcom/android/server/audio/AudioDeviceBroker;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 26
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService;->getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 29
    move-result-object v5

    .line 30
    const/4 v6, 0x0

    .line 31
    if-eqz v5, :cond_0

    .line 33
    new-instance v7, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;

    .line 35
    iget v8, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 37
    iget v9, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPid:I

    .line 39
    iget v5, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUid:I

    .line 41
    invoke-direct {v7, v8, v9, v5}, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;-><init>(III)V

    .line 44
    goto :goto_0

    .line 45
    :cond_0
    new-instance v7, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;

    .line 47
    invoke-direct {v7, v6, v6, v6}, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;-><init>(III)V

    .line 50
    :goto_0
    iput-object v7, v2, Lcom/android/server/audio/AudioDeviceBroker;->mAudioModeOwner:Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;

    .line 52
    iget-object v5, v2, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 54
    invoke-virtual {v5}, Lcom/android/server/audio/BtHelper;->onSystemReady()V

    .line 57
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_5

    .line 58
    :try_start_2
    monitor-exit v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_4

    .line 59
    iget-object v2, v2, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 61
    iput-boolean v1, v2, Lcom/android/server/audio/AudioDeviceInventory;->mSystemReady:Z

    .line 63
    sget-object v3, Lcom/samsung/android/server/audio/utils/AudioUtils;->DEVICE_OUT_WIRED_DEVICE_SET:Ljava/util/Set;

    .line 65
    :try_start_3
    new-instance v3, Ljava/io/FileReader;

    .line 67
    const-string v4, "/sys/class/switch/h2w/state"

    .line 69
    sget-object v5, Ljava/nio/charset/StandardCharsets;->UTF_8:Ljava/nio/charset/Charset;

    .line 71
    invoke-direct {v3, v4, v5}, Ljava/io/FileReader;-><init>(Ljava/lang/String;Ljava/nio/charset/Charset;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    .line 74
    :try_start_4
    invoke-virtual {v3}, Ljava/io/FileReader;->ready()Z

    .line 77
    move-result v4

    .line 78
    if-eqz v4, :cond_1

    .line 80
    const/16 v4, 0x400

    .line 82
    new-array v5, v4, [C

    .line 84
    invoke-virtual {v3, v5, v6, v4}, Ljava/io/FileReader;->read([CII)I

    .line 87
    move-result v4

    .line 88
    new-instance v7, Ljava/lang/String;

    .line 90
    invoke-direct {v7, v5, v6, v4}, Ljava/lang/String;-><init>([CII)V

    .line 93
    invoke-virtual {v7}, Ljava/lang/String;->trim()Ljava/lang/String;

    .line 96
    move-result-object v4

    .line 97
    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 100
    move-result v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 101
    goto :goto_1

    .line 102
    :catchall_0
    move-exception v4

    .line 103
    goto :goto_2

    .line 104
    :cond_1
    move v4, v0

    .line 105
    :goto_1
    :try_start_5
    invoke-virtual {v3}, Ljava/io/FileReader;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0

    .line 108
    goto :goto_5

    .line 109
    :catch_0
    move-exception v3

    .line 110
    goto :goto_4

    .line 111
    :goto_2
    :try_start_6
    invoke-virtual {v3}, Ljava/io/FileReader;->close()V
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 114
    goto :goto_3

    .line 115
    :catchall_1
    move-exception v3

    .line 116
    :try_start_7
    invoke-virtual {v4, v3}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 119
    :goto_3
    throw v4
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_1

    .line 120
    :catch_1
    move-exception v3

    .line 121
    move v4, v0

    .line 122
    :goto_4
    invoke-virtual {v3}, Ljava/io/IOException;->printStackTrace()V

    .line 125
    :goto_5
    const-string v3, "AS.AudioDeviceInventory"

    .line 127
    const-string/jumbo v5, "h2w-before-boot-completed"

    .line 130
    const-string v7, ""

    .line 132
    const/4 v8, 0x4

    .line 133
    const/16 v9, 0x8

    .line 135
    const/4 v10, 0x2

    .line 136
    if-eq v4, v1, :cond_3

    .line 138
    if-eq v4, v10, :cond_2

    .line 140
    goto :goto_6

    .line 141
    :cond_2
    new-instance v4, Landroid/media/AudioDeviceAttributes;

    .line 143
    invoke-direct {v4, v9, v7, v5}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    .line 146
    invoke-virtual {v2, v4, v1, v3}, Lcom/android/server/audio/AudioDeviceInventory;->setWiredDeviceConnectionState(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 149
    goto :goto_6

    .line 150
    :cond_3
    new-instance v4, Landroid/media/AudioDeviceAttributes;

    .line 152
    invoke-direct {v4, v8, v7, v5}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    .line 155
    invoke-virtual {v2, v4, v1, v3}, Lcom/android/server/audio/AudioDeviceInventory;->setWiredDeviceConnectionState(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 158
    :goto_6
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 160
    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 163
    move-result-object v2

    .line 164
    const-string v3, "android.hardware.hdmi.cec"

    .line 166
    invoke-virtual {v2, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    .line 169
    move-result v2

    .line 170
    if-eqz v2, :cond_6

    .line 172
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 174
    monitor-enter v2

    .line 175
    :try_start_8
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 177
    const-class v4, Landroid/hardware/hdmi/HdmiControlManager;

    .line 179
    invoke-virtual {v3, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 182
    move-result-object v3

    .line 183
    check-cast v3, Landroid/hardware/hdmi/HdmiControlManager;

    .line 185
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 187
    if-eqz v3, :cond_5

    .line 189
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mHdmiControlStatusChangeListenerCallback:Lcom/android/server/audio/AudioService$MyHdmiControlStatusChangeListenerCallback;

    .line 191
    invoke-virtual {v3, v4}, Landroid/hardware/hdmi/HdmiControlManager;->addHdmiControlStatusChangeListener(Landroid/hardware/hdmi/HdmiControlManager$HdmiControlStatusChangeListener;)V

    .line 194
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 196
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 198
    invoke-virtual {v4}, Landroid/content/Context;->getMainExecutor()Ljava/util/concurrent/Executor;

    .line 201
    move-result-object v4

    .line 202
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mMyHdmiCecVolumeControlFeatureListener:Lcom/android/server/audio/AudioService$MyHdmiCecVolumeControlFeatureListener;

    .line 204
    invoke-virtual {v3, v4, v5}, Landroid/hardware/hdmi/HdmiControlManager;->addHdmiCecVolumeControlFeatureListener(Ljava/util/concurrent/Executor;Landroid/hardware/hdmi/HdmiControlManager$HdmiCecVolumeControlFeatureListener;)V

    .line 207
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 209
    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getTvClient()Landroid/hardware/hdmi/HdmiTvClient;

    .line 212
    move-result-object v3

    .line 213
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 215
    if-eqz v3, :cond_4

    .line 217
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 219
    sget-object v4, Landroid/media/AudioSystem;->DEVICE_ALL_HDMI_SYSTEM_AUDIO_AND_SPEAKER_SET:Ljava/util/Set;

    .line 221
    invoke-interface {v3, v4}, Ljava/util/Set;->removeAll(Ljava/util/Collection;)Z

    .line 224
    goto :goto_7

    .line 225
    :catchall_2
    move-exception p0

    .line 226
    goto :goto_8

    .line 227
    :cond_4
    :goto_7
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 229
    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getPlaybackClient()Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 232
    move-result-object v3

    .line 233
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiPlaybackClient:Landroid/hardware/hdmi/HdmiPlaybackClient;

    .line 235
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 237
    invoke-virtual {v3}, Landroid/hardware/hdmi/HdmiControlManager;->getAudioSystemClient()Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 240
    move-result-object v3

    .line 241
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 243
    :cond_5
    monitor-exit v2

    .line 244
    goto :goto_9

    .line 245
    :goto_8
    monitor-exit v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 246
    throw p0

    .line 247
    :cond_6
    :goto_9
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mSupportsMicPrivacyToggle:Z

    .line 249
    if-eqz v2, :cond_7

    .line 251
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSensorPrivacyManagerInternal:Landroid/hardware/SensorPrivacyManagerInternal;

    .line 253
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda24;

    .line 255
    invoke-direct {v3, p0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda24;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 258
    invoke-virtual {v2, v1, v3}, Landroid/hardware/SensorPrivacyManagerInternal;->addSensorPrivacyListenerForAllUsers(ILandroid/hardware/SensorPrivacyManagerInternal$OnUserSensorPrivacyChangedListener;)V

    .line 261
    :cond_7
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 263
    const-string/jumbo v3, "notification"

    .line 266
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 269
    move-result-object v2

    .line 270
    check-cast v2, Landroid/app/NotificationManager;

    .line 272
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 274
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 276
    invoke-virtual {v2, v1}, Lcom/android/server/audio/SoundDoseHelper;->configureSafeMedia(Z)V

    .line 279
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 281
    const-string v3, "accessibility"

    .line 283
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 286
    move-result-object v2

    .line 287
    check-cast v2, Landroid/view/accessibility/AccessibilityManager;

    .line 289
    invoke-virtual {v2}, Landroid/view/accessibility/AccessibilityManager;->isTouchExplorationEnabled()Z

    .line 292
    move-result v3

    .line 293
    invoke-static {v3}, Lcom/android/server/audio/AudioService;->updateDefaultStreamOverrideDelay(Z)V

    .line 296
    invoke-virtual {v2}, Landroid/view/accessibility/AccessibilityManager;->isAccessibilityVolumeStreamActive()Z

    .line 299
    move-result v3

    .line 300
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->updateA11yVolumeAlias(Z)V

    .line 303
    const/4 v3, 0x0

    .line 304
    invoke-virtual {v2, p0, v3}, Landroid/view/accessibility/AccessibilityManager;->addTouchExplorationStateChangeListener(Landroid/view/accessibility/AccessibilityManager$TouchExplorationStateChangeListener;Landroid/os/Handler;)V

    .line 307
    invoke-virtual {v2, p0}, Landroid/view/accessibility/AccessibilityManager;->addAccessibilityServicesStateChangeListener(Landroid/view/accessibility/AccessibilityManager$AccessibilityServicesStateChangeListener;)V

    .line 310
    new-instance v2, Lcom/android/server/audio/AudioService$RoleObserver;

    .line 312
    invoke-direct {v2, p0}, Lcom/android/server/audio/AudioService$RoleObserver;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 315
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

    .line 317
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$RoleObserver;->register()V

    .line 320
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->onIndicateSystemReady()V

    .line 323
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 325
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 328
    invoke-static {}, Landroid/media/AudioSystem;->isMicrophoneMuted()Z

    .line 331
    move-result v2

    .line 332
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 334
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->setMicMuteFromSwitchInput()V

    .line 337
    sget-object v2, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    .line 339
    aget v4, v2, v8

    .line 341
    const/high16 v5, 0x400000

    .line 343
    invoke-static {v8, v4, v5}, Landroid/media/AudioSystem;->getStreamVolumeDB(III)F

    .line 346
    move-result v4

    .line 347
    invoke-static {v4}, Ljava/lang/Float;->isNaN(F)Z

    .line 350
    move-result v4

    .line 351
    if-eqz v4, :cond_8

    .line 353
    move v5, v10

    .line 354
    :cond_8
    sget-object v4, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    .line 356
    aget v7, v4, v8

    .line 358
    :goto_a
    aget v11, v2, v8

    .line 360
    if-lt v7, v11, :cond_a

    .line 362
    invoke-static {v8, v7, v5}, Landroid/media/AudioSystem;->getStreamVolumeDB(III)F

    .line 365
    move-result v11

    .line 366
    const/high16 v12, -0x3df00000    # -36.0f

    .line 368
    cmpg-float v11, v11, v12

    .line 370
    if-gez v11, :cond_9

    .line 372
    goto :goto_b

    .line 373
    :cond_9
    add-int/2addr v7, v0

    .line 374
    goto :goto_a

    .line 375
    :cond_a
    :goto_b
    aget v2, v2, v8

    .line 377
    if-gt v7, v2, :cond_b

    .line 379
    goto :goto_c

    .line 380
    :cond_b
    add-int/2addr v7, v1

    .line 381
    aget v2, v4, v8

    .line 383
    invoke-static {v7, v2}, Ljava/lang/Math;->min(II)I

    .line 386
    move-result v2

    .line 387
    :goto_c
    sget-object v4, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 389
    array-length v5, v4

    .line 390
    move v7, v6

    .line 391
    :goto_d
    if-ge v7, v5, :cond_d

    .line 393
    aget v11, v4, v7

    .line 395
    sget-object v12, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 397
    aget v12, v12, v11

    .line 399
    if-ne v12, v8, :cond_c

    .line 401
    iget-object v12, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 403
    aget-object v11, v12, v11

    .line 405
    mul-int/lit8 v12, v2, 0xa

    .line 407
    iput v12, v11, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMinNoPerm:I

    .line 409
    iget v13, v11, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 411
    if-ge v12, v13, :cond_c

    .line 413
    new-instance v12, Ljava/lang/StringBuilder;

    .line 415
    const-string v14, "Invalid mIndexMinNoPerm for stream "

    .line 417
    invoke-direct {v12, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 420
    iget v14, v11, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 422
    invoke-virtual {v12, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 425
    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 428
    move-result-object v12

    .line 429
    const-string v14, "AS.AudioService"

    .line 431
    invoke-static {v14, v12}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 434
    iput v13, v11, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMinNoPerm:I

    .line 436
    :cond_c
    add-int/2addr v7, v1

    .line 437
    goto :goto_d

    .line 438
    :cond_d
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateVibratorInfos()V

    .line 441
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 443
    monitor-enter v2

    .line 444
    :try_start_9
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 446
    invoke-static {v4}, Landroid/media/AudioSystem;->setSupportedSystemUsages([I)I

    .line 449
    monitor-exit v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 450
    const-string/jumbo v2, "onCustomSystemReady"

    .line 453
    const-wide/16 v4, 0x100

    .line 455
    invoke-static {v4, v5, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 458
    const-string v4, "AS.AudioService"

    .line 460
    invoke-static {v4, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 463
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 465
    const-string/jumbo v5, "keyguard"

    .line 468
    invoke-virtual {v2, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 471
    move-result-object v2

    .line 472
    check-cast v2, Landroid/app/KeyguardManager;

    .line 474
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mKeyguardManager:Landroid/app/KeyguardManager;

    .line 476
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 478
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 480
    iput-object v5, v2, Lcom/android/server/audio/PlaybackActivityMonitor;->mAudioHandler:Landroid/os/Handler;

    .line 482
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_RECORDING_POPUP:Z

    .line 484
    if-eqz v2, :cond_e

    .line 486
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 488
    iput-object v5, v2, Lcom/android/server/audio/RecordingActivityMonitor;->mAudioHandler:Landroid/os/Handler;

    .line 490
    :cond_e
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 492
    const-string/jumbo v2, "false"

    .line 495
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    .line 497
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    .line 499
    const-string/jumbo v2, "off"

    .line 502
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mHAC:Ljava/lang/String;

    .line 504
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 506
    const-string/jumbo v3, "l_set_from_audioservice"

    .line 509
    invoke-virtual {v2, v3}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 512
    const-class v2, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 514
    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 517
    move-result-object v2

    .line 518
    check-cast v2, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 520
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 522
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 524
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 526
    sget-object v5, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sInstance:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 528
    if-nez v5, :cond_f

    .line 530
    new-instance v5, Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 532
    invoke-direct {v5, v2, v3}, Lcom/samsung/android/server/audio/ScreenSharingHelper;-><init>(Landroid/content/Context;Lcom/android/server/audio/MediaFocusControl;)V

    .line 535
    sput-object v5, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sInstance:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 537
    :cond_f
    sget-object v2, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sInstance:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 539
    iput-object v2, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 541
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SAFE_MEDIA_VOLUME:Z

    .line 543
    if-eqz v2, :cond_11

    .line 545
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 547
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 549
    iput-object v3, v2, Lcom/android/server/audio/SoundDoseHelper;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 551
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 553
    const-string/jumbo v3, "ear_shock_condition"

    .line 556
    invoke-static {v2, v3, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 559
    move-result v2

    .line 560
    if-eqz v2, :cond_10

    .line 562
    move v2, v1

    .line 563
    goto :goto_e

    .line 564
    :cond_10
    move v2, v6

    .line 565
    :goto_e
    iput-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsVolumeEffectOn:Z

    .line 567
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 569
    invoke-virtual {v3, v2}, Lcom/android/server/audio/SoundDoseHelper;->initSafeMediaVolumeIndex(Z)V

    .line 572
    :cond_11
    new-instance v2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda4;

    .line 574
    invoke-direct {v2, v1, p0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda4;-><init>(ILjava/lang/Object;)V

    .line 577
    invoke-static {v2}, Lcom/samsung/android/server/audio/AudioExecutor;->execute(Ljava/lang/Runnable;)V

    .line 580
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 582
    const-string/jumbo v3, "multisound_state"

    .line 585
    invoke-static {v2, v3, v6}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 588
    move-result v3

    .line 589
    if-eqz v3, :cond_12

    .line 591
    move v3, v1

    .line 592
    goto :goto_f

    .line 593
    :cond_12
    move v3, v6

    .line 594
    :goto_f
    const-string/jumbo v5, "multisound_app"

    .line 597
    invoke-static {v2, v5}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 600
    move-result-object v5

    .line 601
    const-string/jumbo v7, "multisound_devicetype"

    .line 604
    invoke-static {v2, v7, v0}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 607
    move-result v2

    .line 608
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 610
    invoke-virtual {v7}, Lcom/samsung/android/server/audio/MultiSoundManager;->updateAudioServiceNotificationChannel()V

    .line 613
    invoke-virtual {p0, v3, v1}, Lcom/android/server/audio/AudioService;->setMultiSoundOn(ZZ)V

    .line 616
    invoke-static {v5}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 619
    move-result v3

    .line 620
    if-nez v3, :cond_15

    .line 622
    const-string v3, ":"

    .line 624
    invoke-virtual {v5, v3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    .line 627
    move-result-object v3

    .line 628
    array-length v5, v3

    .line 629
    :goto_10
    if-ge v6, v5, :cond_15

    .line 631
    aget-object v7, v3, v6

    .line 633
    invoke-static {v7}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 636
    move-result v8

    .line 637
    if-nez v8, :cond_14

    .line 639
    if-eq v2, v0, :cond_14

    .line 641
    iget-object v8, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 643
    invoke-static {v8, v7}, Lcom/samsung/android/server/audio/utils/AudioUtils;->getUidForPackage(Landroid/content/Context;Ljava/lang/String;)I

    .line 646
    move-result v7

    .line 647
    if-eqz v7, :cond_14

    .line 649
    if-ne v2, v1, :cond_13

    .line 651
    move v8, v9

    .line 652
    goto :goto_11

    .line 653
    :cond_13
    move v8, v10

    .line 654
    :goto_11
    :try_start_a
    invoke-virtual {p0, v7, v8, v1}, Lcom/android/server/audio/AudioService;->setAppDevice(IIZ)V
    :try_end_a
    .catch Ljava/lang/IllegalArgumentException; {:try_start_a .. :try_end_a} :catch_2

    .line 657
    goto :goto_12

    .line 658
    :catch_2
    move-exception v7

    .line 659
    const-string/jumbo v8, "set app device failed"

    .line 662
    invoke-static {v4, v8, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 665
    :cond_14
    :goto_12
    add-int/2addr v6, v1

    .line 666
    goto :goto_10

    .line 667
    :cond_15
    invoke-static {}, Landroid/os/Trace;->endSection()V

    .line 670
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 672
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 675
    new-instance v0, Lcom/android/server/audio/AudioServiceExt$ExtSettingsObserver;

    .line 677
    invoke-direct {v0, p0}, Lcom/android/server/audio/AudioServiceExt$ExtSettingsObserver;-><init>(Lcom/android/server/audio/AudioServiceExt;)V

    .line 680
    new-instance v5, Landroid/content/IntentFilter;

    .line 682
    invoke-direct {v5}, Landroid/content/IntentFilter;-><init>()V

    .line 685
    const-string v0, "android.intent.action.ACTION_SHUTDOWN"

    .line 687
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 690
    const-string v0, "android.intent.action.USER_SWITCHED"

    .line 692
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 695
    const-string v0, "android.intent.action.SCREEN_ON"

    .line 697
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 700
    const-string v0, "android.intent.action.SCREEN_OFF"

    .line 702
    const-string v2, "android.settings.ALL_SOUND_MUTE"

    .line 704
    const-string/jumbo v3, "com.samsung.intent.action.WB_AMR"

    .line 707
    const-string/jumbo v4, "com.sec.media.action.AUDIOCORE_LOGGING"

    .line 710
    invoke-static {v5, v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticOutline0;->m(Landroid/content/IntentFilter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 713
    const-string/jumbo v0, "com.sec.android.intent.action.DHR_HQM_REFRESH_REQ"

    .line 716
    const-string v2, "android.intent.action.ACTION_SUBINFO_RECORD_UPDATED"

    .line 718
    const-string/jumbo v3, "com.android.launcher3.quickstep.closeall"

    .line 721
    const-string/jumbo v4, "com.android.phone.action.PERSONALISE_CALL_SOUND_CHANGED"

    .line 724
    invoke-static {v5, v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticOutline0;->m(Landroid/content/IntentFilter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 727
    const-string/jumbo v0, "com.samsung.server.BatteryService.action.BATTERY_CONNECTION_STATE_CHANGED"

    .line 730
    invoke-virtual {v5, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 733
    iget-object v2, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 735
    iget-object v3, p0, Lcom/android/server/audio/AudioServiceExt;->mReceiver:Lcom/android/server/audio/AudioServiceExt$ExtBroadcastReceiver;

    .line 737
    sget-object v0, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 739
    iget-object v4, p0, Lcom/android/server/audio/AudioServiceExt;->mBroadcastHandlerThread:Landroid/os/HandlerThread;

    .line 741
    invoke-virtual {v4}, Landroid/os/HandlerThread;->getThreadHandler()Landroid/os/Handler;

    .line 744
    move-result-object v7

    .line 745
    const/4 v8, 0x2

    .line 746
    const/4 v6, 0x0

    .line 747
    move-object v4, v0

    .line 748
    invoke-virtual/range {v2 .. v8}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 751
    const-string/jumbo v2, "com.samsung.intent.action.SETTINGS_SOFT_RESET"

    .line 754
    invoke-static {v2}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;)Landroid/content/IntentFilter;

    .line 757
    move-result-object v9

    .line 758
    iget-object v6, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 760
    iget-object v7, p0, Lcom/android/server/audio/AudioServiceExt;->mResetSettingsReceiver:Lcom/android/server/audio/AudioServiceExt$ExtBroadcastReceiver;

    .line 762
    const-string/jumbo v10, "com.sec.android.settings.permission.SOFT_RESET"

    .line 765
    const/4 v11, 0x0

    .line 766
    const/4 v12, 0x2

    .line 767
    move-object v8, v0

    .line 768
    invoke-virtual/range {v6 .. v12}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;

    .line 771
    iget v0, p0, Lcom/android/server/audio/AudioServiceExt;->mAllSoundMute:I

    .line 773
    if-ne v0, v1, :cond_16

    .line 775
    invoke-virtual {p0}, Lcom/android/server/audio/AudioServiceExt;->setAllSoundMute()V

    .line 778
    :cond_16
    iget-object v0, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 780
    sget-object v1, Lcom/samsung/android/server/audio/DvfsHelper;->sInstance:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 782
    if-nez v1, :cond_17

    .line 784
    new-instance v1, Lcom/samsung/android/server/audio/DvfsHelper;

    .line 786
    new-instance v2, Lcom/samsung/android/server/audio/DvfsHelper$DefaultDvfsManagerFactory;

    .line 788
    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    .line 791
    invoke-direct {v1, v0, v2}, Lcom/samsung/android/server/audio/DvfsHelper;-><init>(Landroid/content/Context;Lcom/samsung/android/server/audio/DvfsHelper$DvfsManagerFactory;)V

    .line 794
    sput-object v1, Lcom/samsung/android/server/audio/DvfsHelper;->sInstance:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 796
    :cond_17
    sget-object v0, Lcom/samsung/android/server/audio/DvfsHelper;->sInstance:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 798
    iput-object v0, p0, Lcom/android/server/audio/AudioServiceExt;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 800
    iget-object v0, p0, Lcom/android/server/audio/AudioServiceExt;->mContext:Landroid/content/Context;

    .line 802
    sget-object v1, Lcom/samsung/android/server/audio/PhoneStateHelper;->sInstance:Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 804
    if-nez v1, :cond_18

    .line 806
    new-instance v1, Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 808
    invoke-direct {v1, v0}, Lcom/samsung/android/server/audio/PhoneStateHelper;-><init>(Landroid/content/Context;)V

    .line 811
    sput-object v1, Lcom/samsung/android/server/audio/PhoneStateHelper;->sInstance:Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 813
    :cond_18
    sget-object v0, Lcom/samsung/android/server/audio/PhoneStateHelper;->sInstance:Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 815
    iput-object v0, p0, Lcom/android/server/audio/AudioServiceExt;->mPhoneStateHelper:Lcom/samsung/android/server/audio/PhoneStateHelper;

    .line 817
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/PhoneStateHelper;->registerPhoneStateListener()V

    .line 820
    return-void

    .line 821
    :catchall_3
    move-exception p0

    .line 822
    :try_start_b
    monitor-exit v2
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 823
    throw p0

    .line 824
    :catchall_4
    move-exception p0

    .line 825
    goto :goto_13

    .line 826
    :catchall_5
    move-exception p0

    .line 827
    :try_start_c
    monitor-exit v4
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    .line 828
    :try_start_d
    throw p0

    .line 829
    :goto_13
    monitor-exit v3
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_4

    .line 830
    throw p0
.end method

.method public final onTouchExplorationStateChanged(Z)V
    .locals 0

    .line 1
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->updateDefaultStreamOverrideDelay(Z)V

    .line 4
    return-void
.end method

.method public final onUpdateAudioMode(IILjava/lang/String;Z)V
    .locals 31

    .line 1
    move-object/from16 v0, p0

    .line 3
    move/from16 v2, p2

    .line 5
    move-object/from16 v9, p3

    .line 7
    const-string/jumbo v1, "onUpdateAudioMode mExternalVoipModeOwner packageName = "

    .line 10
    const-string/jumbo v3, "onUpdateAudioMode packageName "

    .line 13
    const/4 v4, -0x1

    .line 14
    move/from16 v5, p1

    .line 16
    if-ne v5, v4, :cond_0

    .line 18
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getMode()I

    .line 21
    move-result v4

    .line 22
    move v10, v4

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    move v10, v5

    .line 25
    :goto_0
    const-string v4, ""

    .line 27
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 30
    move-result-object v5

    .line 31
    if-eqz v5, :cond_1

    .line 33
    iget v4, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 35
    iget v6, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUid:I

    .line 37
    iget v7, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPid:I

    .line 39
    iget-object v5, v5, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPackage:Ljava/lang/String;

    .line 41
    move v15, v4

    .line 42
    move-object v4, v5

    .line 43
    move v14, v6

    .line 44
    move v13, v7

    .line 45
    goto :goto_1

    .line 46
    :cond_1
    const/4 v13, 0x0

    .line 47
    const/4 v14, 0x0

    .line 48
    const/4 v15, 0x0

    .line 49
    :goto_1
    sget-boolean v5, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 51
    if-eqz v5, :cond_2

    .line 53
    const-string v6, "AS.AudioService"

    .line 55
    const-string/jumbo v7, "onUpdateAudioMode() new mode: "

    .line 58
    const-string v8, " uid = "

    .line 60
    const-string v12, " pid = "

    .line 62
    invoke-static {v15, v14, v7, v8, v12}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 65
    move-result-object v7

    .line 66
    const-string v8, " package = "

    .line 68
    const-string v12, " current mode: "

    .line 70
    invoke-static {v13, v8, v4, v12, v7}, Lcom/android/server/alarm/AlarmManagerService$DeliveryTracker$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 73
    iget-object v8, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 75
    invoke-virtual {v8}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 78
    move-result v8

    .line 79
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 82
    const-string v8, " requested mode: "

    .line 84
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 87
    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 90
    const-string v8, " requested pid: "

    .line 92
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 95
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 98
    const-string v8, " requesterPackage: "

    .line 100
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 103
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 109
    move-result-object v7

    .line 110
    invoke-static {v6, v7}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 113
    goto :goto_2

    .line 114
    :cond_2
    const-string v6, "AS.AudioService"

    .line 116
    const-string/jumbo v7, "onUpdateAudioMode() new mode: "

    .line 119
    const-string v8, ", current mode: "

    .line 121
    invoke-static {v15, v7, v8}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 124
    move-result-object v7

    .line 125
    iget-object v8, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 127
    invoke-virtual {v8}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 130
    move-result v8

    .line 131
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 134
    const-string v8, " requested mode: "

    .line 136
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 139
    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 142
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 145
    move-result-object v7

    .line 146
    invoke-static {v6, v7}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 149
    :goto_2
    const/4 v12, 0x3

    .line 150
    if-eqz v5, :cond_4

    .line 152
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 154
    iget-object v6, v6, Lcom/android/server/audio/AudioDeviceBroker;->mAudioModeOwner:Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;

    .line 156
    iget v7, v6, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;->mMode:I

    .line 158
    if-ne v7, v12, :cond_4

    .line 160
    if-eq v15, v7, :cond_3

    .line 162
    if-ne v10, v7, :cond_4

    .line 164
    :cond_3
    iget v6, v6, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;->mPid:I

    .line 166
    if-eq v6, v2, :cond_4

    .line 168
    const-string v6, "android"

    .line 170
    invoke-virtual {v6, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 173
    move-result v6

    .line 174
    if-nez v6, :cond_4

    .line 176
    const-string v6, "AS.AudioService"

    .line 178
    new-instance v7, Ljava/lang/StringBuilder;

    .line 180
    const-string/jumbo v8, "onUpdateAudioMode requesterPackage = "

    .line 183
    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 186
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 189
    const-string v8, " requestedMode = "

    .line 191
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 194
    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 197
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 200
    move-result-object v7

    .line 201
    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 204
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 206
    invoke-virtual {v6, v10, v9}, Lcom/samsung/android/server/audio/LiveTranslatorManager;->updateAudioMode(ILjava/lang/String;)V

    .line 209
    :cond_4
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 211
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 214
    move-result v6

    .line 215
    const/4 v8, 0x1

    .line 216
    if-ne v15, v6, :cond_6

    .line 218
    if-eqz p4, :cond_5

    .line 220
    goto :goto_3

    .line 221
    :cond_5
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 223
    invoke-virtual {v0, v15, v13, v8}, Lcom/android/server/audio/AudioServiceExt;->updateCallGuardInfo(IIZ)V

    .line 226
    goto/16 :goto_d

    .line 228
    :cond_6
    :goto_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 231
    move-result-wide v6

    .line 232
    if-eqz v5, :cond_a

    .line 234
    :try_start_0
    iget-object v11, v0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 236
    if-eqz v11, :cond_a

    .line 238
    if-ne v15, v10, :cond_8

    .line 240
    if-ne v15, v12, :cond_7

    .line 242
    const-string v11, "android"

    .line 244
    invoke-virtual {v11, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 247
    move-result v11

    .line 248
    if-eqz v11, :cond_7

    .line 250
    goto :goto_4

    .line 251
    :catchall_0
    move-exception v0

    .line 252
    goto/16 :goto_e

    .line 254
    :cond_7
    move-object v4, v9

    .line 255
    goto :goto_5

    .line 256
    :cond_8
    :goto_4
    const-string v11, "AS.AudioService"

    .line 258
    new-instance v8, Ljava/lang/StringBuilder;

    .line 260
    invoke-direct {v8, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 263
    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 266
    const-string v3, " instead of requesterPackage = "

    .line 268
    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 271
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 274
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 277
    move-result-object v3

    .line 278
    invoke-static {v11, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 281
    :goto_5
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mExternalVoipModeOwner:Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 283
    if-eqz v3, :cond_9

    .line 285
    if-ne v15, v12, :cond_9

    .line 287
    iget-object v4, v3, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPackage:Ljava/lang/String;

    .line 289
    const-string v3, "AS.AudioService"

    .line 291
    new-instance v8, Ljava/lang/StringBuilder;

    .line 293
    invoke-direct {v8, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 296
    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 299
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 302
    move-result-object v1

    .line 303
    invoke-static {v3, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 306
    :cond_9
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 308
    invoke-virtual {v1, v15, v4}, Lcom/samsung/android/server/audio/LiveTranslatorManager;->updateAudioMode(ILjava/lang/String;)V

    .line 311
    goto :goto_6

    .line 312
    :cond_a
    move-object v4, v9

    .line 313
    :goto_6
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MIC_MODE_FOR_QUICK_PANEL_UI:Z

    .line 315
    if-eqz v1, :cond_b

    .line 317
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 319
    if-eqz v3, :cond_b

    .line 321
    invoke-virtual {v3, v15, v4}, Lcom/samsung/android/server/audio/MicModeManager;->updateAudioMode(ILjava/lang/String;)V

    .line 324
    :cond_b
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 326
    invoke-virtual {v3}, Lcom/android/server/audio/AudioSystemAdapter;->invalidateRoutingCache()V

    .line 329
    invoke-static {v15, v14}, Landroid/media/AudioSystem;->setPhoneState(II)I

    .line 332
    move-result v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 333
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 336
    if-nez v3, :cond_17

    .line 338
    const-string v1, "AS.AudioService"

    .line 340
    new-instance v3, Ljava/lang/StringBuilder;

    .line 342
    const-string/jumbo v4, "onUpdateAudioMode: mode successfully set to "

    .line 345
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 348
    invoke-virtual {v3, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 351
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 354
    move-result-object v3

    .line 355
    invoke-static {v1, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 358
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 360
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 363
    new-instance v3, Ljava/lang/StringBuilder;

    .line 365
    const-string/jumbo v4, "setModeRequesterPackage requesterPackage="

    .line 368
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 371
    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 374
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 377
    move-result-object v3

    .line 378
    const-string v4, "AS.AudioDeviceBroker"

    .line 380
    invoke-static {v4, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 383
    iput-object v9, v1, Lcom/android/server/audio/AudioDeviceBroker;->mModeRequesterPackage:Ljava/lang/String;

    .line 385
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 387
    if-eqz v1, :cond_e

    .line 389
    const-string v3, "AudioService"

    .line 391
    iget-object v4, v1, Lcom/samsung/android/server/audio/GoodCatchManager;->mModule:Ljava/lang/String;

    .line 393
    invoke-static {v3, v4}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 396
    move-result v3

    .line 397
    if-eqz v3, :cond_c

    .line 399
    iget-object v1, v1, Lcom/samsung/android/server/audio/GoodCatchManager;->mSoundFunc:[Z

    .line 401
    const/4 v8, 0x1

    .line 402
    aget-boolean v1, v1, v8

    .line 404
    goto :goto_7

    .line 405
    :cond_c
    const/4 v8, 0x1

    .line 406
    const/4 v1, 0x0

    .line 407
    :goto_7
    if-eqz v1, :cond_d

    .line 409
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 411
    iget-object v3, v1, Lcom/samsung/android/server/audio/GoodCatchManager;->mSemGoodCatchManager:Lcom/samsung/android/sepunion/SemGoodCatchManager;

    .line 413
    sget-object v1, Lcom/samsung/android/server/audio/GoodCatchManager;->SOUND_FUNC:[Ljava/lang/String;

    .line 415
    aget-object v4, v1, v8

    .line 417
    const-string v7, ""

    .line 419
    move-object/from16 v5, p3

    .line 421
    move v6, v15

    .line 422
    move v11, v8

    .line 423
    move-object/from16 v8, p3

    .line 425
    invoke-virtual/range {v3 .. v8}, Lcom/samsung/android/sepunion/SemGoodCatchManager;->update(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    .line 428
    goto :goto_8

    .line 429
    :cond_d
    move v11, v8

    .line 430
    goto :goto_8

    .line 431
    :cond_e
    const/4 v11, 0x1

    .line 432
    :goto_8
    if-ne v15, v12, :cond_11

    .line 434
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 436
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 438
    iget-object v1, v1, Lcom/android/server/audio/AudioServiceExt;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 440
    iput-boolean v11, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mIsCPUBoostedForVoIP:Z

    .line 442
    iget-object v4, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mSemDvfsCpuMin:Lcom/samsung/android/os/SemDvfsManager;

    .line 444
    const-string v5, "AS.DvfsHelper"

    .line 446
    if-nez v4, :cond_f

    .line 448
    const-string v1, "DvfsManager is null"

    .line 450
    invoke-static {v5, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 453
    goto :goto_9

    .line 454
    :cond_f
    sget-boolean v4, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_CPU_STATE_LOCK:Z

    .line 456
    if-eqz v4, :cond_10

    .line 458
    const-string/jumbo v4, "initCPUBoost create cpu state lock"

    .line 461
    invoke-static {v5, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 464
    iget-object v4, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mDvfsManagerFactory:Lcom/samsung/android/server/audio/DvfsHelper$DvfsManagerFactory;

    .line 466
    check-cast v4, Lcom/samsung/android/server/audio/DvfsHelper$DefaultDvfsManagerFactory;

    .line 468
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 471
    invoke-static {v3, v5}, Lcom/samsung/android/os/SemDvfsManager;->createInstance(Landroid/content/Context;Ljava/lang/String;)Lcom/samsung/android/os/SemDvfsManager;

    .line 474
    move-result-object v3

    .line 475
    iput-object v3, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mCpuStateLock:Lcom/samsung/android/os/SemDvfsManager;

    .line 477
    if-eqz v3, :cond_10

    .line 479
    const v4, 0x10003000

    .line 482
    const/4 v5, 0x0

    .line 483
    invoke-virtual {v3, v5, v4, v11}, Lcom/samsung/android/os/SemDvfsManager;->getApproximateFrequency(III)I

    .line 486
    move-result v6

    .line 487
    invoke-virtual {v3, v4, v6}, Lcom/samsung/android/os/SemDvfsManager;->addResourceValue(II)V

    .line 490
    :cond_10
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/DvfsHelper;->acquireCPUBoost()V

    .line 493
    goto :goto_9

    .line 494
    :cond_11
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 496
    iget-object v1, v1, Lcom/android/server/audio/AudioServiceExt;->mDvfsHelper:Lcom/samsung/android/server/audio/DvfsHelper;

    .line 498
    const/4 v3, 0x0

    .line 499
    iput-boolean v3, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mIsCPUBoostedForVoIP:Z

    .line 501
    iget-object v3, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mHandler:Landroid/os/Handler;

    .line 503
    iget-object v4, v1, Lcom/samsung/android/server/audio/DvfsHelper;->boostChecker:Lcom/samsung/android/server/audio/DvfsHelper$$ExternalSyntheticLambda0;

    .line 505
    invoke-virtual {v3, v4}, Landroid/os/Handler;->hasCallbacks(Ljava/lang/Runnable;)Z

    .line 508
    move-result v3

    .line 509
    if-nez v3, :cond_12

    .line 511
    iget-object v3, v1, Lcom/samsung/android/server/audio/DvfsHelper;->mHandler:Landroid/os/Handler;

    .line 513
    iget-object v1, v1, Lcom/samsung/android/server/audio/DvfsHelper;->boostChecker:Lcom/samsung/android/server/audio/DvfsHelper$$ExternalSyntheticLambda0;

    .line 515
    invoke-virtual {v3, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 518
    :cond_12
    :goto_9
    new-instance v1, Landroid/content/Intent;

    .line 520
    const-string v3, "android.samsung.media.action.AUDIO_MODE"

    .line 522
    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 525
    const v3, 0x1000020

    .line 528
    invoke-virtual {v1, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 531
    const-string v3, "android.samsung.media.extra.AUDIO_MODE"

    .line 533
    invoke-virtual {v1, v3, v15}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 536
    const-string v3, "android.intent.extra.PACKAGES"

    .line 538
    invoke-virtual {v1, v3, v9}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 541
    const/4 v3, 0x0

    .line 542
    invoke-virtual {v0, v1, v3}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 545
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 547
    const/16 v21, 0x0

    .line 549
    const/16 v22, 0x1f4

    .line 551
    const/16 v17, 0xacb

    .line 553
    const/16 v18, 0x0

    .line 555
    const/16 v19, 0x0

    .line 557
    const/16 v20, 0x0

    .line 559
    move-object/from16 v16, v1

    .line 561
    invoke-virtual/range {v16 .. v22}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 564
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 566
    const/4 v3, 0x0

    .line 567
    const/16 v16, 0x0

    .line 569
    const/16 v4, 0x28

    .line 571
    const/16 v17, 0x0

    .line 573
    const/16 v18, 0x0

    .line 575
    move v8, v12

    .line 576
    move-object v12, v1

    .line 577
    move v7, v13

    .line 578
    move v13, v4

    .line 579
    move v6, v14

    .line 580
    move v14, v3

    .line 581
    move v5, v15

    .line 582
    invoke-static/range {v12 .. v18}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 585
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 587
    invoke-virtual {v1, v5}, Ljava/util/concurrent/atomic/AtomicInteger;->getAndSet(I)I

    .line 590
    move-result v12

    .line 591
    iget-object v13, v0, Lcom/android/server/audio/AudioService;->mModeLogger:Lcom/android/server/utils/EventLogger;

    .line 593
    new-instance v14, Lcom/android/server/audio/AudioServiceEvents$PhoneStateEvent;

    .line 595
    move-object v1, v14

    .line 596
    move/from16 v2, p2

    .line 598
    move v3, v10

    .line 599
    move v4, v7

    .line 600
    move v10, v5

    .line 601
    move v15, v6

    .line 602
    move-object/from16 v6, p3

    .line 604
    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$PhoneStateEvent;-><init>(IIIILjava/lang/String;)V

    .line 607
    invoke-virtual {v13, v14}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 610
    if-nez v10, :cond_13

    .line 612
    move v1, v8

    .line 613
    goto :goto_a

    .line 614
    :cond_13
    const/4 v1, 0x0

    .line 615
    :goto_a
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 617
    aget v13, v2, v1

    .line 619
    const-string v2, "AS.AudioService"

    .line 621
    new-instance v3, Ljava/lang/StringBuilder;

    .line 623
    const-string/jumbo v4, "onUpdateAudioMode: streamType="

    .line 626
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 629
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 632
    const-string v1, ", streamAlias="

    .line 634
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 637
    invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 640
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 643
    move-result-object v1

    .line 644
    invoke-static {v2, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 647
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 649
    aget-object v1, v1, v13

    .line 651
    const/high16 v14, 0x20000000

    .line 653
    invoke-virtual {v1, v14}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 656
    move-result v16

    .line 657
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 659
    aget-object v1, v1, v13

    .line 661
    iget v6, v1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 663
    const/16 v17, 0x1

    .line 665
    const/16 v18, 0x1

    .line 667
    move-object/from16 v1, p0

    .line 669
    move-object/from16 v2, p3

    .line 671
    move v3, v13

    .line 672
    move/from16 v4, v16

    .line 674
    move v5, v14

    .line 675
    move/from16 v19, v6

    .line 677
    move/from16 v6, v17

    .line 679
    move/from16 v23, v7

    .line 681
    move/from16 v7, v18

    .line 683
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(Ljava/lang/String;IIIZZ)V

    .line 686
    invoke-virtual {v0, v9, v11}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(Ljava/lang/String;Z)V

    .line 689
    if-ne v12, v10, :cond_14

    .line 691
    goto :goto_c

    .line 692
    :cond_14
    if-eqz v10, :cond_15

    .line 694
    const/4 v1, 0x2

    .line 695
    if-eq v10, v1, :cond_15

    .line 697
    if-eq v10, v8, :cond_15

    .line 699
    const/4 v1, 0x4

    .line 700
    if-eq v10, v1, :cond_15

    .line 702
    const/4 v1, 0x5

    .line 703
    if-eq v10, v1, :cond_15

    .line 705
    const/4 v1, 0x6

    .line 706
    if-eq v10, v1, :cond_15

    .line 708
    goto :goto_c

    .line 709
    :cond_15
    if-nez v10, :cond_16

    .line 711
    goto :goto_b

    .line 712
    :cond_16
    const/4 v8, 0x0

    .line 713
    :goto_b
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 715
    aget-object v1, v1, v8

    .line 717
    const/high16 v2, 0x8000000

    .line 719
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 722
    move-result v1

    .line 723
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 725
    new-instance v3, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 727
    invoke-direct {v3, v10, v8, v1}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(III)V

    .line 730
    invoke-virtual {v2, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 733
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 735
    const/16 v29, 0x0

    .line 737
    const/16 v30, 0x0

    .line 739
    const/16 v25, 0xe

    .line 741
    const/16 v26, 0x0

    .line 743
    move-object/from16 v24, v2

    .line 745
    move/from16 v27, v1

    .line 747
    move/from16 v28, v8

    .line 749
    invoke-virtual/range {v24 .. v30}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 752
    :goto_c
    move-object/from16 v1, p0

    .line 754
    move v2, v10

    .line 755
    move v3, v14

    .line 756
    move v4, v13

    .line 757
    move/from16 v5, v16

    .line 759
    move/from16 v6, v19

    .line 761
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->setLeAudioVolumeOnModeUpdate(IIIII)V

    .line 764
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreamsLock:Ljava/lang/Object;

    .line 766
    monitor-enter v2

    .line 767
    :try_start_1
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mCachedAbsVolDrivingStreams:Ljava/util/HashMap;

    .line 769
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda20;

    .line 771
    invoke-direct {v3, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda20;-><init>(Lcom/android/server/audio/AudioService;)V

    .line 774
    invoke-virtual {v1, v3}, Ljava/util/HashMap;->replaceAll(Ljava/util/function/BiFunction;)V

    .line 777
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 778
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 780
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 783
    new-instance v1, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;

    .line 785
    move/from16 v11, v23

    .line 787
    invoke-direct {v1, v10, v11, v15}, Lcom/android/server/audio/AudioDeviceBroker$AudioModeInfo;-><init>(III)V

    .line 790
    const/16 v2, 0x10

    .line 792
    const/4 v3, 0x0

    .line 793
    invoke-virtual {v0, v2, v3, v1}, Lcom/android/server/audio/AudioDeviceBroker;->sendLMsgNoDelay(IILjava/lang/Object;)V

    .line 796
    goto :goto_d

    .line 797
    :catchall_1
    move-exception v0

    .line 798
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 799
    throw v0

    .line 800
    :cond_17
    move v10, v15

    .line 801
    const-string v2, "AS.AudioService"

    .line 803
    const-string/jumbo v3, "onUpdateAudioMode: failed to set audio mode to: "

    .line 806
    invoke-static {v10, v3, v2}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 809
    if-eqz v5, :cond_18

    .line 811
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 813
    if-eqz v2, :cond_18

    .line 815
    const-string v3, ""

    .line 817
    iget-object v4, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 819
    invoke-virtual {v4}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 822
    move-result v4

    .line 823
    invoke-virtual {v2, v4, v3}, Lcom/samsung/android/server/audio/LiveTranslatorManager;->updateAudioMode(ILjava/lang/String;)V

    .line 826
    :cond_18
    if-eqz v1, :cond_19

    .line 828
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 830
    if-eqz v1, :cond_19

    .line 832
    const-string v2, ""

    .line 834
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mMode:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 836
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 839
    move-result v0

    .line 840
    invoke-virtual {v1, v0, v2}, Lcom/samsung/android/server/audio/MicModeManager;->updateAudioMode(ILjava/lang/String;)V

    .line 843
    :cond_19
    :goto_d
    return-void

    .line 844
    :goto_e
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 847
    throw v0
.end method

.method public onUpdatedAdiDeviceState(Lcom/android/server/audio/AdiDeviceState;Z)V
    .locals 2

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceAttributes()Landroid/media/AudioDeviceAttributes;

    .line 9
    move-result-object v1

    .line 10
    invoke-virtual {v0, v1, p2}, Lcom/android/server/audio/SpatializerHelper;->refreshDevice(Landroid/media/AudioDeviceAttributes;Z)V

    .line 13
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 15
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getDeviceAddress()Ljava/lang/String;

    .line 18
    move-result-object p2

    .line 19
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getInternalDeviceType()I

    .line 22
    move-result v0

    .line 23
    invoke-virtual {p1}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceCategory()I

    .line 26
    move-result p1

    .line 27
    const/4 v1, 0x3

    .line 28
    if-ne p1, v1, :cond_1

    .line 30
    const/4 p1, 0x1

    .line 31
    goto :goto_0

    .line 32
    :cond_1
    const/4 p1, 0x0

    .line 33
    :goto_0
    invoke-virtual {p0, v0, p2, p1}, Lcom/android/server/audio/SoundDoseHelper;->setAudioDeviceCategory(ILjava/lang/String;Z)V

    .line 36
    return-void
.end method

.method public final onVolumeRangeInitRequestFromNative()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 3
    const-string/jumbo v5, "onVolumeRangeInitRequestFromNative"

    .line 6
    const/4 v6, 0x0

    .line 7
    const/16 v1, 0x22

    .line 9
    const/4 v2, 0x0

    .line 10
    const/4 v3, 0x0

    .line 11
    const/4 v4, 0x0

    .line 12
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 15
    return-void
.end method

.method public final playSoundEffect(II)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 5
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 8
    const-string/jumbo v0, "sound_effects_enabled"

    .line 11
    const/4 v2, 0x0

    .line 12
    invoke-static {v1, v0, v2, p2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 15
    move-result p2

    .line 16
    if-eqz p2, :cond_0

    .line 18
    const/high16 p2, -0x40800000    # -1.0f

    .line 20
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->playSoundEffectVolume(IF)V

    .line 23
    :cond_0
    return-void
.end method

.method public final playSoundEffectVolume(IF)V
    .locals 8

    .line 1
    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    .line 5
    move-result v0

    .line 6
    if-eqz v0, :cond_0

    .line 8
    return-void

    .line 9
    :cond_0
    const/16 v0, 0x17

    .line 11
    if-ge p1, v0, :cond_2

    .line 13
    if-gez p1, :cond_1

    .line 15
    goto :goto_0

    .line 16
    :cond_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 18
    const/high16 p0, 0x447a0000    # 1000.0f

    .line 20
    mul-float/2addr p2, p0

    .line 21
    float-to-int v5, p2

    .line 22
    const/4 v6, 0x0

    .line 23
    const/4 v7, 0x0

    .line 24
    const/4 v2, 0x5

    .line 25
    const/4 v3, 0x2

    .line 26
    move v4, p1

    .line 27
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 30
    return-void

    .line 31
    :cond_2
    :goto_0
    new-instance p0, Ljava/lang/StringBuilder;

    .line 33
    const-string p2, "AudioService effectType value "

    .line 35
    invoke-direct {p0, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 38
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 41
    const-string p1, " out of range"

    .line 43
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 49
    move-result-object p0

    .line 50
    const-string p1, "AS.AudioService"

    .line 52
    invoke-static {p1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 55
    return-void
.end method

.method public final playerAttributes(ILandroid/media/AudioAttributes;)V
    .locals 5

    .line 1
    if-eqz p2, :cond_0

    .line 3
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 6
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 11
    move-result v0

    .line 12
    iget-object v1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 14
    monitor-enter v1

    .line 15
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 17
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 20
    move-result-object v3

    .line 21
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 24
    move-result v2

    .line 25
    if-eqz v2, :cond_1

    .line 27
    invoke-virtual {p2}, Landroid/media/AudioAttributes;->getAllowedCapturePolicy()I

    .line 30
    move-result v2

    .line 31
    iget-object v3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 33
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 36
    move-result-object v4

    .line 37
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 40
    move-result-object v3

    .line 41
    check-cast v3, Ljava/lang/Integer;

    .line 43
    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    .line 46
    move-result v3

    .line 47
    if-ge v2, v3, :cond_1

    .line 49
    new-instance v2, Landroid/media/AudioAttributes$Builder;

    .line 51
    invoke-direct {v2, p2}, Landroid/media/AudioAttributes$Builder;-><init>(Landroid/media/AudioAttributes;)V

    .line 54
    iget-object p2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 56
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 59
    move-result-object v3

    .line 60
    invoke-virtual {p2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 63
    move-result-object p2

    .line 64
    check-cast p2, Ljava/lang/Integer;

    .line 66
    invoke-virtual {p2}, Ljava/lang/Integer;->intValue()I

    .line 69
    move-result p2

    .line 70
    invoke-virtual {v2, p2}, Landroid/media/AudioAttributes$Builder;->setAllowedCapturePolicy(I)Landroid/media/AudioAttributes$Builder;

    .line 73
    move-result-object p2

    .line 74
    invoke-virtual {p2}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 77
    move-result-object p2

    .line 78
    goto :goto_0

    .line 79
    :catchall_0
    move-exception p0

    .line 80
    goto :goto_3

    .line 81
    :cond_1
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 82
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 84
    monitor-enter v2

    .line 85
    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 87
    new-instance v3, Ljava/lang/Integer;

    .line 89
    invoke-direct {v3, p1}, Ljava/lang/Integer;-><init>(I)V

    .line 92
    invoke-virtual {v1, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 95
    move-result-object v1

    .line 96
    check-cast v1, Landroid/media/AudioPlaybackConfiguration;

    .line 98
    invoke-static {p1, v1, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->checkConfigurationCaller(ILandroid/media/AudioPlaybackConfiguration;I)Z

    .line 101
    move-result v0

    .line 102
    const/4 v3, 0x0

    .line 103
    if-eqz v0, :cond_2

    .line 105
    sget-object v0, Lcom/android/server/audio/PlaybackActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 107
    new-instance v4, Lcom/android/server/audio/PlaybackActivityMonitor$AudioAttrEvent;

    .line 109
    invoke-direct {v4, p1, p2}, Lcom/android/server/audio/PlaybackActivityMonitor$AudioAttrEvent;-><init>(ILandroid/media/AudioAttributes;)V

    .line 112
    invoke-virtual {v0, v4}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 115
    invoke-virtual {v1, p2}, Landroid/media/AudioPlaybackConfiguration;->handleAudioAttributesEvent(Landroid/media/AudioAttributes;)Z

    .line 118
    move-result p1

    .line 119
    goto :goto_1

    .line 120
    :catchall_1
    move-exception p0

    .line 121
    goto :goto_2

    .line 122
    :cond_2
    const-string p1, "AS.PlaybackActivityMon"

    .line 124
    const-string p2, "Error updating audio attributes"

    .line 126
    invoke-static {p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 129
    move p1, v3

    .line 130
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 131
    if-eqz p1, :cond_3

    .line 133
    invoke-virtual {p0, v3}, Lcom/android/server/audio/PlaybackActivityMonitor;->dispatchPlaybackChange(Z)V

    .line 136
    :cond_3
    return-void

    .line 137
    :goto_2
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 138
    throw p0

    .line 139
    :goto_3
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 140
    throw p0
.end method

.method public final playerEvent(III)V
    .locals 10

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 6
    move-result v0

    .line 7
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    const-string v1, "AS.PlaybackActivityMon"

    .line 12
    const-string/jumbo v2, "playerEvent(piid=%d, event=%s, eventValue=%d)"

    .line 15
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 18
    move-result-object v3

    .line 19
    invoke-static {p2}, Landroid/media/AudioPlaybackConfiguration;->playerStateToString(I)Ljava/lang/String;

    .line 22
    move-result-object v4

    .line 23
    invoke-static {p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 26
    move-result-object v5

    .line 27
    filled-new-array {v3, v4, v5}, [Ljava/lang/Object;

    .line 30
    move-result-object v3

    .line 31
    invoke-static {v2, v3}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 34
    move-result-object v2

    .line 35
    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    iget-object v1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 40
    monitor-enter v1

    .line 41
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 43
    new-instance v3, Ljava/lang/Integer;

    .line 45
    invoke-direct {v3, p1}, Ljava/lang/Integer;-><init>(I)V

    .line 48
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 51
    move-result-object v2

    .line 52
    check-cast v2, Landroid/media/AudioPlaybackConfiguration;

    .line 54
    if-nez v2, :cond_0

    .line 56
    monitor-exit v1

    .line 57
    goto/16 :goto_3

    .line 59
    :catchall_0
    move-exception p0

    .line 60
    goto/16 :goto_4

    .line 62
    :cond_0
    iget-object v3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mDoNotLogPiidList:Ljava/util/ArrayList;

    .line 64
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 67
    move-result-object v4

    .line 68
    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 71
    move-result v3

    .line 72
    if-eqz v3, :cond_1

    .line 74
    if-eqz p2, :cond_1

    .line 76
    monitor-exit v1

    .line 77
    goto/16 :goto_3

    .line 79
    :cond_1
    sget-object v4, Lcom/android/server/audio/PlaybackActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 81
    new-instance v5, Lcom/android/server/audio/PlaybackActivityMonitor$PlayerEvent;

    .line 83
    invoke-direct {v5, p1, p2, p3}, Lcom/android/server/audio/PlaybackActivityMonitor$PlayerEvent;-><init>(III)V

    .line 86
    invoke-virtual {v4, v5}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 89
    const/4 v4, 0x6

    .line 90
    if-ne p2, v4, :cond_2

    .line 92
    invoke-static {}, Lcom/android/media/audio/Flags;->portToPiidSimplification()Z

    .line 95
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPortIdToPiid:Landroid/util/SparseIntArray;

    .line 97
    invoke-virtual {p0, p3, p1}, Landroid/util/SparseIntArray;->put(II)V

    .line 100
    monitor-exit v1

    .line 101
    goto/16 :goto_3

    .line 103
    :cond_2
    const/4 v4, 0x3

    .line 104
    const/4 v5, 0x2

    .line 105
    const/4 v6, 0x0

    .line 106
    if-ne p2, v5, :cond_6

    .line 108
    iget-object v7, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mBannedUids:Ljava/util/ArrayList;

    .line 110
    invoke-virtual {v7}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 113
    move-result-object v7

    .line 114
    :cond_3
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    .line 117
    move-result v8

    .line 118
    if-eqz v8, :cond_4

    .line 120
    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 123
    move-result-object v8

    .line 124
    check-cast v8, Ljava/lang/Integer;

    .line 126
    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I

    .line 129
    move-result v8

    .line 130
    invoke-static {v2, v8}, Lcom/android/server/audio/PlaybackActivityMonitor;->checkBanPlayer(Landroid/media/AudioPlaybackConfiguration;I)Z

    .line 133
    move-result v8

    .line 134
    if-eqz v8, :cond_3

    .line 136
    sget-object p0, Lcom/android/server/audio/PlaybackActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 138
    new-instance p2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 140
    new-instance p3, Ljava/lang/StringBuilder;

    .line 142
    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    .line 145
    const-string/jumbo v0, "not starting piid:"

    .line 148
    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 151
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 154
    const-string p1, ", is banned"

    .line 156
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 159
    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 162
    move-result-object p1

    .line 163
    invoke-direct {p2, p1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 166
    invoke-virtual {p0, p2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 169
    monitor-exit v1

    .line 170
    goto/16 :goto_3

    .line 172
    :cond_4
    iget-object v7, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 174
    iget-object v7, v7, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    .line 176
    if-eqz v7, :cond_6

    .line 178
    const-string v8, "AudioService"

    .line 180
    iget-object v9, v7, Lcom/samsung/android/server/audio/GoodCatchManager;->mModule:Ljava/lang/String;

    .line 182
    invoke-static {v8, v9}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 185
    move-result v8

    .line 186
    if-eqz v8, :cond_5

    .line 188
    iget-object v7, v7, Lcom/samsung/android/server/audio/GoodCatchManager;->mSoundFunc:[Z

    .line 190
    aget-boolean v7, v7, v4

    .line 192
    goto :goto_0

    .line 193
    :cond_5
    move v7, v6

    .line 194
    :goto_0
    if-eqz v7, :cond_6

    .line 196
    invoke-virtual {p0, v2}, Lcom/android/server/audio/PlaybackActivityMonitor;->updateGoodCatch(Landroid/media/AudioPlaybackConfiguration;)V

    .line 199
    :cond_6
    invoke-virtual {v2}, Landroid/media/AudioPlaybackConfiguration;->getPlayerType()I

    .line 202
    move-result v7

    .line 203
    if-ne v7, v4, :cond_7

    .line 205
    if-eqz p2, :cond_7

    .line 207
    monitor-exit v1

    .line 208
    goto :goto_3

    .line 209
    :cond_7
    invoke-static {p1, v2, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->checkConfigurationCaller(ILandroid/media/AudioPlaybackConfiguration;I)Z

    .line 212
    move-result p1

    .line 213
    if-eqz p1, :cond_8

    .line 215
    invoke-virtual {p0, v2, p2}, Lcom/android/server/audio/PlaybackActivityMonitor;->checkVolumeForPrivilegedAlarm(Landroid/media/AudioPlaybackConfiguration;I)V

    .line 218
    invoke-virtual {v2, p2, p3}, Landroid/media/AudioPlaybackConfiguration;->handleStateEvent(II)Z

    .line 221
    move-result p1

    .line 222
    goto :goto_1

    .line 223
    :cond_8
    const-string p1, "AS.PlaybackActivityMon"

    .line 225
    new-instance p3, Ljava/lang/StringBuilder;

    .line 227
    invoke-direct {p3}, Ljava/lang/StringBuilder;-><init>()V

    .line 230
    const-string v0, "Error handling event "

    .line 232
    invoke-virtual {p3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 235
    invoke-virtual {p3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 238
    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 241
    move-result-object p3

    .line 242
    invoke-static {p1, p3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 245
    move p1, v6

    .line 246
    :goto_1
    if-eqz p1, :cond_c

    .line 248
    if-ne p2, v5, :cond_9

    .line 250
    iget-object p3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mDuckingManager:Lcom/android/server/audio/PlaybackActivityMonitor$DuckingManager;

    .line 252
    invoke-virtual {p3, v2}, Lcom/android/server/audio/PlaybackActivityMonitor$DuckingManager;->checkDuck(Landroid/media/AudioPlaybackConfiguration;)V

    .line 255
    iget-object p3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mFadeOutManager:Lcom/android/server/audio/FadeOutManager;

    .line 257
    invoke-virtual {p3, v2}, Lcom/android/server/audio/FadeOutManager;->checkFade(Landroid/media/AudioPlaybackConfiguration;)V

    .line 260
    :cond_9
    invoke-static {v2}, Lcom/samsung/android/server/audio/utils/PlaybackUtils;->isMusicActive(Landroid/media/AudioPlaybackConfiguration;)Z

    .line 263
    move-result p3

    .line 264
    if-nez p3, :cond_a

    .line 266
    goto :goto_2

    .line 267
    :cond_a
    iget-object p3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mNotifierSoundAliveForDVFS:Lcom/android/server/audio/PlaybackActivityMonitor$2;

    .line 269
    invoke-virtual {p3}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    .line 272
    sget-boolean p3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    .line 274
    if-eqz p3, :cond_b

    .line 276
    iget-object p3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mContext:Landroid/content/Context;

    .line 278
    invoke-static {p3}, Lcom/samsung/android/server/audio/VolumeMonitorService;->getInstance(Landroid/content/Context;)Lcom/samsung/android/server/audio/VolumeMonitorService;

    .line 281
    move-result-object p3

    .line 282
    invoke-virtual {p3}, Lcom/samsung/android/server/audio/VolumeMonitorService;->triggerMonitoring()V

    .line 285
    :cond_b
    :goto_2
    if-eqz v3, :cond_c

    .line 287
    move p1, v6

    .line 288
    :cond_c
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 289
    if-eqz p1, :cond_e

    .line 291
    if-nez p2, :cond_d

    .line 293
    const/4 v6, 0x1

    .line 294
    :cond_d
    invoke-virtual {p0, v6}, Lcom/android/server/audio/PlaybackActivityMonitor;->dispatchPlaybackChange(Z)V

    .line 297
    :cond_e
    :goto_3
    return-void

    .line 298
    :goto_4
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 299
    throw p0
.end method

.method public final playerHasOpPlayAudio(IZ)V
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 6
    move-result v0

    .line 7
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    sget-object p0, Lcom/android/server/audio/PlaybackActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 12
    new-instance v1, Lcom/android/server/audio/PlaybackActivityMonitor$PlayerOpPlayAudioEvent;

    .line 14
    invoke-direct {v1, p1, v0, p2}, Lcom/android/server/audio/PlaybackActivityMonitor$PlayerOpPlayAudioEvent;-><init>(IIZ)V

    .line 17
    invoke-virtual {p0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 20
    return-void
.end method

.method public final playerSessionId(II)V
    .locals 4

    .line 1
    if-lez p2, :cond_2

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 5
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 8
    move-result v0

    .line 9
    iget-object v1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 11
    monitor-enter v1

    .line 12
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 14
    new-instance v3, Ljava/lang/Integer;

    .line 16
    invoke-direct {v3, p1}, Ljava/lang/Integer;-><init>(I)V

    .line 19
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 22
    move-result-object v2

    .line 23
    check-cast v2, Landroid/media/AudioPlaybackConfiguration;

    .line 25
    invoke-static {p1, v2, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->checkConfigurationCaller(ILandroid/media/AudioPlaybackConfiguration;I)Z

    .line 28
    move-result p1

    .line 29
    const/4 v0, 0x0

    .line 30
    if-eqz p1, :cond_0

    .line 32
    invoke-virtual {v2, p2}, Landroid/media/AudioPlaybackConfiguration;->handleSessionIdEvent(I)Z

    .line 35
    move-result p1

    .line 36
    goto :goto_0

    .line 37
    :catchall_0
    move-exception p0

    .line 38
    goto :goto_1

    .line 39
    :cond_0
    const-string p1, "AS.PlaybackActivityMon"

    .line 41
    const-string p2, "Error updating audio session"

    .line 43
    invoke-static {p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    move p1, v0

    .line 47
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 48
    if-eqz p1, :cond_1

    .line 50
    invoke-virtual {p0, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->dispatchPlaybackChange(Z)V

    .line 53
    :cond_1
    return-void

    .line 54
    :goto_1
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 55
    throw p0

    .line 56
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 58
    const-string/jumbo p1, "invalid session Id "

    .line 61
    invoke-static {p2, p1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 64
    move-result-object p1

    .line 65
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 68
    throw p0
.end method

.method public final portEvent(IILandroid/os/PersistableBundle;)V
    .locals 6

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 6
    move-result v0

    .line 7
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    const-string v1, "No AudioPlaybackConfiguration assigned for piid "

    .line 12
    const-string v2, "No piid assigned for invalid/internal port id "

    .line 14
    invoke-static {v0}, Landroid/os/UserHandle;->isCore(I)Z

    .line 17
    move-result v3

    .line 18
    if-nez v3, :cond_0

    .line 20
    const-string p0, "AS.PlaybackActivityMon"

    .line 22
    const-string p1, "Forbidden operation from uid "

    .line 24
    invoke-static {v0, p1, p0}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 27
    goto/16 :goto_1

    .line 29
    :cond_0
    const-string v0, "AS.PlaybackActivityMon"

    .line 31
    const-string v3, "BLA portEvent(portId=%d, event=%s, extras=%s)"

    .line 33
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 36
    move-result-object v4

    .line 37
    invoke-static {p2}, Landroid/media/AudioPlaybackConfiguration;->playerStateToString(I)Ljava/lang/String;

    .line 40
    move-result-object v5

    .line 41
    filled-new-array {v4, v5, p3}, [Ljava/lang/Object;

    .line 44
    move-result-object v4

    .line 45
    invoke-static {v3, v4}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 48
    move-result-object v3

    .line 49
    invoke-static {v0, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    iget-object v0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 54
    monitor-enter v0

    .line 55
    :try_start_0
    invoke-static {}, Lcom/android/media/audio/Flags;->portToPiidSimplification()Z

    .line 58
    iget-object v3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPortIdToPiid:Landroid/util/SparseIntArray;

    .line 60
    const/4 v4, -0x1

    .line 61
    invoke-virtual {v3, p1, v4}, Landroid/util/SparseIntArray;->get(II)I

    .line 64
    move-result v3

    .line 65
    if-ne v3, v4, :cond_1

    .line 67
    const-string p0, "AS.PlaybackActivityMon"

    .line 69
    new-instance p2, Ljava/lang/StringBuilder;

    .line 71
    invoke-direct {p2, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 74
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 77
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 80
    move-result-object p1

    .line 81
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 84
    monitor-exit v0

    .line 85
    goto :goto_1

    .line 86
    :catchall_0
    move-exception p0

    .line 87
    goto :goto_2

    .line 88
    :cond_1
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 90
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 93
    move-result-object v4

    .line 94
    invoke-virtual {v2, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 97
    move-result-object v2

    .line 98
    check-cast v2, Landroid/media/AudioPlaybackConfiguration;

    .line 100
    if-nez v2, :cond_2

    .line 102
    const-string p0, "AS.PlaybackActivityMon"

    .line 104
    new-instance p1, Ljava/lang/StringBuilder;

    .line 106
    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 109
    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 112
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 115
    move-result-object p1

    .line 116
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 119
    monitor-exit v0

    .line 120
    goto :goto_1

    .line 121
    :cond_2
    invoke-virtual {v2}, Landroid/media/AudioPlaybackConfiguration;->getPlayerType()I

    .line 124
    move-result v1

    .line 125
    const/4 v2, 0x3

    .line 126
    if-ne v1, v2, :cond_3

    .line 128
    monitor-exit v0

    .line 129
    goto :goto_1

    .line 130
    :cond_3
    const/4 v1, 0x7

    .line 131
    if-ne p2, v1, :cond_4

    .line 133
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mEventHandler:Lcom/android/server/audio/PlaybackActivityMonitor$1;

    .line 135
    const/4 p2, 0x2

    .line 136
    invoke-virtual {p0, p2, v3, p1, p3}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 139
    move-result-object p1

    .line 140
    invoke-virtual {p0, p1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 143
    goto :goto_0

    .line 144
    :cond_4
    const/16 v1, 0x8

    .line 146
    if-ne p2, v1, :cond_5

    .line 148
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mEventHandler:Lcom/android/server/audio/PlaybackActivityMonitor$1;

    .line 150
    invoke-virtual {p0, v2, v3, p1, p3}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 153
    move-result-object p1

    .line 154
    invoke-virtual {p0, p1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 157
    :cond_5
    :goto_0
    monitor-exit v0

    .line 158
    :goto_1
    return-void

    .line 159
    :goto_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 160
    throw p0
.end method

.method public postAccessoryPlugMediaUnmute(I)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 3
    const/4 v5, 0x0

    .line 4
    const/4 v6, 0x0

    .line 5
    const/16 v1, 0x15

    .line 7
    const/4 v2, 0x2

    .line 8
    const/4 v4, 0x0

    .line 9
    move v3, p1

    .line 10
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13
    return-void
.end method

.method public postObserveDevicesForAllStreams()V
    .locals 1

    const/4 v0, -0x1

    .line 1
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->postObserveDevicesForAllStreams(I)V

    return-void
.end method

.method public postObserveDevicesForAllStreams(I)V
    .locals 7

    .line 2
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/16 v1, 0x1b

    const/4 v2, 0x2

    const/4 v4, 0x0

    move v3, p1

    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    return-void
.end method

.method public postSetVolumeIndexOnDevice(IIILjava/lang/String;)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 3
    new-instance v5, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;

    .line 5
    invoke-direct {v5, p1, p2, p3, p4}, Lcom/android/server/audio/AudioService$DeviceVolumeUpdate;-><init>(IIILjava/lang/String;)V

    .line 8
    const/4 v6, 0x0

    .line 9
    const/16 v1, 0x1a

    .line 11
    const/4 v2, 0x2

    .line 12
    const/4 v3, 0x0

    .line 13
    const/4 v4, 0x0

    .line 14
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 17
    return-void
.end method

.method public final queueMsgUnderWakeLock(Landroid/os/Handler;III)V
    .locals 9

    .line 1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 4
    move-result-wide v0

    .line 5
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioEventWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 7
    invoke-virtual {p0}, Landroid/os/PowerManager$WakeLock;->acquire()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 13
    const/4 v4, 0x2

    .line 14
    const/4 v7, 0x0

    .line 15
    const/4 v8, 0x0

    .line 16
    move-object v2, p1

    .line 17
    move v3, p2

    .line 18
    move v5, p3

    .line 19
    move v6, p4

    .line 20
    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 23
    return-void

    .line 24
    :catchall_0
    move-exception p0

    .line 25
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 28
    throw p0
.end method

.method public final readAudioSettings(Z)V
    .locals 7

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->readPersistedSettings()V

    .line 4
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->readUserRestrictions()V

    .line 7
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 10
    move-result v0

    .line 11
    const/4 v1, 0x0

    .line 12
    move v2, v1

    .line 13
    :goto_0
    const/4 v3, 0x3

    .line 14
    if-ge v2, v0, :cond_4

    .line 16
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 18
    aget-object v4, v4, v2

    .line 20
    if-eqz p1, :cond_0

    .line 22
    sget-object v5, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 24
    aget v5, v5, v2

    .line 26
    if-ne v5, v3, :cond_0

    .line 28
    goto :goto_2

    .line 29
    :cond_0
    invoke-virtual {v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->readSettings()V

    .line 32
    const-class v5, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 34
    monitor-enter v5

    .line 35
    :try_start_0
    iget-boolean v3, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 37
    if-eqz v3, :cond_3

    .line 39
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->isStreamAffectedByMute(I)Z

    .line 42
    move-result v3

    .line 43
    if-nez v3, :cond_1

    .line 45
    invoke-static {v2}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 48
    move-result v3

    .line 49
    if-eqz v3, :cond_2

    .line 51
    goto :goto_1

    .line 52
    :catchall_0
    move-exception p0

    .line 53
    goto :goto_3

    .line 54
    :cond_1
    :goto_1
    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 56
    if-eqz v3, :cond_3

    .line 58
    :cond_2
    iput-boolean v1, v4, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMuted:Z

    .line 60
    :cond_3
    monitor-exit v5

    .line 61
    :goto_2
    add-int/lit8 v2, v2, 0x1

    .line 63
    goto :goto_0

    .line 64
    :goto_3
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 65
    throw p0

    .line 66
    :cond_4
    const-string/jumbo v0, "readVolumeGroupsSettings userSwitch="

    .line 69
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 71
    monitor-enter v2

    .line 72
    :try_start_1
    const-class v4, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 74
    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_4

    .line 75
    :try_start_2
    const-string v5, "AS.AudioService"

    .line 77
    new-instance v6, Ljava/lang/StringBuilder;

    .line 79
    invoke-direct {v6, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 82
    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 85
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 88
    move-result-object v0

    .line 89
    invoke-static {v5, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 92
    move v0, v1

    .line 93
    :goto_4
    sget-object v5, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 95
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    .line 98
    move-result v6

    .line 99
    if-ge v0, v6, :cond_6

    .line 101
    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 104
    move-result-object v5

    .line 105
    check-cast v5, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 107
    if-eqz p1, :cond_5

    .line 109
    iget-boolean v6, v5, Lcom/android/server/audio/AudioService$VolumeGroupState;->mHasValidStreamType:Z

    .line 111
    if-eqz v6, :cond_5

    .line 113
    iget v6, v5, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 115
    if-ne v6, v3, :cond_5

    .line 117
    goto :goto_5

    .line 118
    :cond_5
    iget-object v6, v5, Lcom/android/server/audio/AudioService$VolumeGroupState;->mIndexMap:Landroid/util/SparseIntArray;

    .line 120
    invoke-virtual {v6}, Landroid/util/SparseIntArray;->clear()V

    .line 123
    invoke-virtual {v5}, Lcom/android/server/audio/AudioService$VolumeGroupState;->readSettings()V

    .line 126
    :goto_5
    invoke-virtual {v5, p1}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes(Z)V

    .line 129
    add-int/lit8 v0, v0, 0x1

    .line 131
    goto :goto_4

    .line 132
    :catchall_1
    move-exception p0

    .line 133
    goto/16 :goto_a

    .line 135
    :cond_6
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 136
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_4

    .line 137
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 140
    move-result p1

    .line 141
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 144
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    .line 147
    move-result p1

    .line 148
    move v0, v1

    .line 149
    :goto_6
    if-ge v0, p1, :cond_7

    .line 151
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 153
    aget-object v2, v2, v0

    .line 155
    invoke-virtual {v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 158
    add-int/lit8 v0, v0, 0x1

    .line 160
    goto :goto_6

    .line 161
    :cond_7
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkAllAliasStreamVolumes()V

    .line 164
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkMuteAffectedStreams()V

    .line 167
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 169
    iget-object v0, p1, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 171
    monitor-enter v0

    .line 172
    :try_start_4
    iget-object v2, p1, Lcom/android/server/audio/SoundDoseHelper;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 174
    iget-object v4, p1, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 176
    iget-object v4, v4, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 178
    const-string/jumbo v5, "unsafe_volume_music_active_ms"

    .line 181
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 184
    const/4 v2, -0x2

    .line 185
    invoke-static {v4, v5, v1, v2}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 188
    move-result v4

    .line 189
    const v5, 0x44aa200

    .line 192
    invoke-static {v4, v1, v5}, Landroid/util/MathUtils;->constrain(III)I

    .line 195
    move-result v1

    .line 196
    iput v1, p1, Lcom/android/server/audio/SoundDoseHelper;->mMusicActiveMs:I

    .line 198
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 199
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 201
    const-string v0, "AS.AudioService"

    .line 203
    iget-object v1, p1, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 205
    monitor-enter v1

    .line 206
    :try_start_5
    iget v4, p1, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    .line 208
    if-ne v4, v3, :cond_8

    .line 210
    invoke-virtual {p1, v0}, Lcom/android/server/audio/SoundDoseHelper;->enforceSafeMediaVolume(Ljava/lang/String;)V

    .line 213
    goto :goto_7

    .line 214
    :catchall_2
    move-exception p0

    .line 215
    goto :goto_9

    .line 216
    :cond_8
    :goto_7
    monitor-exit v1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 217
    const-string p1, "AS.AudioService"

    .line 219
    const-string v0, "Restoring device volume behavior"

    .line 221
    invoke-static {p1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 224
    sget-object p1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_SET:Ljava/util/Set;

    .line 226
    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 229
    move-result-object p1

    .line 230
    :goto_8
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 233
    move-result v0

    .line 234
    if-eqz v0, :cond_a

    .line 236
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 239
    move-result-object v0

    .line 240
    check-cast v0, Ljava/lang/Integer;

    .line 242
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 245
    move-result v0

    .line 246
    const-string v1, "Retrieving Volume Behavior for DeviceType: "

    .line 248
    const-string v3, "AS.AudioService"

    .line 250
    invoke-static {v0, v1, v3}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 253
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 255
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 257
    new-instance v5, Ljava/lang/StringBuilder;

    .line 259
    const-string v6, "AudioService_DeviceVolumeBehavior_"

    .line 261
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 264
    invoke-static {v0}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 267
    move-result-object v6

    .line 268
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 271
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 274
    move-result-object v5

    .line 275
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 278
    const/4 v1, -0x1

    .line 279
    invoke-static {v4, v5, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 282
    move-result v4

    .line 283
    if-ne v4, v1, :cond_9

    .line 285
    const-string v1, "Skipping Setting Volume Behavior for DeviceType: "

    .line 287
    invoke-static {v0, v1, v3}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 290
    goto :goto_8

    .line 291
    :cond_9
    new-instance v1, Landroid/media/AudioDeviceAttributes;

    .line 293
    const-string v3, ""

    .line 295
    invoke-direct {v1, v0, v3}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 298
    const-string v0, "AudioService.restoreDeviceVolumeBehavior()"

    .line 300
    invoke-virtual {p0, v1, v4, v0}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 303
    goto :goto_8

    .line 304
    :cond_a
    return-void

    .line 305
    :goto_9
    :try_start_6
    monitor-exit v1
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 306
    throw p0

    .line 307
    :catchall_3
    move-exception p0

    .line 308
    :try_start_7
    monitor-exit v0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 309
    throw p0

    .line 310
    :catchall_4
    move-exception p0

    .line 311
    goto :goto_b

    .line 312
    :goto_a
    :try_start_8
    monitor-exit v4
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 313
    :try_start_9
    throw p0

    .line 314
    :goto_b
    monitor-exit v2
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_4

    .line 315
    throw p0
.end method

.method public final readCameraSoundForced()Z
    .locals 8

    .line 1
    const-string v0, "audio.camerasound.force"

    .line 3
    const/4 v1, 0x0

    .line 4
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    .line 7
    move-result v0

    .line 8
    const/4 v2, 0x1

    .line 9
    if-nez v0, :cond_4

    .line 11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 16
    move-result-object v0

    .line 17
    const v3, 0x111006c

    .line 20
    invoke-virtual {v0, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 23
    move-result v0

    .line 24
    if-eqz v0, :cond_0

    .line 26
    goto :goto_1

    .line 27
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 29
    const-class v4, Landroid/telephony/SubscriptionManager;

    .line 31
    invoke-virtual {v0, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 34
    move-result-object v0

    .line 35
    check-cast v0, Landroid/telephony/SubscriptionManager;

    .line 37
    if-nez v0, :cond_1

    .line 39
    const-string p0, "AS.AudioService"

    .line 41
    const-string/jumbo v0, "readCameraSoundForced cannot create SubscriptionManager!"

    .line 44
    invoke-static {p0, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    return v1

    .line 48
    :cond_1
    invoke-virtual {v0, v1}, Landroid/telephony/SubscriptionManager;->getActiveSubscriptionIdList(Z)[I

    .line 51
    move-result-object v0

    .line 52
    array-length v4, v0

    .line 53
    move v5, v1

    .line 54
    :goto_0
    if-ge v5, v4, :cond_3

    .line 56
    aget v6, v0, v5

    .line 58
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 60
    invoke-static {v7, v6}, Landroid/telephony/SubscriptionManager;->getResourcesForSubId(Landroid/content/Context;I)Landroid/content/res/Resources;

    .line 63
    move-result-object v6

    .line 64
    invoke-virtual {v6, v3}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 67
    move-result v6

    .line 68
    if-eqz v6, :cond_2

    .line 70
    return v2

    .line 71
    :cond_2
    add-int/lit8 v5, v5, 0x1

    .line 73
    goto :goto_0

    .line 74
    :cond_3
    return v1

    .line 75
    :cond_4
    :goto_1
    return v2
.end method

.method public final readDockAudioSettings(Landroid/content/ContentResolver;)V
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string/jumbo v0, "dock_audio_media_enabled"

    .line 9
    const/4 v1, 0x0

    .line 10
    invoke-static {p1, v0, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 13
    move-result p1

    .line 14
    const/4 v0, 0x1

    .line 15
    if-ne p1, v0, :cond_0

    .line 17
    goto :goto_0

    .line 18
    :cond_0
    move v0, v1

    .line 19
    :goto_0
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mDockAudioMediaEnabled:Z

    .line 21
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 23
    if-eqz v0, :cond_1

    .line 25
    const/16 v1, 0x9

    .line 27
    :cond_1
    move v6, v1

    .line 28
    new-instance v7, Ljava/lang/String;

    .line 30
    const-string/jumbo p0, "readDockAudioSettings"

    .line 33
    invoke-direct {v7, p0}, Ljava/lang/String;-><init>(Ljava/lang/String;)V

    .line 36
    const/4 v8, 0x0

    .line 37
    const/16 v3, 0x8

    .line 39
    const/4 v4, 0x2

    .line 40
    const/4 v5, 0x3

    .line 41
    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 44
    return-void
.end method

.method public final readPersistedSettings()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 8
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 10
    const-string/jumbo v2, "mode_ringer"

    .line 13
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 16
    const/4 v1, 0x2

    .line 17
    invoke-static {v0, v2, v1}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 20
    move-result v2

    .line 21
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->isValidRingerMode(I)Z

    .line 24
    move-result v3

    .line 25
    if-nez v3, :cond_0

    .line 27
    move v3, v1

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    move v3, v2

    .line 30
    :goto_0
    const/4 v4, 0x0

    .line 31
    const/4 v5, 0x1

    .line 32
    if-ne v3, v5, :cond_1

    .line 34
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 36
    if-nez v6, :cond_1

    .line 38
    move v3, v4

    .line 39
    :cond_1
    if-eq v3, v2, :cond_2

    .line 41
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 43
    const-string/jumbo v6, "mode_ringer"

    .line 46
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 49
    invoke-static {v0, v6, v3}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 52
    :cond_2
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 54
    if-nez v2, :cond_3

    .line 56
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 58
    if-eqz v2, :cond_4

    .line 60
    :cond_3
    move v3, v1

    .line 61
    :cond_4
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 63
    monitor-enter v2

    .line 64
    :try_start_0
    iput v3, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 66
    iget v6, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 68
    const/4 v7, -0x1

    .line 69
    if-ne v6, v7, :cond_5

    .line 71
    iput v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 73
    goto :goto_1

    .line 74
    :catchall_0
    move-exception p0

    .line 75
    goto/16 :goto_6

    .line 77
    :cond_5
    :goto_1
    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 79
    if-eqz v3, :cond_6

    .line 81
    move v3, v1

    .line 82
    goto :goto_2

    .line 83
    :cond_6
    move v3, v4

    .line 84
    :goto_2
    invoke-static {v4, v5, v3}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    .line 87
    move-result v3

    .line 88
    iput v3, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 90
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 92
    if-eqz v6, :cond_7

    .line 94
    move v6, v1

    .line 95
    goto :goto_3

    .line 96
    :cond_7
    move v6, v4

    .line 97
    :goto_3
    invoke-static {v3, v4, v6}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    .line 100
    move-result v3

    .line 101
    iput v3, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 103
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateRingerAndZenModeAffectedStreams()Z

    .line 106
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->readDockAudioSettings(Landroid/content/ContentResolver;)V

    .line 109
    const-string/jumbo v3, "readPersistedSettings"

    .line 112
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 114
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 117
    const-string/jumbo v6, "encoded_surround_output"

    .line 120
    invoke-static {v0, v6, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 123
    move-result v6

    .line 124
    invoke-virtual {p0, v6, v3}, Lcom/android/server/audio/AudioService;->sendEncodedSurroundMode(ILjava/lang/String;)V

    .line 127
    invoke-virtual {p0, v0, v5}, Lcom/android/server/audio/AudioService;->sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V

    .line 130
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->updateAssistantUIdLocked(Z)V

    .line 133
    sget-object v3, Lcom/android/server/audio/AudioService;->NO_ACTIVE_ASSISTANT_SERVICE_UIDS:[I

    .line 135
    iput-object v3, p0, Lcom/android/server/audio/AudioService;->mActiveAssistantServiceUids:[I

    .line 137
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateActiveAssistantServiceUids()V

    .line 140
    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 142
    invoke-static {v3}, Landroid/media/AudioSystem;->setRttEnabled(Z)I

    .line 145
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 146
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 148
    const-string/jumbo v3, "mute_streams_affected"

    .line 151
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 154
    const/16 v2, 0x6f

    .line 156
    const/4 v6, -0x2

    .line 157
    invoke-static {v0, v3, v2, v6}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 160
    move-result v2

    .line 161
    iput v2, p0, Lcom/android/server/audio/AudioService;->mMuteAffectedStreams:I

    .line 163
    and-int/lit8 v2, v2, -0x42

    .line 165
    iput v2, p0, Lcom/android/server/audio/AudioService;->mUserMutableStreams:I

    .line 167
    sget-boolean v2, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 169
    if-eqz v2, :cond_8

    .line 171
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    .line 173
    const/4 v3, 0x5

    .line 174
    aput v3, v2, v1

    .line 176
    aput v3, v2, v3

    .line 178
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 180
    aput v3, v2, v1

    .line 182
    aput v3, v2, v3

    .line 184
    :cond_8
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->updateMasterMono(Landroid/content/ContentResolver;)V

    .line 187
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->updateMasterBalance(Landroid/content/ContentResolver;)V

    .line 190
    const-string v1, "android.media.RINGER_MODE_CHANGED"

    .line 192
    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 194
    invoke-virtual {p0, v2, v1}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(ILjava/lang/String;)V

    .line 197
    const-string v1, "android.media.INTERNAL_RINGER_MODE_CHANGED_ACTION"

    .line 199
    iget v2, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 201
    invoke-virtual {p0, v2, v1}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(ILjava/lang/String;)V

    .line 204
    invoke-virtual {p0, v4}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 207
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 210
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 212
    iget-object v1, v1, Lcom/android/server/audio/AudioService$VolumeController;->this$0:Lcom/android/server/audio/AudioService;

    .line 214
    iget-object v1, v1, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 216
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 219
    const-string/jumbo v1, "long_press_timeout"

    .line 222
    const/16 v2, 0x1f4

    .line 224
    invoke-static {v0, v1, v2, v6}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 227
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 229
    invoke-static {}, Lcom/samsung/android/server/audio/FactoryUtils;->isFactoryMode()Z

    .line 232
    move-result v1

    .line 233
    xor-int/2addr v1, v5

    .line 234
    const-string v2, "adjust_media_volume_only"

    .line 236
    invoke-static {v0, v2, v1, v6}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 239
    move-result v1

    .line 240
    if-lez v1, :cond_9

    .line 242
    move v1, v5

    .line 243
    goto :goto_4

    .line 244
    :cond_9
    move v1, v4

    .line 245
    :goto_4
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 247
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 249
    const-string/jumbo v2, "ring_through_headset"

    .line 252
    const/16 v3, 0x20

    .line 254
    invoke-virtual {v1, v3, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 257
    move-result v1

    .line 258
    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 260
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 263
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 265
    const-string/jumbo v2, "media_volume_step_index"

    .line 268
    const/16 v3, 0xa

    .line 270
    invoke-virtual {v1, v3, v2}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 273
    move-result v1

    .line 274
    iput v1, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 276
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 278
    const-string/jumbo v2, "mode_ringer_time_on"

    .line 281
    invoke-static {v1, v2, v4}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 284
    const-string/jumbo v1, "volumelimit_on"

    .line 287
    invoke-static {v0, v1, v4}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 290
    move-result v1

    .line 291
    if-eqz v1, :cond_a

    .line 293
    move v1, v5

    .line 294
    goto :goto_5

    .line 295
    :cond_a
    move v1, v4

    .line 296
    :goto_5
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 298
    const-string/jumbo v1, "volume_limiter_value"

    .line 301
    iget v2, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 303
    invoke-static {v0, v1, v2}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 306
    move-result v0

    .line 307
    iput v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 309
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 311
    if-eqz v0, :cond_c

    .line 313
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 315
    const-string/jumbo v1, "translate_during_calls"

    .line 318
    invoke-static {v0, v1, v5}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 321
    move-result v0

    .line 322
    if-eqz v0, :cond_b

    .line 324
    move v4, v5

    .line 325
    :cond_b
    iput-boolean v4, p0, Lcom/android/server/audio/AudioService;->mLiveTranslatorDuringCall:Z

    .line 327
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 329
    const-string/jumbo v1, "translate_during_allow_apps"

    .line 332
    invoke-static {v0, v1}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 335
    move-result-object v0

    .line 336
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mLiveTranslatorAllowApps:Ljava/lang/String;

    .line 338
    :cond_c
    return-void

    .line 339
    :goto_6
    :try_start_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 340
    throw p0
.end method

.method public final readUserRestrictions()V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 9
    move-result v0

    .line 10
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 12
    if-eqz v1, :cond_0

    .line 14
    const/high16 v1, 0x3f800000    # 1.0f

    .line 16
    invoke-static {v1}, Landroid/media/AudioSystem;->setMasterVolume(F)I

    .line 19
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

    .line 21
    const-string/jumbo v2, "disallow_unmute_device"

    .line 24
    invoke-virtual {v1, v0, v2}, Lcom/android/server/pm/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    .line 27
    move-result v1

    .line 28
    const/4 v2, 0x0

    .line 29
    if-nez v1, :cond_2

    .line 31
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

    .line 33
    const-string/jumbo v3, "no_adjust_volume"

    .line 36
    invoke-virtual {v1, v0, v3}, Lcom/android/server/pm/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    .line 39
    move-result v1

    .line 40
    if-eqz v1, :cond_1

    .line 42
    goto :goto_0

    .line 43
    :cond_1
    move v1, v2

    .line 44
    goto :goto_1

    .line 45
    :cond_2
    :goto_0
    const/4 v1, 0x1

    .line 46
    :goto_1
    const-string/jumbo v3, "readUserRestrictions"

    .line 49
    invoke-virtual {p0, v2, v0, v3, v1}, Lcom/android/server/audio/AudioService;->setMasterMuteInternalNoCallerCheck(IILjava/lang/String;Z)V

    .line 52
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mUserManagerInternal:Lcom/android/server/pm/UserManagerInternal;

    .line 54
    const-string/jumbo v3, "no_unmute_microphone"

    .line 57
    invoke-virtual {v1, v0, v3}, Lcom/android/server/pm/UserManagerInternal;->getUserRestriction(ILjava/lang/String;)Z

    .line 60
    move-result v1

    .line 61
    iput-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    .line 63
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 66
    move-result-object v1

    .line 67
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 70
    move-result-object v3

    .line 71
    filled-new-array {v1, v3}, [Ljava/lang/Object;

    .line 74
    move-result-object v1

    .line 75
    const-string v3, "Mic mute %b, user=%d"

    .line 77
    invoke-static {v3, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 80
    move-result-object v1

    .line 81
    const-string v3, "AS.AudioService"

    .line 83
    invoke-static {v3, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 89
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 91
    iget-object v1, p0, Lcom/android/server/audio/AudioServiceExt;->mCr:Landroid/content/ContentResolver;

    .line 93
    const-string v3, "all_sound_off"

    .line 95
    invoke-static {v1, v3, v2, v0}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 98
    move-result v0

    .line 99
    iput v0, p0, Lcom/android/server/audio/AudioServiceExt;->mAllSoundMute:I

    .line 101
    new-instance v0, Ljava/lang/StringBuilder;

    .line 103
    const-string/jumbo v1, "readUserRestrictions mAllSoundMute = "

    .line 106
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 109
    iget p0, p0, Lcom/android/server/audio/AudioServiceExt;->mAllSoundMute:I

    .line 111
    const-string v1, "AS.AudioServiceExt"

    .line 113
    invoke-static {v0, p0, v1}, Lcom/android/server/accessibility/GestureWakeup$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 116
    return-void
.end method

.method public final recenterHeadTracker()V
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->recenterHeadTracker_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    const-string/jumbo v0, "recenterHeadTracker"

    .line 10
    invoke-virtual {p0, v0}, Lcom/android/server/audio/SpatializerHelper;->checkSpatializer(Ljava/lang/String;)Z

    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_0

    .line 16
    iget-boolean v0, p0, Lcom/android/server/audio/SpatializerHelper;->mIsHeadTrackingSupported:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 18
    if-eqz v0, :cond_0

    .line 20
    :try_start_1
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 22
    invoke-interface {v0}, Landroid/media/ISpatializer;->recenterHeadTracker()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 25
    goto :goto_0

    .line 26
    :catchall_0
    move-exception v0

    .line 27
    goto :goto_2

    .line 28
    :catch_0
    move-exception v0

    .line 29
    :try_start_2
    const-string v1, "AS.SpatializerHelper"

    .line 31
    const-string v2, "Error calling recenterHeadTracker"

    .line 33
    invoke-static {v1, v2, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 36
    :goto_0
    monitor-exit p0

    .line 37
    goto :goto_1

    .line 38
    :cond_0
    monitor-exit p0

    .line 39
    :goto_1
    return-void

    .line 40
    :goto_2
    monitor-exit p0

    .line 41
    throw v0
.end method

.method public final recordRingtoneChanger(Ljava/lang/String;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    .line 7
    move-result p0

    .line 8
    const/16 v0, 0x258

    .line 10
    invoke-static {p0, v0}, Ljava/lang/Math;->min(II)I

    .line 13
    move-result p0

    .line 14
    const/4 v0, 0x0

    .line 15
    invoke-virtual {p1, v0, p0}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    .line 18
    move-result-object p0

    .line 19
    sget-object p1, Lcom/android/server/audio/AudioService;->sRingtoneChangeLogger:Lcom/android/server/utils/EventLogger;

    .line 21
    new-instance v0, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 23
    invoke-direct {v0, p0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 26
    invoke-virtual {p1, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 29
    return-void
.end method

.method public final recorderEvent(II)V
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 3
    iget-object v0, p0, Lcom/android/server/audio/RecordingActivityMonitor;->mLegacyRemoteSubmixRiid:Ljava/util/concurrent/atomic/AtomicInteger;

    .line 5
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicInteger;->get()I

    .line 8
    move-result v0

    .line 9
    const/4 v1, 0x0

    .line 10
    const/4 v2, 0x1

    .line 11
    if-ne v0, p1, :cond_1

    .line 13
    iget-object v0, p0, Lcom/android/server/audio/RecordingActivityMonitor;->mLegacyRemoteSubmixActive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 15
    if-nez p2, :cond_0

    .line 17
    move v3, v2

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    move v3, v1

    .line 20
    :goto_0
    invoke-virtual {v0, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 23
    :cond_1
    const/4 v0, -0x1

    .line 24
    if-nez p2, :cond_2

    .line 26
    move v2, v1

    .line 27
    goto :goto_1

    .line 28
    :cond_2
    if-ne p2, v2, :cond_3

    .line 30
    goto :goto_1

    .line 31
    :cond_3
    move v2, v0

    .line 32
    :goto_1
    const/4 v3, 0x0

    .line 33
    if-eq p1, v0, :cond_5

    .line 35
    if-ne v2, v0, :cond_4

    .line 37
    goto :goto_2

    .line 38
    :cond_4
    invoke-virtual {p0, v2, p1, v3}, Lcom/android/server/audio/RecordingActivityMonitor;->updateSnapshot(IILandroid/media/AudioRecordingConfiguration;)Ljava/util/List;

    .line 41
    move-result-object p1

    .line 42
    invoke-virtual {p0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->dispatchCallbacks(Ljava/util/List;)V

    .line 45
    goto :goto_3

    .line 46
    :cond_5
    :goto_2
    sget-object p0, Lcom/android/server/audio/RecordingActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 48
    new-instance v0, Lcom/android/server/audio/RecordingActivityMonitor$RecordingEvent;

    .line 50
    invoke-direct {v0, p2, p1, v3}, Lcom/android/server/audio/RecordingActivityMonitor$RecordingEvent;-><init>(IILandroid/media/AudioRecordingConfiguration;)V

    .line 53
    const-string p1, "AudioService.RecordingActivityMonitor"

    .line 55
    invoke-virtual {v0, v1, p1}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 58
    invoke-virtual {p0, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 61
    :goto_3
    return-void
.end method

.method public final registerAudioPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;ZZZZLandroid/media/projection/IMediaProjection;Landroid/content/AttributionSource;)Ljava/lang/String;
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 3
    move-object/from16 v11, p2

    .line 5
    move-object/from16 v9, p7

    .line 7
    invoke-static/range {p8 .. p8}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDynPolicyCallback:Lcom/android/server/audio/AudioService$10;

    .line 12
    invoke-static {v1}, Landroid/media/AudioSystem;->setDynamicPolicyCallback(Landroid/media/AudioSystem$DynamicPolicyCallback;)V

    .line 15
    const/4 v1, 0x1

    .line 16
    const/4 v12, 0x0

    .line 17
    if-nez p4, :cond_2

    .line 19
    if-nez p5, :cond_2

    .line 21
    if-eqz p3, :cond_0

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    if-eqz p6, :cond_1

    .line 26
    goto :goto_0

    .line 27
    :cond_1
    invoke-virtual/range {p1 .. p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 30
    move-result-object v2

    .line 31
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    .line 34
    move-result v2

    .line 35
    if-eqz v2, :cond_3

    .line 37
    :cond_2
    :goto_0
    move v2, v1

    .line 38
    goto :goto_1

    .line 39
    :cond_3
    move v2, v12

    .line 40
    :goto_1
    invoke-virtual/range {p1 .. p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 43
    move-result-object v3

    .line 44
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 47
    move-result-object v3

    .line 48
    const/4 v13, 0x0

    .line 49
    move v4, v12

    .line 50
    move v6, v4

    .line 51
    move v7, v6

    .line 52
    move-object v5, v13

    .line 53
    :cond_4
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 56
    move-result v8

    .line 57
    const-string v10, "AS.AudioService"

    .line 59
    if-eqz v8, :cond_b

    .line 61
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 64
    move-result-object v8

    .line 65
    check-cast v8, Landroid/media/audiopolicy/AudioMix;

    .line 67
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->getRule()Landroid/media/audiopolicy/AudioMixingRule;

    .line 70
    move-result-object v14

    .line 71
    invoke-virtual {v14}, Landroid/media/audiopolicy/AudioMixingRule;->allowPrivilegedMediaPlaybackCapture()Z

    .line 74
    move-result v14

    .line 75
    if-eqz v14, :cond_6

    .line 77
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->getFormat()Landroid/media/AudioFormat;

    .line 80
    move-result-object v4

    .line 81
    invoke-static {v4}, Landroid/media/audiopolicy/AudioMix;->canBeUsedForPrivilegedMediaCapture(Landroid/media/AudioFormat;)Ljava/lang/String;

    .line 84
    move-result-object v4

    .line 85
    if-eqz v4, :cond_5

    .line 87
    invoke-static {v10, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 90
    goto/16 :goto_7

    .line 92
    :cond_5
    move v4, v1

    .line 93
    :cond_6
    const/4 v10, 0x2

    .line 94
    invoke-virtual {v8, v10}, Landroid/media/audiopolicy/AudioMix;->containsMatchAttributeRuleForUsage(I)Z

    .line 97
    move-result v14

    .line 98
    const/4 v15, 0x3

    .line 99
    if-eqz v14, :cond_8

    .line 101
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->getRouteFlags()I

    .line 104
    move-result v14

    .line 105
    if-ne v14, v15, :cond_8

    .line 107
    if-nez v5, :cond_7

    .line 109
    new-instance v5, Ljava/util/ArrayList;

    .line 111
    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    .line 114
    :cond_7
    invoke-virtual {v5, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 117
    :cond_8
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->getRouteFlags()I

    .line 120
    move-result v14

    .line 121
    if-ne v14, v15, :cond_9

    .line 123
    if-eqz v9, :cond_9

    .line 125
    move v6, v1

    .line 126
    goto :goto_2

    .line 127
    :cond_9
    invoke-virtual {v8}, Landroid/media/audiopolicy/AudioMix;->isForCallRedirection()Z

    .line 130
    move-result v14

    .line 131
    if-eqz v14, :cond_a

    .line 133
    move v7, v1

    .line 134
    goto :goto_2

    .line 135
    :cond_a
    invoke-virtual {v8, v10}, Landroid/media/audiopolicy/AudioMix;->containsMatchAttributeRuleForUsage(I)Z

    .line 138
    move-result v8

    .line 139
    if-eqz v8, :cond_4

    .line 141
    move v2, v1

    .line 142
    goto :goto_2

    .line 143
    :cond_b
    if-eqz v4, :cond_c

    .line 145
    const-string v3, "android.permission.CAPTURE_MEDIA_OUTPUT"

    .line 147
    invoke-virtual {v0, v3}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 150
    move-result v3

    .line 151
    if-nez v3, :cond_c

    .line 153
    const-string v3, "android.permission.CAPTURE_AUDIO_OUTPUT"

    .line 155
    invoke-virtual {v0, v3}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 158
    move-result v3

    .line 159
    if-nez v3, :cond_c

    .line 161
    const-string v0, "Privileged audio capture requires CAPTURE_MEDIA_OUTPUT or CAPTURE_AUDIO_OUTPUT system permission"

    .line 163
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 166
    goto/16 :goto_7

    .line 168
    :cond_c
    if-eqz v5, :cond_e

    .line 170
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 173
    move-result v3

    .line 174
    if-lez v3, :cond_e

    .line 176
    const-string v3, "android.permission.CAPTURE_VOICE_COMMUNICATION_OUTPUT"

    .line 178
    invoke-virtual {v0, v3}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 181
    move-result v3

    .line 182
    if-nez v3, :cond_d

    .line 184
    const-string v0, "Audio capture for voice communication requires CAPTURE_VOICE_COMMUNICATION_OUTPUT system permission"

    .line 186
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 189
    goto/16 :goto_7

    .line 191
    :cond_d
    invoke-virtual {v5}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 194
    move-result-object v3

    .line 195
    :goto_3
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 198
    move-result v4

    .line 199
    if-eqz v4, :cond_e

    .line 201
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 204
    move-result-object v4

    .line 205
    check-cast v4, Landroid/media/audiopolicy/AudioMix;

    .line 207
    invoke-virtual {v4}, Landroid/media/audiopolicy/AudioMix;->getRule()Landroid/media/audiopolicy/AudioMixingRule;

    .line 210
    move-result-object v4

    .line 211
    invoke-virtual {v4, v1}, Landroid/media/audiopolicy/AudioMixingRule;->setVoiceCommunicationCaptureAllowed(Z)V

    .line 214
    goto :goto_3

    .line 215
    :cond_e
    if-eqz v6, :cond_13

    .line 217
    const-string v1, "Can\'t call .isCurrentProjection() on IMediaProjectionManager"

    .line 219
    if-nez v9, :cond_f

    .line 221
    const-string v0, "MediaProjection is null"

    .line 223
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 226
    goto/16 :goto_7

    .line 228
    :cond_f
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    .line 230
    if-nez v3, :cond_10

    .line 232
    const-string/jumbo v3, "media_projection"

    .line 235
    invoke-static {v3}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 238
    move-result-object v3

    .line 239
    invoke-static {v3}, Landroid/media/projection/IMediaProjectionManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/media/projection/IMediaProjectionManager;

    .line 242
    move-result-object v3

    .line 243
    iput-object v3, v0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    .line 245
    :cond_10
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mProjectionService:Landroid/media/projection/IMediaProjectionManager;

    .line 247
    if-nez v3, :cond_11

    .line 249
    const-string v0, "Can\'t get service IMediaProjectionManager"

    .line 251
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 254
    goto/16 :goto_7

    .line 256
    :cond_11
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 259
    move-result-wide v4

    .line 260
    :try_start_0
    invoke-interface {v3, v9}, Landroid/media/projection/IMediaProjectionManager;->isCurrentProjection(Landroid/media/projection/IMediaProjection;)Z

    .line 263
    move-result v6

    .line 264
    if-nez v6, :cond_12

    .line 266
    const-string v0, "App passed invalid MediaProjection token"

    .line 268
    invoke-static {v10, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 271
    :goto_4
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 274
    goto :goto_7

    .line 275
    :catchall_0
    move-exception v0

    .line 276
    goto :goto_6

    .line 277
    :catch_0
    move-exception v0

    .line 278
    goto :goto_5

    .line 279
    :cond_12
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 282
    :try_start_1
    invoke-interface/range {p7 .. p7}, Landroid/media/projection/IMediaProjection;->canProjectAudio()Z

    .line 285
    move-result v1

    .line 286
    if-nez v1, :cond_13

    .line 288
    const-string v0, "App passed MediaProjection that can not project audio"

    .line 290
    invoke-static {v10, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 293
    goto :goto_7

    .line 294
    :catch_1
    move-exception v0

    .line 295
    new-instance v1, Ljava/lang/StringBuilder;

    .line 297
    const-string v2, "Can\'t call .canProjectAudio() on valid IMediaProjection"

    .line 299
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 302
    invoke-interface/range {p7 .. p7}, Landroid/media/projection/IMediaProjection;->asBinder()Landroid/os/IBinder;

    .line 305
    move-result-object v2

    .line 306
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 309
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 312
    move-result-object v1

    .line 313
    invoke-static {v10, v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 316
    goto :goto_7

    .line 317
    :goto_5
    :try_start_2
    new-instance v2, Ljava/lang/StringBuilder;

    .line 319
    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 322
    invoke-interface {v3}, Landroid/media/projection/IMediaProjectionManager;->asBinder()Landroid/os/IBinder;

    .line 325
    move-result-object v1

    .line 326
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 329
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 332
    move-result-object v1

    .line 333
    invoke-static {v10, v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 336
    goto :goto_4

    .line 337
    :goto_6
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 340
    throw v0

    .line 341
    :cond_13
    if-eqz v2, :cond_14

    .line 343
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 345
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 348
    move-result v1

    .line 349
    if-nez v1, :cond_14

    .line 351
    const-string v0, "Can not capture audio without MODIFY_AUDIO_ROUTING"

    .line 353
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 356
    goto :goto_7

    .line 357
    :cond_14
    if-eqz v7, :cond_15

    .line 359
    const-string v1, "android.permission.CALL_AUDIO_INTERCEPTION"

    .line 361
    invoke-virtual {v0, v1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 364
    move-result v1

    .line 365
    if-nez v1, :cond_15

    .line 367
    const-string v0, "Can not capture audio without CALL_AUDIO_INTERCEPTION"

    .line 369
    invoke-static {v10, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 372
    :goto_7
    const-string v0, "AS.AudioService"

    .line 374
    new-instance v1, Ljava/lang/StringBuilder;

    .line 376
    const-string v2, "Permission denied to register audio policy for pid "

    .line 378
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 381
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 384
    move-result v2

    .line 385
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 388
    const-string v2, " / uid "

    .line 390
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 393
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 396
    move-result v2

    .line 397
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 400
    const-string v2, ", need system permission or a MediaProjection that can project audio"

    .line 402
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 405
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 408
    move-result-object v1

    .line 409
    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 412
    return-object v13

    .line 413
    :cond_15
    iget-object v14, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 415
    monitor-enter v14

    .line 416
    :try_start_3
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 418
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 421
    move-result-object v2

    .line 422
    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 425
    move-result v1

    .line 426
    if-eqz v1, :cond_16

    .line 428
    const-string v0, "AS.AudioService"

    .line 430
    const-string v1, "Cannot re-register policy"

    .line 432
    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 435
    monitor-exit v14
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 436
    return-object v13

    .line 437
    :catchall_1
    move-exception v0

    .line 438
    goto/16 :goto_a

    .line 440
    :cond_16
    :try_start_4
    new-instance v15, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 442
    move-object v1, v15

    .line 443
    move-object/from16 v2, p0

    .line 445
    move-object/from16 v3, p1

    .line 447
    move-object/from16 v4, p2

    .line 449
    move/from16 v5, p3

    .line 451
    move/from16 v6, p4

    .line 453
    move/from16 v7, p5

    .line 455
    move/from16 v8, p6

    .line 457
    move-object/from16 v9, p7

    .line 459
    move-object/from16 v10, p8

    .line 461
    invoke-direct/range {v1 .. v10}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;ZZZZLandroid/media/projection/IMediaProjection;Landroid/content/AttributionSource;)V

    .line 464
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 467
    move-result-object v1

    .line 468
    invoke-interface {v1, v15, v12}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 471
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/utils/EventLogger;

    .line 473
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 475
    new-instance v3, Ljava/lang/StringBuilder;

    .line 477
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 480
    const-string/jumbo v4, "registerAudioPolicy for "

    .line 483
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 486
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 489
    move-result-object v4

    .line 490
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 493
    const-string v4, " u/pid:"

    .line 495
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 498
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 501
    move-result v4

    .line 502
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 505
    const-string v4, "/"

    .line 507
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 510
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 513
    move-result v4

    .line 514
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 517
    const-string v4, " with config:"

    .line 519
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 522
    invoke-virtual {v15}, Landroid/media/audiopolicy/AudioPolicyConfig;->toCompactLogString()Ljava/lang/String;

    .line 525
    move-result-object v4

    .line 526
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 529
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 532
    move-result-object v3

    .line 533
    invoke-direct {v2, v3}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 536
    const-string v3, "AS.AudioService"

    .line 538
    invoke-virtual {v2, v12, v3}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 541
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 544
    invoke-virtual {v15}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->getRegistrationId()Ljava/lang/String;

    .line 547
    move-result-object v1

    .line 548
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 550
    invoke-interface/range {p2 .. p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 553
    move-result-object v2

    .line 554
    invoke-virtual {v0, v2, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_3
    .catch Ljava/lang/IllegalStateException; {:try_start_4 .. :try_end_4} :catch_2
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 557
    :try_start_5
    monitor-exit v14

    .line 558
    return-object v1

    .line 559
    :catch_2
    move-exception v0

    .line 560
    goto :goto_8

    .line 561
    :catch_3
    move-exception v0

    .line 562
    goto :goto_9

    .line 563
    :goto_8
    const-string v1, "AS.AudioService"

    .line 565
    new-instance v2, Ljava/lang/StringBuilder;

    .line 567
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 570
    const-string v3, "Audio policy registration failed for binder "

    .line 572
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 575
    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 578
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 581
    move-result-object v2

    .line 582
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 585
    monitor-exit v14

    .line 586
    return-object v13

    .line 587
    :goto_9
    const-string v1, "AS.AudioService"

    .line 589
    new-instance v2, Ljava/lang/StringBuilder;

    .line 591
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 594
    const-string v3, "Audio policy registration failed, could not link to "

    .line 596
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 599
    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 602
    const-string v3, " binder death"

    .line 604
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 607
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 610
    move-result-object v2

    .line 611
    invoke-static {v1, v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 614
    monitor-exit v14

    .line 615
    return-object v13

    .line 616
    :goto_a
    monitor-exit v14
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 617
    throw v0
.end method

.method public final registerAudioServerStateDispatcher(Landroid/media/IAudioServerStateDispatcher;)V
    .locals 4

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 6
    monitor-enter v0

    .line 7
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 9
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    .line 12
    move-result-object v2

    .line 13
    invoke-virtual {v1, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 16
    move-result v1

    .line 17
    if-eqz v1, :cond_0

    .line 19
    const-string p0, "AS.AudioService"

    .line 21
    const-string p1, "Cannot re-register audio server state dispatcher"

    .line 23
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26
    monitor-exit v0

    .line 27
    return-void

    .line 28
    :catchall_0
    move-exception p0

    .line 29
    goto :goto_0

    .line 30
    :cond_0
    new-instance v1, Lcom/android/server/audio/AudioService$AsdProxy;

    .line 32
    invoke-direct {v1, p0, p1}, Lcom/android/server/audio/AudioService$AsdProxy;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/IAudioServerStateDispatcher;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 35
    :try_start_1
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    .line 38
    move-result-object v2

    .line 39
    const/4 v3, 0x0

    .line 40
    invoke-interface {v2, v1, v3}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 43
    :catch_0
    :try_start_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 45
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    .line 48
    move-result-object p1

    .line 49
    invoke-virtual {p0, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 52
    monitor-exit v0

    .line 53
    return-void

    .line 54
    :goto_0
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 55
    throw p0
.end method

.method public final registerCapturePresetDevicesRoleDispatcher(Landroid/media/ICapturePresetDevicesRoleDispatcher;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 12
    move-result p0

    .line 13
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 15
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceInventory;->mDevRoleCapturePresetDispatchers:Landroid/os/RemoteCallbackList;

    .line 17
    invoke-static {p0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 20
    move-result-object p0

    .line 21
    invoke-virtual {v0, p1, p0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 24
    return-void
.end method

.method public final registerCommunicationDeviceDispatcher(Landroid/media/ICommunicationDeviceDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 6
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mCommDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 8
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 11
    return-void
.end method

.method public final registerDeviceVolumeBehaviorDispatcher(ZLandroid/media/IDeviceVolumeBehaviorDispatcher;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_1

    .line 11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v1, "android.permission.QUERY_AUDIO_STATE"

    .line 15
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result v0

    .line 19
    if-nez v0, :cond_0

    .line 21
    goto :goto_0

    .line 22
    :cond_0
    new-instance p0, Ljava/lang/SecurityException;

    .line 24
    const-string p1, "Missing MODIFY_AUDIO_ROUTING or QUERY_AUDIO_STATE permissions"

    .line 26
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 29
    throw p0

    .line 30
    :cond_1
    :goto_0
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 33
    if-eqz p1, :cond_2

    .line 35
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 37
    invoke-virtual {p0, p2}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 40
    goto :goto_1

    .line 41
    :cond_2
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceVolumeBehaviorDispatchers:Landroid/os/RemoteCallbackList;

    .line 43
    invoke-virtual {p0, p2}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 46
    :goto_1
    return-void
.end method

.method public final registerDeviceVolumeDispatcherForAbsoluteVolume(ZLandroid/media/IAudioDeviceVolumeDispatcher;Ljava/lang/String;Landroid/media/AudioDeviceAttributes;Ljava/util/List;ZI)V
    .locals 15

    .line 1
    move-object v7, p0

    .line 2
    move-object/from16 v6, p4

    .line 4
    move/from16 v8, p7

    .line 6
    iget-object v0, v7, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 8
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 10
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_1

    .line 16
    iget-object v0, v7, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 18
    const-string v1, "android.permission.BLUETOOTH_PRIVILEGED"

    .line 20
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 23
    move-result v0

    .line 24
    if-nez v0, :cond_0

    .line 26
    goto :goto_0

    .line 27
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    .line 29
    const-string v1, "Missing MODIFY_AUDIO_ROUTING or BLUETOOTH_PRIVILEGED permissions"

    .line 31
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 34
    throw v0

    .line 35
    :cond_1
    :goto_0
    invoke-static/range {p4 .. p4}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 38
    invoke-static/range {p5 .. p5}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 41
    invoke-virtual/range {p4 .. p4}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 44
    move-result v9

    .line 45
    const/4 v10, 0x0

    .line 46
    if-eqz p1, :cond_6

    .line 48
    new-instance v11, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 50
    move-object v0, v11

    .line 51
    move-object/from16 v1, p4

    .line 53
    move-object/from16 v2, p5

    .line 55
    move-object/from16 v3, p2

    .line 57
    move/from16 v4, p6

    .line 59
    move/from16 v5, p7

    .line 61
    invoke-direct/range {v0 .. v5}, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;-><init>(Landroid/media/AudioDeviceAttributes;Ljava/util/List;Landroid/media/IAudioDeviceVolumeDispatcher;ZI)V

    .line 64
    iget-object v0, v7, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 66
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 69
    move-result-object v1

    .line 70
    check-cast v0, Landroid/util/ArrayMap;

    .line 72
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 75
    move-result-object v0

    .line 76
    check-cast v0, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 78
    if-eqz v0, :cond_2

    .line 80
    iget v0, v0, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;->mDeviceVolumeBehavior:I

    .line 82
    if-eq v0, v8, :cond_3

    .line 84
    :cond_2
    invoke-virtual {p0, v9}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)Z

    .line 87
    invoke-virtual {p0, v9}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFixedVolumeDevices(I)Z

    .line 90
    new-instance v0, Ljava/lang/StringBuilder;

    .line 92
    const-string v1, "Adding DeviceType: 0x"

    .line 94
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 97
    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 100
    move-result-object v1

    .line 101
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 104
    const-string v1, " to mAbsoluteVolumeDeviceInfoMap with behavior "

    .line 106
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 109
    invoke-static/range {p7 .. p7}, Landroid/media/AudioDeviceVolumeManager;->volumeBehaviorName(I)Ljava/lang/String;

    .line 112
    move-result-object v1

    .line 113
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 116
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 119
    move-result-object v0

    .line 120
    const-string v1, "AS.AudioService"

    .line 122
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 125
    iget-object v0, v7, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 127
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 130
    move-result-object v1

    .line 131
    check-cast v0, Landroid/util/ArrayMap;

    .line 133
    invoke-virtual {v0, v1, v11}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 136
    invoke-virtual {p0, v6, v8}, Lcom/android/server/audio/AudioService;->dispatchDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;I)V

    .line 139
    :cond_3
    invoke-interface/range {p5 .. p5}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 142
    move-result-object v8

    .line 143
    :cond_4
    :goto_1
    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z

    .line 146
    move-result v0

    .line 147
    if-eqz v0, :cond_7

    .line 149
    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 152
    move-result-object v0

    .line 153
    move-object v11, v0

    .line 154
    check-cast v11, Landroid/media/VolumeInfo;

    .line 156
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getVolumeIndex()I

    .line 159
    move-result v0

    .line 160
    const/16 v1, -0x64

    .line 162
    if-eq v0, v1, :cond_4

    .line 164
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    .line 167
    move-result v0

    .line 168
    if-eq v0, v1, :cond_4

    .line 170
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    .line 173
    move-result v0

    .line 174
    if-eq v0, v1, :cond_4

    .line 176
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->hasStreamType()Z

    .line 179
    move-result v0

    .line 180
    if-eqz v0, :cond_5

    .line 182
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getStreamType()I

    .line 185
    move-result v2

    .line 186
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getStreamType()I

    .line 189
    move-result v0

    .line 190
    invoke-virtual {p0, v11, v0}, Lcom/android/server/audio/AudioService;->rescaleIndex(Landroid/media/VolumeInfo;I)I

    .line 193
    move-result v3

    .line 194
    const/4 v5, 0x0

    .line 195
    const/4 v6, 0x1

    .line 196
    move-object v0, p0

    .line 197
    move-object/from16 v1, p3

    .line 199
    move v4, v9

    .line 200
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(Ljava/lang/String;IIIZZ)V

    .line 203
    goto :goto_1

    .line 204
    :cond_5
    invoke-virtual {v11}, Landroid/media/VolumeInfo;->getVolumeGroup()Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 207
    move-result-object v0

    .line 208
    invoke-virtual {v0}, Landroid/media/audiopolicy/AudioVolumeGroup;->getLegacyStreamTypes()[I

    .line 211
    move-result-object v12

    .line 212
    array-length v13, v12

    .line 213
    move v14, v10

    .line 214
    :goto_2
    if-ge v14, v13, :cond_4

    .line 216
    aget v2, v12, v14

    .line 218
    invoke-virtual {p0, v11, v2}, Lcom/android/server/audio/AudioService;->rescaleIndex(Landroid/media/VolumeInfo;I)I

    .line 221
    move-result v3

    .line 222
    const/4 v5, 0x0

    .line 223
    const/4 v6, 0x1

    .line 224
    move-object v0, p0

    .line 225
    move-object/from16 v1, p3

    .line 227
    move v4, v9

    .line 228
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->setStreamVolumeInt(Ljava/lang/String;IIIZZ)V

    .line 231
    add-int/lit8 v14, v14, 0x1

    .line 233
    goto :goto_2

    .line 234
    :cond_6
    invoke-virtual {p0, v9}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromAbsVolumeDevices(I)Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 237
    move-result-object v0

    .line 238
    if-eqz v0, :cond_7

    .line 240
    invoke-virtual {p0, v6, v10}, Lcom/android/server/audio/AudioService;->dispatchDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;I)V

    .line 243
    :cond_7
    return-void
.end method

.method public final registerHeadToSoundstagePoseCallback(Landroid/media/ISpatializerHeadToSoundStagePoseCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->registerHeadToSoundstagePoseCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadPoseCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final registerLoudnessCodecUpdatesDispatcher(Landroid/media/ILoudnessCodecUpdatesDispatcher;)V
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 9
    move-result v0

    .line 10
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 13
    move-result-object v0

    .line 14
    iget-object p0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLoudnessUpdateDispatchers:Lcom/android/server/audio/LoudnessCodecHelper$LoudnessRemoteCallbackList;

    .line 16
    invoke-virtual {p0, p1, v0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 19
    return-void
.end method

.method public final registerModeDispatcher(Landroid/media/IAudioModeDispatcher;)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mModeDispatchers:Landroid/os/RemoteCallbackList;

    .line 3
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 6
    return-void
.end method

.method public final registerMuteAwaitConnectionDispatcher(Landroid/media/IMuteAwaitConnectionCallback;Z)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->registerMuteAwaitConnectionDispatcher_enforcePermission()V

    .line 4
    if-eqz p2, :cond_0

    .line 6
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 8
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 11
    move-result p0

    .line 12
    invoke-static {p0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 15
    move-result-object p0

    .line 16
    invoke-virtual {p2, p1, p0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMuteAwaitConnectionDispatchers:Landroid/os/RemoteCallbackList;

    .line 22
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 25
    :goto_0
    return-void
.end method

.method public final registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    const/4 v0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 v0, 0x0

    .line 14
    :goto_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 16
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;Z)V

    .line 19
    return-void
.end method

.method public final registerPlaybackCallbackWithPackage(Landroid/media/IPlaybackConfigDispatcher;Ljava/lang/String;)V
    .locals 3

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->registerPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 6
    if-nez p1, :cond_0

    .line 8
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mClients:Ljava/util/concurrent/ConcurrentLinkedQueue;

    .line 14
    invoke-virtual {p0}, Ljava/util/concurrent/ConcurrentLinkedQueue;->iterator()Ljava/util/Iterator;

    .line 17
    move-result-object p0

    .line 18
    :cond_1
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 21
    move-result v0

    .line 22
    if-eqz v0, :cond_2

    .line 24
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 27
    move-result-object v0

    .line 28
    check-cast v0, Lcom/android/server/audio/PlaybackActivityMonitor$PlayMonitorClient;

    .line 30
    iget-object v1, v0, Lcom/android/server/audio/PlaybackActivityMonitor$PlayMonitorClient;->mDispatcherCb:Landroid/media/IPlaybackConfigDispatcher;

    .line 32
    invoke-interface {p1, v1}, Landroid/media/IPlaybackConfigDispatcher;->equals(Ljava/lang/Object;)Z

    .line 35
    move-result v1

    .line 36
    if-eqz v1, :cond_1

    .line 38
    monitor-enter v0

    .line 39
    monitor-exit v0

    .line 40
    :cond_2
    :goto_0
    sget-object p0, Lcom/android/server/audio/AudioService;->sUsingAudioLogger:Lcom/android/server/utils/EventLogger;

    .line 42
    new-instance v0, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 44
    new-instance v1, Ljava/lang/StringBuilder;

    .line 46
    const-string/jumbo v2, "register : "

    .line 49
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 52
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 55
    const-string p1, ", "

    .line 57
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 60
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 63
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 66
    move-result-object p1

    .line 67
    invoke-direct {v0, p1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 70
    invoke-virtual {p0, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 73
    return-void
.end method

.method public final registerPreferredMixerAttributesDispatcher(Landroid/media/IPreferredMixerAttributesDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPrefMixerAttrDispatcher:Landroid/os/RemoteCallbackList;

    .line 6
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 9
    return-void
.end method

.method public final registerRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 11
    const/4 v0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 v0, 0x0

    .line 14
    :goto_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 16
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/RecordingActivityMonitor;->registerRecordingCallback(Landroid/media/IRecordingConfigDispatcher;Z)V

    .line 19
    return-void
.end method

.method public final registerSpatializerCallback(Landroid/media/ISpatializerCallback;)V
    .locals 1

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mStateCallbacks:Landroid/os/RemoteCallbackList;

    .line 9
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12
    monitor-exit p0

    .line 13
    return-void

    .line 14
    :catchall_0
    move-exception p1

    .line 15
    monitor-exit p0

    .line 16
    throw p1
.end method

.method public final registerSpatializerHeadTrackerAvailableCallback(Landroid/media/ISpatializerHeadTrackerAvailableCallback;Z)V
    .locals 0

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    if-eqz p2, :cond_0

    .line 9
    :try_start_0
    iget-object p2, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackerCallbacks:Landroid/os/RemoteCallbackList;

    .line 11
    invoke-virtual {p2, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 14
    goto :goto_0

    .line 15
    :catchall_0
    move-exception p1

    .line 16
    goto :goto_1

    .line 17
    :cond_0
    iget-object p2, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackerCallbacks:Landroid/os/RemoteCallbackList;

    .line 19
    invoke-virtual {p2, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22
    :goto_0
    monitor-exit p0

    .line 23
    return-void

    .line 24
    :goto_1
    monitor-exit p0

    .line 25
    throw p1
.end method

.method public final registerSpatializerHeadTrackingCallback(Landroid/media/ISpatializerHeadTrackingModeCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->registerSpatializerHeadTrackingCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackingModeCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final registerSpatializerOutputCallback(Landroid/media/ISpatializerOutputCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->registerSpatializerOutputCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mOutputCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final registerStrategyNonDefaultDevicesDispatcher(Landroid/media/IStrategyNonDefaultDevicesDispatcher;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 12
    move-result p0

    .line 13
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 15
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceInventory;->mNonDefDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 17
    invoke-static {p0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 20
    move-result-object p0

    .line 21
    invoke-virtual {v0, p1, p0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 24
    return-void
.end method

.method public final registerStrategyPreferredDevicesDispatcher(Landroid/media/IStrategyPreferredDevicesDispatcher;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 12
    move-result p0

    .line 13
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 15
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceInventory;->mPrefDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 17
    invoke-static {p0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 20
    move-result-object p0

    .line 21
    invoke-virtual {v0, p1, p0}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;Ljava/lang/Object;)Z

    .line 24
    return-void
.end method

.method public final registerStreamAliasingDispatcher(Landroid/media/IStreamAliasingDispatcher;Z)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->registerStreamAliasingDispatcher_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    if-eqz p2, :cond_0

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 11
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 17
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 20
    :goto_0
    return-void
.end method

.method public final releasePlayer(I)V
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 6
    move-result v0

    .line 7
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/PlaybackActivityMonitor;->releasePlayer(II)V

    .line 10
    return-void
.end method

.method public final releaseRecorder(I)V
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 3
    const/4 v0, 0x3

    .line 4
    const/4 v1, 0x0

    .line 5
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/audio/RecordingActivityMonitor;->updateSnapshot(IILandroid/media/AudioRecordingConfiguration;)Ljava/util/List;

    .line 8
    move-result-object p1

    .line 9
    invoke-virtual {p0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->dispatchCallbacks(Ljava/util/List;)V

    .line 12
    return-void
.end method

.method public final reloadAudioSettings()V
    .locals 1

    .line 1
    const/4 v0, 0x0

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->readAudioSettings(Z)V

    .line 5
    return-void
.end method

.method public final removeAssistantServiceUidsLocked([I)V
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    move v1, v0

    .line 3
    :goto_0
    array-length v2, p1

    .line 4
    if-ge v0, v2, :cond_1

    .line 6
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 8
    aget v3, p1, v0

    .line 10
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 13
    move-result-object v3

    .line 14
    invoke-virtual {v2, v3}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 17
    move-result v2

    .line 18
    if-nez v2, :cond_0

    .line 20
    aget v2, p1, v0

    .line 22
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 25
    move-result-object v2

    .line 26
    filled-new-array {v2}, [Ljava/lang/Object;

    .line 29
    move-result-object v2

    .line 30
    const-string v3, "Cannot remove assistant service, uid(%d) not present"

    .line 32
    invoke-static {v3, v2}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 35
    move-result-object v2

    .line 36
    const-string v3, "AS.AudioService"

    .line 38
    invoke-static {v3, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 41
    goto :goto_1

    .line 42
    :cond_0
    const/4 v1, 0x1

    .line 43
    :goto_1
    add-int/lit8 v0, v0, 0x1

    .line 45
    goto :goto_0

    .line 46
    :cond_1
    if-eqz v1, :cond_2

    .line 48
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 50
    invoke-virtual {p0}, Landroid/util/ArraySet;->stream()Ljava/util/stream/Stream;

    .line 53
    move-result-object p0

    .line 54
    new-instance p1, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;

    .line 56
    const/4 v0, 0x2

    .line 57
    invoke-direct {p1, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda1;-><init>(I)V

    .line 60
    invoke-interface {p0, p1}, Ljava/util/stream/Stream;->mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;

    .line 63
    move-result-object p0

    .line 64
    invoke-interface {p0}, Ljava/util/stream/IntStream;->toArray()[I

    .line 67
    move-result-object p0

    .line 68
    invoke-static {p0}, Landroid/media/AudioSystem;->setAssistantServicesUids([I)I

    .line 71
    :cond_2
    return-void
.end method

.method public final removeAssistantServicesUids([I)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->removeAssistantServicesUids_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 9
    monitor-enter v0

    .line 10
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->removeAssistantServiceUidsLocked([I)V

    .line 13
    monitor-exit v0

    .line 14
    return-void

    .line 15
    :catchall_0
    move-exception p0

    .line 16
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17
    throw p0
.end method

.method public final removeAudioSystemDeviceOutFromAbsVolumeDevices(I)Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 3
    const-string v1, "Removing DeviceType: 0x"

    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15
    const-string v1, " from mAbsoluteVolumeDeviceInfoMap"

    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    move-result-object v0

    .line 24
    const-string v1, "AS.AudioService"

    .line 26
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    .line 31
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 34
    move-result-object p1

    .line 35
    check-cast p0, Landroid/util/ArrayMap;

    .line 37
    invoke-virtual {p0, p1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 40
    move-result-object p0

    .line 41
    check-cast p0, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 43
    return-object p0
.end method

.method public final removeAudioSystemDeviceOutFromFixedVolumeDevices(I)Z
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 3
    const-string v1, "Removing DeviceType: 0x"

    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15
    const-string v1, " from mFixedVolumeDevices"

    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    move-result-object v0

    .line 24
    const-string v1, "AS.AudioService"

    .line 26
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 31
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 34
    move-result-object p1

    .line 35
    check-cast p0, Ljava/util/HashSet;

    .line 37
    invoke-virtual {p0, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 40
    move-result p0

    .line 41
    return p0
.end method

.method public final removeAudioSystemDeviceOutFromFullVolumeDevices(I)Z
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 3
    const-string v1, "Removing DeviceType: 0x"

    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15
    const-string v1, " from mFullVolumeDevices"

    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    move-result-object v0

    .line 24
    const-string v1, "AS.AudioService"

    .line 26
    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 31
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 34
    move-result-object p1

    .line 35
    check-cast p0, Ljava/util/HashSet;

    .line 37
    invoke-virtual {p0, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 40
    move-result p0

    .line 41
    return p0
.end method

.method public final removeDeviceAsNonDefaultForStrategy(ILandroid/media/AudioDeviceAttributes;)I
    .locals 7

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->removeDeviceAsNonDefaultForStrategy_enforcePermission()V

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p2

    .line 11
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 14
    move-result-object v0

    .line 15
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->toString()Ljava/lang/String;

    .line 18
    move-result-object v1

    .line 19
    filled-new-array {v0, v1}, [Ljava/lang/Object;

    .line 22
    move-result-object v0

    .line 23
    const-string/jumbo v1, "removeDeviceAsNonDefaultForStrategy strat:%d dev:%s"

    .line 26
    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 29
    move-result-object v0

    .line 30
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 32
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 34
    invoke-direct {v2, v0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 37
    const/4 v3, 0x0

    .line 38
    const-string v4, "AS.AudioService"

    .line 40
    invoke-virtual {v2, v3, v4}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 43
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 46
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->getRole()I

    .line 49
    move-result v1

    .line 50
    const/4 v2, 0x1

    .line 51
    if-ne v1, v2, :cond_0

    .line 53
    const-string p0, "Unsupported input routing in "

    .line 55
    invoke-virtual {p0, v0}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 58
    move-result-object p0

    .line 59
    invoke-static {v4, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 62
    const/4 p0, -0x1

    .line 63
    return p0

    .line 64
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 66
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 68
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 71
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 74
    move-result-object v1

    .line 75
    :try_start_0
    new-instance v2, Ljava/util/ArrayList;

    .line 77
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 80
    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 83
    iget-object v3, p0, Lcom/android/server/audio/AudioDeviceInventory;->mAppliedStrategyRoles:Landroid/util/ArrayMap;

    .line 85
    new-instance v5, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;

    .line 87
    const/4 v6, 0x7

    .line 88
    invoke-direct {v5, p0, v6}, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/audio/AudioDeviceInventory;I)V

    .line 91
    invoke-static {v3, v5, p1, v2}, Lcom/android/server/audio/AudioDeviceInventory;->removeDevicesRole(Landroid/util/ArrayMap;Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;ILjava/util/List;)I

    .line 94
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 95
    if-eqz v1, :cond_1

    .line 97
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V

    .line 100
    :cond_1
    if-nez v2, :cond_2

    .line 102
    const/16 v1, 0x30

    .line 104
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 106
    invoke-virtual {p0, v1, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->sendILMsgNoDelay(IILjava/lang/Object;)V

    .line 109
    :cond_2
    if-eqz v2, :cond_3

    .line 111
    const/4 p0, -0x2

    .line 112
    if-eq v2, p0, :cond_3

    .line 114
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 117
    move-result-object p0

    .line 118
    filled-new-array {p0, v0}, [Ljava/lang/Object;

    .line 121
    move-result-object p0

    .line 122
    const-string p1, "Error %d in %s)"

    .line 124
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 127
    move-result-object p0

    .line 128
    invoke-static {v4, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 131
    :cond_3
    return v2

    .line 132
    :catchall_0
    move-exception p0

    .line 133
    if-eqz v1, :cond_4

    .line 135
    :try_start_1
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 138
    goto :goto_0

    .line 139
    :catchall_1
    move-exception p1

    .line 140
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 143
    :cond_4
    :goto_0
    throw p0
.end method

.method public final removeLoudnessCodecInfo(ILandroid/media/LoudnessCodecInfo;)V
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string v0, "Cannot remove loudness info for stopped config "

    .line 8
    const-string v1, "Could not find to remove codecInfo "

    .line 10
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 13
    move-result v2

    .line 14
    new-instance v3, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;

    .line 16
    invoke-direct {v3, p1, v2}, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;-><init>(II)V

    .line 19
    iget-object p1, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 21
    monitor-enter p1

    .line 22
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 24
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 27
    move-result v2

    .line 28
    if-eqz v2, :cond_2

    .line 30
    iget-object v2, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 32
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 35
    move-result v2

    .line 36
    if-nez v2, :cond_0

    .line 38
    goto :goto_1

    .line 39
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 41
    invoke-virtual {p0, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 44
    move-result-object p0

    .line 45
    check-cast p0, Ljava/util/Set;

    .line 47
    invoke-interface {p0, p2}, Ljava/util/Set;->remove(Ljava/lang/Object;)Z

    .line 50
    move-result p0

    .line 51
    if-nez p0, :cond_1

    .line 53
    const-string p0, "AS.LoudnessCodecHelper"

    .line 55
    new-instance v0, Ljava/lang/StringBuilder;

    .line 57
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 60
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 63
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 66
    move-result-object p2

    .line 67
    invoke-static {p0, p2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 70
    goto :goto_0

    .line 71
    :catchall_0
    move-exception p0

    .line 72
    goto :goto_3

    .line 73
    :cond_1
    :goto_0
    monitor-exit p1

    .line 74
    goto :goto_2

    .line 75
    :cond_2
    :goto_1
    const-string p0, "AS.LoudnessCodecHelper"

    .line 77
    new-instance p2, Ljava/lang/StringBuilder;

    .line 79
    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 82
    invoke-virtual {p2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 85
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 88
    move-result-object p2

    .line 89
    invoke-static {p0, p2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 92
    monitor-exit p1

    .line 93
    :goto_2
    return-void

    .line 94
    :goto_3
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 95
    throw p0
.end method

.method public final removeMixForPolicy(Landroid/media/audiopolicy/AudioPolicyConfig;Landroid/media/audiopolicy/IAudioPolicyCallback;)I
    .locals 4

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string/jumbo v2, "removeMixForPolicy for "

    .line 8
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    const-string v2, " with config:"

    .line 20
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object v1

    .line 30
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    monitor-enter v0

    .line 36
    :try_start_0
    const-string v1, "Cannot add AudioMix in audio policy"

    .line 38
    invoke-virtual {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 41
    move-result-object p0

    .line 42
    const/4 p2, -0x1

    .line 43
    if-nez p0, :cond_0

    .line 45
    monitor-exit v0

    .line 46
    return p2

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_0

    .line 49
    :cond_0
    invoke-static {}, Landroid/media/audiopolicy/Flags;->audioMixOwnership()Z

    .line 52
    move-result v1

    .line 53
    if-eqz v1, :cond_2

    .line 55
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 58
    move-result-object v1

    .line 59
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 62
    move-result-object v1

    .line 63
    :cond_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    .line 66
    move-result v2

    .line 67
    if-eqz v2, :cond_2

    .line 69
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 72
    move-result-object v2

    .line 73
    check-cast v2, Landroid/media/audiopolicy/AudioMix;

    .line 75
    invoke-virtual {p0}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 78
    move-result-object v3

    .line 79
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 82
    move-result v2

    .line 83
    if-nez v2, :cond_1

    .line 85
    const-string p0, "AS.AudioService"

    .line 87
    const-string/jumbo p1, "removeMixForPolicy attempted to unregister AudioMix(es) not belonging to the AudioPolicy"

    .line 90
    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 93
    monitor-exit v0

    .line 94
    return p2

    .line 95
    :cond_2
    invoke-virtual {p1}, Landroid/media/audiopolicy/AudioPolicyConfig;->getMixes()Ljava/util/ArrayList;

    .line 98
    move-result-object p1

    .line 99
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeMixes(Ljava/util/ArrayList;)I

    .line 102
    move-result p0

    .line 103
    if-nez p0, :cond_3

    .line 105
    const/4 p2, 0x0

    .line 106
    :cond_3
    monitor-exit v0

    .line 107
    return p2

    .line 108
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 109
    throw p0
.end method

.method public final removeOnDevicesForAttributesChangedListener(Landroid/media/IDevicesForAttributesCallback;)V
    .locals 3

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 3
    iget-object v0, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 8
    invoke-interface {p1}, Landroid/media/IDevicesForAttributesCallback;->asBinder()Landroid/os/IBinder;

    .line 11
    move-result-object v2

    .line 12
    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 15
    move-result v1

    .line 16
    if-nez v1, :cond_0

    .line 18
    const-string p0, "AudioSystemAdapter"

    .line 20
    const-string/jumbo p1, "listener to be removed is not found."

    .line 23
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26
    monitor-exit v0

    .line 27
    goto :goto_0

    .line 28
    :catchall_0
    move-exception p0

    .line 29
    goto :goto_1

    .line 30
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioSystemAdapter;->mRegisteredAttributesMap:Landroid/util/ArrayMap;

    .line 32
    invoke-interface {p1}, Landroid/media/IDevicesForAttributesCallback;->asBinder()Landroid/os/IBinder;

    .line 35
    move-result-object v2

    .line 36
    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 39
    iget-object p0, p0, Lcom/android/server/audio/AudioSystemAdapter;->mDevicesForAttributesCallbacks:Landroid/os/RemoteCallbackList;

    .line 41
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 44
    monitor-exit v0

    .line 45
    :goto_0
    return-void

    .line 46
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 47
    throw p0
.end method

.method public final removePackageForName(Ljava/lang/String;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mPackageListHelper:Lcom/samsung/android/server/audio/PackageListHelper;

    .line 6
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 8
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    invoke-static {p0, p1}, Lcom/samsung/android/server/audio/PackageListHelper;->removePackageForName(Landroid/content/Context;Ljava/lang/String;)V

    .line 14
    return-void
.end method

.method public final removePreferredDevicesForStrategy(I)I
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->removePreferredDevicesForStrategy_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 7
    move-result-object v0

    .line 8
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 11
    move-result-object v0

    .line 12
    const-string/jumbo v1, "removePreferredDevicesForStrategy strat:%d"

    .line 15
    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 18
    move-result-object v0

    .line 19
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 21
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 23
    invoke-direct {v2, v0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 26
    const/4 v3, 0x0

    .line 27
    const-string v4, "AS.AudioService"

    .line 29
    invoke-virtual {v2, v3, v4}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 32
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 35
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 37
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 39
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 42
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 45
    move-result-object v1

    .line 46
    :try_start_0
    invoke-virtual {p0, p1, v3}, Lcom/android/server/audio/AudioDeviceInventory;->clearDevicesRoleForStrategy(IZ)I

    .line 49
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 50
    if-eqz v1, :cond_0

    .line 52
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V

    .line 55
    :cond_0
    if-nez v2, :cond_1

    .line 57
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 59
    const/16 v1, 0x21

    .line 61
    const/4 v3, 0x2

    .line 62
    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    .line 65
    :cond_1
    if-eqz v2, :cond_2

    .line 67
    const/4 p0, -0x2

    .line 68
    if-eq v2, p0, :cond_2

    .line 70
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 73
    move-result-object p0

    .line 74
    filled-new-array {p0, v0}, [Ljava/lang/Object;

    .line 77
    move-result-object p0

    .line 78
    const-string p1, "Error %d in %s)"

    .line 80
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 83
    move-result-object p0

    .line 84
    invoke-static {v4, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 87
    :cond_2
    return v2

    .line 88
    :catchall_0
    move-exception p0

    .line 89
    if-eqz v1, :cond_3

    .line 91
    :try_start_1
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 94
    goto :goto_0

    .line 95
    :catchall_1
    move-exception p1

    .line 96
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 99
    :cond_3
    :goto_0
    throw p0
.end method

.method public final removeSpatializerCompatibleAudioDevice(Landroid/media/AudioDeviceAttributes;)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->removeSpatializerCompatibleAudioDevice_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->removeCompatibleAudioDevice(Landroid/media/AudioDeviceAttributes;)V

    .line 12
    return-void
.end method

.method public final removeUidDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .locals 3

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string/jumbo v2, "removeUidDeviceAffinity for "

    .line 8
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    const-string v2, " uid:"

    .line 20
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object v1

    .line 30
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    monitor-enter v0

    .line 36
    :try_start_0
    const-string v1, "Cannot remove device affinity in audio policy"

    .line 38
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 41
    move-result-object p0

    .line 42
    const/4 p1, -0x1

    .line 43
    if-nez p0, :cond_0

    .line 45
    monitor-exit v0

    .line 46
    return p1

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_1

    .line 49
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mUidDeviceAffinities:Ljava/util/HashMap;

    .line 51
    new-instance v2, Ljava/lang/Integer;

    .line 53
    invoke-direct {v2, p2}, Ljava/lang/Integer;-><init>(I)V

    .line 56
    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 59
    move-result-object v1

    .line 60
    if-eqz v1, :cond_1

    .line 62
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeUidDeviceAffinitiesFromSystem(I)I

    .line 65
    move-result p0

    .line 66
    if-nez p0, :cond_1

    .line 68
    const/4 p1, 0x0

    .line 69
    goto :goto_0

    .line 70
    :cond_1
    const-string p0, "AudioPolicyProxy"

    .line 72
    const-string p2, "AudioSystem. removeUidDeviceAffinities failed"

    .line 74
    invoke-static {p0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    :goto_0
    monitor-exit v0

    .line 78
    return p1

    .line 79
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 80
    throw p0
.end method

.method public final removeUserIdDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .locals 3

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string/jumbo v2, "removeUserIdDeviceAffinity for "

    .line 8
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    const-string v2, " userId:"

    .line 20
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object v1

    .line 30
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    monitor-enter v0

    .line 36
    :try_start_0
    const-string v1, "Cannot remove device affinity in audio policy"

    .line 38
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 41
    move-result-object p0

    .line 42
    const/4 p1, -0x1

    .line 43
    if-nez p0, :cond_0

    .line 45
    monitor-exit v0

    .line 46
    return p1

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_1

    .line 49
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mUserIdDeviceAffinities:Ljava/util/HashMap;

    .line 51
    new-instance v2, Ljava/lang/Integer;

    .line 53
    invoke-direct {v2, p2}, Ljava/lang/Integer;-><init>(I)V

    .line 56
    invoke-virtual {v1, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 59
    move-result-object v1

    .line 60
    if-eqz v1, :cond_1

    .line 62
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->removeUserIdDeviceAffinitiesFromSystem(I)I

    .line 65
    move-result p0

    .line 66
    if-nez p0, :cond_1

    .line 68
    const/4 p1, 0x0

    .line 69
    goto :goto_0

    .line 70
    :cond_1
    const-string p0, "AudioPolicyProxy"

    .line 72
    const-string p2, "AudioSystem.removeUserIdDeviceAffinities failed"

    .line 74
    invoke-static {p0, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    :goto_0
    monitor-exit v0

    .line 78
    return p1

    .line 79
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 80
    throw p0
.end method

.method public final requestAudioFocus(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILandroid/media/audiopolicy/IAudioPolicyCallback;I)I
    .locals 17

    .line 1
    move-object/from16 v0, p0

    .line 3
    move-object/from16 v8, p5

    .line 5
    move-object/from16 v9, p6

    .line 7
    and-int/lit8 v1, p8, 0x8

    .line 9
    if-nez v1, :cond_13

    .line 11
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v10

    .line 15
    new-instance v1, Landroid/media/MediaMetrics$Item;

    .line 17
    const-string v2, "audio.service.focus"

    .line 19
    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 22
    invoke-virtual {v1, v10}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 25
    move-result-object v1

    .line 26
    sget-object v2, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 28
    invoke-virtual {v1, v2, v9}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 31
    move-result-object v1

    .line 32
    sget-object v2, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 34
    invoke-virtual {v1, v2, v8}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 37
    move-result-object v1

    .line 38
    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 40
    const-string/jumbo v3, "requestAudioFocus"

    .line 43
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 46
    move-result-object v1

    .line 47
    sget-object v2, Landroid/media/MediaMetrics$Property;->FLAGS:Landroid/media/MediaMetrics$Key;

    .line 49
    invoke-static/range {p8 .. p8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 52
    move-result-object v3

    .line 53
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 56
    move-result-object v11

    .line 57
    const/4 v12, 0x0

    .line 58
    if-eqz p1, :cond_0

    .line 60
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->isValidAudioAttributesUsage(Landroid/media/AudioAttributes;)Z

    .line 63
    move-result v1

    .line 64
    if-nez v1, :cond_0

    .line 66
    const-string v0, "AS.AudioService"

    .line 68
    const-string v1, "Request using unsupported usage"

    .line 70
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 73
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 75
    const-string v1, "Request using unsupported usage"

    .line 77
    invoke-virtual {v11, v0, v1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 80
    move-result-object v0

    .line 81
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 84
    return v12

    .line 85
    :cond_0
    and-int/lit8 v1, p8, 0x4

    .line 87
    const/4 v13, 0x4

    .line 88
    if-ne v1, v13, :cond_3

    .line 90
    const-string v1, "AudioFocus_For_Phone_Ring_And_Calls"

    .line 92
    invoke-virtual {v1, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 95
    move-result v1

    .line 96
    if-eqz v1, :cond_1

    .line 98
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 100
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    .line 102
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 105
    move-result v1

    .line 106
    if-eqz v1, :cond_3

    .line 108
    const-string v0, "AS.AudioService"

    .line 110
    const-string v1, "Invalid permission to (un)lock audio focus"

    .line 112
    new-instance v2, Ljava/lang/Exception;

    .line 114
    invoke-direct {v2}, Ljava/lang/Exception;-><init>()V

    .line 117
    invoke-static {v0, v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 120
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 122
    const-string v1, "Invalid permission to (un)lock audio focus"

    .line 124
    invoke-virtual {v11, v0, v1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 127
    move-result-object v0

    .line 128
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 131
    return v12

    .line 132
    :cond_1
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 134
    monitor-enter v1

    .line 135
    :try_start_0
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 137
    invoke-interface/range {p9 .. p9}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 140
    move-result-object v3

    .line 141
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 144
    move-result v2

    .line 145
    if-nez v2, :cond_2

    .line 147
    const-string v0, "AS.AudioService"

    .line 149
    const-string v2, "Invalid unregistered AudioPolicy to (un)lock audio focus"

    .line 151
    invoke-static {v0, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 154
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 156
    const-string v2, "Invalid unregistered AudioPolicy to (un)lock audio focus"

    .line 158
    invoke-virtual {v11, v0, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 161
    move-result-object v0

    .line 162
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 165
    monitor-exit v1

    .line 166
    return v12

    .line 167
    :catchall_0
    move-exception v0

    .line 168
    goto :goto_0

    .line 169
    :cond_2
    monitor-exit v1

    .line 170
    goto :goto_1

    .line 171
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 172
    throw v0

    .line 173
    :cond_3
    :goto_1
    if-eqz v9, :cond_12

    .line 175
    if-eqz v8, :cond_12

    .line 177
    if-nez p1, :cond_4

    .line 179
    goto/16 :goto_9

    .line 181
    :cond_4
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 183
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS_PRIVILEGED"

    .line 185
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 188
    move-result v1

    .line 189
    const/4 v14, 0x1

    .line 190
    if-eqz v1, :cond_6

    .line 192
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 194
    const-string v2, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 196
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 199
    move-result v1

    .line 200
    if-nez v1, :cond_5

    .line 202
    goto :goto_2

    .line 203
    :cond_5
    const/16 v1, 0x2710

    .line 205
    if-ge v10, v1, :cond_7

    .line 207
    :cond_6
    :goto_2
    move v1, v14

    .line 208
    goto :goto_3

    .line 209
    :cond_7
    move v1, v12

    .line 210
    :goto_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 213
    move-result-wide v15

    .line 214
    if-nez v1, :cond_8

    .line 216
    :try_start_1
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    .line 218
    move v2, v10

    .line 219
    move/from16 v3, p2

    .line 221
    move-object/from16 v4, p5

    .line 223
    move-object/from16 v5, p6

    .line 225
    move-object/from16 v6, p7

    .line 227
    move/from16 v7, p10

    .line 229
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/HardeningEnforcer;->blockFocusMethod(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)Z

    .line 232
    move-result v1

    .line 233
    if-eqz v1, :cond_8

    .line 235
    const-string v0, "AS.AudioService"

    .line 237
    const-string v1, "Audio focus request blocked by hardening"

    .line 239
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 242
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 244
    const-string v1, "Audio focus request blocked by hardening"

    .line 246
    invoke-virtual {v11, v0, v1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 249
    move-result-object v0

    .line 250
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 253
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 256
    return v12

    .line 257
    :catchall_1
    move-exception v0

    .line 258
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 261
    throw v0

    .line 262
    :cond_8
    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 265
    invoke-virtual {v11}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 268
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 270
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MultiSoundManager;->isRemoteSubmixAppExist()Z

    .line 273
    move-result v1

    .line 274
    if-nez v1, :cond_a

    .line 276
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 278
    const v2, 0x400007c

    .line 281
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->checkDeviceConnected(I)Z

    .line 284
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 286
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 289
    const-string/jumbo v1, "com.android.server.telecom"

    .line 292
    invoke-virtual {v1, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 295
    move-result v1

    .line 296
    if-nez v1, :cond_9

    .line 298
    invoke-virtual/range {p1 .. p1}, Landroid/media/AudioAttributes;->getUsage()I

    .line 301
    move-result v1

    .line 302
    if-eq v1, v13, :cond_9

    .line 304
    const/4 v2, 0x5

    .line 305
    if-eq v1, v2, :cond_9

    .line 307
    const/4 v2, 0x6

    .line 308
    if-eq v1, v2, :cond_9

    .line 310
    goto :goto_4

    .line 311
    :cond_9
    sput-boolean v12, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sSplitSoundEnabled:Z

    .line 313
    new-instance v1, Ljava/lang/StringBuilder;

    .line 315
    const-string/jumbo v2, "l_smart_view_split_sound_enable="

    .line 318
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 321
    sget-boolean v2, Lcom/samsung/android/server/audio/ScreenSharingHelper;->sSplitSoundEnabled:Z

    .line 323
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 326
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 329
    move-result-object v1

    .line 330
    invoke-static {v1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 333
    :cond_a
    :goto_4
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 335
    invoke-virtual/range {p1 .. p1}, Landroid/media/AudioAttributes;->getUsage()I

    .line 338
    move-result v2

    .line 339
    const/16 v3, 0xb

    .line 341
    if-ne v2, v3, :cond_10

    .line 343
    const/4 v2, 0x3

    .line 344
    move/from16 v3, p2

    .line 346
    if-eq v3, v2, :cond_b

    .line 348
    goto :goto_8

    .line 349
    :cond_b
    invoke-virtual/range {p1 .. p1}, Landroid/media/AudioAttributes;->getBundle()Landroid/os/Bundle;

    .line 352
    move-result-object v2

    .line 353
    if-eqz v2, :cond_11

    .line 355
    const-string v4, "a11y_force_ducking"

    .line 357
    invoke-virtual {v2, v4}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    .line 360
    move-result v2

    .line 361
    if-nez v2, :cond_c

    .line 363
    goto :goto_8

    .line 364
    :cond_c
    if-nez v10, :cond_d

    .line 366
    :goto_5
    move v12, v14

    .line 367
    goto :goto_8

    .line 368
    :cond_d
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUidsLock:Ljava/lang/Object;

    .line 370
    monitor-enter v2

    .line 371
    :try_start_2
    iget-object v4, v0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 373
    if-eqz v4, :cond_f

    .line 375
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 378
    move-result v4

    .line 379
    move v5, v12

    .line 380
    :goto_6
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mAccessibilityServiceUids:[I

    .line 382
    array-length v7, v6

    .line 383
    if-ge v5, v7, :cond_f

    .line 385
    aget v6, v6, v5

    .line 387
    if-ne v6, v4, :cond_e

    .line 389
    monitor-exit v2

    .line 390
    goto :goto_5

    .line 391
    :catchall_2
    move-exception v0

    .line 392
    goto :goto_7

    .line 393
    :cond_e
    add-int/lit8 v5, v5, 0x1

    .line 395
    goto :goto_6

    .line 396
    :cond_f
    monitor-exit v2

    .line 397
    goto :goto_8

    .line 398
    :goto_7
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 399
    throw v0

    .line 400
    :cond_10
    move/from16 v3, p2

    .line 402
    :cond_11
    :goto_8
    const/4 v10, -0x1

    .line 403
    move-object v0, v1

    .line 404
    move-object/from16 v1, p1

    .line 406
    move/from16 v2, p2

    .line 408
    move-object/from16 v3, p3

    .line 410
    move-object/from16 v4, p4

    .line 412
    move-object/from16 v5, p5

    .line 414
    move-object/from16 v6, p6

    .line 416
    move/from16 v7, p8

    .line 418
    move/from16 v8, p10

    .line 420
    move v9, v12

    .line 421
    invoke-virtual/range {v0 .. v10}, Lcom/android/server/audio/MediaFocusControl;->requestAudioFocus(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;IIZI)I

    .line 424
    move-result v0

    .line 425
    return v0

    .line 426
    :cond_12
    :goto_9
    const-string v0, "AS.AudioService"

    .line 428
    const-string v1, "Invalid null parameter to request audio focus"

    .line 430
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 433
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 435
    const-string v1, "Invalid null parameter to request audio focus"

    .line 437
    invoke-virtual {v11, v0, v1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 440
    move-result-object v0

    .line 441
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 444
    return v12

    .line 445
    :cond_13
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 447
    const-string v1, "Invalid test flag"

    .line 449
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 452
    throw v0
.end method

.method public final requestAudioFocusForTest(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;III)I
    .locals 14

    .line 1
    move-object v0, p0

    .line 2
    const-string/jumbo v1, "focus request"

    .line 5
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->enforceQueryAudioStateForTest(Ljava/lang/String;)Z

    .line 8
    move-result v1

    .line 9
    const/4 v2, 0x0

    .line 10
    if-nez v1, :cond_0

    .line 12
    return v2

    .line 13
    :cond_0
    if-eqz p6, :cond_2

    .line 15
    if-eqz p5, :cond_2

    .line 17
    if-nez p1, :cond_1

    .line 19
    goto :goto_0

    .line 20
    :cond_1
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 22
    const/4 v12, 0x0

    .line 23
    move-object v4, p1

    .line 24
    move/from16 v5, p2

    .line 26
    move-object/from16 v6, p3

    .line 28
    move-object/from16 v7, p4

    .line 30
    move-object/from16 v8, p5

    .line 32
    move-object/from16 v9, p6

    .line 34
    move/from16 v10, p7

    .line 36
    move/from16 v11, p9

    .line 38
    move/from16 v13, p8

    .line 40
    invoke-virtual/range {v3 .. v13}, Lcom/android/server/audio/MediaFocusControl;->requestAudioFocus(Landroid/media/AudioAttributes;ILandroid/os/IBinder;Landroid/media/IAudioFocusDispatcher;Ljava/lang/String;Ljava/lang/String;IIZI)I

    .line 43
    move-result v0

    .line 44
    return v0

    .line 45
    :cond_2
    :goto_0
    const-string v0, "AS.AudioService"

    .line 47
    const-string v1, "Invalid null parameter to request audio focus"

    .line 49
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    return v2
.end method

.method public final rescaleIndex(III)I
    .locals 1

    .line 12
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object p2, p0, p2

    .line 13
    iget v0, p2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 14
    iget p2, p2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 15
    aget-object p0, p0, p3

    .line 16
    iget p3, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 17
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 18
    invoke-static {p1, v0, p2, p3, p0}, Lcom/android/server/audio/AudioService;->rescaleIndex(IIIII)I

    move-result p0

    return p0
.end method

.method public final rescaleIndex(Landroid/media/VolumeInfo;I)I
    .locals 2

    .line 1
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getVolumeIndex()I

    move-result v0

    const/16 v1, -0x64

    if-eq v0, v1, :cond_1

    .line 2
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v0

    if-eq v0, v1, :cond_1

    .line 3
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result v0

    if-ne v0, v1, :cond_0

    goto :goto_0

    .line 4
    :cond_0
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getVolumeIndex()I

    move-result v0

    .line 5
    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v1

    invoke-virtual {p1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result p1

    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object p0, p0, p2

    .line 6
    iget p2, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    .line 7
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 8
    invoke-static {v0, v1, p1, p2, p0}, Lcom/android/server/audio/AudioService;->rescaleIndex(IIIII)I

    move-result p0

    return p0

    .line 9
    :cond_1
    :goto_0
    const-string p1, "AS.AudioService"

    const-string/jumbo v0, "rescaleIndex: volumeInfo has invalid index or range"

    invoke-static {p1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 10
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object p0, p0, p2

    .line 11
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    return p0
.end method

.method public final restoreVolumeGroups()V
    .locals 4

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    const-string/jumbo v1, "restoreVolumeGroups"

    .line 6
    invoke-static {v0, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 11
    monitor-enter p0

    .line 12
    const/4 v0, 0x0

    .line 13
    move v1, v0

    .line 14
    :goto_0
    :try_start_0
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 16
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 19
    move-result v3

    .line 20
    if-ge v1, v3, :cond_0

    .line 22
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 25
    move-result-object v2

    .line 26
    check-cast v2, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 28
    invoke-virtual {v2, v0}, Lcom/android/server/audio/AudioService$VolumeGroupState;->applyAllVolumes(Z)V

    .line 31
    add-int/lit8 v1, v1, 0x1

    .line 33
    goto :goto_0

    .line 34
    :catchall_0
    move-exception v0

    .line 35
    goto :goto_1

    .line 36
    :cond_0
    monitor-exit p0

    .line 37
    return-void

    .line 38
    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 39
    throw v0
.end method

.method public final retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 7
    return-object p1

    .line 8
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddressUncheked(Landroid/media/AudioDeviceAttributes;)V

    .line 11
    return-object p1
.end method

.method public final retrieveBluetoothAddressUncheked(Landroid/media/AudioDeviceAttributes;)V
    .locals 4

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 7
    move-result v0

    .line 8
    invoke-static {v0}, Landroid/media/AudioSystem;->isBluetoothDevice(I)Z

    .line 11
    move-result v0

    .line 12
    if-eqz v0, :cond_2

    .line 14
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 17
    move-result-object v0

    .line 18
    invoke-static {v0}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 21
    move-result-object v0

    .line 22
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 24
    invoke-virtual {p0}, Lcom/android/server/audio/AudioDeviceBroker;->getImmutableDeviceInventory()Ljava/util/Collection;

    .line 27
    move-result-object p0

    .line 28
    check-cast p0, Ljava/util/ArrayList;

    .line 30
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 33
    move-result-object p0

    .line 34
    :cond_0
    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 37
    move-result v1

    .line 38
    if-eqz v1, :cond_2

    .line 40
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 43
    move-result-object v1

    .line 44
    check-cast v1, Lcom/android/server/audio/AdiDeviceState;

    .line 46
    invoke-virtual {v1}, Lcom/android/server/audio/AdiDeviceState;->getInternalDeviceType()I

    .line 49
    move-result v2

    .line 50
    invoke-static {v2}, Landroid/media/AudioSystem;->isBluetoothDevice(I)Z

    .line 53
    move-result v2

    .line 54
    if-eqz v2, :cond_0

    .line 56
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 59
    move-result v2

    .line 60
    invoke-virtual {v1}, Lcom/android/server/audio/AdiDeviceState;->getInternalDeviceType()I

    .line 63
    move-result v3

    .line 64
    if-ne v2, v3, :cond_0

    .line 66
    invoke-virtual {v1}, Lcom/android/server/audio/AdiDeviceState;->getDeviceAddress()Ljava/lang/String;

    .line 69
    move-result-object v2

    .line 70
    invoke-static {v2}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 73
    move-result-object v2

    .line 74
    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 77
    move-result v2

    .line 78
    if-nez v2, :cond_1

    .line 80
    goto :goto_0

    .line 81
    :cond_1
    invoke-virtual {v1}, Lcom/android/server/audio/AdiDeviceState;->getDeviceAddress()Ljava/lang/String;

    .line 84
    move-result-object p0

    .line 85
    invoke-virtual {p1, p0}, Landroid/media/AudioDeviceAttributes;->setAddress(Ljava/lang/String;)V

    .line 88
    :cond_2
    return-void
.end method

.method public final retrieveBluetoothAddresses(Ljava/util/List;)Ljava/util/List;
    .locals 2

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothPrividged()Z

    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 7
    return-object p1

    .line 8
    :cond_0
    new-instance v0, Ljava/util/ArrayList;

    .line 10
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 13
    invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 16
    move-result-object p1

    .line 17
    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    .line 20
    move-result v1

    .line 21
    if-eqz v1, :cond_2

    .line 23
    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 26
    move-result-object v1

    .line 27
    check-cast v1, Landroid/media/AudioDeviceAttributes;

    .line 29
    if-nez v1, :cond_1

    .line 31
    goto :goto_0

    .line 32
    :cond_1
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddressUncheked(Landroid/media/AudioDeviceAttributes;)V

    .line 35
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 38
    goto :goto_0

    .line 39
    :cond_2
    return-object v0
.end method

.method public final secGetActiveStreamType(I)I
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getActiveStreamType(I)I

    .line 4
    move-result p0

    .line 5
    return p0
.end method

.method public final sendBecomingNoisyIntent(I[Ljava/lang/String;)I
    .locals 7

    .line 1
    const/4 v0, 0x0

    .line 2
    if-eqz p2, :cond_4

    .line 4
    aget-object v1, p2, v0

    .line 6
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 9
    move-result v1

    .line 10
    if-eqz v1, :cond_0

    .line 12
    goto :goto_3

    .line 13
    :cond_0
    new-instance v1, Landroid/content/Intent;

    .line 15
    const-string v2, "android.media.AUDIO_BECOMING_NOISY"

    .line 17
    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 20
    array-length v2, p2

    .line 21
    move v3, v0

    .line 22
    :goto_0
    const/4 v4, 0x0

    .line 23
    if-ge v3, v2, :cond_1

    .line 25
    aget-object v5, p2, v3

    .line 27
    invoke-virtual {v1, v5}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;

    .line 30
    invoke-virtual {p0, v1, v4}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    .line 33
    new-instance v4, Ljava/lang/StringBuilder;

    .line 35
    const-string/jumbo v6, "sendBecomingNoisyIntent to "

    .line 38
    invoke-direct {v4, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 41
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 44
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 47
    move-result-object v4

    .line 48
    const-string v5, "AS.AudioService"

    .line 50
    invoke-static {v5, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 53
    add-int/lit8 v3, v3, 0x1

    .line 55
    goto :goto_0

    .line 56
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 58
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 61
    new-instance p2, Ljava/lang/StringBuilder;

    .line 63
    const-string/jumbo v1, "handleExternalFocusGain, "

    .line 66
    invoke-direct {p2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 69
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 72
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 75
    move-result-object p2

    .line 76
    const-string v1, "MediaFocusControl"

    .line 78
    invoke-static {v1, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 81
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mMultiFocusStack:Lcom/android/server/audio/MultiFocusStack;

    .line 83
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/MultiFocusStack;->getFocusRequester(IZ)Ljava/util/ArrayList;

    .line 86
    move-result-object p0

    .line 87
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    .line 90
    move-result p1

    .line 91
    if-nez p1, :cond_2

    .line 93
    goto :goto_2

    .line 94
    :cond_2
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 97
    move-result-object p0

    .line 98
    :goto_1
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 101
    move-result p1

    .line 102
    if-eqz p1, :cond_3

    .line 104
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 107
    move-result-object p1

    .line 108
    check-cast p1, Lcom/android/server/audio/FocusRequester;

    .line 110
    const/4 p2, 0x1

    .line 111
    invoke-virtual {p1, p2, v4, p2}, Lcom/android/server/audio/FocusRequester;->handleFocusLossFromGain(ILcom/android/server/audio/FocusRequester;Z)Z

    .line 114
    goto :goto_1

    .line 115
    :cond_3
    :goto_2
    const/16 p0, 0xc8

    .line 117
    return p0

    .line 118
    :cond_4
    :goto_3
    return v0
.end method

.method public final sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSystemServer:Lcom/android/server/audio/SystemServerAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const/high16 v0, 0x4000000

    .line 8
    invoke-virtual {p1, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 11
    const/high16 v0, 0x10000000

    .line 13
    invoke-virtual {p1, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 16
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 19
    move-result-wide v0

    .line 20
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 22
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 24
    const/4 v3, 0x0

    .line 25
    invoke-virtual {p0, p1, v2, v3, p2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/os/Bundle;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 31
    return-void

    .line 32
    :catchall_0
    move-exception p0

    .line 33
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 36
    throw p0
.end method

.method public final sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 6
    invoke-virtual {v1}, Ljava/util/ArrayList;->isEmpty()Z

    .line 9
    move-result v2

    .line 10
    if-nez v2, :cond_3

    .line 12
    if-nez p1, :cond_0

    .line 14
    goto :goto_1

    .line 15
    :cond_0
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 18
    move-result-object v1

    .line 19
    :cond_1
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    .line 22
    move-result v2

    .line 23
    if-eqz v2, :cond_2

    .line 25
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 28
    move-result-object v2

    .line 29
    check-cast v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 31
    iget v3, v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventType:I

    .line 33
    and-int/2addr v3, p1

    .line 34
    if-ne v3, p1, :cond_1

    .line 36
    const-string v3, "AS.AudioService"

    .line 38
    new-instance v4, Ljava/lang/StringBuilder;

    .line 40
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 43
    const-string v5, "Send broadcast to "

    .line 45
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 48
    iget-object v5, v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    .line 50
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 53
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 56
    move-result-object v4

    .line 57
    invoke-static {v3, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 60
    new-instance v10, Landroid/content/Intent;

    .line 62
    const-string/jumbo v3, "com.samsung.android.intent.action.SOUND_EVENT"

    .line 65
    invoke-direct {v10, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 68
    const-string/jumbo v3, "type"

    .line 71
    invoke-virtual {v10, v3, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 74
    const-string/jumbo v3, "value"

    .line 77
    invoke-virtual {v10, v3, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 80
    const-string/jumbo v3, "package"

    .line 83
    invoke-virtual {v10, v3, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 86
    iget-object v2, v2, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    .line 88
    invoke-virtual {v10, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 91
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 93
    const/4 v7, 0x2

    .line 94
    const/4 v8, 0x0

    .line 95
    const/4 v9, 0x0

    .line 96
    const/4 v11, 0x0

    .line 97
    const/16 v6, 0xad0

    .line 99
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 102
    goto :goto_0

    .line 103
    :catchall_0
    move-exception p0

    .line 104
    goto :goto_2

    .line 105
    :cond_2
    monitor-exit v0

    .line 106
    return-void

    .line 107
    :cond_3
    :goto_1
    monitor-exit v0

    .line 108
    return-void

    .line 109
    :goto_2
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 110
    throw p0
.end method

.method public final sendEnabledSurroundFormats(Landroid/content/ContentResolver;Z)V
    .locals 8

    .line 1
    iget v0, p0, Lcom/android/server/audio/AudioService;->mEncodedSurroundMode:I

    .line 3
    const/4 v1, 0x3

    .line 4
    if-eq v0, v1, :cond_0

    .line 6
    return-void

    .line 7
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 9
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 12
    const-string/jumbo v0, "encoded_surround_output_enabled_formats"

    .line 15
    invoke-static {p1, v0}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 18
    move-result-object p1

    .line 19
    if-nez p1, :cond_1

    .line 21
    const-string p1, ""

    .line 23
    :cond_1
    if-nez p2, :cond_2

    .line 25
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mEnabledSurroundFormats:Ljava/lang/String;

    .line 27
    invoke-static {p1, p2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    .line 30
    move-result p2

    .line 31
    if-eqz p2, :cond_2

    .line 33
    return-void

    .line 34
    :cond_2
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mEnabledSurroundFormats:Ljava/lang/String;

    .line 36
    const-string p2, ","

    .line 38
    invoke-static {p1, p2}, Landroid/text/TextUtils;->split(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;

    .line 41
    move-result-object p1

    .line 42
    new-instance v6, Ljava/util/ArrayList;

    .line 44
    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    .line 47
    array-length v1, p1

    .line 48
    const/4 v2, 0x0

    .line 49
    :goto_0
    if-ge v2, v1, :cond_4

    .line 51
    aget-object v3, p1, v2

    .line 53
    :try_start_0
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(Ljava/lang/String;)Ljava/lang/Integer;

    .line 56
    move-result-object v4

    .line 57
    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    .line 60
    move-result v5

    .line 61
    invoke-static {v5}, Lcom/android/server/audio/AudioService;->isSurroundFormat(I)Z

    .line 64
    move-result v5

    .line 65
    if-eqz v5, :cond_3

    .line 67
    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 70
    move-result v5

    .line 71
    if-nez v5, :cond_3

    .line 73
    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 76
    goto :goto_1

    .line 77
    :catch_0
    const-string v4, "Invalid enabled surround format:"

    .line 79
    const-string v5, "AS.AudioService"

    .line 81
    invoke-static {v4, v3, v5}, Lcom/android/server/StorageManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 84
    :cond_3
    :goto_1
    add-int/lit8 v2, v2, 0x1

    .line 86
    goto :goto_0

    .line 87
    :cond_4
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 89
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 91
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 94
    move-result-object v1

    .line 95
    invoke-static {p2, v6}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;

    .line 98
    move-result-object p2

    .line 99
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 102
    invoke-static {v1, v0, p2}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 105
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 107
    const/4 v3, 0x2

    .line 108
    const/4 v4, 0x0

    .line 109
    const/16 v2, 0x18

    .line 111
    const/4 v5, 0x0

    .line 112
    const/4 v7, 0x0

    .line 113
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 116
    return-void
.end method

.method public final sendEncodedSurroundMode(ILjava/lang/String;)V
    .locals 3

    .line 1
    const/16 v0, 0x10

    .line 3
    if-eqz p1, :cond_3

    .line 5
    const/4 v1, 0x1

    .line 6
    if-eq p1, v1, :cond_2

    .line 8
    const/4 v1, 0x2

    .line 9
    if-eq p1, v1, :cond_1

    .line 11
    const/4 v1, 0x3

    .line 12
    if-eq p1, v1, :cond_0

    .line 14
    const-string/jumbo v1, "updateSurroundSoundSettings: illegal value "

    .line 17
    const-string v2, "AS.AudioService"

    .line 19
    invoke-static {p1, v1, v2}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 22
    move p1, v0

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    const/16 p1, 0xf

    .line 26
    goto :goto_0

    .line 27
    :cond_1
    const/16 p1, 0xe

    .line 29
    goto :goto_0

    .line 30
    :cond_2
    const/16 p1, 0xd

    .line 32
    goto :goto_0

    .line 33
    :cond_3
    const/4 p1, 0x0

    .line 34
    :goto_0
    if-eq p1, v0, :cond_4

    .line 36
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 38
    const/4 v0, 0x6

    .line 39
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 42
    :cond_4
    return-void
.end method

.method public final sendFocusLoss(Landroid/media/AudioFocusInfo;Landroid/media/audiopolicy/IAudioPolicyCallback;)Z
    .locals 6

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 10
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 12
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 15
    move-result-object v1

    .line 16
    invoke-virtual {v0, v1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 19
    move-result v0

    .line 20
    if-eqz v0, :cond_4

    .line 22
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 24
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 27
    move-result-object p2

    .line 28
    invoke-virtual {v0, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 31
    move-result-object p2

    .line 32
    check-cast p2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 34
    iget-boolean p2, p2, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mHasFocusListener:Z

    .line 36
    if-eqz p2, :cond_3

    .line 38
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 40
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 43
    sget-object p2, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 45
    monitor-enter p2

    .line 46
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 48
    invoke-virtual {v0}, Ljava/util/Stack;->iterator()Ljava/util/Iterator;

    .line 51
    move-result-object v0

    .line 52
    :cond_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 55
    move-result v1

    .line 56
    const/4 v2, 0x0

    .line 57
    const/4 v3, 0x0

    .line 58
    if-eqz v1, :cond_1

    .line 60
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 63
    move-result-object v1

    .line 64
    check-cast v1, Lcom/android/server/audio/FocusRequester;

    .line 66
    iget-object v4, v1, Lcom/android/server/audio/FocusRequester;->mClientId:Ljava/lang/String;

    .line 68
    invoke-virtual {p1}, Landroid/media/AudioFocusInfo;->getClientId()Ljava/lang/String;

    .line 71
    move-result-object v5

    .line 72
    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 75
    move-result v4

    .line 76
    if-eqz v4, :cond_0

    .line 78
    const/4 p1, -0x1

    .line 79
    invoke-virtual {v1, p1, v3, v2}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 82
    move-object v3, v1

    .line 83
    goto :goto_0

    .line 84
    :catchall_0
    move-exception p0

    .line 85
    goto :goto_2

    .line 86
    :cond_1
    :goto_0
    if-eqz v3, :cond_2

    .line 88
    iget-object p0, p0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 90
    invoke-virtual {p0, v3}, Ljava/util/Stack;->remove(Ljava/lang/Object;)Z

    .line 93
    invoke-virtual {v3}, Lcom/android/server/audio/FocusRequester;->release()V

    .line 96
    monitor-exit p2

    .line 97
    const/4 v2, 0x1

    .line 98
    goto :goto_1

    .line 99
    :cond_2
    monitor-exit p2

    .line 100
    :goto_1
    return v2

    .line 101
    :goto_2
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 102
    throw p0

    .line 103
    :cond_3
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 105
    const-string p1, "AudioPolicy must have focus listener to change focus"

    .line 107
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 110
    throw p0

    .line 111
    :cond_4
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 113
    const-string p1, "Only registered AudioPolicy can change focus"

    .line 115
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 118
    throw p0
.end method

.method public final sendVolumeChangedIntent(IIII)V
    .locals 5

    .line 7
    invoke-static {p2, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result p2

    .line 8
    invoke-static {p3, p1}, Lcom/android/server/audio/AudioService;->getIndexDividedBy10(II)I

    move-result p3

    .line 9
    new-instance v0, Landroid/content/Intent;

    const-string v1, "android.media.VOLUME_CHANGED_ACTION"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 10
    const-string v1, "android.media.EXTRA_VOLUME_STREAM_TYPE"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 11
    invoke-static {}, Landroid/app/BroadcastOptions;->makeBasic()Landroid/app/BroadcastOptions;

    move-result-object v1

    const/4 v2, 0x1

    .line 12
    invoke-virtual {v1, v2}, Landroid/app/BroadcastOptions;->setDeliveryGroupPolicy(I)Landroid/app/BroadcastOptions;

    .line 13
    const-string v3, "android.media.STREAM_DEVICES_CHANGED_ACTION"

    .line 14
    invoke-static {p1}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    move-result-object v4

    .line 15
    invoke-virtual {v1, v3, v4}, Landroid/app/BroadcastOptions;->setDeliveryGroupMatchingKey(Ljava/lang/String;Ljava/lang/String;)Landroid/app/BroadcastOptions;

    .line 16
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    move-result p1

    const/4 v3, 0x0

    const-string v4, "android.media.EXTRA_VOLUME_STREAM_VALUE"

    if-eqz p1, :cond_0

    .line 17
    invoke-virtual {v0, v4, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    goto :goto_0

    .line 18
    :cond_0
    invoke-virtual {v0, v4, p3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 19
    :goto_0
    const-string p1, "android.media.EXTRA_PREV_VOLUME_STREAM_VALUE"

    invoke-virtual {v0, p1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    and-int/lit8 p1, p4, 0x1

    if-eqz p1, :cond_1

    goto :goto_1

    :cond_1
    move v2, v3

    .line 20
    :goto_1
    const-string p1, "android.media.EXTRA_VOLUME_SHOW_UI"

    invoke-virtual {v0, p1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 21
    invoke-virtual {v1}, Landroid/app/BroadcastOptions;->toBundle()Landroid/os/Bundle;

    move-result-object p1

    invoke-virtual {p0, v0, p1}, Lcom/android/server/audio/AudioService;->sendBroadcastToAll(Landroid/content/Intent;Landroid/os/Bundle;)V

    return-void
.end method

.method public final sendVolumeChangedIntent(IIIII)V
    .locals 2

    and-int/lit8 v0, p4, 0x20

    if-eqz v0, :cond_0

    return-void

    :cond_0
    if-ne p2, p3, :cond_2

    .line 1
    iget v0, p0, Lcom/android/server/audio/AudioService;->mLastVolumeChangedIntentDevice:I

    if-ne v0, p5, :cond_2

    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 2
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 3
    iget-boolean v1, v0, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->mDualModeEnabled:Z

    if-eqz v1, :cond_1

    .line 4
    iget-boolean v0, v0, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->needVolumeChangedIntent:Z

    if-eqz v0, :cond_1

    goto :goto_0

    :cond_1
    return-void

    .line 5
    :cond_2
    :goto_0
    iput p5, p0, Lcom/android/server/audio/AudioService;->mLastVolumeChangedIntentDevice:I

    .line 6
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/audio/AudioService;->sendVolumeChangedIntent(IIII)V

    return-void
.end method

.method public final sendVolumeUpdate(IIIII)V
    .locals 7

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 3
    aget v2, v0, p1

    .line 5
    const/4 p1, 0x3

    .line 6
    if-ne v2, p1, :cond_0

    .line 8
    invoke-virtual {p0, p5}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    .line 11
    move-result p1

    .line 12
    if-eqz p1, :cond_0

    .line 14
    and-int/lit8 p4, p4, -0x2

    .line 16
    :cond_0
    invoke-virtual {p0, v2, p4, p3, p5}, Lcom/android/server/audio/AudioService;->updateFlagsForSamsungVolume(IIII)I

    .line 19
    move-result v5

    .line 20
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 22
    invoke-virtual {p1, v2, v5}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 25
    move-object v1, p0

    .line 26
    move v3, p2

    .line 27
    move v4, p3

    .line 28
    move v6, p5

    .line 29
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeChangedIntent(IIIII)V

    .line 32
    return-void
.end method

.method public final setA2dpDeviceVolume(Landroid/bluetooth/BluetoothDevice;IIILjava/lang/String;)V
    .locals 17

    .line 1
    move-object/from16 v0, p0

    .line 3
    move-object/from16 v1, p1

    .line 5
    move/from16 v7, p2

    .line 7
    move/from16 v2, p3

    .line 9
    move-object/from16 v8, p5

    .line 11
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v4, "android.permission.MODIFY_PHONE_STATE"

    .line 15
    invoke-virtual {v3, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result v3

    .line 19
    if-eqz v3, :cond_0

    .line 21
    const-string v0, "AS.AudioService"

    .line 23
    new-instance v1, Ljava/lang/StringBuilder;

    .line 25
    const-string v2, "MODIFY_PHONE_STATE Permission Denial from pid="

    .line 27
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 30
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 33
    move-result v2

    .line 34
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 37
    const-string v2, ", uid="

    .line 39
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 45
    move-result v2

    .line 46
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 49
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 52
    move-result-object v1

    .line 53
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 56
    return-void

    .line 57
    :cond_0
    if-eqz v1, :cond_6

    .line 59
    const/4 v3, 0x3

    .line 60
    if-ne v7, v3, :cond_1

    .line 62
    iget-boolean v3, v0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 64
    const/16 v4, 0x80

    .line 66
    if-eqz v3, :cond_2

    .line 68
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    .line 71
    move-result v3

    .line 72
    mul-int/lit8 v3, v3, 0xa

    .line 74
    if-le v2, v3, :cond_2

    .line 76
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 78
    invoke-virtual {v3, v4}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    .line 81
    move-result v3

    .line 82
    if-eqz v3, :cond_2

    .line 84
    const-string v1, "AS.AudioService"

    .line 86
    const-string v3, "Over the volume limit value"

    .line 88
    invoke-static {v1, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 91
    :cond_1
    move/from16 v9, p4

    .line 93
    goto/16 :goto_2

    .line 95
    :cond_2
    sget-boolean v3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR_PHASE_3:Z

    .line 97
    if-eqz v3, :cond_3

    .line 99
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothDevice;->semGetAudioType()I

    .line 102
    move-result v3

    .line 103
    const/4 v5, 0x2

    .line 104
    if-ne v3, v5, :cond_3

    .line 106
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 108
    invoke-virtual {v3, v7, v2, v4}, Lcom/android/server/audio/SoundDoseHelper;->checkSafeMediaVolume(III)Z

    .line 111
    move-result v3

    .line 112
    if-eqz v3, :cond_3

    .line 114
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 116
    move/from16 v9, p4

    .line 118
    invoke-virtual {v0, v9}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 121
    return-void

    .line 122
    :cond_3
    move/from16 v9, p4

    .line 124
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 126
    iget-object v3, v3, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 128
    const-string/jumbo v4, "setVolume:"

    .line 131
    iget-object v5, v3, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->mConnectedDevicesVolume:Landroid/util/ArrayMap;

    .line 133
    monitor-enter v5

    .line 134
    :try_start_0
    iget-object v6, v3, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->mVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 136
    new-instance v10, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 138
    new-instance v11, Ljava/lang/StringBuilder;

    .line 140
    invoke-direct {v11, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 143
    invoke-static/range {p1 .. p1}, Lcom/samsung/android/audio/AudioManagerHelper;->getAddressForLog(Landroid/bluetooth/BluetoothDevice;)Ljava/lang/String;

    .line 146
    move-result-object v4

    .line 147
    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 150
    const-string v4, ",idx:"

    .line 152
    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 155
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 158
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 161
    move-result-object v4

    .line 162
    invoke-direct {v10, v4}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 165
    invoke-virtual {v6, v10}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 168
    iget-object v4, v3, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->mConnectedDevicesVolume:Landroid/util/ArrayMap;

    .line 170
    invoke-virtual {v4, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 173
    move-result v4

    .line 174
    if-nez v4, :cond_4

    .line 176
    invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothDevice;->getAddress()Ljava/lang/String;

    .line 179
    move-result-object v1

    .line 180
    invoke-virtual {v3, v2}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->getValidIndex(I)I

    .line 183
    move-result v4

    .line 184
    invoke-virtual {v3, v4, v1}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->postSaveVolumeDB(ILjava/lang/String;)V

    .line 187
    monitor-exit v5

    .line 188
    goto :goto_0

    .line 189
    :catchall_0
    move-exception v0

    .line 190
    goto :goto_1

    .line 191
    :cond_4
    invoke-virtual {v3, v1, v2}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->setVolume(Landroid/bluetooth/BluetoothDevice;I)Z

    .line 194
    move-result v1

    .line 195
    iput-boolean v1, v3, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->needVolumeChangedIntent:Z

    .line 197
    invoke-virtual {v3, v2}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->updateMainVolume(I)V

    .line 200
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 201
    :goto_0
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 203
    iget-object v1, v1, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 205
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->getMainVolume()I

    .line 208
    move-result v1

    .line 209
    const/4 v3, -0x1

    .line 210
    if-ne v1, v3, :cond_5

    .line 212
    move v1, v2

    .line 213
    :cond_5
    move v10, v1

    .line 214
    goto :goto_3

    .line 215
    :goto_1
    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 216
    throw v0

    .line 217
    :goto_2
    move v10, v2

    .line 218
    :goto_3
    sget-object v11, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 220
    new-instance v12, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 222
    const-string v1, ".setA2dpDeviceVolume"

    .line 224
    invoke-static {v8, v1}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 227
    move-result-object v6

    .line 228
    const/4 v2, 0x2

    .line 229
    move-object v1, v12

    .line 230
    move/from16 v3, p2

    .line 232
    move v4, v10

    .line 233
    move/from16 v5, p4

    .line 235
    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 238
    invoke-virtual {v11, v12}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 241
    new-instance v1, Ljava/lang/StringBuilder;

    .line 243
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 246
    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 249
    const-string v2, ".setA2dpDeviceVolume"

    .line 251
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 254
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 257
    move-result-object v11

    .line 258
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 261
    move-result v12

    .line 262
    const/4 v13, 0x1

    .line 263
    const/16 v14, 0x80

    .line 265
    const/4 v5, 0x0

    .line 266
    const/4 v15, 0x0

    .line 267
    const/16 v16, 0x1

    .line 269
    move-object/from16 v1, p0

    .line 271
    move/from16 v2, p2

    .line 273
    move v3, v10

    .line 274
    move/from16 v4, p4

    .line 276
    move-object/from16 v6, p5

    .line 278
    move-object v7, v11

    .line 279
    move-object v8, v15

    .line 280
    move v9, v12

    .line 281
    move/from16 v10, v16

    .line 283
    move v11, v13

    .line 284
    move v12, v14

    .line 285
    invoke-virtual/range {v1 .. v12}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 288
    return-void

    .line 289
    :cond_6
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 291
    const-string v1, "Invalid device device is null"

    .line 293
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 296
    throw v0
.end method

.method public final setA2dpSuspended(Z)V
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setA2dpSuspended_enforcePermission()V

    .line 4
    const-string/jumbo v0, "setA2dpSuspended("

    .line 7
    const-string v1, ") from u/pid:"

    .line 9
    invoke-static {v0, v1, p1}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 12
    move-result-object v0

    .line 13
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 16
    move-result v1

    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 20
    const-string v1, "/"

    .line 22
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 25
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 28
    move-result v1

    .line 29
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object v0

    .line 36
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 38
    const/4 v1, 0x0

    .line 39
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/audio/AudioDeviceBroker;->setA2dpSuspended(Ljava/lang/String;ZZ)V

    .line 42
    return-void
.end method

.method public final setActiveAssistantServiceUids([I)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setActiveAssistantServiceUids_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 9
    monitor-enter v0

    .line 10
    :try_start_0
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mActiveAssistantServiceUids:[I

    .line 12
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->updateActiveAssistantServiceUids()V

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19
    throw p0
.end method

.method public final setAdditionalOutputDeviceDelay(Landroid/media/AudioDeviceAttributes;J)Z
    .locals 2

    .line 1
    const-string/jumbo v0, "device must not be null"

    .line 4
    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 10
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 13
    move-result-object p1

    .line 14
    new-instance v0, Ljava/lang/StringBuilder;

    .line 16
    const-string v1, "additional_output_device_delay="

    .line 18
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 21
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 24
    move-result v1

    .line 25
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 28
    const-string v1, ","

    .line 30
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 33
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 36
    move-result-object p1

    .line 37
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 43
    move-result-object p1

    .line 44
    new-instance v0, Ljava/lang/StringBuilder;

    .line 46
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 49
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 52
    const-string v1, ","

    .line 54
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 60
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 63
    move-result-object p2

    .line 64
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRestorableParameters:Lcom/android/server/audio/AudioService$RestorableParameters;

    .line 66
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 69
    const-string/jumbo p3, "id must not be null"

    .line 72
    invoke-static {p1, p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 75
    const-string/jumbo p3, "parameter must not be null"

    .line 78
    invoke-static {p2, p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 81
    iget-object p3, p0, Lcom/android/server/audio/AudioService$RestorableParameters;->mMap:Ljava/util/Map;

    .line 83
    monitor-enter p3

    .line 84
    :try_start_0
    invoke-static {p2}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 87
    move-result v0

    .line 88
    if-nez v0, :cond_0

    .line 90
    new-instance v1, Lcom/android/server/audio/AudioService$RestorableParameters$$ExternalSyntheticLambda0;

    .line 92
    invoke-direct {v1, p2}, Lcom/android/server/audio/AudioService$RestorableParameters$$ExternalSyntheticLambda0;-><init>(Ljava/lang/String;)V

    .line 95
    iget-object p2, p0, Lcom/android/server/audio/AudioService$RestorableParameters;->mMap:Ljava/util/Map;

    .line 97
    monitor-enter p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 98
    :try_start_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService$RestorableParameters;->mMap:Ljava/util/Map;

    .line 100
    check-cast p0, Ljava/util/HashMap;

    .line 102
    invoke-virtual {p0, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 105
    monitor-exit p2

    .line 106
    goto :goto_0

    .line 107
    :catchall_0
    move-exception p0

    .line 108
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 109
    :try_start_2
    throw p0

    .line 110
    :catchall_1
    move-exception p0

    .line 111
    goto :goto_2

    .line 112
    :cond_0
    :goto_0
    monitor-exit p3

    .line 113
    if-nez v0, :cond_1

    .line 115
    const/4 p0, 0x1

    .line 116
    goto :goto_1

    .line 117
    :cond_1
    const/4 p0, 0x0

    .line 118
    :goto_1
    return p0

    .line 119
    :goto_2
    monitor-exit p3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 120
    throw p0
.end method

.method public final setAllowedCapturePolicy(I)I
    .locals 6

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    invoke-static {p1, v1}, Landroid/media/AudioAttributes;->capturePolicyToFlags(II)I

    .line 9
    move-result v1

    .line 10
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 13
    move-result-wide v2

    .line 14
    :try_start_0
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 16
    monitor-enter v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 17
    :try_start_1
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 19
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 22
    invoke-static {v0, v1}, Landroid/media/AudioSystem;->setAllowedCapturePolicy(II)I

    .line 25
    move-result v1

    .line 26
    if-nez v1, :cond_0

    .line 28
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 30
    invoke-virtual {p0, v0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->setAllowedCapturePolicy(II)V

    .line 33
    goto :goto_0

    .line 34
    :catchall_0
    move-exception p0

    .line 35
    goto :goto_1

    .line 36
    :cond_0
    :goto_0
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 37
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 40
    return v1

    .line 41
    :goto_1
    :try_start_2
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 42
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 43
    :catchall_1
    move-exception p0

    .line 44
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 47
    throw p0
.end method

.method public final setAppDevice(IIZ)V
    .locals 9

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 4
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 7
    move-result-object v0

    .line 8
    const/4 v1, 0x0

    .line 9
    aget-object v2, v0, v1

    .line 11
    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 14
    move-result v2

    .line 15
    const-string v3, "AS.AudioService"

    .line 17
    if-eqz v2, :cond_0

    .line 19
    sget-object v2, Lcom/android/server/audio/AudioService;->mAppCastingDevice:Ljava/util/Set;

    .line 21
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 24
    move-result-object v4

    .line 25
    check-cast v2, Ljava/util/HashSet;

    .line 27
    invoke-virtual {v2, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 30
    move-result v2

    .line 31
    if-eqz v2, :cond_0

    .line 33
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 35
    const/16 v0, -0x3ea

    .line 37
    invoke-virtual {p3, v0}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->updateAppCasting(I)V

    .line 40
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 42
    new-instance v0, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda8;

    .line 44
    const/4 v1, 0x0

    .line 45
    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda8;-><init>(Lcom/android/server/audio/AudioService;III)V

    .line 48
    invoke-virtual {p3, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 51
    new-instance p0, Ljava/lang/StringBuilder;

    .line 53
    const-string/jumbo p3, "invalid uid: "

    .line 56
    invoke-direct {p0, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 59
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 62
    const-string p1, ", deviceType: "

    .line 64
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 67
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 70
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 73
    move-result-object p0

    .line 74
    invoke-static {v3, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    return-void

    .line 78
    :cond_0
    sget-object v2, Lcom/android/server/audio/AudioService;->mAppCastingDevice:Ljava/util/Set;

    .line 80
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 83
    move-result-object v4

    .line 84
    check-cast v2, Ljava/util/HashSet;

    .line 86
    invoke-virtual {v2, v4}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 89
    move-result v2

    .line 90
    if-eqz v2, :cond_1

    .line 92
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    .line 94
    invoke-virtual {p3, p2}, Lcom/samsung/android/server/audio/ScreenSharingHelper;->updateAppCasting(I)V

    .line 97
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 99
    new-instance v0, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda8;

    .line 101
    const/4 v1, 0x1

    .line 102
    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda8;-><init>(Lcom/android/server/audio/AudioService;III)V

    .line 105
    invoke-virtual {p3, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 108
    return-void

    .line 109
    :cond_1
    invoke-static {p2}, Landroid/media/AudioDeviceInfo;->convertDeviceTypeToInternalDevice(I)I

    .line 112
    move-result v6

    .line 113
    const-string/jumbo p2, "setAppDevice, uid:"

    .line 116
    const-string v2, ", device:"

    .line 118
    invoke-static {p1, v6, p2, v2, v3}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 121
    if-nez v6, :cond_2

    .line 123
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->sendBecomingNoisyIntent(I[Ljava/lang/String;)I

    .line 126
    move-result p2

    .line 127
    move v8, p2

    .line 128
    goto :goto_0

    .line 129
    :cond_2
    move v8, v1

    .line 130
    :goto_0
    if-eqz p3, :cond_3

    .line 132
    const/16 p2, 0xacc

    .line 134
    :goto_1
    move v3, p2

    .line 135
    goto :goto_2

    .line 136
    :cond_3
    const/16 p2, 0xad6

    .line 138
    goto :goto_1

    .line 139
    :goto_2
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 141
    const/4 v4, 0x2

    .line 142
    aget-object v7, v0, v1

    .line 144
    move v5, p1

    .line 145
    invoke-static/range {v2 .. v8}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 148
    return-void
.end method

.method public final setAppMute(IZLjava/lang/String;)V
    .locals 5

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 4
    move-result-object v0

    .line 5
    const/4 v1, 0x0

    .line 6
    aget-object v0, v0, v1

    .line 8
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 11
    move-result v0

    .line 12
    if-nez v0, :cond_2

    .line 14
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 17
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 19
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 21
    new-instance v3, Ljava/lang/StringBuilder;

    .line 23
    const-string/jumbo v4, "uid:"

    .line 26
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 29
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    const-string v4, ",shouldMute:"

    .line 34
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 37
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 40
    const-string v4, ",package:"

    .line 42
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 45
    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 48
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 51
    move-result-object p3

    .line 52
    invoke-direct {v2, p3}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 55
    const-string p3, "AS.AudioService"

    .line 57
    invoke-virtual {v2, v1, p3}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 60
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 63
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 65
    iget-object p3, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mMultiSoundLock:Ljava/lang/Object;

    .line 67
    monitor-enter p3

    .line 68
    :try_start_0
    iget-object v0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 70
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 73
    move-result-object v2

    .line 74
    invoke-virtual {v0, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 77
    move-result-object v0

    .line 78
    check-cast v0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 80
    if-nez v0, :cond_0

    .line 82
    new-instance v0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;

    .line 84
    const/16 v2, 0x64

    .line 86
    invoke-direct {v0, p1, v1, v2}, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;-><init>(III)V

    .line 89
    goto :goto_0

    .line 90
    :catchall_0
    move-exception p0

    .line 91
    goto :goto_2

    .line 92
    :cond_0
    :goto_0
    iput-boolean p2, v0, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->mShouldMute:Z

    .line 94
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/MultiSoundManager$MultiSoundItem;->removable()Z

    .line 97
    move-result p2

    .line 98
    if-eqz p2, :cond_1

    .line 100
    iget-object p2, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 102
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 105
    move-result-object v0

    .line 106
    invoke-virtual {p2, v0}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 109
    goto :goto_1

    .line 110
    :cond_1
    iget-object p2, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPinAppInfoList:Ljava/util/HashMap;

    .line 112
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 115
    move-result-object v1

    .line 116
    invoke-virtual {p2, v1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 119
    :goto_1
    monitor-exit p3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 120
    invoke-virtual {p0, p1}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolumeToNative(I)V

    .line 123
    return-void

    .line 124
    :goto_2
    :try_start_1
    monitor-exit p3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 125
    throw p0

    .line 126
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 128
    const-string p2, "Bad uid "

    .line 130
    invoke-static {p1, p2}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 133
    move-result-object p1

    .line 134
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 137
    throw p0
.end method

.method public final setAppVolume(IILjava/lang/String;)V
    .locals 6

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 4
    move-result-object v0

    .line 5
    const/4 v1, 0x0

    .line 6
    aget-object v0, v0, v1

    .line 8
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 11
    move-result v0

    .line 12
    if-nez v0, :cond_1

    .line 14
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 17
    sget-object v0, Lcom/android/server/audio/AudioService;->sAppVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 19
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 21
    const-string/jumbo v3, "uid:"

    .line 24
    const-string v4, ",volume:"

    .line 26
    const-string v5, ",package:"

    .line 28
    invoke-static {p1, p2, v3, v4, v5}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 31
    move-result-object v3

    .line 32
    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 35
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 38
    move-result-object v3

    .line 39
    invoke-direct {v2, v3}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 42
    const-string v3, "AS.AudioService"

    .line 44
    invoke-virtual {v2, v1, v3}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 47
    invoke-virtual {v0, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 50
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 52
    invoke-virtual {v0, p1, p2}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 55
    const-string/jumbo v0, "com.samsung.android.soundassistant"

    .line 58
    invoke-virtual {v0, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 61
    move-result p3

    .line 62
    if-eqz p3, :cond_0

    .line 64
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 66
    invoke-virtual {p0, p1, p2}, Landroid/util/SparseIntArray;->put(II)V

    .line 69
    :cond_0
    return-void

    .line 70
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 72
    const-string p2, "Bad uid "

    .line 74
    invoke-static {p1, p2}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 77
    move-result-object p1

    .line 78
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 81
    throw p0
.end method

.method public final setAudioServiceConfig(Ljava/lang/String;)V
    .locals 10

    .line 1
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 7
    return-void

    .line 8
    :cond_0
    new-instance v0, Lcom/samsung/android/media/AudioParameter;

    .line 10
    invoke-direct {v0, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 13
    invoke-virtual {v0}, Lcom/samsung/android/media/AudioParameter;->hasLocalParameter()Z

    .line 16
    move-result v1

    .line 17
    if-eqz v1, :cond_1

    .line 19
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 22
    :cond_1
    const-string/jumbo v1, "l_volume_limit_key"

    .line 25
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 28
    move-result v1

    .line 29
    if-eqz v1, :cond_3

    .line 31
    const-string/jumbo v1, "enable"

    .line 34
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 37
    move-result-object v1

    .line 38
    if-eqz v1, :cond_2

    .line 40
    const-string/jumbo v0, "true"

    .line 43
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 46
    move-result v0

    .line 47
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 49
    goto/16 :goto_16

    .line 51
    :cond_2
    const-string/jumbo v1, "level"

    .line 54
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 57
    move-result-object v1

    .line 58
    if-eqz v1, :cond_52

    .line 60
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 63
    move-result v1

    .line 64
    iput v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitValue:I

    .line 66
    const-string/jumbo v1, "package"

    .line 69
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 72
    move-result-object v0

    .line 73
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    .line 75
    if-eqz v1, :cond_52

    .line 77
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setVolumeLevelToLimit(Ljava/lang/String;)V

    .line 80
    goto/16 :goto_16

    .line 82
    :cond_3
    const-string/jumbo v1, "g_call_extra_volume_enable"

    .line 85
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 88
    move-result-object v1

    .line 89
    if-eqz v1, :cond_4

    .line 91
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 93
    const-string/jumbo v2, "true"

    .line 96
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 99
    move-result v1

    .line 100
    iput-boolean v1, v0, Lcom/android/server/audio/AudioServiceExt;->mExtraVolume:Z

    .line 102
    goto/16 :goto_16

    .line 104
    :cond_4
    const-string/jumbo v1, "sound_assistant"

    .line 107
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 110
    move-result v1

    .line 111
    const/4 v2, 0x0

    .line 112
    const/4 v3, -0x1

    .line 113
    const/16 v4, 0x64

    .line 115
    const/4 v5, 0x2

    .line 116
    const/4 v6, 0x1

    .line 117
    const/4 v7, 0x0

    .line 118
    if-eqz v1, :cond_21

    .line 120
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 123
    const-string p1, "adjust_media_volume_only"

    .line 125
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 128
    move-result-object v1

    .line 129
    if-eqz v1, :cond_6

    .line 131
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 133
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 136
    invoke-static {v7, v1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 139
    move-result v0

    .line 140
    if-ne v0, v6, :cond_5

    .line 142
    goto :goto_0

    .line 143
    :cond_5
    move v6, v7

    .line 144
    :goto_0
    iput-boolean v6, p0, Lcom/android/server/audio/AudioService;->mAdjustMediaVolumeOnly:Z

    .line 146
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 148
    invoke-virtual {p0, v0, p1}, Lcom/android/server/audio/AudioServiceExt;->setSystemSettingForSoundAssistant(ILjava/lang/String;)V

    .line 151
    goto/16 :goto_a

    .line 153
    :cond_6
    const-string/jumbo p1, "mute_media_by_vibrate_or_silent_mode"

    .line 156
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 159
    move-result-object v1

    .line 160
    if-eqz v1, :cond_9

    .line 162
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 164
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 167
    invoke-static {v7, v1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 170
    move-result v0

    .line 171
    if-ne v0, v6, :cond_7

    .line 173
    move v0, v6

    .line 174
    goto :goto_1

    .line 175
    :cond_7
    move v0, v7

    .line 176
    :goto_1
    iput-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 178
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 180
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 183
    new-instance v2, Landroid/content/ContentValues;

    .line 185
    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V

    .line 188
    const-string v3, "_key"

    .line 190
    invoke-virtual {v2, v3, p1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V

    .line 193
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 196
    move-result-object p1

    .line 197
    const-string v0, "_value"

    .line 199
    invoke-virtual {v2, v0, p1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V

    .line 202
    const-string p1, "_key=\'mute_media_by_vibrate_or_silent_mode\'"

    .line 204
    const-string v0, "audio_settings"

    .line 206
    invoke-virtual {v1, v2, v0, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->set(Landroid/content/ContentValues;Ljava/lang/String;Ljava/lang/String;)V

    .line 209
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 211
    if-eqz p1, :cond_8

    .line 213
    iget p1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 215
    if-eq p1, v5, :cond_8

    .line 217
    goto :goto_2

    .line 218
    :cond_8
    move v6, v7

    .line 219
    :goto_2
    invoke-virtual {p0, v6}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 222
    goto/16 :goto_a

    .line 224
    :cond_9
    const-string/jumbo p1, "remove_app_volume"

    .line 227
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 230
    move-result-object p1

    .line 231
    const-string v1, "AS.AudioService"

    .line 233
    if-eqz p1, :cond_c

    .line 235
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 237
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 240
    invoke-static {v3, p1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 243
    move-result p1

    .line 244
    if-eq p1, v3, :cond_b

    .line 246
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 249
    move-result-object v0

    .line 250
    aget-object v0, v0, v7

    .line 252
    const-string v2, ""

    .line 254
    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 257
    move-result v0

    .line 258
    if-eqz v0, :cond_a

    .line 260
    goto :goto_3

    .line 261
    :cond_a
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAppVolumeFromSoundAssistant:Landroid/util/SparseIntArray;

    .line 263
    invoke-virtual {v0, p1}, Landroid/util/SparseIntArray;->delete(I)V

    .line 266
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 268
    invoke-virtual {p0, p1, v4}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolume(II)V

    .line 271
    goto/16 :goto_a

    .line 273
    :cond_b
    :goto_3
    const-string p0, "Invalid uid from SoundAssistant"

    .line 275
    invoke-static {v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 278
    goto/16 :goto_a

    .line 280
    :cond_c
    const-string/jumbo p1, "sound_balance"

    .line 283
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 286
    move-result-object v5

    .line 287
    const-string v8, "Invalid balance"

    .line 289
    if-eqz v5, :cond_e

    .line 291
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 293
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 296
    const/16 v0, 0x32

    .line 298
    invoke-static {v0, v5}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 301
    move-result v0

    .line 302
    if-ltz v0, :cond_d

    .line 304
    if-gt v0, v4, :cond_d

    .line 306
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 308
    invoke-virtual {p0, v0, p1}, Lcom/android/server/audio/AudioServiceExt;->setSystemSettingForSoundAssistant(ILjava/lang/String;)V

    .line 311
    goto/16 :goto_a

    .line 313
    :cond_d
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 315
    invoke-direct {p0, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 318
    throw p0

    .line 319
    :cond_e
    const-string/jumbo p1, "mono_sound"

    .line 322
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 325
    move-result-object p1

    .line 326
    if-eqz p1, :cond_11

    .line 328
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 330
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 333
    invoke-static {v7, p1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 336
    move-result p1

    .line 337
    if-eqz p1, :cond_10

    .line 339
    if-ne p1, v6, :cond_f

    .line 341
    goto :goto_4

    .line 342
    :cond_f
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 344
    invoke-direct {p0, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 347
    throw p0

    .line 348
    :cond_10
    :goto_4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 350
    const-string/jumbo v0, "mono_audio_db"

    .line 353
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioServiceExt;->setSystemSettingForSoundAssistant(ILjava/lang/String;)V

    .line 356
    goto/16 :goto_a

    .line 358
    :cond_11
    const-string/jumbo p1, "ignore_audio_focus"

    .line 361
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 364
    move-result-object v5

    .line 365
    if-eqz v5, :cond_17

    .line 367
    const-string/jumbo v2, "uid_for_soundassistant"

    .line 370
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 373
    move-result-object v0

    .line 374
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 376
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 379
    invoke-static {v3, v0}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 382
    move-result v0

    .line 383
    if-ne v0, v3, :cond_12

    .line 385
    const-string/jumbo p0, "invalid arguments"

    .line 388
    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 391
    goto/16 :goto_a

    .line 393
    :cond_12
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 396
    move-result-object v2

    .line 397
    aget-object v2, v2, v7

    .line 399
    invoke-static {v2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 402
    move-result v4

    .line 403
    if-eqz v4, :cond_13

    .line 405
    const-string p0, "Invalid uid for ignoring audiofocus. uid : "

    .line 407
    invoke-static {v0, p0, v1}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 410
    goto/16 :goto_a

    .line 412
    :cond_13
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 414
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 417
    invoke-static {v7, v5}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 420
    move-result v4

    .line 421
    const-string v5, "Set ignore audiofocus : "

    .line 423
    const-string v8, ", uid : "

    .line 425
    const-string v9, ", enabled:"

    .line 427
    invoke-static {v0, v5, v2, v8, v9}, Lcom/android/server/StorageManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 430
    move-result-object v2

    .line 431
    if-ne v4, v6, :cond_14

    .line 433
    move v5, v6

    .line 434
    goto :goto_5

    .line 435
    :cond_14
    move v5, v7

    .line 436
    :goto_5
    invoke-static {v1, v2, v5}, Lcom/android/server/accessibility/FlashNotificationsController$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 439
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 441
    if-ne v4, v6, :cond_15

    .line 443
    move v3, v0

    .line 444
    :cond_15
    invoke-virtual {v1, v3, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(ILjava/lang/String;)V

    .line 447
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 449
    if-ne v4, v6, :cond_16

    .line 451
    goto :goto_6

    .line 452
    :cond_16
    move v6, v7

    .line 453
    :goto_6
    invoke-virtual {p0, v0, v6}, Lcom/android/server/audio/MediaFocusControl;->setIgnoreAudioFocus(IZ)V

    .line 456
    goto/16 :goto_a

    .line 458
    :cond_17
    const-string/jumbo p1, "media_volume_step_index"

    .line 461
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 464
    move-result-object v3

    .line 465
    if-eqz v3, :cond_18

    .line 467
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 469
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 472
    const/16 v0, 0xa

    .line 474
    invoke-static {v0, v3}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 477
    move-result v0

    .line 478
    iput v0, p0, Lcom/android/server/audio/AudioService;->mMediaVolumeStepIndex:I

    .line 480
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 482
    invoke-virtual {v1, v0, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(ILjava/lang/String;)V

    .line 485
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->setMediaVolumeSteps([I)Z

    .line 488
    goto/16 :goto_a

    .line 490
    :cond_18
    const-string/jumbo p1, "ring_through_headset"

    .line 493
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 496
    move-result-object v2

    .line 497
    if-eqz v2, :cond_19

    .line 499
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 501
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 504
    invoke-static {v7, v2}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 507
    move-result v0

    .line 508
    iput v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 510
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 512
    invoke-virtual {v1, v0, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->setIntValue(ILjava/lang/String;)V

    .line 515
    iget p1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 517
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->setHeadsetOnlyStream(I)V

    .line 520
    goto/16 :goto_a

    .line 522
    :cond_19
    const-string/jumbo p1, "volumestar_enable"

    .line 525
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 528
    move-result-object p1

    .line 529
    if-eqz p1, :cond_1c

    .line 531
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 533
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 536
    invoke-static {v7, p1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 539
    move-result p1

    .line 540
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 542
    if-ne p1, v6, :cond_1a

    .line 544
    goto :goto_7

    .line 545
    :cond_1a
    const/16 v4, 0x65

    .line 547
    :goto_7
    iget-object p0, p0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 549
    if-nez p0, :cond_1b

    .line 551
    goto :goto_a

    .line 552
    :cond_1b
    :try_start_0
    invoke-interface {p0, v4}, Landroid/media/IVolumeController;->setA11yMode(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 555
    goto :goto_a

    .line 556
    :catch_0
    move-exception p0

    .line 557
    const-string p1, "VolumeController"

    .line 559
    const-string v0, "Error calling setA11Mode"

    .line 561
    invoke-static {p1, v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 564
    goto :goto_a

    .line 565
    :cond_1c
    const-string/jumbo p1, "ignore_ducking"

    .line 568
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 571
    move-result-object p1

    .line 572
    if-eqz p1, :cond_1e

    .line 574
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 576
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 579
    invoke-static {v7, p1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 582
    move-result p1

    .line 583
    if-ne p1, v6, :cond_1d

    .line 585
    goto :goto_8

    .line 586
    :cond_1d
    move v6, v7

    .line 587
    :goto_8
    iput-boolean v6, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 589
    new-instance p1, Ljava/lang/StringBuilder;

    .line 591
    const-string/jumbo v0, "setSoundAssistant :: Ignore Ducking By Navigation = "

    .line 594
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 597
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByNavigation:Z

    .line 599
    invoke-static {v1, p1, p0}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 602
    goto :goto_a

    .line 603
    :cond_1e
    const-string/jumbo p1, "ignore_ducking_by_all_apps"

    .line 606
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 609
    move-result-object p1

    .line 610
    if-eqz p1, :cond_20

    .line 612
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 614
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 617
    invoke-static {v7, p1}, Lcom/android/server/audio/AudioServiceExt;->getIntValueFromString(ILjava/lang/String;)I

    .line 620
    move-result p1

    .line 621
    if-ne p1, v6, :cond_1f

    .line 623
    goto :goto_9

    .line 624
    :cond_1f
    move v6, v7

    .line 625
    :goto_9
    iput-boolean v6, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 627
    new-instance p1, Ljava/lang/StringBuilder;

    .line 629
    const-string/jumbo v0, "setSoundAssistant :: Ignore Ducking By All Apps = "

    .line 632
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 635
    iget-boolean p0, p0, Lcom/android/server/audio/AudioService;->mIgnoreDuckingByAllApps:Z

    .line 637
    invoke-static {v1, p1, p0}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 640
    :cond_20
    :goto_a
    return-void

    .line 641
    :cond_21
    const-string/jumbo v1, "g_call_sar_backoff_enable"

    .line 644
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 647
    move-result-object v1

    .line 648
    if-eqz v1, :cond_22

    .line 650
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 653
    const-string p1, "AS.AudioService"

    .line 655
    const-string/jumbo v0, "g_call_sar_backoff_enable="

    .line 658
    invoke-virtual {v0, v1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 661
    move-result-object v0

    .line 662
    invoke-static {p1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 665
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 667
    const-string/jumbo v0, "true"

    .line 670
    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    .line 673
    move-result v0

    .line 674
    iput-boolean v0, p1, Lcom/android/server/audio/AudioDeviceBroker;->mSarBackoffParam:Z

    .line 676
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 678
    const/4 v6, 0x0

    .line 679
    const/16 v7, 0x1f4

    .line 681
    const/16 v2, 0xacb

    .line 683
    const/4 v3, 0x0

    .line 684
    const/4 v4, 0x0

    .line 685
    const/4 v5, 0x0

    .line 686
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 689
    return-void

    .line 690
    :cond_22
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO:Z

    .line 692
    if-eqz v1, :cond_24

    .line 694
    const-string/jumbo v1, "g_fmradio_enable"

    .line 697
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 700
    move-result-object v1

    .line 701
    if-eqz v1, :cond_24

    .line 703
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 705
    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 708
    iget-boolean p1, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 710
    if-eqz p1, :cond_23

    .line 712
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 714
    invoke-virtual {p1}, Lcom/android/server/audio/AudioSystemAdapter;->invalidateRoutingCache()V

    .line 717
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->observeDevicesForMediaStream()V

    .line 720
    const-string/jumbo p1, "true"

    .line 723
    invoke-virtual {p1, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 726
    move-result p1

    .line 727
    if-eqz p1, :cond_23

    .line 729
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 732
    move-result p1

    .line 733
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 736
    move-result-object p1

    .line 737
    aget-object p1, p1, v7

    .line 739
    const-string v0, "AS.AudioService"

    .line 741
    const-string/jumbo v1, "init fm radio volume when turning on fm radio, "

    .line 744
    invoke-static {v1, p1, v0}, Lcom/android/server/DualAppManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 747
    const/4 p1, 0x3

    .line 748
    invoke-virtual {p0, p1, v7}, Lcom/android/server/audio/AudioService;->getFineVolume(II)I

    .line 751
    move-result v0

    .line 752
    invoke-virtual {p0, p1, v0, v0, v7}, Lcom/android/server/audio/AudioService;->sendVolumeChangedIntent(IIII)V

    .line 755
    :cond_23
    return-void

    .line 756
    :cond_24
    const-string/jumbo v1, "g_call_sim_slot"

    .line 759
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 762
    move-result-object v1

    .line 763
    if-eqz v1, :cond_27

    .line 765
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 768
    const-string v0, "0x10"

    .line 770
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 773
    move-result v0

    .line 774
    if-nez v0, :cond_25

    .line 776
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 778
    goto/16 :goto_16

    .line 780
    :cond_25
    const-string v0, "0x01"

    .line 782
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 784
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 787
    move-result v0

    .line 788
    if-eqz v0, :cond_26

    .line 790
    const-string v0, "0x02"

    .line 792
    goto :goto_b

    .line 793
    :cond_26
    const-string v0, "0x01"

    .line 795
    :goto_b
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mPhoneType:Ljava/lang/String;

    .line 797
    goto/16 :goto_16

    .line 799
    :cond_27
    const-string/jumbo v1, "g_sco_rvc_support"

    .line 802
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 805
    move-result-object v1

    .line 806
    if-eqz v1, :cond_28

    .line 808
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 811
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 814
    goto/16 :goto_16

    .line 816
    :cond_28
    const-string/jumbo v1, "g_call_memo_state"

    .line 819
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 822
    move-result-object v1

    .line 823
    if-eqz v1, :cond_29

    .line 825
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 828
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mCallMemoState:Ljava/lang/String;

    .line 830
    goto/16 :goto_16

    .line 832
    :cond_29
    const-string/jumbo v1, "g_call_forwarding_enable"

    .line 835
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 838
    move-result-object v1

    .line 839
    if-eqz v1, :cond_2a

    .line 841
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 844
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mCallForwardingEnable:Ljava/lang/String;

    .line 846
    goto/16 :goto_16

    .line 848
    :cond_2a
    const-string/jumbo v1, "g_effect_dv_adapt_sound"

    .line 851
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 854
    move-result-object v1

    .line 855
    if-eqz v1, :cond_2b

    .line 857
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 860
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mDvDhaparam:Ljava/lang/String;

    .line 862
    goto/16 :goto_16

    .line 864
    :cond_2b
    const-string v1, "HACSetting"

    .line 866
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 869
    move-result-object v1

    .line 870
    if-eqz v1, :cond_2c

    .line 872
    iput-object v1, p0, Lcom/android/server/audio/AudioService;->mHAC:Ljava/lang/String;

    .line 874
    goto/16 :goto_16

    .line 876
    :cond_2c
    const-string/jumbo v1, "l_voice_tx_control_mode"

    .line 879
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 882
    move-result v1

    .line 883
    const/16 v8, 0x10

    .line 885
    if-eqz v1, :cond_2d

    .line 887
    const-string/jumbo v1, "l_voice_rx_control_mode"

    .line 890
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 893
    move-result v1

    .line 894
    if-eqz v1, :cond_2d

    .line 896
    const-string/jumbo v1, "l_call_translation_mode"

    .line 899
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 902
    move-result v1

    .line 903
    if-eqz v1, :cond_2d

    .line 905
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 907
    const-string/jumbo v2, "l_voice_tx_control_mode"

    .line 910
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 913
    move-result-object v2

    .line 914
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 917
    move-result v2

    .line 918
    iput v2, v1, Lcom/android/server/audio/AudioServiceExt;->mVoiceTxControlMode:I

    .line 920
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 922
    const-string/jumbo v2, "l_voice_rx_control_mode"

    .line 925
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 928
    move-result-object v2

    .line 929
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 932
    move-result v2

    .line 933
    iput v2, v1, Lcom/android/server/audio/AudioServiceExt;->mVoiceRxControlMode:I

    .line 935
    const-string/jumbo v1, "l_call_translation_mode"

    .line 938
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 941
    move-result-object v0

    .line 942
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 944
    const-string/jumbo v2, "on"

    .line 947
    invoke-virtual {v2, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    .line 950
    move-result v2

    .line 951
    iput-boolean v2, v1, Lcom/android/server/audio/AudioServiceExt;->mCallTranslationMode:Z

    .line 953
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 955
    const-string/jumbo v2, "on"

    .line 958
    invoke-virtual {v2, v0}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    .line 961
    move-result v0

    .line 962
    invoke-virtual {v1, v8, v0}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 965
    goto/16 :goto_16

    .line 967
    :cond_2d
    const-string/jumbo v1, "l_voice_tx_control_mode"

    .line 970
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 973
    move-result v1

    .line 974
    if-eqz v1, :cond_2e

    .line 976
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 978
    const-string/jumbo v2, "l_voice_tx_control_mode"

    .line 981
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 984
    move-result-object v0

    .line 985
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 988
    move-result v0

    .line 989
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVoiceTxControlMode:I

    .line 991
    goto/16 :goto_16

    .line 993
    :cond_2e
    const-string/jumbo v1, "l_voice_rx_control_mode"

    .line 996
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 999
    move-result v1

    .line 1000
    if-eqz v1, :cond_2f

    .line 1002
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1004
    const-string/jumbo v2, "l_voice_rx_control_mode"

    .line 1007
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1010
    move-result-object v0

    .line 1011
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1014
    move-result v0

    .line 1015
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVoiceRxControlMode:I

    .line 1017
    goto/16 :goto_16

    .line 1019
    :cond_2f
    const-string/jumbo v1, "l_volume_prevent_overheat_key"

    .line 1022
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1025
    move-result v1

    .line 1026
    if-eqz v1, :cond_34

    .line 1028
    :try_start_1
    const-string/jumbo p1, "uid"

    .line 1031
    invoke-virtual {v0, p1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1034
    move-result-object p1

    .line 1035
    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1038
    move-result p1
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_2

    .line 1039
    if-ne p1, v3, :cond_30

    .line 1041
    goto :goto_e

    .line 1042
    :cond_30
    const-string/jumbo v1, "state"

    .line 1045
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1048
    move-result-object v0

    .line 1049
    if-eqz v0, :cond_33

    .line 1051
    const-string/jumbo v1, "true"

    .line 1054
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1057
    move-result v0

    .line 1058
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 1060
    iget-object v1, v1, Lcom/samsung/android/server/audio/MultiSoundManager;->mPreventOverheatState:Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;

    .line 1062
    iget v2, v1, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->mUid:I

    .line 1064
    if-eq v2, v3, :cond_31

    .line 1066
    if-eq v2, p1, :cond_31

    .line 1068
    goto :goto_c

    .line 1069
    :cond_31
    move v2, v3

    .line 1070
    :goto_c
    iput p1, v1, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->mUid:I

    .line 1072
    iput-boolean v0, v1, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->mState:Z

    .line 1074
    if-eq v2, v3, :cond_32

    .line 1076
    iget-object p1, v1, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->this$0:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 1078
    invoke-virtual {p1, v2}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolumeToNative(I)V

    .line 1081
    :cond_32
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 1083
    iget-object p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager;->mPreventOverheatState:Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;

    .line 1085
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1088
    const-string/jumbo p1, "l_volume_prevent_overheat_key;gain"

    .line 1091
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->getPolicyParameters(Ljava/lang/String;)Ljava/lang/String;

    .line 1094
    move-result-object p1

    .line 1095
    :try_start_2
    invoke-static {p1}, Ljava/lang/Float;->parseFloat(Ljava/lang/String;)F

    .line 1098
    move-result p1
    :try_end_2
    .catch Ljava/lang/NullPointerException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Ljava/lang/NumberFormatException; {:try_start_2 .. :try_end_2} :catch_1

    .line 1099
    goto :goto_d

    .line 1100
    :catch_1
    const/high16 p1, 0x3f800000    # 1.0f

    .line 1102
    :goto_d
    iput p1, p0, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->mLimitedVolumeForOverheat:F

    .line 1104
    iget-object p1, p0, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->this$0:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 1106
    iget p0, p0, Lcom/samsung/android/server/audio/MultiSoundManager$PreventOverheatState;->mUid:I

    .line 1108
    invoke-virtual {p1, p0}, Lcom/samsung/android/server/audio/MultiSoundManager;->setAppVolumeToNative(I)V

    .line 1111
    goto :goto_e

    .line 1112
    :catch_2
    move-exception p0

    .line 1113
    const-string p1, "AS.AudioService"

    .line 1115
    const-string v0, "NumberFormatException"

    .line 1117
    invoke-static {p1, v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 1120
    :cond_33
    :goto_e
    return-void

    .line 1121
    :cond_34
    const-string/jumbo v1, "sound_effect_volume"

    .line 1124
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1127
    move-result v1

    .line 1128
    if-eqz v1, :cond_35

    .line 1130
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 1133
    invoke-static {}, Lcom/samsung/android/media/AudioFxHelper;->setSoundEffectVolume()V

    .line 1136
    goto/16 :goto_16

    .line 1138
    :cond_35
    const-string/jumbo v1, "g_ptt_mode"

    .line 1141
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1144
    move-result-object v1

    .line 1145
    if-eqz v1, :cond_36

    .line 1147
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 1150
    goto/16 :goto_16

    .line 1152
    :cond_36
    const-string/jumbo v1, "g_ptt_call_volume_enable"

    .line 1155
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1158
    move-result-object v1

    .line 1159
    if-eqz v1, :cond_37

    .line 1161
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1163
    const-string/jumbo v0, "true"

    .line 1166
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1169
    move-result v0

    .line 1170
    iput-boolean v0, p1, Lcom/android/server/audio/AudioServiceExt;->mIsPttCallVolumeEnabled:Z

    .line 1172
    const-string p1, "AS.AudioService"

    .line 1174
    new-instance v0, Ljava/lang/StringBuilder;

    .line 1176
    const-string/jumbo v1, "mIsPttCallVolumeEnabled : "

    .line 1179
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1182
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1184
    iget-boolean p0, p0, Lcom/android/server/audio/AudioServiceExt;->mIsPttCallVolumeEnabled:Z

    .line 1186
    invoke-static {p1, v0, p0}, Lcom/android/server/accessibility/FlashNotificationsController$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/StringBuilder;Z)V

    .line 1189
    return-void

    .line 1190
    :cond_37
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VIDEO_CALL_VOICE_EFFECT:Z

    .line 1192
    if-eqz v1, :cond_38

    .line 1194
    const-string/jumbo v1, "l_mic_input_control_mode"

    .line 1197
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1200
    move-result v1

    .line 1201
    if-eqz v1, :cond_38

    .line 1203
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1205
    const-string/jumbo v2, "l_mic_input_control_mode"

    .line 1208
    invoke-virtual {v0, v2, v7}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 1211
    move-result v0

    .line 1212
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVideoCallVoiceEffectMode:I

    .line 1214
    goto/16 :goto_16

    .line 1216
    :cond_38
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VIDEO_CALL_VOICE_DEFAULT_EFFECT:Z

    .line 1218
    if-eqz v1, :cond_39

    .line 1220
    const-string/jumbo v1, "l_mic_input_control_mode"

    .line 1223
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1226
    move-result v1

    .line 1227
    if-eqz v1, :cond_39

    .line 1229
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1231
    const-string/jumbo v2, "l_mic_input_control_mode"

    .line 1234
    invoke-virtual {v0, v2, v4}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 1237
    move-result v0

    .line 1238
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVideoCallVoiceEffectMode:I

    .line 1240
    goto/16 :goto_16

    .line 1242
    :cond_39
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_CALL_MONSTER_SOUND:Z

    .line 1244
    if-eqz v1, :cond_3a

    .line 1246
    const-string/jumbo v3, "l_call_nc_booster_enable"

    .line 1249
    invoke-virtual {v0, v3}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1252
    move-result v3

    .line 1253
    if-eqz v3, :cond_3a

    .line 1255
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1257
    const-string/jumbo v2, "l_call_nc_booster_enable"

    .line 1260
    invoke-virtual {v0, v2, v7}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 1263
    move-result v0

    .line 1264
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVoiceCallMonsterSoundMode:I

    .line 1266
    goto/16 :goto_16

    .line 1268
    :cond_3a
    if-eqz v1, :cond_3b

    .line 1270
    const-string/jumbo v1, "l_mic_input_control_mode_2mic"

    .line 1273
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1276
    move-result v1

    .line 1277
    if-eqz v1, :cond_3b

    .line 1279
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1281
    const-string/jumbo v2, "l_mic_input_control_mode_2mic"

    .line 1284
    invoke-virtual {v0, v2, v7}, Lcom/samsung/android/media/AudioParameter;->getInt(Ljava/lang/String;I)I

    .line 1287
    move-result v0

    .line 1288
    iput v0, v1, Lcom/android/server/audio/AudioServiceExt;->mVideoCallMonsterSoundMode:I

    .line 1290
    goto/16 :goto_16

    .line 1292
    :cond_3b
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR:Z

    .line 1294
    if-eqz v1, :cond_3d

    .line 1296
    const-string/jumbo v1, "g_volume_monitor_warning_level"

    .line 1299
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1302
    move-result-object v1

    .line 1303
    if-nez v1, :cond_3c

    .line 1305
    goto :goto_f

    .line 1306
    :cond_3c
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V
    :try_end_3
    .catch Ljava/lang/SecurityException; {:try_start_3 .. :try_end_3} :catch_3

    .line 1309
    sget-object p0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 1311
    new-instance p1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 1313
    const-string v0, "CSD warning "

    .line 1315
    invoke-virtual {v0, v1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 1318
    move-result-object v0

    .line 1319
    invoke-direct {p1, v0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 1322
    const-string v0, "AS.AudioService"

    .line 1324
    invoke-virtual {p1, v7, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 1327
    invoke-virtual {p0, p1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 1330
    throw v2

    .line 1331
    :catch_3
    return-void

    .line 1332
    :cond_3d
    :goto_f
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOLUME_MONITOR_PHASE_3:Z

    .line 1334
    if-eqz v1, :cond_3e

    .line 1336
    const-string/jumbo v1, "l_set_safe_media_volume"

    .line 1339
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 1342
    move-result v1

    .line 1343
    if-eqz v1, :cond_3e

    .line 1345
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 1347
    const-string/jumbo p1, "safeMediaVolumeFromVolumeMonitor"

    .line 1350
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SoundDoseHelper;->enforceSafeMediaVolume(Ljava/lang/String;)V

    .line 1353
    return-void

    .line 1354
    :cond_3e
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_CALL:Z

    .line 1356
    if-eqz v1, :cond_3f

    .line 1358
    const-string/jumbo v1, "l_screen_call"

    .line 1361
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1364
    move-result-object v1

    .line 1365
    if-eqz v1, :cond_3f

    .line 1367
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1369
    const-string/jumbo v2, "on"

    .line 1372
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1375
    move-result v1

    .line 1376
    iput-boolean v1, v0, Lcom/android/server/audio/AudioServiceExt;->mScreenCall:Z

    .line 1378
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 1381
    goto/16 :goto_16

    .line 1383
    :cond_3f
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_VOIP_SOUND_LOUDER:Z

    .line 1385
    if-eqz v1, :cond_40

    .line 1387
    const-string/jumbo v1, "l_call_voip_extra_volume_enable"

    .line 1390
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1393
    move-result-object v1

    .line 1394
    if-eqz v1, :cond_40

    .line 1396
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1398
    const-string/jumbo v2, "true"

    .line 1401
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1404
    move-result v1

    .line 1405
    iput-boolean v1, v0, Lcom/android/server/audio/AudioServiceExt;->mVoipExtraVolume:Z

    .line 1407
    goto/16 :goto_16

    .line 1409
    :cond_40
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SUPPORT_VOIP_ANTI_HOWLING:Z

    .line 1411
    if-eqz v1, :cond_41

    .line 1413
    const-string/jumbo v1, "l_call_voip_extra_volume_enable"

    .line 1416
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1419
    move-result-object v1

    .line 1420
    if-eqz v1, :cond_41

    .line 1422
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 1424
    const-string/jumbo v2, "true"

    .line 1427
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1430
    move-result v2

    .line 1431
    iput-boolean v2, v0, Lcom/android/server/audio/AudioServiceExt;->mVoipAntiHowling:Z

    .line 1433
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1435
    if-eqz v0, :cond_52

    .line 1437
    const-string/jumbo v2, "true"

    .line 1440
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1443
    move-result v1

    .line 1444
    const/16 v2, 0x80

    .line 1446
    invoke-virtual {v0, v2, v1}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1449
    goto/16 :goto_16

    .line 1451
    :cond_41
    const-string/jumbo v1, "g_effect_headtracker_available"

    .line 1454
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1457
    move-result-object v1

    .line 1458
    if-eqz v1, :cond_45

    .line 1460
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 1462
    const-string/jumbo v2, "true"

    .line 1465
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1468
    move-result v1

    .line 1469
    const-string/jumbo v2, "setSecHeadTrackerAvailable:"

    .line 1472
    monitor-enter v0

    .line 1473
    :try_start_4
    iput-boolean v1, v0, Lcom/android/server/audio/SpatializerHelper;->mSecHeadTrackerAvailable:Z

    .line 1475
    if-nez v1, :cond_43

    .line 1477
    iget-boolean v1, v0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackerAvailable:Z

    .line 1479
    if-eqz v1, :cond_42

    .line 1481
    goto :goto_10

    .line 1482
    :cond_42
    move v6, v7

    .line 1483
    goto :goto_10

    .line 1484
    :catchall_0
    move-exception p0

    .line 1485
    goto :goto_11

    .line 1486
    :cond_43
    :goto_10
    const-string v1, "AS.SpatializerHelper"

    .line 1488
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1490
    invoke-direct {v3, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1493
    iget-boolean v2, v0, Lcom/android/server/audio/SpatializerHelper;->mSecHeadTrackerAvailable:Z

    .line 1495
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1498
    const-string v2, " mHeadTrackerAvailable:"

    .line 1500
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1503
    iget-boolean v2, v0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackerAvailable:Z

    .line 1505
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1508
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1511
    move-result-object v2

    .line 1512
    invoke-static {v1, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 1515
    iget-boolean v1, v0, Lcom/android/server/audio/SpatializerHelper;->mGlobalHeadTrackerAvailable:Z

    .line 1517
    if-eq v1, v6, :cond_44

    .line 1519
    iput-boolean v6, v0, Lcom/android/server/audio/SpatializerHelper;->mGlobalHeadTrackerAvailable:Z

    .line 1521
    invoke-virtual {v0, v6}, Lcom/android/server/audio/SpatializerHelper;->dispatchHeadTrackerAvailable(Z)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 1524
    :cond_44
    monitor-exit v0

    .line 1525
    goto/16 :goto_16

    .line 1527
    :goto_11
    monitor-exit v0

    .line 1528
    throw p0

    .line 1529
    :cond_45
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_MIC_MODE_FOR_QUICK_PANEL_UI:Z

    .line 1531
    if-eqz v1, :cond_46

    .line 1533
    const-string/jumbo v2, "l_call_translation_mode"

    .line 1536
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1539
    move-result-object v2

    .line 1540
    if-eqz v2, :cond_46

    .line 1542
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1544
    const-string/jumbo v1, "on"

    .line 1547
    invoke-virtual {v1, v2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    .line 1550
    move-result v1

    .line 1551
    invoke-virtual {v0, v8, v1}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1554
    goto/16 :goto_16

    .line 1556
    :cond_46
    const-string/jumbo v2, "g_call_state"

    .line 1559
    invoke-virtual {v0, v2}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1562
    move-result-object v2

    .line 1563
    if-eqz v2, :cond_4f

    .line 1565
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 1568
    move-result v0

    .line 1569
    and-int/lit8 v2, v0, 0x20

    .line 1571
    if-eqz v2, :cond_47

    .line 1573
    move v3, v6

    .line 1574
    goto :goto_12

    .line 1575
    :cond_47
    move v3, v7

    .line 1576
    :goto_12
    if-eqz v1, :cond_4d

    .line 1578
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1580
    invoke-virtual {v1, v6, v3}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1583
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1585
    iget-object v1, v1, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 1587
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MicModeType;->getType()I

    .line 1590
    move-result v1

    .line 1591
    sget-object v4, Lcom/samsung/android/server/audio/MicModeType;->TYPE_2MIC_VOICE:Lcom/samsung/android/server/audio/MicModeType;

    .line 1593
    invoke-virtual {v4}, Lcom/samsung/android/server/audio/MicModeType;->getType()I

    .line 1596
    move-result v4

    .line 1597
    if-eq v1, v4, :cond_48

    .line 1599
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1601
    iget-object v1, v1, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 1603
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/MicModeType;->getType()I

    .line 1606
    move-result v1

    .line 1607
    sget-object v4, Lcom/samsung/android/server/audio/MicModeType;->TYPE_VOICE:Lcom/samsung/android/server/audio/MicModeType;

    .line 1609
    invoke-virtual {v4}, Lcom/samsung/android/server/audio/MicModeType;->getType()I

    .line 1612
    move-result v4

    .line 1613
    if-ne v1, v4, :cond_4d

    .line 1615
    :cond_48
    const/high16 v1, 0x2000000

    .line 1617
    and-int/2addr v1, v0

    .line 1618
    if-nez v1, :cond_4c

    .line 1620
    and-int/lit16 v4, v0, 0x400

    .line 1622
    if-eqz v4, :cond_49

    .line 1624
    goto :goto_13

    .line 1625
    :cond_49
    and-int/lit8 v4, v0, 0x10

    .line 1627
    if-nez v4, :cond_4b

    .line 1629
    if-eqz v2, :cond_4a

    .line 1631
    if-eqz v1, :cond_4b

    .line 1633
    :cond_4a
    and-int/lit16 v1, v0, 0x100

    .line 1635
    if-nez v1, :cond_4b

    .line 1637
    and-int/lit16 v0, v0, 0x200

    .line 1639
    if-eqz v0, :cond_4d

    .line 1641
    :cond_4b
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1643
    invoke-virtual {v0, v5, v7}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1646
    goto :goto_14

    .line 1647
    :cond_4c
    :goto_13
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1649
    invoke-virtual {v0, v5, v6}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1652
    :cond_4d
    :goto_14
    sget-boolean v0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 1654
    if-eqz v0, :cond_52

    .line 1656
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 1658
    if-eqz v3, :cond_4e

    .line 1660
    iget v1, v0, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mStates:I

    .line 1662
    or-int/2addr v1, v6

    .line 1663
    goto :goto_15

    .line 1664
    :cond_4e
    iget v1, v0, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mStates:I

    .line 1666
    and-int/lit8 v1, v1, -0x2

    .line 1668
    :goto_15
    iput v1, v0, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mStates:I

    .line 1670
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/LiveTranslatorManager;->updateVoipTranslator()V

    .line 1673
    goto :goto_16

    .line 1674
    :cond_4f
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_VOIP_LIVE_TRANSLATE:Z

    .line 1676
    if-eqz v1, :cond_50

    .line 1678
    const-string/jumbo v1, "g_call_voip_package_name"

    .line 1681
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1684
    move-result-object v1

    .line 1685
    if-eqz v1, :cond_50

    .line 1687
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mLiveTranslatorManager:Lcom/samsung/android/server/audio/LiveTranslatorManager;

    .line 1689
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1692
    new-instance v2, Ljava/lang/StringBuilder;

    .line 1694
    const-string/jumbo v3, "update connection service package to "

    .line 1697
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1700
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1703
    const-string v3, " from "

    .line 1705
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1708
    iget-object v3, v0, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mPackageName:Ljava/lang/String;

    .line 1710
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1713
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1716
    move-result-object v2

    .line 1717
    const-string v3, "LiveTranslatorManager"

    .line 1719
    sget-object v4, Lcom/samsung/android/server/audio/LiveTranslatorManager;->sVoipLiveTranslateLogger:Lcom/android/server/utils/EventLogger;

    .line 1721
    invoke-virtual {v4, v7, v2, v3}, Lcom/android/server/utils/EventLogger;->enqueueAndLog(ILjava/lang/String;Ljava/lang/String;)V

    .line 1724
    iput-object v1, v0, Lcom/samsung/android/server/audio/LiveTranslatorManager;->mVoipPackageName:Ljava/lang/String;

    .line 1726
    invoke-virtual {v0}, Lcom/samsung/android/server/audio/LiveTranslatorManager;->updateVoipTranslator()V

    .line 1729
    goto :goto_16

    .line 1730
    :cond_50
    const-string/jumbo v1, "g_call_satellite_enable"

    .line 1733
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->get(Ljava/lang/String;)Ljava/lang/String;

    .line 1736
    move-result-object v0

    .line 1737
    if-eqz v0, :cond_52

    .line 1739
    const-string/jumbo v1, "true"

    .line 1742
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1745
    move-result v1

    .line 1746
    const/16 v2, 0x40

    .line 1748
    if-eqz v1, :cond_51

    .line 1750
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1752
    invoke-virtual {v0, v2, v6}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1755
    goto :goto_16

    .line 1756
    :cond_51
    const-string/jumbo v1, "false"

    .line 1759
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 1762
    move-result v0

    .line 1763
    if-eqz v0, :cond_52

    .line 1765
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 1767
    invoke-virtual {v0, v2, v7}, Lcom/samsung/android/server/audio/MicModeManager;->updateState(IZ)V

    .line 1770
    :cond_52
    :goto_16
    const-string/jumbo v0, "factory_test"

    .line 1773
    invoke-virtual {p1, v0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 1776
    move-result v0

    .line 1777
    if-eqz v0, :cond_54

    .line 1779
    sget-object v0, Lcom/android/server/audio/AudioService;->sFactoryTestLogger:Lcom/android/server/utils/EventLogger;

    .line 1781
    new-instance v1, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 1783
    new-instance v2, Ljava/lang/StringBuilder;

    .line 1785
    const-string/jumbo v3, "uid/pid = "

    .line 1788
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1791
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 1794
    move-result v3

    .line 1795
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1798
    const-string v3, "/"

    .line 1800
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1803
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 1806
    move-result v3

    .line 1807
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1810
    const-string v3, " : "

    .line 1812
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1815
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1818
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1821
    move-result-object v2

    .line 1822
    invoke-direct {v1, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 1825
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 1828
    new-instance v0, Ljava/text/SimpleDateFormat;

    .line 1830
    const-string v1, "MM-dd HH:mm:ss:SSS"

    .line 1832
    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    .line 1835
    const-string/jumbo v1, "factory_test_loopback=on"

    .line 1838
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 1841
    move-result v1

    .line 1842
    if-eqz v1, :cond_53

    .line 1844
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1846
    const-string/jumbo v2, "on ("

    .line 1849
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1852
    new-instance v2, Ljava/util/Date;

    .line 1854
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 1857
    move-result-wide v3

    .line 1858
    invoke-direct {v2, v3, v4}, Ljava/util/Date;-><init>(J)V

    .line 1861
    invoke-virtual {v0, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    .line 1864
    move-result-object v0

    .line 1865
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1868
    const-string v0, " uid/pid = "

    .line 1870
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1873
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 1876
    move-result v0

    .line 1877
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1880
    const-string v0, "/"

    .line 1882
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1885
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 1888
    move-result v0

    .line 1889
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1892
    const-string v0, " : "

    .line 1894
    const-string v2, ")"

    .line 1896
    invoke-static {v1, v0, p1, v2}, Lcom/android/server/BootReceiver$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 1899
    move-result-object v0

    .line 1900
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mLoopbackState:Ljava/lang/String;

    .line 1902
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mLastLoopbackOn:Ljava/lang/String;

    .line 1904
    goto :goto_17

    .line 1905
    :cond_53
    const-string/jumbo v1, "factory_test_loopback=off"

    .line 1908
    invoke-virtual {p1, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 1911
    move-result v1

    .line 1912
    if-eqz v1, :cond_54

    .line 1914
    new-instance v1, Ljava/lang/StringBuilder;

    .line 1916
    const-string/jumbo v2, "off ("

    .line 1919
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1922
    new-instance v2, Ljava/util/Date;

    .line 1924
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 1927
    move-result-wide v3

    .line 1928
    invoke-direct {v2, v3, v4}, Ljava/util/Date;-><init>(J)V

    .line 1931
    invoke-virtual {v0, v2}, Ljava/text/SimpleDateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    .line 1934
    move-result-object v0

    .line 1935
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1938
    const-string v0, " uid/pid = "

    .line 1940
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1943
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 1946
    move-result v0

    .line 1947
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1950
    const-string v0, "/"

    .line 1952
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1955
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 1958
    move-result v0

    .line 1959
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1962
    const-string v0, " : "

    .line 1964
    const-string v2, ")"

    .line 1966
    invoke-static {v1, v0, p1, v2}, Lcom/android/server/BootReceiver$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 1969
    move-result-object v0

    .line 1970
    iput-object v0, p0, Lcom/android/server/audio/AudioService;->mLoopbackState:Ljava/lang/String;

    .line 1972
    :cond_54
    :goto_17
    const-string/jumbo v0, "g_sco_samplerate"

    .line 1975
    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 1978
    move-result v0

    .line 1979
    if-eqz v0, :cond_55

    .line 1981
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mBtScoDeviceInfo:Ljava/lang/String;

    .line 1983
    :cond_55
    invoke-static {p1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 1986
    move-result v0

    .line 1987
    if-eqz v0, :cond_56

    .line 1989
    goto :goto_19

    .line 1990
    :cond_56
    new-instance v0, Lcom/samsung/android/media/AudioParameter;

    .line 1992
    invoke-direct {v0, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 1995
    sget-boolean v1, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_SCREEN_CALL:Z

    .line 1997
    if-eqz v1, :cond_57

    .line 1999
    const-string/jumbo v1, "l_screen_call"

    .line 2002
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 2005
    move-result v1

    .line 2006
    if-eqz v1, :cond_57

    .line 2008
    goto :goto_18

    .line 2009
    :cond_57
    const-string/jumbo v1, "l_call_translation_mode"

    .line 2012
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 2015
    move-result v1

    .line 2016
    if-eqz v1, :cond_58

    .line 2018
    goto :goto_18

    .line 2019
    :cond_58
    const-string/jumbo v1, "g_call_band"

    .line 2022
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 2025
    move-result v1

    .line 2026
    if-eqz v1, :cond_59

    .line 2028
    goto :goto_18

    .line 2029
    :cond_59
    const-string/jumbo v1, "g_call_memo_state"

    .line 2032
    invoke-virtual {v0, v1}, Lcom/samsung/android/media/AudioParameter;->hasKey(Ljava/lang/String;)Z

    .line 2035
    move-result v0

    .line 2036
    if-eqz v0, :cond_5a

    .line 2038
    :goto_18
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 2040
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 2043
    invoke-static {p1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 2046
    goto :goto_1a

    .line 2047
    :cond_5a
    :goto_19
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 2049
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 2052
    :goto_1a
    return-void
.end method

.method public final setBluetoothA2dpOn(Z)V
    .locals 8

    .line 1
    const-string/jumbo v0, "setBluetoothA2dpOn()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v0

    .line 15
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 18
    move-result v1

    .line 19
    const-string/jumbo v2, "setBluetoothA2dpOn("

    .line 22
    const-string v3, ") from u/pid:"

    .line 24
    const-string v4, "/"

    .line 26
    invoke-static {v0, v2, v3, v4, p1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 29
    move-result-object v2

    .line 30
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 33
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 36
    move-result-object v2

    .line 37
    new-instance v3, Landroid/media/MediaMetrics$Item;

    .line 39
    const-string v4, "audio.device.setBluetoothA2dpOn"

    .line 41
    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 44
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 47
    move-result-object v0

    .line 48
    invoke-virtual {v0, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 51
    move-result-object v0

    .line 52
    sget-object v1, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 54
    if-eqz p1, :cond_1

    .line 56
    const-string/jumbo v3, "on"

    .line 59
    goto :goto_0

    .line 60
    :cond_1
    const-string/jumbo v3, "off"

    .line 63
    :goto_0
    invoke-virtual {v0, v1, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 66
    move-result-object v0

    .line 67
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 70
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 72
    iget-object v0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mBluetoothA2dpEnabled:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 74
    invoke-virtual {v0, p1}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    .line 77
    move-result v0

    .line 78
    if-ne v0, p1, :cond_2

    .line 80
    const/16 v0, 0x3c

    .line 82
    goto :goto_1

    .line 83
    :cond_2
    const/4 v0, 0x5

    .line 84
    :goto_1
    const/4 v1, 0x0

    .line 85
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/audio/AudioDeviceBroker;->sendLMsgNoDelay(IILjava/lang/Object;)V

    .line 88
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 90
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isForceSpeakerOn()Z

    .line 93
    move-result v0

    .line 94
    if-eqz v0, :cond_3

    .line 96
    if-nez p1, :cond_3

    .line 98
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 100
    const/4 v6, 0x0

    .line 101
    const/4 v7, 0x0

    .line 102
    const/16 v2, 0x8

    .line 104
    const/4 v3, 0x2

    .line 105
    const/4 v4, 0x1

    .line 106
    const/4 v5, 0x1

    .line 107
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 110
    :cond_3
    return-void
.end method

.method public final setBluetoothAudioDeviceCategory(Ljava/lang/String;I)Z
    .locals 6

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setBluetoothAudioDeviceCategory_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 7
    move-result v0

    .line 8
    const/4 v1, 0x0

    .line 9
    if-nez v0, :cond_0

    .line 11
    return v1

    .line 12
    :cond_0
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 15
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isBluetoothAudioDeviceCategoryFixed(Ljava/lang/String;)Z

    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_1

    .line 21
    new-instance p0, Ljava/lang/StringBuilder;

    .line 23
    const-string p2, "Cannot set fixed audio device type for address "

    .line 25
    invoke-direct {p0, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    invoke-static {p1}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 31
    move-result-object p1

    .line 32
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 35
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 38
    move-result-object p0

    .line 39
    const-string p1, "AS.AudioService"

    .line 41
    invoke-static {p1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 44
    return v1

    .line 45
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 47
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 49
    const-string v5, ""

    .line 51
    const/high16 v2, 0x20000000

    .line 53
    const/4 v3, 0x1

    .line 54
    move-object v0, p0

    .line 55
    move-object v1, p1

    .line 56
    move v4, p2

    .line 57
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioDeviceInventory;->addAudioDeviceInInventoryIfNeeded(Ljava/lang/String;IZILjava/lang/String;)V

    .line 60
    const/16 v2, 0x80

    .line 62
    const-string v5, ""

    .line 64
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioDeviceInventory;->addAudioDeviceInInventoryIfNeeded(Ljava/lang/String;IZILjava/lang/String;)V

    .line 67
    const/4 p0, 0x1

    .line 68
    return p0
.end method

.method public final setBluetoothAudioDeviceCategory_legacy(Ljava/lang/String;ZI)V
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setBluetoothAudioDeviceCategory_legacy_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audio/Flags;->automaticBtDeviceType()Z

    .line 7
    move-result v0

    .line 8
    if-eqz v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 14
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 16
    const/16 v1, 0x80

    .line 18
    const/high16 v2, 0x20000000

    .line 20
    if-eqz p2, :cond_1

    .line 22
    move v3, v2

    .line 23
    goto :goto_0

    .line 24
    :cond_1
    move v3, v1

    .line 25
    :goto_0
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 27
    invoke-virtual {v0, p1, v3}, Lcom/android/server/audio/AudioDeviceInventory;->findBtDeviceStateForAddress(Ljava/lang/String;I)Lcom/android/server/audio/AdiDeviceState;

    .line 30
    move-result-object v0

    .line 31
    const/4 v3, 0x3

    .line 32
    if-nez p2, :cond_2

    .line 34
    goto :goto_1

    .line 35
    :cond_2
    if-ne p3, v3, :cond_3

    .line 37
    move v1, v2

    .line 38
    goto :goto_1

    .line 39
    :cond_3
    const v1, 0x20000001

    .line 42
    :goto_1
    if-nez p2, :cond_4

    .line 44
    const/16 p2, 0x8

    .line 46
    goto :goto_2

    .line 47
    :cond_4
    if-ne p3, v3, :cond_5

    .line 49
    const/16 p2, 0x1a

    .line 51
    goto :goto_2

    .line 52
    :cond_5
    const/16 p2, 0x1b

    .line 54
    :goto_2
    if-nez v0, :cond_6

    .line 56
    new-instance v0, Lcom/android/server/audio/AdiDeviceState;

    .line 58
    invoke-direct {v0, p2, v1, p1}, Lcom/android/server/audio/AdiDeviceState;-><init>(IILjava/lang/String;)V

    .line 61
    :cond_6
    invoke-virtual {v0, p3}, Lcom/android/server/audio/AdiDeviceState;->setAudioDeviceCategory(I)V

    .line 64
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 66
    iget-object p2, p2, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 68
    const/4 v2, 0x1

    .line 69
    invoke-virtual {p2, v0, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addOrUpdateAudioDeviceCategoryInInventory(Lcom/android/server/audio/AdiDeviceState;Z)V

    .line 72
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 74
    invoke-virtual {p2}, Lcom/android/server/audio/AudioDeviceBroker;->postPersistAudioDeviceSettings()V

    .line 77
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 79
    invoke-virtual {v0}, Lcom/android/server/audio/AdiDeviceState;->getAudioDeviceAttributes()Landroid/media/AudioDeviceAttributes;

    .line 82
    move-result-object v0

    .line 83
    const/4 v4, 0x0

    .line 84
    invoke-virtual {p2, v0, v4}, Lcom/android/server/audio/SpatializerHelper;->refreshDevice(Landroid/media/AudioDeviceAttributes;Z)V

    .line 87
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 89
    if-ne p3, v3, :cond_7

    .line 91
    goto :goto_3

    .line 92
    :cond_7
    move v2, v4

    .line 93
    :goto_3
    invoke-virtual {p0, v1, p1, v2}, Lcom/android/server/audio/SoundDoseHelper;->setAudioDeviceCategory(ILjava/lang/String;Z)V

    .line 96
    return-void
.end method

.method public final setBluetoothScoOn(Z)V
    .locals 5

    .line 1
    const-string/jumbo v0, "setBluetoothScoOn()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    if-eqz p1, :cond_1

    .line 13
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 15
    iget-object v1, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 17
    monitor-enter v1

    .line 18
    :try_start_0
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 20
    invoke-virtual {v0}, Lcom/android/server/audio/BtHelper;->isBluetoothScoSupported()Z

    .line 23
    move-result v0

    .line 24
    monitor-exit v1

    .line 25
    if-nez v0, :cond_1

    .line 27
    return-void

    .line 28
    :catchall_0
    move-exception p0

    .line 29
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 30
    throw p0

    .line 31
    :cond_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingAppId()I

    .line 34
    move-result v0

    .line 35
    const/16 v1, 0x2710

    .line 37
    if-lt v0, v1, :cond_2

    .line 39
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mBtScoOnByApp:Z

    .line 41
    sget-object p0, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 43
    new-instance v0, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 45
    const-string/jumbo v1, "setBluetoothScoOn update mBtScoOnByApp = "

    .line 48
    const-string v2, " uid = "

    .line 50
    invoke-static {v1, v2, p1}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 53
    move-result-object p1

    .line 54
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 57
    move-result v1

    .line 58
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 61
    const-string v1, " pid = "

    .line 63
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 66
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 69
    move-result v1

    .line 70
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 73
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 76
    move-result-object p1

    .line 77
    invoke-direct {v0, p1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 80
    invoke-virtual {p0, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 83
    return-void

    .line 84
    :cond_2
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 87
    move-result v0

    .line 88
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 91
    move-result v1

    .line 92
    const-string/jumbo v2, "setBluetoothScoOn("

    .line 95
    const-string v3, ") from u/pid:"

    .line 97
    const-string v4, "/"

    .line 99
    invoke-static {v0, v2, v3, v4, p1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 102
    move-result-object v2

    .line 103
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 106
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 109
    move-result-object v2

    .line 110
    new-instance v3, Landroid/media/MediaMetrics$Item;

    .line 112
    const-string v4, "audio.device.setBluetoothScoOn"

    .line 114
    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 117
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 120
    move-result-object v0

    .line 121
    invoke-virtual {v0, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 124
    move-result-object v0

    .line 125
    sget-object v1, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 127
    if-eqz p1, :cond_3

    .line 129
    const-string/jumbo v3, "on"

    .line 132
    goto :goto_0

    .line 133
    :cond_3
    const-string/jumbo v3, "off"

    .line 136
    :goto_0
    invoke-virtual {v0, v1, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 139
    move-result-object v0

    .line 140
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 143
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 145
    invoke-virtual {p0, v2, p1}, Lcom/android/server/audio/AudioDeviceBroker;->setBluetoothScoOn(Ljava/lang/String;Z)V

    .line 148
    return-void
.end method

.method public final setBluetoothVariableLatencyEnabled(Z)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setBluetoothVariableLatencyEnabled_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 7
    move-result-object p0

    .line 8
    :try_start_0
    invoke-static {p1}, Landroid/media/AudioSystem;->setBluetoothVariableLatencyEnabled(Z)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11
    if-eqz p0, :cond_0

    .line 13
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V

    .line 16
    :cond_0
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    if-eqz p0, :cond_1

    .line 20
    :try_start_1
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 23
    goto :goto_0

    .line 24
    :catchall_1
    move-exception p0

    .line 25
    invoke-virtual {p1, p0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 28
    :cond_1
    :goto_0
    throw p1
.end method

.method public final setBtOffloadEnable(I)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 5
    monitor-enter p0

    .line 6
    monitor-exit p0

    .line 7
    return-void
.end method

.method public final setCommunicationDevice(Landroid/os/IBinder;I)Z
    .locals 9

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v2

    .line 5
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 8
    move-result v0

    .line 9
    const/4 v1, 0x0

    .line 10
    const/4 v3, 0x0

    .line 11
    if-eqz p2, :cond_2

    .line 13
    const/4 v4, 0x2

    .line 14
    invoke-static {p2, v4}, Landroid/media/AudioManager;->getDeviceForPortId(II)Landroid/media/AudioDeviceInfo;

    .line 17
    move-result-object v4

    .line 18
    if-nez v4, :cond_0

    .line 20
    const-string/jumbo p0, "setCommunicationDevice: invalid portID "

    .line 23
    const-string p1, "AS.AudioService"

    .line 25
    invoke-static {p2, p0, p1}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 28
    return v1

    .line 29
    :cond_0
    invoke-static {v4}, Lcom/android/server/audio/AudioDeviceBroker;->isValidCommunicationDevice(Landroid/media/AudioDeviceInfo;)Z

    .line 32
    move-result p2

    .line 33
    if-nez p2, :cond_3

    .line 35
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->isSink()Z

    .line 38
    move-result p0

    .line 39
    if-nez p0, :cond_1

    .line 41
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 43
    const-string/jumbo p1, "device must have sink role"

    .line 46
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 49
    throw p0

    .line 50
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 52
    new-instance p1, Ljava/lang/StringBuilder;

    .line 54
    const-string/jumbo p2, "invalid device type: "

    .line 57
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 60
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->getType()I

    .line 63
    move-result p2

    .line 64
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 67
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 70
    move-result-object p1

    .line 71
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 74
    throw p0

    .line 75
    :cond_2
    move-object v4, v3

    .line 76
    :cond_3
    new-instance p2, Ljava/lang/StringBuilder;

    .line 78
    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 81
    if-nez v4, :cond_4

    .line 83
    const-string/jumbo v5, "clearCommunicationDevice("

    .line 86
    goto :goto_0

    .line 87
    :cond_4
    const-string/jumbo v5, "setCommunicationDevice("

    .line 90
    :goto_0
    const-string v6, ") from u/pid:"

    .line 92
    const-string v7, "/"

    .line 94
    invoke-static {v2, v5, v6, v7, p2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 97
    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 100
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 103
    move-result-object v5

    .line 104
    const/high16 p2, 0x40000000    # 2.0f

    .line 106
    if-eqz v4, :cond_5

    .line 108
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->getPort()Landroid/media/AudioDevicePort;

    .line 111
    move-result-object v0

    .line 112
    invoke-virtual {v0}, Landroid/media/AudioDevicePort;->type()I

    .line 115
    move-result v0

    .line 116
    invoke-virtual {v4}, Landroid/media/AudioDeviceInfo;->getAddress()Ljava/lang/String;

    .line 119
    move-result-object v3

    .line 120
    goto :goto_1

    .line 121
    :cond_5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 123
    invoke-virtual {v0}, Lcom/android/server/audio/AudioDeviceBroker;->getCommunicationDevice()Landroid/media/AudioDeviceInfo;

    .line 126
    move-result-object v0

    .line 127
    if-eqz v0, :cond_6

    .line 129
    invoke-virtual {v0}, Landroid/media/AudioDeviceInfo;->getPort()Landroid/media/AudioDevicePort;

    .line 132
    move-result-object v3

    .line 133
    invoke-virtual {v3}, Landroid/media/AudioDevicePort;->type()I

    .line 136
    move-result v3

    .line 137
    invoke-virtual {v0}, Landroid/media/AudioDeviceInfo;->getAddress()Ljava/lang/String;

    .line 140
    move-result-object v0

    .line 141
    move v8, v3

    .line 142
    move-object v3, v0

    .line 143
    move v0, v8

    .line 144
    goto :goto_1

    .line 145
    :cond_6
    move v0, p2

    .line 146
    :goto_1
    if-eq v0, p2, :cond_8

    .line 148
    new-instance p2, Landroid/media/MediaMetrics$Item;

    .line 150
    const-string v6, "audio.device.setCommunicationDevice"

    .line 152
    invoke-direct {p2, v6}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 155
    sget-object v6, Landroid/media/MediaMetrics$Property;->DEVICE:Landroid/media/MediaMetrics$Key;

    .line 157
    invoke-static {v0}, Landroid/media/AudioSystem;->getDeviceName(I)Ljava/lang/String;

    .line 160
    move-result-object v0

    .line 161
    invoke-virtual {p2, v6, v0}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 164
    move-result-object p2

    .line 165
    sget-object v0, Landroid/media/MediaMetrics$Property;->ADDRESS:Landroid/media/MediaMetrics$Key;

    .line 167
    invoke-virtual {p2, v0, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 170
    move-result-object p2

    .line 171
    sget-object v0, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 173
    if-eqz v4, :cond_7

    .line 175
    const-string/jumbo v3, "connected"

    .line 178
    goto :goto_2

    .line 179
    :cond_7
    const-string/jumbo v3, "disconnected"

    .line 182
    :goto_2
    invoke-virtual {p2, v0, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 185
    move-result-object p2

    .line 186
    invoke-virtual {p2}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 189
    :cond_8
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 191
    const-string v0, "android.permission.MODIFY_PHONE_STATE"

    .line 193
    invoke-virtual {p2, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 196
    move-result p2

    .line 197
    if-nez p2, :cond_9

    .line 199
    const/4 p2, 0x1

    .line 200
    goto :goto_3

    .line 201
    :cond_9
    move p2, v1

    .line 202
    :goto_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 205
    move-result-wide v6

    .line 206
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 208
    move-object v1, p1

    .line 209
    move-object v3, v4

    .line 210
    move v4, p2

    .line 211
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioDeviceBroker;->setCommunicationDevice(Landroid/os/IBinder;ILandroid/media/AudioDeviceInfo;ZLjava/lang/String;)Z

    .line 214
    move-result p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 215
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 218
    return p0

    .line 219
    :catchall_0
    move-exception p0

    .line 220
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 223
    throw p0
.end method

.method public final setCsd(F)V
    .locals 6

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setCsd_enforcePermission()V

    .line 4
    const/4 v0, 0x0

    .line 5
    cmpg-float v1, p1, v0

    .line 7
    if-gez v1, :cond_1

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 11
    iget-object p1, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 13
    invoke-virtual {p1}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 16
    move-result p1

    .line 17
    if-nez p1, :cond_0

    .line 19
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdForTestApi()Z

    .line 22
    move-result p1

    .line 23
    if-nez p1, :cond_0

    .line 25
    goto/16 :goto_1

    .line 27
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mCsdStateLock:Ljava/lang/Object;

    .line 29
    monitor-enter v1

    .line 30
    const-wide/16 v2, -0x1

    .line 32
    :try_start_0
    iput-wide v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mLastMomentaryExposureTimeMs:J

    .line 34
    monitor-exit v1

    .line 35
    goto/16 :goto_1

    .line 37
    :catchall_0
    move-exception p0

    .line 38
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 39
    throw p0

    .line 40
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 42
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 44
    invoke-virtual {v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 47
    move-result v1

    .line 48
    if-nez v1, :cond_2

    .line 50
    invoke-virtual {p0}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdForTestApi()Z

    .line 53
    move-result v1

    .line 54
    if-nez v1, :cond_2

    .line 56
    goto :goto_1

    .line 57
    :cond_2
    iget-object v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mCsdStateLock:Ljava/lang/Object;

    .line 59
    monitor-enter v1

    .line 60
    :try_start_1
    iput p1, p0, Lcom/android/server/audio/SoundDoseHelper;->mCurrentCsd:F

    .line 62
    float-to-double v2, p1

    .line 63
    const-wide/high16 v4, 0x3ff0000000000000L    # 1.0

    .line 65
    add-double/2addr v2, v4

    .line 66
    invoke-static {v2, v3}, Ljava/lang/Math;->floor(D)D

    .line 69
    move-result-wide v2

    .line 70
    double-to-float v2, v2

    .line 71
    iput v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mNextCsdWarning:F

    .line 73
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mDoseRecords:Ljava/util/List;

    .line 75
    check-cast v2, Ljava/util/ArrayList;

    .line 77
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 80
    iget v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mCurrentCsd:F

    .line 82
    cmpl-float v0, v2, v0

    .line 84
    if-lez v0, :cond_3

    .line 86
    new-instance v0, Landroid/media/SoundDoseRecord;

    .line 88
    invoke-direct {v0}, Landroid/media/SoundDoseRecord;-><init>()V

    .line 91
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 94
    move-result-wide v2

    .line 95
    const-wide/16 v4, 0x3e8

    .line 97
    div-long/2addr v2, v4

    .line 98
    iput-wide v2, v0, Landroid/media/SoundDoseRecord;->timestamp:J

    .line 100
    iput p1, v0, Landroid/media/SoundDoseRecord;->value:F

    .line 102
    iget-object v2, p0, Lcom/android/server/audio/SoundDoseHelper;->mDoseRecords:Ljava/util/List;

    .line 104
    check-cast v2, Ljava/util/ArrayList;

    .line 106
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 109
    goto :goto_0

    .line 110
    :catchall_1
    move-exception p0

    .line 111
    goto :goto_2

    .line 112
    :cond_3
    :goto_0
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mDoseRecords:Ljava/util/List;

    .line 114
    const/4 v2, 0x0

    .line 115
    new-array v2, v2, [Landroid/media/SoundDoseRecord;

    .line 117
    check-cast v0, Ljava/util/ArrayList;

    .line 119
    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 122
    move-result-object v0

    .line 123
    check-cast v0, [Landroid/media/SoundDoseRecord;

    .line 125
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 126
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 128
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 131
    move-result-object p0

    .line 132
    check-cast p0, Landroid/media/ISoundDose;

    .line 134
    if-nez p0, :cond_4

    .line 136
    const-string p0, "AS.SoundDoseHelper"

    .line 138
    const-string p1, "Sound dose interface not initialized"

    .line 140
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 143
    goto :goto_1

    .line 144
    :cond_4
    :try_start_2
    invoke-interface {p0, p1, v0}, Landroid/media/ISoundDose;->resetCsd(F[Landroid/media/SoundDoseRecord;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 147
    goto :goto_1

    .line 148
    :catch_0
    move-exception p0

    .line 149
    const-string p1, "AS.SoundDoseHelper"

    .line 151
    const-string v0, "Exception while setting the CSD value"

    .line 153
    invoke-static {p1, v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 156
    :goto_1
    return-void

    .line 157
    :goto_2
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 158
    throw p0
.end method

.method public final setCsdAsAFeatureEnabled(Z)V
    .locals 7

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setCsdAsAFeatureEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mCsdAsAFeatureLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureEnabled:Z

    .line 11
    if-eq v1, p1, :cond_0

    .line 13
    iget-boolean v1, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureAvailable:Z

    .line 15
    if-eqz v1, :cond_0

    .line 17
    const/4 v1, 0x1

    .line 18
    goto :goto_0

    .line 19
    :catchall_0
    move-exception p0

    .line 20
    goto :goto_1

    .line 21
    :cond_0
    const/4 v1, 0x0

    .line 22
    :goto_0
    iput-boolean p1, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureEnabled:Z

    .line 24
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 27
    move-result-wide v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28
    :try_start_1
    iget-object p1, p0, Lcom/android/server/audio/SoundDoseHelper;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 30
    iget-object v4, p0, Lcom/android/server/audio/SoundDoseHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 32
    iget-object v4, v4, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 34
    const-string v5, "audio_safe_csd_as_a_feature_enabled"

    .line 36
    iget-boolean v6, p0, Lcom/android/server/audio/SoundDoseHelper;->mIsCsdAsAFeatureEnabled:Z

    .line 38
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 41
    const/4 p1, -0x2

    .line 42
    invoke-static {v4, v5, v6, p1}, Landroid/provider/Settings$Secure;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 45
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 48
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 49
    if-eqz v1, :cond_1

    .line 51
    const-string/jumbo p1, "setCsdAsAFeatureEnabled"

    .line 54
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SoundDoseHelper;->updateCsdEnabled(Ljava/lang/String;)V

    .line 57
    :cond_1
    return-void

    .line 58
    :catchall_1
    move-exception p0

    .line 59
    :try_start_3
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 62
    throw p0

    .line 63
    :goto_1
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 64
    throw p0
.end method

.method public final setDesiredHeadTrackingMode(I)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setDesiredHeadTrackingMode_enforcePermission()V

    .line 4
    const/4 v0, -0x1

    .line 5
    if-eq p1, v0, :cond_0

    .line 7
    const/4 v0, 0x1

    .line 8
    if-eq p1, v0, :cond_0

    .line 10
    const/4 v0, 0x2

    .line 11
    if-eq p1, v0, :cond_0

    .line 13
    return-void

    .line 14
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 16
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->setDesiredHeadTrackingMode(I)V

    .line 19
    return-void
.end method

.method public final setDeviceAsNonDefaultForStrategy(ILandroid/media/AudioDeviceAttributes;)I
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setDeviceAsNonDefaultForStrategy_enforcePermission()V

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p2

    .line 11
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v0

    .line 15
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 18
    move-result-object v0

    .line 19
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 22
    move-result v1

    .line 23
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 26
    move-result-object v1

    .line 27
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 30
    move-result-object v2

    .line 31
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->toString()Ljava/lang/String;

    .line 34
    move-result-object v3

    .line 35
    filled-new-array {v0, v1, v2, v3}, [Ljava/lang/Object;

    .line 38
    move-result-object v0

    .line 39
    const-string/jumbo v1, "setDeviceAsNonDefaultForStrategy u/pid:%d/%d strat:%d dev:%s"

    .line 42
    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 45
    move-result-object v0

    .line 46
    sget-object v1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 48
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 50
    invoke-direct {v2, v0}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 53
    const/4 v3, 0x0

    .line 54
    const-string v4, "AS.AudioService"

    .line 56
    invoke-virtual {v2, v3, v4}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 59
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 62
    invoke-virtual {p2}, Landroid/media/AudioDeviceAttributes;->getRole()I

    .line 65
    move-result v1

    .line 66
    const/4 v2, 0x1

    .line 67
    if-ne v1, v2, :cond_0

    .line 69
    const-string p0, "Unsupported input routing in "

    .line 71
    invoke-virtual {p0, v0}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 74
    move-result-object p0

    .line 75
    invoke-static {v4, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 78
    const/4 p0, -0x1

    .line 79
    return p0

    .line 80
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 82
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 84
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 87
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 90
    move-result-object v1

    .line 91
    :try_start_0
    new-instance v2, Ljava/util/ArrayList;

    .line 93
    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 96
    invoke-virtual {v2, p2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 99
    invoke-virtual {p0, p1, v3, v2}, Lcom/android/server/audio/AudioDeviceInventory;->addDevicesRoleForStrategy(IZLjava/util/List;)I

    .line 102
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 103
    if-eqz v1, :cond_1

    .line 105
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V

    .line 108
    :cond_1
    if-nez v2, :cond_2

    .line 110
    const/16 v1, 0x2f

    .line 112
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 114
    invoke-virtual {p0, v1, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->sendILMsgNoDelay(IILjava/lang/Object;)V

    .line 117
    :cond_2
    if-eqz v2, :cond_3

    .line 119
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 122
    move-result-object p0

    .line 123
    filled-new-array {p0, v0}, [Ljava/lang/Object;

    .line 126
    move-result-object p0

    .line 127
    const-string p1, "Error %d in %s)"

    .line 129
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 132
    move-result-object p0

    .line 133
    invoke-static {v4, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 136
    :cond_3
    return v2

    .line 137
    :catchall_0
    move-exception p0

    .line 138
    if-eqz v1, :cond_4

    .line 140
    :try_start_1
    invoke-interface {v1}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 143
    goto :goto_0

    .line 144
    :catchall_1
    move-exception p1

    .line 145
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 148
    :cond_4
    :goto_0
    throw p0
.end method

.method public final setDeviceToForceByUser(ILjava/lang/String;Z)I
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkModifyPhoneStateOrRoutingPermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 11
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/audio/AudioDeviceInventory;->setDeviceToForceByUser(ILjava/lang/String;Z)I

    .line 14
    move-result p0

    .line 15
    monitor-exit v0

    .line 16
    return p0

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19
    throw p0
.end method

.method public final setDeviceVolume(Landroid/media/VolumeInfo;Landroid/media/AudioDeviceAttributes;Ljava/lang/String;)V
    .locals 15

    move-object v0, p0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setDeviceVolume_enforcePermission()V

    .line 2
    invoke-static/range {p1 .. p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3
    invoke-static/range {p2 .. p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-static/range {p3 .. p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 5
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->hasStreamType()Z

    move-result v1

    const-string v2, "AS.AudioService"

    if-nez v1, :cond_0

    .line 6
    new-instance v0, Ljava/lang/Exception;

    invoke-direct {v0}, Ljava/lang/Exception;-><init>()V

    const-string v1, "Unsupported non-stream type based VolumeInfo"

    invoke-static {v2, v1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    return-void

    .line 7
    :cond_0
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getVolumeIndex()I

    move-result v1

    const/16 v10, -0x64

    if-ne v1, v10, :cond_2

    .line 8
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->hasMuteCommand()Z

    move-result v3

    if-eqz v3, :cond_1

    goto :goto_0

    .line 9
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "changing device volume requires a volume index or mute command"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10
    :cond_2
    :goto_0
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 11
    invoke-virtual {v3}, Lcom/android/server/audio/AudioSystemAdapter;->invalidateRoutingCache()V

    .line 12
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v7

    .line 13
    invoke-virtual/range {p2 .. p2}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    move-result v3

    const/4 v11, 0x0

    if-ne v7, v3, :cond_3

    const/4 v3, 0x1

    move v12, v3

    goto :goto_1

    :cond_3
    move v12, v11

    .line 14
    :goto_1
    sget-object v13, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    new-instance v14, Lcom/android/server/audio/AudioServiceEvents$DeviceVolumeEvent;

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v4

    move-object v3, v14

    move v5, v1

    move-object/from16 v6, p2

    move-object/from16 v8, p3

    move v9, v12

    invoke-direct/range {v3 .. v9}, Lcom/android/server/audio/AudioServiceEvents$DeviceVolumeEvent;-><init>(IILandroid/media/AudioDeviceAttributes;ILjava/lang/String;Z)V

    invoke-virtual {v13, v14}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    if-eqz v12, :cond_4

    return-void

    .line 15
    :cond_4
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->hasMuteCommand()Z

    move-result v3

    if-eqz v3, :cond_5

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->isMuted()Z

    move-result v3

    if-eqz v3, :cond_5

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v3

    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    move-result v3

    if-nez v3, :cond_5

    .line 16
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v1

    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 17
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v3

    aget-object v2, v2, v3

    .line 18
    iget v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    const/4 v7, 0x0

    const/4 v3, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    .line 19
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttributionInt(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Z)V

    return-void

    .line 20
    :cond_5
    new-instance v3, Ljava/lang/StringBuilder;

    const-string/jumbo v4, "setDeviceVolume from:"

    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    move-object/from16 v5, p3

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v6, p1

    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v4, p2

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v13, v11, v3, v2}, Lcom/android/server/utils/EventLogger;->enqueueAndLog(ILjava/lang/String;Ljava/lang/String;)V

    .line 21
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v2

    if-eq v2, v10, :cond_9

    .line 22
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result v2

    if-ne v2, v10, :cond_6

    goto :goto_3

    .line 23
    :cond_6
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v3

    aget-object v2, v2, v3

    .line 24
    iget v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    add-int/lit8 v2, v2, 0x5

    .line 25
    div-int/lit8 v2, v2, 0xa

    .line 26
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v7

    aget-object v3, v3, v7

    .line 27
    iget v3, v3, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    add-int/lit8 v3, v3, 0x5

    .line 28
    div-int/lit8 v3, v3, 0xa

    .line 29
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v7

    if-ne v7, v2, :cond_7

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result v7

    if-eq v7, v3, :cond_8

    .line 30
    :cond_7
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMinVolumeIndex()I

    move-result v7

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getMaxVolumeIndex()I

    move-result v8

    .line 31
    invoke-static {v1, v7, v8, v2, v3}, Lcom/android/server/audio/AudioService;->rescaleIndex(IIIII)I

    move-result v1

    :cond_8
    :goto_2
    move v2, v1

    goto :goto_4

    :cond_9
    :goto_3
    mul-int/lit8 v2, v1, 0xa

    .line 32
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v7

    aget-object v3, v3, v7

    .line 33
    iget v3, v3, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMin:I

    if-lt v2, v3, :cond_a

    .line 34
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 35
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v7

    aget-object v3, v3, v7

    .line 36
    iget v3, v3, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    if-gt v2, v3, :cond_a

    goto :goto_2

    .line 37
    :goto_4
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v1

    const/4 v7, 0x0

    const/4 v3, 0x0

    const/4 v6, 0x0

    move-object v0, p0

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttributionInt(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Z)V

    return-void

    .line 38
    :cond_a
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "invalid volume index "

    const-string v3, " not between min/max for stream "

    .line 39
    invoke-static {v1, v2, v3}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 40
    invoke-virtual/range {p1 .. p1}, Landroid/media/VolumeInfo;->getStreamType()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public final setDeviceVolume(Lcom/android/server/audio/AudioService$VolumeStreamState;I)V
    .locals 9

    .line 45
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    monitor-enter v0

    .line 46
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 47
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v2

    const/4 v8, 0x1

    if-nez v2, :cond_1

    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isA2dpAbsoluteVolumeDevice(I)Z

    move-result v2

    if-nez v2, :cond_1

    .line 48
    invoke-static {p2}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_0

    :cond_0
    const/4 v2, 0x0

    move v5, v2

    goto :goto_1

    :catchall_0
    move-exception p0

    goto :goto_3

    :cond_1
    :goto_0
    move v5, v8

    :goto_1
    const/4 v7, 0x0

    const/16 v2, 0x3ee

    const/4 v3, 0x0

    move v4, p2

    move-object v6, p1

    .line 49
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 50
    invoke-virtual {p1, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 51
    invoke-static {}, Landroid/media/AudioSystem;->getNumStreamTypes()I

    move-result v1

    sub-int/2addr v1, v8

    :goto_2
    if-ltz v1, :cond_5

    .line 52
    iget v2, p1, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    if-eq v1, v2, :cond_4

    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v1

    if-ne v3, v2, :cond_4

    .line 53
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v2

    if-eq p2, v2, :cond_3

    .line 54
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v3

    if-nez v3, :cond_2

    .line 55
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isA2dpAbsoluteVolumeDevice(I)Z

    move-result v3

    if-nez v3, :cond_2

    .line 56
    invoke-static {p2}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 57
    :cond_2
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v1

    invoke-virtual {v3, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 58
    :cond_3
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v3, v3, v1

    invoke-virtual {v3, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    .line 59
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    .line 60
    iget-boolean v3, v3, Lcom/samsung/android/server/audio/MultiSoundManager;->mEnabled:Z

    if-eqz v3, :cond_4

    if-eq p2, v2, :cond_4

    .line 61
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v1

    invoke-virtual {v2, p2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyDeviceVolume_syncVSS(I)V

    :cond_4
    add-int/lit8 v1, v1, -0x1

    goto :goto_2

    .line 62
    :cond_5
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 63
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v5, 0x0

    const/16 v7, 0x1f4

    const/4 v2, 0x1

    const/4 v3, 0x2

    move v4, p2

    move-object v6, p1

    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    return-void

    .line 64
    :goto_3
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw p0
.end method

.method public final setDeviceVolumeBehavior(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V
    .locals 21

    .line 1
    move-object/from16 v0, p0

    .line 3
    move/from16 v1, p2

    .line 5
    move-object/from16 v2, p3

    .line 7
    invoke-virtual/range {p0 .. p0}, Landroid/media/IAudioService$Stub;->setDeviceVolumeBehavior_enforcePermission()V

    .line 10
    invoke-static/range {p1 .. p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13
    invoke-static/range {p2 .. p2}, Landroid/media/AudioManager;->enforceValidVolumeBehavior(I)V

    .line 16
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 19
    move-result-object v3

    .line 20
    sget-object v4, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 22
    new-instance v5, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 24
    new-instance v6, Ljava/lang/StringBuilder;

    .line 26
    const-string/jumbo v7, "setDeviceVolumeBehavior: dev:"

    .line 29
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 32
    invoke-virtual {v3}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 35
    move-result v7

    .line 36
    invoke-static {v7}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 39
    move-result-object v7

    .line 40
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 43
    const-string v7, " addr:"

    .line 45
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 48
    invoke-virtual {v3}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 51
    move-result-object v7

    .line 52
    invoke-static {v7}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 55
    move-result-object v7

    .line 56
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 59
    const-string v7, " behavior:"

    .line 61
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 64
    invoke-static/range {p2 .. p2}, Landroid/media/AudioDeviceVolumeManager;->volumeBehaviorName(I)Ljava/lang/String;

    .line 67
    move-result-object v7

    .line 68
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 71
    const-string v7, " pack:"

    .line 73
    invoke-static {v6, v7, v2}, Landroid/hardware/audio/common/V2_0/AudioOffloadInfo$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 76
    move-result-object v6

    .line 77
    invoke-direct {v5, v6}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 80
    const-string v6, "AS.AudioService"

    .line 82
    const/4 v7, 0x0

    .line 83
    invoke-virtual {v5, v7, v6}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 86
    invoke-virtual {v4, v5}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 89
    if-nez v2, :cond_0

    .line 91
    const-string v2, ""

    .line 93
    :cond_0
    invoke-virtual {v3}, Landroid/media/AudioDeviceAttributes;->getType()I

    .line 96
    move-result v5

    .line 97
    const/16 v6, 0x8

    .line 99
    if-ne v5, v6, :cond_3

    .line 101
    invoke-virtual {v3}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 104
    move-result-object v13

    .line 105
    const/4 v2, 0x3

    .line 106
    if-ne v1, v2, :cond_1

    .line 108
    const/4 v1, 0x1

    .line 109
    goto :goto_0

    .line 110
    :cond_1
    move v1, v7

    .line 111
    :goto_0
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 113
    new-instance v5, Ljava/lang/StringBuilder;

    .line 115
    const-string v6, "avrcpSupportsAbsoluteVolume addr="

    .line 117
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 120
    invoke-static {v13}, Landroid/media/Utils;->anonymizeBluetoothAddress(Ljava/lang/String;)Ljava/lang/String;

    .line 123
    move-result-object v6

    .line 124
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 127
    const-string v6, " support="

    .line 129
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 132
    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 135
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 138
    move-result-object v5

    .line 139
    invoke-direct {v3, v5}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 142
    const-string v5, "AS.AudioService"

    .line 144
    invoke-virtual {v3, v7, v5}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 147
    invoke-virtual {v4, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 150
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 152
    iget-object v4, v3, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 154
    monitor-enter v4

    .line 155
    :try_start_0
    iget-object v5, v3, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 157
    invoke-virtual {v5, v13, v1}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->setAvrcpAbsoluteVolumeSupported(Ljava/lang/String;Z)V

    .line 160
    iget-object v1, v3, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 162
    invoke-virtual {v1}, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->isAvrcpAbsoluteVolumeSupportedForActiveDevice()Z

    .line 165
    move-result v11

    .line 166
    iget-object v1, v3, Lcom/android/server/audio/AudioDeviceBroker;->mBtHelper:Lcom/android/server/audio/BtHelper;

    .line 168
    invoke-virtual {v1, v11}, Lcom/android/server/audio/BtHelper;->setAvrcpAbsoluteVolumeSupported(Z)V

    .line 171
    iget-object v1, v3, Lcom/android/server/audio/AudioDeviceBroker;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 173
    iput-boolean v11, v1, Lcom/android/server/audio/AudioService;->mAvrcpAbsVolSupported:Z

    .line 175
    invoke-static {}, Lcom/android/media/audio/Flags;->absVolumeIndexFix()Z

    .line 178
    iget-object v14, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 180
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 182
    aget-object v19, v3, v2

    .line 184
    const/16 v16, 0x2

    .line 186
    const/16 v17, 0x80

    .line 188
    const/16 v18, 0x0

    .line 190
    const/16 v20, 0x0

    .line 192
    const/4 v15, 0x0

    .line 193
    invoke-static/range {v14 .. v20}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 196
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->AVC_AFFECTED_STREAMS:[I

    .line 198
    array-length v3, v2

    .line 199
    :goto_1
    if-ge v7, v3, :cond_2

    .line 201
    aget v5, v2, v7

    .line 203
    iget-object v14, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 205
    iget-object v6, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 207
    aget-object v19, v6, v5

    .line 209
    const/16 v16, 0x2

    .line 211
    const/16 v18, 0x0

    .line 213
    const/16 v17, 0x80

    .line 215
    const/16 v20, 0x0

    .line 217
    const/4 v15, 0x0

    .line 218
    invoke-static/range {v14 .. v20}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 221
    add-int/lit8 v7, v7, 0x1

    .line 223
    goto :goto_1

    .line 224
    :cond_2
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 225
    iget-object v8, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 227
    const/16 v9, 0xad5

    .line 229
    const/4 v10, 0x2

    .line 230
    const/4 v12, 0x0

    .line 231
    const/4 v14, 0x0

    .line 232
    invoke-static/range {v8 .. v14}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 235
    return-void

    .line 236
    :catchall_0
    move-exception v0

    .line 237
    :try_start_1
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 238
    throw v0

    .line 239
    :cond_3
    invoke-virtual {v0, v3, v1, v2}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 242
    invoke-virtual {v3}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 245
    move-result v2

    .line 246
    new-instance v3, Ljava/lang/StringBuilder;

    .line 248
    const-string v4, "Persisting Volume Behavior for DeviceType: "

    .line 250
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 253
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 256
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 259
    move-result-object v3

    .line 260
    const-string v4, "AS.AudioService"

    .line 262
    invoke-static {v4, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 265
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 268
    move-result-wide v3

    .line 269
    :try_start_2
    iget-object v5, v0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 271
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 273
    new-instance v6, Ljava/lang/StringBuilder;

    .line 275
    const-string v7, "AudioService_DeviceVolumeBehavior_"

    .line 277
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 280
    invoke-static {v2}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 283
    move-result-object v2

    .line 284
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 287
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 290
    move-result-object v2

    .line 291
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 294
    const/4 v5, -0x2

    .line 295
    invoke-static {v0, v2, v1, v5}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 298
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 301
    return-void

    .line 302
    :catchall_1
    move-exception v0

    .line 303
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 306
    throw v0
.end method

.method public final setDeviceVolumeBehaviorInternal(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V
    .locals 11

    .line 1
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 4
    move-result v3

    .line 5
    const/4 v0, 0x1

    .line 6
    const/4 v1, 0x0

    .line 7
    if-eqz p2, :cond_4

    .line 9
    const-string v2, "AS.AudioService"

    .line 11
    const-string v4, "Adding DeviceType: 0x"

    .line 13
    if-eq p2, v0, :cond_3

    .line 15
    const/4 v5, 0x2

    .line 16
    if-eq p2, v5, :cond_1

    .line 18
    const/4 v0, 0x3

    .line 19
    if-eq p2, v0, :cond_0

    .line 21
    const/4 v0, 0x4

    .line 22
    if-eq p2, v0, :cond_0

    .line 24
    const/4 v0, 0x5

    .line 25
    if-eq p2, v0, :cond_0

    .line 27
    goto/16 :goto_1

    .line 29
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 31
    const-string p1, "Absolute volume unsupported for now"

    .line 33
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 36
    throw p0

    .line 37
    :cond_1
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)Z

    .line 40
    move-result v5

    .line 41
    new-instance v6, Ljava/lang/StringBuilder;

    .line 43
    invoke-direct {v6, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 46
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 49
    move-result-object v4

    .line 50
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 53
    const-string v4, " to mFixedVolumeDevices"

    .line 55
    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 58
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 61
    move-result-object v4

    .line 62
    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 65
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mFixedVolumeDevices:Ljava/util/Set;

    .line 67
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 70
    move-result-object v4

    .line 71
    check-cast v2, Ljava/util/HashSet;

    .line 73
    invoke-virtual {v2, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 76
    move-result v2

    .line 77
    or-int/2addr v2, v5

    .line 78
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromAbsVolumeDevices(I)Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 81
    move-result-object v4

    .line 82
    if-eqz v4, :cond_2

    .line 84
    goto :goto_0

    .line 85
    :cond_2
    move v0, v1

    .line 86
    :goto_0
    or-int v1, v2, v0

    .line 88
    goto :goto_1

    .line 89
    :cond_3
    new-instance v5, Ljava/lang/StringBuilder;

    .line 91
    invoke-direct {v5, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 94
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 97
    move-result-object v4

    .line 98
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 101
    const-string v4, " to mFullVolumeDevices"

    .line 103
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 109
    move-result-object v4

    .line 110
    invoke-static {v2, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 113
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 115
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 118
    move-result-object v4

    .line 119
    check-cast v2, Ljava/util/HashSet;

    .line 121
    invoke-virtual {v2, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 124
    move-result v2

    .line 125
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFixedVolumeDevices(I)Z

    .line 128
    move-result v4

    .line 129
    or-int/2addr v2, v4

    .line 130
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromAbsVolumeDevices(I)Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 133
    move-result-object v4

    .line 134
    if-eqz v4, :cond_2

    .line 136
    goto :goto_0

    .line 137
    :cond_4
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFullVolumeDevices(I)Z

    .line 140
    move-result v2

    .line 141
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromFixedVolumeDevices(I)Z

    .line 144
    move-result v4

    .line 145
    or-int/2addr v2, v4

    .line 146
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->removeAudioSystemDeviceOutFromAbsVolumeDevices(I)Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 149
    move-result-object v4

    .line 150
    if-eqz v4, :cond_2

    .line 152
    goto :goto_0

    .line 153
    :goto_1
    if-eqz v1, :cond_5

    .line 155
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 157
    const/16 v5, 0x2f

    .line 159
    const/4 v6, 0x2

    .line 160
    const/4 v8, 0x0

    .line 161
    const/4 v10, 0x0

    .line 162
    move v7, p2

    .line 163
    move-object v9, p1

    .line 164
    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 167
    :cond_5
    sget-object p1, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 169
    new-instance v0, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 171
    const-string v1, "Volume behavior "

    .line 173
    const-string v2, " for dev=0x"

    .line 175
    invoke-static {p2, v1, v2}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 178
    move-result-object p2

    .line 179
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 182
    move-result-object v1

    .line 183
    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 186
    const-string v1, " from:"

    .line 188
    invoke-virtual {p2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 191
    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 194
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 197
    move-result-object p2

    .line 198
    invoke-direct {v0, p2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 201
    invoke-virtual {p1, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 204
    const-string/jumbo p1, "setDeviceVolumeBehavior:"

    .line 207
    invoke-virtual {p1, p3}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 210
    move-result-object v5

    .line 211
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 213
    const/16 v1, 0x21

    .line 215
    const/4 v2, 0x2

    .line 216
    const/4 v4, 0x0

    .line 217
    const/4 v6, 0x0

    .line 218
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 221
    return-void
.end method

.method public final setEncodedSurroundMode(I)Z
    .locals 7

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setEncodedSurroundMode_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 7
    move-result-wide v0

    .line 8
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 10
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 11
    :try_start_1
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 13
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 15
    const-string/jumbo v4, "encoded_surround_output"

    .line 18
    const/4 v5, 0x1

    .line 19
    if-eq p1, v5, :cond_0

    .line 21
    const/4 v6, 0x2

    .line 22
    if-eq p1, v6, :cond_1

    .line 24
    const/4 v6, 0x3

    .line 25
    if-eq p1, v6, :cond_1

    .line 27
    const/4 v6, 0x0

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    move v6, v5

    .line 30
    :cond_1
    :goto_0
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 33
    invoke-static {p0, v4, v6}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 36
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 37
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 40
    return v5

    .line 41
    :catchall_0
    move-exception p0

    .line 42
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 43
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 44
    :catchall_1
    move-exception p0

    .line 45
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 48
    throw p0
.end method

.method public final setFadeManagerConfigurationForFocusLoss(Landroid/media/FadeManagerConfiguration;)I
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setFadeManagerConfigurationForFocusLoss_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 7
    move-result v0

    .line 8
    const-string v1, "Fade manager configuration not supported"

    .line 10
    invoke-static {v0, v1}, Lcom/android/internal/util/Preconditions;->checkState(ZLjava/lang/String;)V

    .line 13
    const-string v0, "Fade manager config for focus loss cannot be null"

    .line 15
    invoke-static {p1, v0}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;

    .line 18
    invoke-virtual {p1}, Landroid/media/FadeManagerConfiguration;->getAudioAttributesWithVolumeShaperConfigs()Ljava/util/List;

    .line 21
    move-result-object v0

    .line 22
    const/4 v1, 0x0

    .line 23
    move v2, v1

    .line 24
    :goto_0
    invoke-interface {v0}, Ljava/util/List;->size()I

    .line 27
    move-result v3

    .line 28
    if-ge v2, v3, :cond_0

    .line 30
    invoke-interface {v0, v2}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 33
    move-result-object v3

    .line 34
    check-cast v3, Landroid/media/AudioAttributes;

    .line 36
    invoke-virtual {p0, v3}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 39
    add-int/lit8 v2, v2, 0x1

    .line 41
    goto :goto_0

    .line 42
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 44
    iget-object p0, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mFadeOutManager:Lcom/android/server/audio/FadeOutManager;

    .line 46
    iget-object v0, p0, Lcom/android/server/audio/FadeOutManager;->mLock:Ljava/lang/Object;

    .line 48
    monitor-enter v0

    .line 49
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/FadeOutManager;->mFadeConfigurations:Lcom/android/server/audio/FadeConfigurations;

    .line 51
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 54
    invoke-static {}, Landroid/media/audiopolicy/Flags;->enableFadeManagerConfiguration()Z

    .line 57
    move-result v2

    .line 58
    if-nez v2, :cond_1

    .line 60
    const/4 v1, -0x1

    .line 61
    goto :goto_1

    .line 62
    :cond_1
    iget-object v2, p0, Lcom/android/server/audio/FadeConfigurations;->mLock:Ljava/lang/Object;

    .line 64
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 65
    :try_start_1
    iput-object p1, p0, Lcom/android/server/audio/FadeConfigurations;->mUpdatedFadeManagerConfig:Landroid/media/FadeManagerConfiguration;

    .line 67
    invoke-virtual {p0}, Lcom/android/server/audio/FadeConfigurations;->getActiveFadeMgrConfigLocked()Landroid/media/FadeManagerConfiguration;

    .line 70
    move-result-object p1

    .line 71
    iput-object p1, p0, Lcom/android/server/audio/FadeConfigurations;->mActiveFadeManagerConfig:Landroid/media/FadeManagerConfiguration;

    .line 73
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 74
    :goto_1
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 75
    return v1

    .line 76
    :catchall_0
    move-exception p0

    .line 77
    goto :goto_2

    .line 78
    :catchall_1
    move-exception p0

    .line 79
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 80
    :try_start_4
    throw p0

    .line 81
    :goto_2
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 82
    throw p0
.end method

.method public final setFineVolume(IIIILjava/lang/String;)V
    .locals 20

    .line 1
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 3
    new-instance v7, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 5
    const-string v1, ".setFineVolume"

    .line 7
    move-object/from16 v14, p5

    .line 9
    invoke-static {v14, v1}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 12
    move-result-object v6

    .line 13
    const/4 v2, 0x2

    .line 14
    move-object v1, v7

    .line 15
    move/from16 v3, p1

    .line 17
    move/from16 v4, p2

    .line 19
    move/from16 v5, p3

    .line 21
    invoke-direct/range {v1 .. v6}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 24
    invoke-virtual {v0, v7}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 27
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 30
    move-result v16

    .line 31
    const/16 v17, 0x1

    .line 33
    const/16 v18, 0x1

    .line 35
    const/4 v12, 0x0

    .line 36
    const/4 v15, 0x0

    .line 37
    move-object/from16 v8, p0

    .line 39
    move/from16 v9, p1

    .line 41
    move/from16 v10, p2

    .line 43
    move/from16 v11, p3

    .line 45
    move-object/from16 v13, p5

    .line 47
    move/from16 v19, p4

    .line 49
    invoke-virtual/range {v8 .. v19}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 52
    return-void
.end method

.method public final setFocusPropertiesForPolicy(ILandroid/media/audiopolicy/IAudioPolicyCallback;)I
    .locals 5

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    const-string/jumbo v1, "setFocusPropertiesForPolicy() duck behavior="

    .line 6
    const-string v2, " policy "

    .line 8
    invoke-static {p1, v1, v2}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11
    move-result-object v1

    .line 12
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 15
    move-result-object v2

    .line 16
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 19
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 22
    move-result-object v1

    .line 23
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 26
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 28
    monitor-enter v0

    .line 29
    :try_start_0
    const-string v1, "Cannot change audio policy focus properties"

    .line 31
    invoke-virtual {p0, p2, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 34
    move-result-object v1

    .line 35
    const/4 v2, -0x1

    .line 36
    if-nez v1, :cond_0

    .line 38
    monitor-exit v0

    .line 39
    return v2

    .line 40
    :catchall_0
    move-exception p0

    .line 41
    goto :goto_1

    .line 42
    :cond_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 44
    invoke-interface {p2}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 47
    move-result-object p2

    .line 48
    invoke-virtual {v3, p2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 51
    move-result p2

    .line 52
    if-nez p2, :cond_1

    .line 54
    const-string p0, "AS.AudioService"

    .line 56
    const-string p1, "Cannot change audio policy focus properties, unregistered policy"

    .line 58
    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 61
    monitor-exit v0

    .line 62
    return v2

    .line 63
    :cond_1
    const/4 p2, 0x1

    .line 64
    if-ne p1, p2, :cond_3

    .line 66
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 68
    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    .line 71
    move-result-object v3

    .line 72
    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    .line 75
    move-result-object v3

    .line 76
    :cond_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 79
    move-result v4

    .line 80
    if-eqz v4, :cond_3

    .line 82
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 85
    move-result-object v4

    .line 86
    check-cast v4, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 88
    iget v4, v4, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mFocusDuckBehavior:I

    .line 90
    if-ne v4, p2, :cond_2

    .line 92
    const-string p0, "AS.AudioService"

    .line 94
    const-string p1, "Cannot change audio policy ducking behavior, already handled"

    .line 96
    invoke-static {p0, p1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 99
    monitor-exit v0

    .line 100
    return v2

    .line 101
    :cond_3
    iput p1, v1, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->mFocusDuckBehavior:I

    .line 103
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 105
    const/4 v1, 0x0

    .line 106
    if-ne p1, p2, :cond_4

    .line 108
    move p1, p2

    .line 109
    goto :goto_0

    .line 110
    :cond_4
    move p1, v1

    .line 111
    :goto_0
    xor-int/2addr p1, p2

    .line 112
    iput-boolean p1, p0, Lcom/android/server/audio/MediaFocusControl;->mNotifyFocusOwnerOnDuck:Z

    .line 114
    monitor-exit v0

    .line 115
    return v1

    .line 116
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 117
    throw p0
.end method

.method public final setFocusRequestResultFromExtPolicy(Landroid/media/AudioFocusInfo;ILandroid/media/audiopolicy/IAudioPolicyCallback;)V
    .locals 2

    .line 1
    if-eqz p1, :cond_2

    .line 3
    if-eqz p3, :cond_1

    .line 5
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 7
    monitor-enter v0

    .line 8
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 10
    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 13
    move-result-object p3

    .line 14
    invoke-virtual {v1, p3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 17
    move-result p3

    .line 18
    if-eqz p3, :cond_0

    .line 20
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 22
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/MediaFocusControl;->setFocusRequestResultFromExtPolicy(Landroid/media/AudioFocusInfo;I)V

    .line 25
    monitor-exit v0

    .line 26
    return-void

    .line 27
    :catchall_0
    move-exception p0

    .line 28
    goto :goto_0

    .line 29
    :cond_0
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 31
    const-string p1, "Unregistered AudioPolicy for external focus"

    .line 33
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 36
    throw p0

    .line 37
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 38
    throw p0

    .line 39
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 41
    const-string p1, "Illegal null AudioPolicy callback"

    .line 43
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 46
    throw p0

    .line 47
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 49
    const-string p1, "Illegal null AudioFocusInfo"

    .line 51
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 54
    throw p0
.end method

.method public final setForceSpeakerOn(Z)V
    .locals 7

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-eq v0, v1, :cond_0

    .line 9
    return-void

    .line 10
    :cond_0
    iput p1, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 12
    sget-object p1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 14
    const/4 v0, 0x3

    .line 15
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 18
    move-result v0

    .line 19
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 22
    move-result-object v0

    .line 23
    invoke-interface {p1, v0}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 26
    move-result p1

    .line 27
    if-nez p1, :cond_1

    .line 29
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 31
    iget v4, p0, Lcom/android/server/audio/AudioService;->mForceSpeaker:I

    .line 33
    const/4 v5, 0x0

    .line 34
    const/4 v6, 0x0

    .line 35
    const/16 v1, 0x8

    .line 37
    const/4 v2, 0x2

    .line 38
    const/4 v3, 0x1

    .line 39
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 42
    :cond_1
    return-void
.end method

.method public final setHdmiSystemAudioSupported(Z)I
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 6
    const/4 v2, 0x0

    .line 7
    if-eqz v1, :cond_3

    .line 9
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 11
    if-nez v1, :cond_0

    .line 13
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 15
    if-nez v1, :cond_0

    .line 17
    const-string p0, "AS.AudioService"

    .line 19
    const-string p1, "Only Hdmi-Cec enabled TV or audio system device supportssystem audio mode."

    .line 21
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 24
    monitor-exit v0

    .line 25
    return v2

    .line 26
    :catchall_0
    move-exception p0

    .line 27
    goto :goto_0

    .line 28
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 30
    if-eq v1, p1, :cond_2

    .line 32
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 34
    if-eqz p1, :cond_1

    .line 36
    const/16 v2, 0xc

    .line 38
    :cond_1
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 40
    const-string/jumbo v1, "setHdmiSystemAudioSupported"

    .line 43
    const/4 v3, 0x5

    .line 44
    invoke-virtual {p1, v3, v2, v1}, Lcom/android/server/audio/AudioDeviceBroker;->setForceUse_Async(IILjava/lang/String;)V

    .line 47
    :cond_2
    const/4 p1, 0x3

    .line 48
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceMaskForStream(I)I

    .line 51
    move-result v2

    .line 52
    :cond_3
    monitor-exit v0

    .line 53
    return v2

    .line 54
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 55
    throw p0
.end method

.method public final setHeadTrackerEnabled(ZLandroid/media/AudioDeviceAttributes;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setHeadTrackerEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    move-object v0, p2

    .line 10
    check-cast v0, Landroid/media/AudioDeviceAttributes;

    .line 12
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/SpatializerHelper;->setHeadTrackerEnabled(ZLandroid/media/AudioDeviceAttributes;)V

    .line 15
    return-void
.end method

.method public final setHeadsetOnlyStream(I)V
    .locals 2

    .line 1
    and-int/lit8 v0, p1, 0x4

    .line 3
    if-eqz v0, :cond_0

    .line 5
    const-string/jumbo p1, "l_sound_assistant_ring_via_headset_enable=52"

    .line 8
    invoke-static {p1}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 11
    const/16 p1, 0x31

    .line 13
    iput p1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 15
    return-void

    .line 16
    :cond_0
    and-int/lit8 v0, p1, 0x1

    .line 18
    if-eqz v0, :cond_1

    .line 20
    iget v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 22
    or-int/lit8 v0, v0, 0x1

    .line 24
    iput v0, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 26
    const/4 v0, 0x4

    .line 27
    goto :goto_0

    .line 28
    :cond_1
    const/4 v0, 0x0

    .line 29
    :goto_0
    and-int/lit8 v1, p1, 0x20

    .line 31
    if-eqz v1, :cond_2

    .line 33
    or-int/lit8 v0, v0, 0x20

    .line 35
    iget v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 37
    or-int/lit8 v1, v1, 0x20

    .line 39
    iput v1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 41
    :cond_2
    and-int/lit8 p1, p1, 0x10

    .line 43
    if-eqz p1, :cond_3

    .line 45
    or-int/lit8 v0, v0, 0x10

    .line 47
    iget p1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 49
    or-int/lit8 p1, p1, 0x10

    .line 51
    iput p1, p0, Lcom/android/server/audio/AudioService;->mHeadsetOnlyStream:I

    .line 53
    :cond_3
    new-instance p0, Ljava/lang/StringBuilder;

    .line 55
    const-string/jumbo p1, "l_sound_assistant_ring_via_headset_enable="

    .line 58
    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 61
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 64
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 67
    move-result-object p0

    .line 68
    invoke-static {p0}, Lcom/samsung/android/media/SemAudioSystem;->setPolicyParameters(Ljava/lang/String;)I

    .line 71
    return-void
.end method

.method public final setHomeSoundEffectEnabled(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mHomeSoundEffectEnabled:Z

    .line 3
    return-void
.end method

.method public final setLeAudioSuspended(Z)V
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setLeAudioSuspended_enforcePermission()V

    .line 4
    const-string/jumbo v0, "setLeAudioSuspended("

    .line 7
    const-string v1, ") from u/pid:"

    .line 9
    invoke-static {v0, v1, p1}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 12
    move-result-object v0

    .line 13
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 16
    move-result v1

    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 20
    const-string v1, "/"

    .line 22
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 25
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 28
    move-result v1

    .line 29
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object v0

    .line 36
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 38
    const/4 v1, 0x0

    .line 39
    invoke-virtual {p0, v0, p1, v1}, Lcom/android/server/audio/AudioDeviceBroker;->setLeAudioSuspended(Ljava/lang/String;ZZ)V

    .line 42
    return-void
.end method

.method public final setLeAudioVolumeOnModeUpdate(IIIII)V
    .locals 6

    .line 1
    packed-switch p1, :pswitch_data_0

    .line 4
    return-void

    .line 5
    :pswitch_0
    invoke-static {p2}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    .line 8
    move-result v0

    .line 9
    const-string v1, " streamType="

    .line 11
    const-string v2, " maxIndex="

    .line 13
    const-string v3, ", index="

    .line 15
    const-string v4, ", mode="

    .line 17
    const-string v5, "AS.AudioService"

    .line 19
    if-nez v0, :cond_0

    .line 21
    const-string/jumbo p0, "setLeAudioVolumeOnModeUpdate ignoring invalid device="

    .line 24
    invoke-static {p2, p1, p0, v4, v3}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 27
    move-result-object p0

    .line 28
    invoke-static {p4, p5, v2, v1, p0}, Lcom/android/server/ServiceKeeper$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 31
    invoke-static {p0, p3, v5}, Lcom/android/server/audio/AudioService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 34
    return-void

    .line 35
    :cond_0
    const-string/jumbo v0, "setLeAudioVolumeOnModeUpdate postSetLeAudioVolumeIndex device="

    .line 38
    invoke-static {p2, p1, v0, v4, v3}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 41
    move-result-object p1

    .line 42
    invoke-static {p4, p5, v2, v1, p1}, Lcom/android/server/ServiceKeeper$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 45
    invoke-static {p1, p3, v5}, Lcom/android/server/accessibility/GestureWakeup$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 48
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 50
    invoke-virtual {p1, p4, p5, p3}, Lcom/android/server/audio/AudioDeviceBroker;->postSetLeAudioVolumeIndex(III)V

    .line 53
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 55
    const-string/jumbo p1, "setLeAudioVolumeOnModeUpdate"

    .line 58
    invoke-virtual {p0, p3, p2, p1}, Lcom/android/server/audio/AudioDeviceBroker;->postApplyVolumeOnDevice(IILjava/lang/String;)V

    .line 61
    return-void

    .line 62
    nop

    .line 63
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public final setMasterMute(ZILjava/lang/String;ILjava/lang/String;)V
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setMasterMute_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 7
    move-result v0

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 11
    move-result v1

    .line 12
    const/16 v2, 0x3e8

    .line 14
    if-ne v0, v2, :cond_0

    .line 16
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    .line 19
    move-result v0

    .line 20
    invoke-static {p4, v0}, Landroid/os/UserHandle;->getUid(II)I

    .line 23
    move-result v0

    .line 24
    :cond_0
    if-nez p1, :cond_1

    .line 26
    const/16 v2, 0x21

    .line 28
    invoke-virtual {p0, v2, v0, p3, p5}, Lcom/android/server/audio/AudioService;->checkNoteAppOp(IILjava/lang/String;Ljava/lang/String;)Z

    .line 31
    move-result p5

    .line 32
    if-nez p5, :cond_1

    .line 34
    goto :goto_0

    .line 35
    :cond_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 38
    move-result p5

    .line 39
    if-eq p4, p5, :cond_2

    .line 41
    iget-object p5, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 43
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 45
    invoke-virtual {p5, v2, v1, v0}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    .line 48
    move-result p5

    .line 49
    if-eqz p5, :cond_2

    .line 51
    goto :goto_0

    .line 52
    :cond_2
    sget-object p5, Lcom/android/server/audio/AudioService;->sMasterMuteLogger:Lcom/android/server/utils/EventLogger;

    .line 54
    new-instance v0, Lcom/samsung/android/server/audio/AudioEvents$MasterMuteEvent;

    .line 56
    invoke-direct {v0, p1, p2, p3}, Lcom/samsung/android/server/audio/AudioEvents$MasterMuteEvent;-><init>(IILjava/lang/String;)V

    .line 59
    invoke-virtual {p5, v0}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 62
    const-string/jumbo p3, "setMasterMute"

    .line 65
    invoke-virtual {p0, p2, p4, p3, p1}, Lcom/android/server/audio/AudioService;->setMasterMuteInternalNoCallerCheck(IILjava/lang/String;Z)V

    .line 68
    :goto_0
    return-void
.end method

.method public final setMasterMuteInternalNoCallerCheck(IILjava/lang/String;Z)V
    .locals 8

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    const-string v1, "Master mute %s, flags 0x%x, userId=%d from %s"

    .line 5
    invoke-static {p4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 8
    move-result-object v2

    .line 9
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 12
    move-result-object v3

    .line 13
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 16
    move-result-object v4

    .line 17
    filled-new-array {v2, v3, v4, p3}, [Ljava/lang/Object;

    .line 20
    move-result-object p3

    .line 21
    invoke-static {v1, p3}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 24
    move-result-object p3

    .line 25
    invoke-static {v0, p3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28
    iget p3, p0, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 30
    const/4 v0, 0x3

    .line 31
    if-ne p3, v0, :cond_0

    .line 33
    goto :goto_0

    .line 34
    :cond_0
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 36
    if-eqz v1, :cond_1

    .line 38
    const/4 p4, 0x0

    .line 39
    :cond_1
    :goto_0
    move v4, p4

    .line 40
    if-ne p3, v0, :cond_2

    .line 42
    if-eqz p2, :cond_3

    .line 44
    :cond_2
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 47
    move-result p3

    .line 48
    if-ne p3, p2, :cond_6

    .line 50
    :cond_3
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mMasterMute:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 52
    invoke-virtual {p2, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->getAndSet(Z)Z

    .line 55
    move-result p2

    .line 56
    if-eq v4, p2, :cond_6

    .line 58
    sget-object p2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 60
    new-instance p3, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 62
    invoke-direct {p3, v4}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(Z)V

    .line 65
    invoke-virtual {p2, p3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 68
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 70
    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 73
    invoke-static {v4}, Landroid/media/AudioSystem;->setMasterMute(Z)I

    .line 76
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 78
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 80
    monitor-enter p3

    .line 81
    :try_start_0
    iget-object p4, p0, Lcom/android/server/audio/AudioService;->mHdmiTvClient:Landroid/hardware/hdmi/HdmiTvClient;

    .line 83
    if-eqz p4, :cond_4

    .line 85
    iget-boolean p4, p0, Lcom/android/server/audio/AudioService;->mHdmiSystemAudioSupported:Z

    .line 87
    if-eqz p4, :cond_4

    .line 89
    iget-boolean p4, p0, Lcom/android/server/audio/AudioService;->mHdmiCecVolumeControlEnabled:Z

    .line 91
    if-eqz p4, :cond_4

    .line 93
    and-int/lit8 p1, p1, -0x2

    .line 95
    goto :goto_1

    .line 96
    :catchall_0
    move-exception p0

    .line 97
    goto :goto_3

    .line 98
    :cond_4
    :goto_1
    monitor-exit p3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 99
    iget-object p2, p2, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 101
    if-nez p2, :cond_5

    .line 103
    goto :goto_2

    .line 104
    :cond_5
    :try_start_1
    invoke-interface {p2, p1}, Landroid/media/IVolumeController;->masterMuteChanged(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 107
    goto :goto_2

    .line 108
    :catch_0
    move-exception p1

    .line 109
    const-string p2, "VolumeController"

    .line 111
    const-string p3, "Error calling masterMuteChanged"

    .line 113
    invoke-static {p2, p3, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 116
    :goto_2
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 118
    const/4 v6, 0x0

    .line 119
    const/4 v7, 0x0

    .line 120
    const/16 v2, 0x37

    .line 122
    const/4 v3, 0x2

    .line 123
    const/4 v5, 0x0

    .line 124
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 127
    goto :goto_4

    .line 128
    :goto_3
    :try_start_2
    monitor-exit p3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 129
    throw p0

    .line 130
    :cond_6
    :goto_4
    return-void
.end method

.method public final setMediaVolumeSteps([I)Z
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    const-string v1, "AS.AudioService"

    .line 11
    const/4 v2, 0x0

    .line 12
    if-eqz v0, :cond_0

    .line 14
    new-instance p0, Ljava/lang/StringBuilder;

    .line 16
    const-string p1, "MODIFY_PHONE_STATE Permission Denial from pid="

    .line 18
    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 24
    move-result p1

    .line 25
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 28
    const-string p1, ", uid="

    .line 30
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 33
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 36
    move-result p1

    .line 37
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 43
    move-result-object p0

    .line 44
    invoke-static {v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    return v2

    .line 48
    :cond_0
    const-string/jumbo v0, "sec_volume_steps"

    .line 51
    const/4 v3, 0x1

    .line 52
    if-nez p1, :cond_1

    .line 54
    const/4 p1, 0x0

    .line 55
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 57
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeMap:[Lcom/android/server/audio/AudioService$VolumeMap;

    .line 59
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 62
    move-result-wide v1

    .line 63
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 65
    invoke-static {p0, v0, p1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 68
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 71
    return v3

    .line 72
    :catchall_0
    move-exception p0

    .line 73
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 76
    throw p0

    .line 77
    :cond_1
    array-length v4, p1

    .line 78
    const/4 v5, 0x3

    .line 79
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    .line 82
    move-result v6

    .line 83
    mul-int/lit8 v6, v6, 0xa

    .line 85
    if-gt v4, v6, :cond_9

    .line 87
    array-length v4, p1

    .line 88
    if-ge v4, v3, :cond_2

    .line 90
    goto :goto_4

    .line 91
    :cond_2
    array-length v4, p1

    .line 92
    const/4 v6, -0x1

    .line 93
    move v7, v2

    .line 94
    :goto_0
    if-ge v7, v4, :cond_4

    .line 96
    aget v8, p1, v7

    .line 98
    if-gt v8, v6, :cond_3

    .line 100
    const-string p0, "Steps have to be ordered as increasing"

    .line 102
    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 105
    return v2

    .line 106
    :cond_3
    add-int/lit8 v7, v7, 0x1

    .line 108
    move v6, v8

    .line 109
    goto :goto_0

    .line 110
    :cond_4
    array-length v4, p1

    .line 111
    move v6, v2

    .line 112
    :goto_1
    if-ge v6, v4, :cond_7

    .line 114
    aget v7, p1, v6

    .line 116
    if-ltz v7, :cond_6

    .line 118
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->getStreamMaxVolume(I)I

    .line 121
    move-result v8

    .line 122
    mul-int/lit8 v8, v8, 0xa

    .line 124
    if-le v7, v8, :cond_5

    .line 126
    goto :goto_2

    .line 127
    :cond_5
    add-int/lit8 v6, v6, 0x1

    .line 129
    goto :goto_1

    .line 130
    :cond_6
    :goto_2
    const-string p0, "Invalid index"

    .line 132
    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 135
    return v2

    .line 136
    :cond_7
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeSteps:[I

    .line 138
    new-instance v1, Ljava/lang/StringBuilder;

    .line 140
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 143
    array-length v4, p1

    .line 144
    :goto_3
    if-ge v2, v4, :cond_8

    .line 146
    aget v5, p1, v2

    .line 148
    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 151
    const-string v5, ","

    .line 153
    invoke-virtual {v1, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 156
    add-int/lit8 v2, v2, 0x1

    .line 158
    goto :goto_3

    .line 159
    :cond_8
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 162
    move-result-wide v4

    .line 163
    :try_start_1
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 165
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 168
    move-result-object v1

    .line 169
    invoke-static {v2, v0, v1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 172
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 175
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->createVariableMediaVolumeMap([I)V

    .line 178
    return v3

    .line 179
    :catchall_1
    move-exception p0

    .line 180
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 183
    throw p0

    .line 184
    :cond_9
    :goto_4
    const-string p0, "Invalid parameter"

    .line 186
    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 189
    return v2
.end method

.method public final setMicInputControlMode(I)V
    .locals 5

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMicModeManager:Lcom/samsung/android/server/audio/MicModeManager;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    sget-object v0, Lcom/samsung/android/server/audio/MicModeType;->sMicModeParamTable:Landroid/util/ArrayMap;

    .line 8
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 11
    move-result-object v1

    .line 12
    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 15
    move-result v1

    .line 16
    sget-object v2, Lcom/samsung/android/server/audio/MicModeManager;->sMicModeLogger:Lcom/android/server/utils/EventLogger;

    .line 18
    const-string v3, "MicModeManager"

    .line 20
    if-nez v1, :cond_0

    .line 22
    new-instance p0, Ljava/lang/StringBuilder;

    .line 24
    const-string v0, "attempt to call setMicInputControlMode() invalid mode :"

    .line 26
    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 29
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object p0

    .line 36
    const/4 p1, 0x1

    .line 37
    invoke-virtual {v2, p1, p0, v3}, Lcom/android/server/utils/EventLogger;->enqueueAndLog(ILjava/lang/String;Ljava/lang/String;)V

    .line 40
    goto :goto_0

    .line 41
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    .line 43
    const-string/jumbo v4, "setMicInputControlMode: "

    .line 46
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 49
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 52
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 55
    move-result-object v1

    .line 56
    const/4 v4, 0x0

    .line 57
    invoke-virtual {v2, v4, v1, v3}, Lcom/android/server/utils/EventLogger;->enqueueAndLog(ILjava/lang/String;Ljava/lang/String;)V

    .line 60
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 63
    move-result-object p1

    .line 64
    invoke-virtual {v0, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 67
    move-result-object p1

    .line 68
    check-cast p1, Ljava/lang/String;

    .line 70
    new-instance v0, Ljava/lang/StringBuilder;

    .line 72
    const-string/jumbo v1, "setMicInputControlMode setparam : "

    .line 75
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 78
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 81
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 84
    move-result-object v0

    .line 85
    invoke-static {v3, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 88
    invoke-static {p1}, Landroid/media/AudioSystem;->setParameters(Ljava/lang/String;)I

    .line 91
    new-instance v0, Lcom/samsung/android/media/AudioParameter;

    .line 93
    invoke-direct {v0, p1}, Lcom/samsung/android/media/AudioParameter;-><init>(Ljava/lang/String;)V

    .line 96
    iget-object p0, p0, Lcom/samsung/android/server/audio/MicModeManager;->mMicModeType:Lcom/samsung/android/server/audio/MicModeType;

    .line 98
    sget-object p1, Lcom/samsung/android/server/audio/MicModeManager;->mCr:Landroid/content/ContentResolver;

    .line 100
    invoke-virtual {p0, p1, v0}, Lcom/samsung/android/server/audio/MicModeType;->setMicInputControlMode(Landroid/content/ContentResolver;Lcom/samsung/android/media/AudioParameter;)V

    .line 103
    :goto_0
    return-void
.end method

.method public final setMicMuteFromSwitchInput()V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-class v1, Landroid/hardware/input/InputManager;

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 8
    move-result-object v0

    .line 9
    check-cast v0, Landroid/hardware/input/InputManager;

    .line 11
    invoke-virtual {v0}, Landroid/hardware/input/InputManager;->isMicMuted()I

    .line 14
    move-result v1

    .line 15
    const/4 v2, -0x1

    .line 16
    if-eq v1, v2, :cond_1

    .line 18
    invoke-virtual {v0}, Landroid/hardware/input/InputManager;->isMicMuted()I

    .line 21
    move-result v0

    .line 22
    if-eqz v0, :cond_0

    .line 24
    const/4 v0, 0x1

    .line 25
    goto :goto_0

    .line 26
    :cond_0
    const/4 v0, 0x0

    .line 27
    :goto_0
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteFromSwitch(Z)V

    .line 30
    :cond_1
    return-void
.end method

.method public final setMicrophoneMute(ZLjava/lang/String;ILjava/lang/String;)V
    .locals 4

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-ne v0, v1, :cond_0

    .line 9
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    .line 12
    move-result v0

    .line 13
    invoke-static {p3, v0}, Landroid/os/UserHandle;->getUid(II)I

    .line 16
    move-result v0

    .line 17
    :cond_0
    new-instance v1, Landroid/media/MediaMetrics$Item;

    .line 19
    const-string v2, "audio.mic"

    .line 21
    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 24
    invoke-virtual {v1, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 27
    move-result-object v1

    .line 28
    sget-object v2, Landroid/media/MediaMetrics$Property;->CALLING_PACKAGE:Landroid/media/MediaMetrics$Key;

    .line 30
    invoke-virtual {v1, v2, p2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 33
    move-result-object v1

    .line 34
    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 36
    const-string/jumbo v3, "setMicrophoneMute"

    .line 39
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 42
    move-result-object v1

    .line 43
    sget-object v2, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 45
    if-eqz p1, :cond_1

    .line 47
    const-string/jumbo v3, "mute"

    .line 50
    goto :goto_0

    .line 51
    :cond_1
    const-string/jumbo v3, "unmute"

    .line 54
    :goto_0
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 57
    move-result-object v1

    .line 58
    if-nez p1, :cond_2

    .line 60
    const/16 v2, 0x2c

    .line 62
    invoke-virtual {p0, v2, v0, p2, p4}, Lcom/android/server/audio/AudioService;->checkNoteAppOp(IILjava/lang/String;Ljava/lang/String;)Z

    .line 65
    move-result p4

    .line 66
    if-nez p4, :cond_2

    .line 68
    sget-object p0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 70
    const-string/jumbo p1, "disallow unmuting"

    .line 73
    invoke-virtual {v1, p0, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 76
    move-result-object p0

    .line 77
    invoke-virtual {p0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 80
    return-void

    .line 81
    :cond_2
    const-string/jumbo p4, "setMicrophoneMute()"

    .line 84
    invoke-virtual {p0, p4}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 87
    move-result p4

    .line 88
    if-nez p4, :cond_3

    .line 90
    sget-object p0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 92
    const-string p1, "!checkAudioSettingsPermission"

    .line 94
    invoke-virtual {v1, p0, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 97
    move-result-object p0

    .line 98
    invoke-virtual {p0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 101
    return-void

    .line 102
    :cond_3
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 105
    move-result p4

    .line 106
    if-eq p3, p4, :cond_4

    .line 108
    iget-object p4, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 110
    const-string v0, "android.permission.INTERACT_ACROSS_USERS_FULL"

    .line 112
    invoke-virtual {p4, v0}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 115
    move-result p4

    .line 116
    if-eqz p4, :cond_4

    .line 118
    sget-object p0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 120
    const-string/jumbo p1, "permission"

    .line 123
    invoke-virtual {v1, p0, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 126
    move-result-object p0

    .line 127
    invoke-virtual {p0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 130
    return-void

    .line 131
    :cond_4
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    .line 133
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 136
    invoke-virtual {p0, p3}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 139
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 142
    move-result p0

    .line 143
    sget-object p3, Lcom/android/server/audio/AudioService;->sMicrophoneLogger:Lcom/android/server/utils/EventLogger;

    .line 145
    new-instance p4, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;

    .line 147
    invoke-direct {p4, p0, p2, p1}, Lcom/samsung/android/server/audio/AudioEvents$MicrophoneEvent;-><init>(ILjava/lang/String;Z)V

    .line 150
    invoke-virtual {p3, p4}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 153
    return-void
.end method

.method public final setMicrophoneMuteFromSwitch(Z)V
    .locals 3

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-eq v0, v1, :cond_0

    .line 9
    const-string p0, "AS.AudioService"

    .line 11
    const-string/jumbo p1, "setMicrophoneMuteFromSwitch() called from non system user!"

    .line 14
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17
    return-void

    .line 18
    :cond_0
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    .line 20
    new-instance v1, Landroid/media/MediaMetrics$Item;

    .line 22
    const-string v2, "audio.mic"

    .line 24
    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 27
    invoke-virtual {v1, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 30
    move-result-object v0

    .line 31
    sget-object v1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 33
    const-string/jumbo v2, "setMicrophoneMuteFromSwitch"

    .line 36
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 39
    move-result-object v0

    .line 40
    sget-object v1, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 42
    if-eqz p1, :cond_1

    .line 44
    const-string/jumbo p1, "mute"

    .line 47
    goto :goto_0

    .line 48
    :cond_1
    const-string/jumbo p1, "unmute"

    .line 51
    :goto_0
    invoke-virtual {v0, v1, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 54
    move-result-object p1

    .line 55
    invoke-virtual {p1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 58
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    .line 61
    move-result p1

    .line 62
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->setMicrophoneMuteNoCallerCheck(I)V

    .line 65
    return-void
.end method

.method public final setMicrophoneMuteNoCallerCheck(I)V
    .locals 13

    .line 1
    const-string v0, "Error changing mic mute state to "

    .line 3
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSwitch:Z

    .line 5
    if-nez v1, :cond_1

    .line 7
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromRestrictions:Z

    .line 9
    if-nez v1, :cond_1

    .line 11
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromApi:Z

    .line 13
    if-nez v1, :cond_1

    .line 15
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromPrivacyToggle:Z

    .line 17
    if-eqz v1, :cond_0

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    const/4 v1, 0x0

    .line 21
    goto :goto_1

    .line 22
    :cond_1
    :goto_0
    const/4 v1, 0x1

    .line 23
    :goto_1
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 26
    move-result-object v2

    .line 27
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 30
    move-result-object v3

    .line 31
    filled-new-array {v2, v3}, [Ljava/lang/Object;

    .line 34
    move-result-object v2

    .line 35
    const-string v3, "Mic mute %b, user=%d"

    .line 37
    invoke-static {v3, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 40
    move-result-object v2

    .line 41
    const-string v3, "AS.AudioService"

    .line 43
    invoke-static {v3, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 49
    move-result v2

    .line 50
    if-eq v2, p1, :cond_2

    .line 52
    if-nez p1, :cond_7

    .line 54
    :cond_2
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 56
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 59
    invoke-static {}, Landroid/media/AudioSystem;->isMicrophoneMuted()Z

    .line 62
    move-result p1

    .line 63
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 66
    move-result v2

    .line 67
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 70
    move-result-wide v4

    .line 71
    :try_start_0
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 73
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 76
    invoke-static {v1}, Landroid/media/AudioSystem;->muteMicrophone(Z)I

    .line 79
    move-result v6

    .line 80
    iget-object v7, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 82
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 85
    invoke-static {}, Landroid/media/AudioSystem;->isMicrophoneMuted()Z

    .line 88
    move-result v7

    .line 89
    iput-boolean v7, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 91
    if-eqz v6, :cond_3

    .line 93
    new-instance v7, Ljava/lang/StringBuilder;

    .line 95
    invoke-direct {v7, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 98
    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 101
    const-string v0, " current:"

    .line 103
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 108
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 111
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 114
    move-result-object v0

    .line 115
    invoke-static {v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 118
    goto :goto_2

    .line 119
    :catchall_0
    move-exception p0

    .line 120
    goto :goto_5

    .line 121
    :cond_3
    :goto_2
    new-instance v0, Landroid/media/MediaMetrics$Item;

    .line 123
    const-string v3, "audio.mic"

    .line 125
    invoke-direct {v0, v3}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 128
    invoke-virtual {v0, v2}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 131
    move-result-object v0

    .line 132
    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 134
    const-string/jumbo v3, "setMicrophoneMuteNoCallerCheck"

    .line 137
    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 140
    move-result-object v0

    .line 141
    sget-object v2, Landroid/media/MediaMetrics$Property;->MUTE:Landroid/media/MediaMetrics$Key;

    .line 143
    iget-boolean v3, p0, Lcom/android/server/audio/AudioService;->mMicMuteFromSystemCached:Z

    .line 145
    if-eqz v3, :cond_4

    .line 147
    const-string/jumbo v3, "on"

    .line 150
    goto :goto_3

    .line 151
    :cond_4
    const-string/jumbo v3, "off"

    .line 154
    :goto_3
    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 157
    move-result-object v0

    .line 158
    sget-object v2, Landroid/media/MediaMetrics$Property;->REQUEST:Landroid/media/MediaMetrics$Key;

    .line 160
    if-eqz v1, :cond_5

    .line 162
    const-string/jumbo v3, "mute"

    .line 165
    goto :goto_4

    .line 166
    :cond_5
    const-string/jumbo v3, "unmute"

    .line 169
    :goto_4
    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 172
    move-result-object v0

    .line 173
    sget-object v2, Landroid/media/MediaMetrics$Property;->STATUS:Landroid/media/MediaMetrics$Key;

    .line 175
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 178
    move-result-object v3

    .line 179
    invoke-virtual {v0, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 182
    move-result-object v0

    .line 183
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 186
    if-eq v1, p1, :cond_6

    .line 188
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 190
    const/4 v9, 0x0

    .line 191
    const/4 v10, 0x0

    .line 192
    const/4 v11, 0x0

    .line 193
    const/4 v12, 0x0

    .line 194
    const/16 v7, 0x1e

    .line 196
    const/4 v8, 0x1

    .line 197
    invoke-static/range {v6 .. v12}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 200
    :cond_6
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 203
    :cond_7
    return-void

    .line 204
    :goto_5
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 207
    throw p0
.end method

.method public final setMode(ILandroid/os/IBinder;Ljava/lang/String;)V
    .locals 23

    .line 1
    move-object/from16 v0, p0

    .line 3
    move/from16 v1, p1

    .line 5
    move-object/from16 v9, p2

    .line 7
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 10
    move-result v10

    .line 11
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v5

    .line 15
    const-string v2, "AS.AudioService"

    .line 17
    const-string/jumbo v3, "setMode(mode="

    .line 20
    const-string v4, ", pid="

    .line 22
    const-string v6, ", uid="

    .line 24
    invoke-static {v1, v10, v3, v4, v6}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 27
    move-result-object v3

    .line 28
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 31
    const-string v4, ", caller="

    .line 33
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 36
    move-object/from16 v11, p3

    .line 38
    invoke-virtual {v3, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 41
    const-string v4, ")"

    .line 43
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 49
    move-result-object v3

    .line 50
    invoke-static {v2, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 53
    const-string/jumbo v2, "setMode()"

    .line 56
    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 59
    move-result v2

    .line 60
    if-nez v2, :cond_0

    .line 62
    return-void

    .line 63
    :cond_0
    if-nez v9, :cond_1

    .line 65
    const-string v0, "AS.AudioService"

    .line 67
    const-string/jumbo v1, "setMode() called with null binder"

    .line 70
    invoke-static {v0, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 73
    return-void

    .line 74
    :cond_1
    const/4 v2, -0x1

    .line 75
    if-lt v1, v2, :cond_e

    .line 77
    const/4 v3, 0x7

    .line 78
    if-lt v1, v3, :cond_2

    .line 80
    goto/16 :goto_5

    .line 82
    :cond_2
    if-ne v1, v2, :cond_3

    .line 84
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getMode()I

    .line 87
    move-result v1

    .line 88
    :cond_3
    move v12, v1

    .line 89
    const/4 v1, 0x4

    .line 90
    if-ne v12, v1, :cond_4

    .line 92
    iget-boolean v1, v0, Lcom/android/server/audio/AudioService;->mIsCallScreeningModeSupported:Z

    .line 94
    if-nez v1, :cond_4

    .line 96
    const-string v0, "AS.AudioService"

    .line 98
    const-string/jumbo v1, "setMode(MODE_CALL_SCREENING) not permitted when call screening is not supported"

    .line 101
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 104
    return-void

    .line 105
    :cond_4
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 107
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    .line 109
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 112
    move-result v1

    .line 113
    const/4 v14, 0x0

    .line 114
    if-nez v1, :cond_5

    .line 116
    const/4 v6, 0x1

    .line 117
    goto :goto_0

    .line 118
    :cond_5
    move v6, v14

    .line 119
    :goto_0
    const/4 v1, 0x2

    .line 120
    if-eq v12, v1, :cond_6

    .line 122
    const/4 v1, 0x5

    .line 123
    if-eq v12, v1, :cond_6

    .line 125
    const/4 v1, 0x6

    .line 126
    if-ne v12, v1, :cond_7

    .line 128
    :cond_6
    if-nez v6, :cond_7

    .line 130
    const-string v0, "AS.AudioService"

    .line 132
    new-instance v1, Ljava/lang/StringBuilder;

    .line 134
    const-string v2, "MODIFY_PHONE_STATE Permission Denial: setMode("

    .line 136
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 139
    invoke-static {v12}, Landroid/media/AudioSystem;->modeToString(I)Ljava/lang/String;

    .line 142
    move-result-object v2

    .line 143
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 146
    const-string v2, ") from pid="

    .line 148
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 151
    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 154
    const-string v2, ", uid="

    .line 156
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 159
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 162
    move-result v2

    .line 163
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 166
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 169
    move-result-object v1

    .line 170
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 173
    return-void

    .line 174
    :cond_7
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 176
    iget-object v15, v1, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 178
    monitor-enter v15

    .line 179
    :try_start_0
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 181
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 184
    move-result-object v1

    .line 185
    :cond_8
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    .line 188
    move-result v2

    .line 189
    if-eqz v2, :cond_9

    .line 191
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 194
    move-result-object v2

    .line 195
    check-cast v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 197
    iget v3, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPid:I

    .line 199
    if-ne v3, v10, :cond_8

    .line 201
    goto :goto_1

    .line 202
    :catchall_0
    move-exception v0

    .line 203
    goto/16 :goto_4

    .line 205
    :cond_9
    const/4 v2, 0x0

    .line 206
    :goto_1
    const/4 v8, 0x3

    .line 207
    if-nez v12, :cond_b

    .line 209
    if-eqz v2, :cond_d

    .line 211
    iget-boolean v1, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mIsPrivileged:Z

    .line 213
    if-nez v1, :cond_a

    .line 215
    iget v1, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 217
    if-ne v1, v8, :cond_a

    .line 219
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 221
    const/16 v3, 0x1f

    .line 223
    invoke-virtual {v1, v3, v2}, Landroid/os/Handler;->removeEqualMessages(ILjava/lang/Object;)V

    .line 226
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 228
    invoke-static {v10}, Landroid/os/Process;->getUidForPid(I)I

    .line 231
    move-result v19

    .line 232
    const/16 v18, 0x0

    .line 234
    const/16 v20, 0x0

    .line 236
    const/16 v21, 0x0

    .line 238
    const/16 v22, 0x1770

    .line 240
    const/16 v17, 0xacc

    .line 242
    move-object/from16 v16, v1

    .line 244
    invoke-virtual/range {v16 .. v22}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 247
    :cond_a
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 249
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 252
    const-string v1, "AS.AudioService"

    .line 254
    new-instance v3, Ljava/lang/StringBuilder;

    .line 256
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 259
    const-string/jumbo v4, "setMode("

    .line 262
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 265
    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 268
    const-string v4, ") removing hldr for pid: "

    .line 270
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 273
    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 276
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 279
    move-result-object v3

    .line 280
    invoke-static {v1, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 283
    :try_start_1
    iget-object v1, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mCb:Landroid/os/IBinder;

    .line 285
    invoke-interface {v1, v2, v14}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_1
    .catch Ljava/util/NoSuchElementException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 288
    goto/16 :goto_3

    .line 290
    :catch_0
    :try_start_2
    const-string v1, "AS.AudioService"

    .line 292
    const-string/jumbo v2, "setMode link does not exist ..."

    .line 295
    invoke-static {v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 298
    goto/16 :goto_3

    .line 300
    :cond_b
    if-eqz v2, :cond_c

    .line 302
    iput v12, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mMode:I

    .line 304
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    .line 307
    move-result-wide v3

    .line 308
    iput-wide v3, v2, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUpdateTime:J

    .line 310
    const-string v1, "AS.AudioService"

    .line 312
    new-instance v3, Ljava/lang/StringBuilder;

    .line 314
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 317
    const-string/jumbo v4, "setMode("

    .line 320
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 323
    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 326
    const-string v4, ") updating hldr for pid: "

    .line 328
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 331
    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 334
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 337
    move-result-object v3

    .line 338
    invoke-static {v1, v3}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 341
    move v1, v8

    .line 342
    move-object v8, v2

    .line 343
    goto :goto_2

    .line 344
    :cond_c
    new-instance v7, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 346
    move-object v1, v7

    .line 347
    move-object/from16 v2, p0

    .line 349
    move-object/from16 v3, p2

    .line 351
    move v4, v10

    .line 352
    move-object v13, v7

    .line 353
    move-object/from16 v7, p3

    .line 355
    move v8, v12

    .line 356
    invoke-direct/range {v1 .. v8}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;-><init>(Lcom/android/server/audio/AudioService;Landroid/os/IBinder;IIZLjava/lang/String;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 359
    :try_start_3
    invoke-interface {v9, v13, v14}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 362
    :try_start_4
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 364
    invoke-virtual {v1, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 367
    const-string v1, "AS.AudioService"

    .line 369
    new-instance v2, Ljava/lang/StringBuilder;

    .line 371
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 374
    const-string/jumbo v3, "setMode("

    .line 377
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 380
    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 383
    const-string v3, ") adding handler for pid="

    .line 385
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 388
    invoke-virtual {v2, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 391
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 394
    move-result-object v2

    .line 395
    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 398
    move-object v8, v13

    .line 399
    const/4 v1, 0x3

    .line 400
    :goto_2
    if-ne v12, v1, :cond_d

    .line 402
    iget-boolean v1, v8, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mIsPrivileged:Z

    .line 404
    if-nez v1, :cond_d

    .line 406
    const/4 v1, 0x1

    .line 407
    iput-boolean v1, v8, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPlaybackActive:Z

    .line 409
    iput-boolean v1, v8, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mRecordingActive:Z

    .line 411
    iget-object v3, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 413
    const/4 v7, 0x0

    .line 414
    const/16 v9, 0x1770

    .line 416
    const/16 v4, 0x1f

    .line 418
    const/4 v5, 0x2

    .line 419
    const/4 v6, 0x0

    .line 420
    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 423
    :cond_d
    :goto_3
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 425
    invoke-virtual {v1, v12, v10, v14}, Lcom/android/server/audio/AudioServiceExt;->updateCallGuardInfo(IIZ)V

    .line 428
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 430
    const/4 v2, 0x0

    .line 431
    const/4 v6, 0x0

    .line 432
    const/16 v1, 0x24

    .line 434
    move v3, v12

    .line 435
    move v4, v10

    .line 436
    move-object/from16 v5, p3

    .line 438
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 441
    monitor-exit v15

    .line 442
    return-void

    .line 443
    :catch_1
    const-string v0, "AS.AudioService"

    .line 445
    new-instance v1, Ljava/lang/StringBuilder;

    .line 447
    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    .line 450
    const-string/jumbo v2, "setMode() could not link to "

    .line 453
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 456
    invoke-virtual {v1, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 459
    const-string v2, " binder death"

    .line 461
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 464
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 467
    move-result-object v1

    .line 468
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 471
    monitor-exit v15

    .line 472
    return-void

    .line 473
    :goto_4
    monitor-exit v15
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 474
    throw v0

    .line 475
    :cond_e
    :goto_5
    const-string v0, "AS.AudioService"

    .line 477
    const-string/jumbo v2, "setMode() invalid mode: "

    .line 480
    invoke-static {v1, v2, v0}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 483
    return-void
.end method

.method public final setMultiAudioFocusEnabled(Z)V
    .locals 12

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setMultiAudioFocusEnabled_enforcePermission()V

    .line 4
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 6
    if-eqz v0, :cond_7

    .line 8
    iget-boolean v1, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusEnabled:Z

    .line 10
    if-eq v1, p1, :cond_7

    .line 12
    new-instance v1, Ljava/lang/StringBuilder;

    .line 14
    const-string/jumbo v2, "updateMultiAudioFocus( "

    .line 17
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 20
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 23
    const-string v2, " )"

    .line 25
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 28
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 31
    move-result-object v1

    .line 32
    const-string v2, "MediaFocusControl"

    .line 34
    invoke-static {v2, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 37
    iput-boolean p1, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusEnabled:Z

    .line 39
    const/4 v1, 0x0

    .line 40
    const/4 v3, -0x1

    .line 41
    const/4 v4, 0x0

    .line 42
    if-eqz p1, :cond_1

    .line 44
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 46
    invoke-virtual {v5}, Ljava/util/Stack;->isEmpty()Z

    .line 49
    move-result v5

    .line 50
    const-string v6, " ] )"

    .line 52
    if-nez v5, :cond_0

    .line 54
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 56
    invoke-virtual {v5}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 59
    move-result-object v5

    .line 60
    check-cast v5, Lcom/android/server/audio/FocusRequester;

    .line 62
    iget-object v7, v5, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 64
    invoke-static {v7}, Lcom/samsung/android/server/audio/utils/AudioUtils;->checkRunningBackground(Ljava/lang/String;)Z

    .line 67
    move-result v7

    .line 68
    if-eqz v7, :cond_0

    .line 70
    new-instance v7, Ljava/lang/StringBuilder;

    .line 72
    const-string/jumbo v8, "updateMultiAudioFocus( send AUDIOFOCUS_LOSS [ "

    .line 75
    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 78
    iget-object v8, v5, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 80
    invoke-static {v7, v8, v6, v2}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 83
    invoke-virtual {v5, v3, v1, v4}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 86
    :cond_0
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mIgnoredFocus:Lcom/android/server/audio/FocusRequester;

    .line 88
    if-eqz v5, :cond_6

    .line 90
    iget-object v5, v5, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 92
    invoke-static {v5}, Lcom/samsung/android/server/audio/utils/AudioUtils;->checkRunningBackground(Ljava/lang/String;)Z

    .line 95
    move-result v5

    .line 96
    if-eqz v5, :cond_6

    .line 98
    new-instance v5, Ljava/lang/StringBuilder;

    .line 100
    const-string/jumbo v7, "updateMultiAudioFocus( send AUDIOFOCUS_LOSS mIgnoredFocus [ "

    .line 103
    invoke-direct {v5, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 106
    iget-object v7, v0, Lcom/android/server/audio/MediaFocusControl;->mIgnoredFocus:Lcom/android/server/audio/FocusRequester;

    .line 108
    iget-object v7, v7, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 110
    invoke-static {v5, v7, v6, v2}, Lcom/android/server/RCPManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 113
    iget-object v0, v0, Lcom/android/server/audio/MediaFocusControl;->mIgnoredFocus:Lcom/android/server/audio/FocusRequester;

    .line 115
    invoke-virtual {v0, v3, v1, v4}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 118
    goto :goto_3

    .line 119
    :cond_1
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 121
    invoke-virtual {v5}, Ljava/util/Stack;->isEmpty()Z

    .line 124
    move-result v5

    .line 125
    if-nez v5, :cond_2

    .line 127
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 129
    invoke-virtual {v5}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 132
    move-result-object v5

    .line 133
    check-cast v5, Lcom/android/server/audio/FocusRequester;

    .line 135
    new-instance v6, Ljava/lang/StringBuilder;

    .line 137
    const-string/jumbo v7, "updateMultiAudioFocus[mFocusStack] : send Loss :: Tasks ="

    .line 140
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 143
    iget-object v7, v5, Lcom/android/server/audio/FocusRequester;->mPackageName:Ljava/lang/String;

    .line 145
    invoke-static {v6, v7, v2}, Lcom/android/server/VpnManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 148
    invoke-virtual {v5, v3, v1, v4}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 151
    :cond_2
    iget-object v2, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 153
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    .line 156
    move-result v2

    .line 157
    if-nez v2, :cond_4

    .line 159
    iget-object v2, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 161
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 164
    move-result-object v2

    .line 165
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 168
    move-result v5

    .line 169
    if-eqz v5, :cond_3

    .line 171
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 174
    move-result-object v5

    .line 175
    check-cast v5, Lcom/android/server/audio/FocusRequester;

    .line 177
    invoke-virtual {v5, v3, v1, v4}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 180
    goto :goto_0

    .line 181
    :cond_3
    iget-object v2, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiAudioFocusList:Ljava/util/ArrayList;

    .line 183
    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 186
    :cond_4
    move v2, v4

    .line 187
    :goto_1
    iget-object v5, v0, Lcom/android/server/audio/MediaFocusControl;->mMultiFocusStack:Lcom/android/server/audio/MultiFocusStack;

    .line 189
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    .line 192
    move-result v6

    .line 193
    if-ge v2, v6, :cond_6

    .line 195
    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 198
    move-result-object v5

    .line 199
    check-cast v5, Ljava/util/Stack;

    .line 201
    invoke-virtual {v5}, Ljava/util/Stack;->iterator()Ljava/util/Iterator;

    .line 204
    move-result-object v5

    .line 205
    :goto_2
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    .line 208
    move-result v6

    .line 209
    if-eqz v6, :cond_5

    .line 211
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 214
    move-result-object v6

    .line 215
    check-cast v6, Lcom/android/server/audio/FocusRequester;

    .line 217
    invoke-virtual {v6, v3, v1, v4}, Lcom/android/server/audio/FocusRequester;->handleFocusLoss(ILcom/android/server/audio/FocusRequester;Z)V

    .line 220
    invoke-virtual {v6}, Lcom/android/server/audio/FocusRequester;->release()V

    .line 223
    invoke-interface {v5}, Ljava/util/Iterator;->remove()V

    .line 226
    goto :goto_2

    .line 227
    :cond_5
    add-int/lit8 v2, v2, 0x1

    .line 229
    goto :goto_1

    .line 230
    :cond_6
    :goto_3
    if-nez p1, :cond_7

    .line 232
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 234
    const/4 v8, 0x0

    .line 235
    const/4 v9, 0x0

    .line 236
    const/16 v6, 0xc

    .line 238
    const/4 v7, 0x0

    .line 239
    const/4 v10, 0x0

    .line 240
    const/4 v11, 0x0

    .line 241
    invoke-virtual/range {v5 .. v11}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    .line 244
    :cond_7
    return-void
.end method

.method public final setMultiSoundOn(ZZ)V
    .locals 8

    .line 1
    const-string/jumbo v0, "setMultiSoundOn"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 13
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 16
    move-result-object v6

    .line 17
    const/4 v7, 0x0

    .line 18
    const/16 v2, 0xacb

    .line 20
    const/4 v3, 0x2

    .line 21
    const/4 v5, 0x0

    .line 22
    move v4, p2

    .line 23
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 26
    return-void
.end method

.method public setMusicMute(Z)V
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 3
    const/4 v0, 0x3

    .line 4
    aget-object p0, p0, v0

    .line 6
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 9
    const-class v0, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 11
    monitor-enter v0

    .line 12
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMutedInternally:Z

    .line 14
    if-eq p1, v1, :cond_0

    .line 16
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIsMutedInternally:Z

    .line 18
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->applyAllVolumes()V

    .line 21
    const/4 v1, 0x1

    .line 22
    goto :goto_0

    .line 23
    :catchall_0
    move-exception p0

    .line 24
    goto :goto_1

    .line 25
    :cond_0
    const/4 v1, 0x0

    .line 26
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27
    if-eqz v1, :cond_1

    .line 29
    sget-object v0, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 31
    new-instance v1, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 33
    iget p0, p0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mStreamType:I

    .line 35
    invoke-direct {v1, p0, p1}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IZ)V

    .line 38
    invoke-virtual {v0, v1}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 41
    :cond_1
    return-void

    .line 42
    :goto_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 43
    throw p0
.end method

.method public final setMuteInterval(ILjava/lang/String;)V
    .locals 8

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 3
    const-string/jumbo v1, "setMuteInterval unmute timer="

    .line 6
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 9
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 12
    const-string v1, " from="

    .line 14
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    move-result-object p2

    .line 24
    const-string v0, "AS.AudioService"

    .line 26
    invoke-static {v0, p2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 31
    const-string v1, "android.permission.WRITE_SECURE_SETTINGS"

    .line 33
    invoke-virtual {p2, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 36
    move-result p2

    .line 37
    if-eqz p2, :cond_0

    .line 39
    new-instance p0, Ljava/lang/StringBuilder;

    .line 41
    const-string p1, "WRITE_SECURE_SETTINGS Permission Denial from pid="

    .line 43
    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 46
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 49
    move-result p1

    .line 50
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 53
    const-string p1, ", uid="

    .line 55
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 58
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 61
    move-result p1

    .line 62
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 65
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 68
    move-result-object p0

    .line 69
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 72
    return-void

    .line 73
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 75
    const/4 p0, 0x0

    .line 76
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 79
    move-result-object v6

    .line 80
    const/4 v7, 0x0

    .line 81
    const/16 v2, 0xace

    .line 83
    const/4 v3, 0x0

    .line 84
    const/4 v5, 0x0

    .line 85
    move v4, p1

    .line 86
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 89
    return-void
.end method

.method public final setNavigationRepeatSoundEffectsEnabled(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mNavigationRepeatSoundEffectsEnabled:Z

    .line 3
    return-void
.end method

.method public final setNotifAliasRingForTest(Z)V
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setNotifAliasRingForTest_enforcePermission()V

    .line 4
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mNotifAliasRing:Z

    .line 6
    const/4 v1, 0x1

    .line 7
    if-eq v0, p1, :cond_0

    .line 9
    move v0, v1

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    const/4 v0, 0x0

    .line 12
    :goto_0
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mNotifAliasRing:Z

    .line 14
    if-eqz v0, :cond_1

    .line 16
    const-string p1, "AudioServiceTest"

    .line 18
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(Ljava/lang/String;Z)V

    .line 21
    :cond_1
    return-void
.end method

.method public final setOutputRs2UpperBound(F)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setOutputRs2UpperBound_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 6
    iget-object v0, p0, Lcom/android/server/audio/SoundDoseHelper;->mEnableCsd:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 8
    invoke-virtual {v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 11
    move-result v0

    .line 12
    if-nez v0, :cond_0

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/SoundDoseHelper;->mSoundDose:Ljava/util/concurrent/atomic/AtomicReference;

    .line 17
    invoke-virtual {p0}, Ljava/util/concurrent/atomic/AtomicReference;->get()Ljava/lang/Object;

    .line 20
    move-result-object p0

    .line 21
    check-cast p0, Landroid/media/ISoundDose;

    .line 23
    const-string v0, "AS.SoundDoseHelper"

    .line 25
    if-nez p0, :cond_1

    .line 27
    const-string p0, "Sound dose interface not initialized"

    .line 29
    invoke-static {v0, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    goto :goto_0

    .line 33
    :cond_1
    :try_start_0
    invoke-interface {p0, p1}, Landroid/media/ISoundDose;->setOutputRs2UpperBound(F)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 36
    goto :goto_0

    .line 37
    :catch_0
    move-exception p0

    .line 38
    const-string p1, "Exception while setting the RS2 exposure value"

    .line 40
    invoke-static {v0, p1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 43
    :goto_0
    return-void
.end method

.method public final setPreferredDevicesForCapturePreset(ILjava/util/List;)I
    .locals 7

    .line 1
    const/4 v0, -0x1

    .line 2
    if-nez p2, :cond_0

    .line 4
    return v0

    .line 5
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 11
    move-result v1

    .line 12
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 15
    move-result-object v1

    .line 16
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 19
    move-result v2

    .line 20
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 23
    move-result-object v2

    .line 24
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 27
    move-result-object v3

    .line 28
    invoke-interface {p2}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 31
    move-result-object v4

    .line 32
    new-instance v5, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda2;

    .line 34
    const/4 v6, 0x0

    .line 35
    invoke-direct {v5, v6}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda2;-><init>(I)V

    .line 38
    invoke-interface {v4, v5}, Ljava/util/stream/Stream;->map(Ljava/util/function/Function;)Ljava/util/stream/Stream;

    .line 41
    move-result-object v4

    .line 42
    const-string v5, ","

    .line 44
    invoke-static {v5}, Ljava/util/stream/Collectors;->joining(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;

    .line 47
    move-result-object v5

    .line 48
    invoke-interface {v4, v5}, Ljava/util/stream/Stream;->collect(Ljava/util/stream/Collector;)Ljava/lang/Object;

    .line 51
    move-result-object v4

    .line 52
    filled-new-array {v1, v2, v3, v4}, [Ljava/lang/Object;

    .line 55
    move-result-object v1

    .line 56
    const-string/jumbo v2, "setPreferredDevicesForCapturePreset u/pid:%d/%d source:%d dev:%s"

    .line 59
    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 62
    move-result-object v1

    .line 63
    sget-object v2, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 65
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 67
    invoke-direct {v3, v1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 70
    const/4 v4, 0x0

    .line 71
    const-string v5, "AS.AudioService"

    .line 73
    invoke-virtual {v3, v4, v5}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 76
    invoke-virtual {v2, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 79
    invoke-interface {p2}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 82
    move-result-object v2

    .line 83
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;

    .line 85
    const/4 v4, 0x0

    .line 86
    invoke-direct {v3, v4}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;-><init>(I)V

    .line 89
    invoke-interface {v2, v3}, Ljava/util/stream/Stream;->anyMatch(Ljava/util/function/Predicate;)Z

    .line 92
    move-result v2

    .line 93
    if-eqz v2, :cond_1

    .line 95
    const-string p0, "Unsupported output routing in "

    .line 97
    invoke-virtual {p0, v1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 100
    move-result-object p0

    .line 101
    invoke-static {v5, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 104
    return v0

    .line 105
    :cond_1
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddresses(Ljava/util/List;)Ljava/util/List;

    .line 108
    move-result-object p2

    .line 109
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 111
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 113
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 116
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 119
    move-result-object v0

    .line 120
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioDeviceInventory;->mAppliedPresetRoles:Landroid/util/ArrayMap;

    .line 122
    new-instance v3, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;

    .line 124
    const/16 v4, 0x8

    .line 126
    invoke-direct {v3, p0, v4}, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/audio/AudioDeviceInventory;I)V

    .line 129
    new-instance v4, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;

    .line 131
    const/16 v6, 0x9

    .line 133
    invoke-direct {v4, p0, v6}, Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/audio/AudioDeviceInventory;I)V

    .line 136
    invoke-static {v2, v3, v4, p1, p2}, Lcom/android/server/audio/AudioDeviceInventory;->setDevicesRole(Landroid/util/ArrayMap;Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;Lcom/android/server/audio/AudioDeviceInventory$$ExternalSyntheticLambda1;ILjava/util/List;)I

    .line 139
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 140
    if-eqz v0, :cond_2

    .line 142
    invoke-interface {v0}, Landroid/media/permission/SafeCloseable;->close()V

    .line 145
    :cond_2
    if-nez v2, :cond_3

    .line 147
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 149
    const/16 v0, 0x25

    .line 151
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->sendILMsgNoDelay(IILjava/lang/Object;)V

    .line 154
    :cond_3
    if-eqz v2, :cond_4

    .line 156
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 159
    move-result-object p0

    .line 160
    filled-new-array {p0, v1}, [Ljava/lang/Object;

    .line 163
    move-result-object p0

    .line 164
    const-string p1, "Error %d in %s)"

    .line 166
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 169
    move-result-object p0

    .line 170
    invoke-static {v5, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 173
    :cond_4
    return v2

    .line 174
    :catchall_0
    move-exception p0

    .line 175
    if-eqz v0, :cond_5

    .line 177
    :try_start_1
    invoke-interface {v0}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 180
    goto :goto_0

    .line 181
    :catchall_1
    move-exception p1

    .line 182
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 185
    :cond_5
    :goto_0
    throw p0
.end method

.method public final setPreferredDevicesForStrategy(ILjava/util/List;)I
    .locals 7

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setPreferredDevicesForStrategy_enforcePermission()V

    .line 4
    const/4 v0, -0x1

    .line 5
    if-nez p2, :cond_0

    .line 7
    return v0

    .line 8
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddresses(Ljava/util/List;)Ljava/util/List;

    .line 11
    move-result-object p2

    .line 12
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 15
    move-result v1

    .line 16
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 19
    move-result-object v1

    .line 20
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 23
    move-result v2

    .line 24
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 27
    move-result-object v2

    .line 28
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 31
    move-result-object v3

    .line 32
    invoke-interface {p2}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 35
    move-result-object v4

    .line 36
    new-instance v5, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda2;

    .line 38
    const/4 v6, 0x1

    .line 39
    invoke-direct {v5, v6}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda2;-><init>(I)V

    .line 42
    invoke-interface {v4, v5}, Ljava/util/stream/Stream;->map(Ljava/util/function/Function;)Ljava/util/stream/Stream;

    .line 45
    move-result-object v4

    .line 46
    const-string v5, ","

    .line 48
    invoke-static {v5}, Ljava/util/stream/Collectors;->joining(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;

    .line 51
    move-result-object v5

    .line 52
    invoke-interface {v4, v5}, Ljava/util/stream/Stream;->collect(Ljava/util/stream/Collector;)Ljava/lang/Object;

    .line 55
    move-result-object v4

    .line 56
    filled-new-array {v1, v2, v3, v4}, [Ljava/lang/Object;

    .line 59
    move-result-object v1

    .line 60
    const-string/jumbo v2, "setPreferredDevicesForStrategy u/pid:%d/%d strat:%d dev:%s"

    .line 63
    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 66
    move-result-object v1

    .line 67
    sget-object v2, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 69
    new-instance v3, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 71
    invoke-direct {v3, v1}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 74
    const/4 v4, 0x0

    .line 75
    const-string v5, "AS.AudioService"

    .line 77
    invoke-virtual {v3, v4, v5}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 80
    invoke-virtual {v2, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 83
    invoke-interface {p2}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 86
    move-result-object v2

    .line 87
    new-instance v3, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;

    .line 89
    const/4 v6, 0x2

    .line 90
    invoke-direct {v3, v6}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda3;-><init>(I)V

    .line 93
    invoke-interface {v2, v3}, Ljava/util/stream/Stream;->anyMatch(Ljava/util/function/Predicate;)Z

    .line 96
    move-result v2

    .line 97
    if-eqz v2, :cond_1

    .line 99
    const-string p0, "Unsupported input routing in "

    .line 101
    invoke-virtual {p0, v1}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 104
    move-result-object p0

    .line 105
    invoke-static {v5, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 108
    return v0

    .line 109
    :cond_1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 111
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 113
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 116
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 119
    move-result-object v0

    .line 120
    :try_start_0
    invoke-virtual {p0, p1, v4, p2}, Lcom/android/server/audio/AudioDeviceInventory;->setDevicesRoleForStrategy(IZLjava/util/List;)I

    .line 123
    move-result v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 124
    if-eqz v0, :cond_2

    .line 126
    invoke-interface {v0}, Landroid/media/permission/SafeCloseable;->close()V

    .line 129
    :cond_2
    if-nez v2, :cond_3

    .line 131
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 133
    const/16 v0, 0x20

    .line 135
    invoke-virtual {p0, v0, p1, p2}, Lcom/android/server/audio/AudioDeviceBroker;->sendILMsgNoDelay(IILjava/lang/Object;)V

    .line 138
    :cond_3
    if-eqz v2, :cond_4

    .line 140
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 143
    move-result-object p0

    .line 144
    filled-new-array {p0, v1}, [Ljava/lang/Object;

    .line 147
    move-result-object p0

    .line 148
    const-string p1, "Error %d in %s)"

    .line 150
    invoke-static {p1, p0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 153
    move-result-object p0

    .line 154
    invoke-static {v5, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 157
    :cond_4
    return v2

    .line 158
    :catchall_0
    move-exception p0

    .line 159
    if-eqz v0, :cond_5

    .line 161
    :try_start_1
    invoke-interface {v0}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 164
    goto :goto_0

    .line 165
    :catchall_1
    move-exception p1

    .line 166
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 169
    :cond_5
    :goto_0
    throw p0
.end method

.method public final setPreferredMixerAttributes(Landroid/media/AudioAttributes;ILandroid/media/AudioMixerAttributes;)I
    .locals 10

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6
    invoke-static {p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 9
    const-string/jumbo v1, "setPreferredMixerAttributes()"

    .line 12
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 15
    move-result v1

    .line 16
    if-nez v1, :cond_0

    .line 18
    const/4 p0, -0x4

    .line 19
    return p0

    .line 20
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 23
    move-result v1

    .line 24
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 27
    move-result v2

    .line 28
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 31
    move-result-wide v3

    .line 32
    :try_start_0
    const-string/jumbo v5, "setPreferredMixerAttributes u/pid:%d/%d attr:%s mixerAttributes:%s portId:%d"

    .line 35
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 38
    move-result-object v6

    .line 39
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 42
    move-result-object v2

    .line 43
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->toString()Ljava/lang/String;

    .line 46
    move-result-object v7

    .line 47
    invoke-virtual {p3}, Landroid/media/AudioMixerAttributes;->toString()Ljava/lang/String;

    .line 50
    move-result-object v8

    .line 51
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 54
    move-result-object v9

    .line 55
    filled-new-array {v6, v2, v7, v8, v9}, [Ljava/lang/Object;

    .line 58
    move-result-object v2

    .line 59
    invoke-static {v5, v2}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 62
    move-result-object v2

    .line 63
    sget-object v5, Lcom/android/server/audio/AudioService;->sDeviceLogger:Lcom/android/server/utils/EventLogger;

    .line 65
    new-instance v6, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 67
    invoke-direct {v6, v2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 70
    const/4 v7, 0x0

    .line 71
    invoke-virtual {v6, v7, v0}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 74
    invoke-virtual {v5, v6}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 77
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 79
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 82
    invoke-static {p1, p2, v1, p3}, Landroid/media/AudioSystem;->setPreferredMixerAttributes(Landroid/media/AudioAttributes;IILandroid/media/AudioMixerAttributes;)I

    .line 85
    move-result v1

    .line 86
    if-nez v1, :cond_1

    .line 88
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/audio/AudioService;->dispatchPreferredMixerAttributesChanged(Landroid/media/AudioAttributes;ILandroid/media/AudioMixerAttributes;)V

    .line 91
    goto :goto_0

    .line 92
    :catchall_0
    move-exception p0

    .line 93
    goto :goto_1

    .line 94
    :cond_1
    const-string p0, "Error %d in %s)"

    .line 96
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 99
    move-result-object p1

    .line 100
    filled-new-array {p1, v2}, [Ljava/lang/Object;

    .line 103
    move-result-object p1

    .line 104
    invoke-static {p0, p1}, Landroid/text/TextUtils;->formatSimple(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 107
    move-result-object p0

    .line 108
    invoke-static {v0, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 111
    :goto_0
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 114
    return v1

    .line 115
    :goto_1
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 118
    throw p0
.end method

.method public final setRadioOutputPath(I)V
    .locals 5

    .line 1
    const-string/jumbo v0, "setRadioOutputPath()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 13
    monitor-enter v0

    .line 14
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 16
    const/4 v2, 0x3

    .line 17
    aget-object v1, v1, v2

    .line 19
    const-string/jumbo v3, "setRadioOutputPath"

    .line 22
    const/4 v4, 0x0

    .line 23
    invoke-virtual {v1, v3, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 26
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 27
    const/4 v0, 0x2

    .line 28
    const/16 v1, 0x8

    .line 30
    if-ne p1, v0, :cond_1

    .line 32
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 34
    const/4 v0, 0x1

    .line 35
    invoke-virtual {p1, v1, v0}, Lcom/android/server/audio/AudioSystemAdapter;->setForceUse(II)V

    .line 38
    iput v0, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 40
    goto :goto_0

    .line 41
    :cond_1
    if-ne p1, v2, :cond_2

    .line 43
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 45
    invoke-virtual {p1, v1, v4}, Lcom/android/server/audio/AudioSystemAdapter;->setForceUse(II)V

    .line 48
    iput v4, p0, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    .line 50
    :goto_0
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    .line 53
    move-result p1

    .line 54
    mul-int/lit8 p1, p1, 0xa

    .line 56
    invoke-virtual {p0, v2, p1, p1, v4}, Lcom/android/server/audio/AudioService;->sendVolumeChangedIntent(IIII)V

    .line 59
    return-void

    .line 60
    :cond_2
    const-string p0, "AS.AudioService"

    .line 62
    const-string v0, "FM radio app set wrong radio output path : "

    .line 64
    invoke-static {p1, v0, p0}, Lcom/android/server/DirEncryptService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 67
    return-void

    .line 68
    :catchall_0
    move-exception p0

    .line 69
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 70
    throw p0
.end method

.method public final setRemoteMic(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 3
    return-void
.end method

.method public final setRingerMode(ILjava/lang/String;Z)V
    .locals 11

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 3
    if-nez v0, :cond_b

    .line 5
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 7
    if-nez v0, :cond_b

    .line 9
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 11
    if-eqz v0, :cond_0

    .line 13
    goto/16 :goto_4

    .line 15
    :cond_0
    if-eqz p2, :cond_a

    .line 17
    invoke-virtual {p2}, Ljava/lang/String;->length()I

    .line 20
    move-result v0

    .line 21
    if-eqz v0, :cond_a

    .line 23
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->isValidRingerMode(I)Z

    .line 26
    move-result v0

    .line 27
    if-eqz v0, :cond_9

    .line 29
    const/4 v0, 0x0

    .line 30
    const/4 v1, 0x1

    .line 31
    if-ne p1, v1, :cond_1

    .line 33
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 35
    if-nez v2, :cond_1

    .line 37
    move v5, v0

    .line 38
    goto :goto_0

    .line 39
    :cond_1
    move v5, p1

    .line 40
    :goto_0
    iget p1, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 42
    if-eqz p1, :cond_2

    .line 44
    if-eqz v5, :cond_2

    .line 46
    iput v0, p0, Lcom/android/server/audio/AudioService;->mMuteIntervalMs:I

    .line 48
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 51
    move-result p1

    .line 52
    if-eq v5, p1, :cond_3

    .line 54
    invoke-virtual {p0, v1, v5, p2}, Lcom/android/server/audio/AudioService;->sendBroadcastToSoundEventReceiver(IILjava/lang/String;)V

    .line 57
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 60
    move-result-wide v9

    .line 61
    :try_start_0
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 63
    monitor-enter p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 64
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 67
    move-result v0

    .line 68
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 71
    move-result v7

    .line 72
    if-eqz p3, :cond_5

    .line 74
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->setRingerModeExt(I)V

    .line 77
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 79
    if-eqz v3, :cond_4

    .line 81
    iget-object v8, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 83
    move v4, v7

    .line 84
    move-object v6, p2

    .line 85
    move v7, v0

    .line 86
    invoke-interface/range {v3 .. v8}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->onSetRingerModeExternal(IILjava/lang/String;ILandroid/media/VolumePolicy;)I

    .line 89
    move-result v5

    .line 90
    goto :goto_1

    .line 91
    :catchall_0
    move-exception p0

    .line 92
    goto :goto_3

    .line 93
    :cond_4
    :goto_1
    if-eq v5, v0, :cond_8

    .line 95
    invoke-virtual {p0, v5, v1}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 98
    invoke-virtual {p0, v5, p2, p3}, Lcom/android/server/audio/AudioService;->handleSetRingerMode(ILjava/lang/String;Z)V

    .line 101
    goto :goto_2

    .line 102
    :cond_5
    if-eq v5, v0, :cond_6

    .line 104
    invoke-virtual {p0, v5, v1}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 107
    invoke-virtual {p0, v5, p2, p3}, Lcom/android/server/audio/AudioService;->handleSetRingerMode(ILjava/lang/String;Z)V

    .line 110
    :cond_6
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 112
    if-eqz v3, :cond_7

    .line 114
    iget-object v8, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 116
    move v4, v0

    .line 117
    move-object v6, p2

    .line 118
    invoke-interface/range {v3 .. v8}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->onSetRingerModeInternal(IILjava/lang/String;ILandroid/media/VolumePolicy;)I

    .line 121
    move-result v5

    .line 122
    :cond_7
    invoke-virtual {p0, v5}, Lcom/android/server/audio/AudioService;->setRingerModeExt(I)V

    .line 125
    :cond_8
    :goto_2
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 126
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 129
    return-void

    .line 130
    :goto_3
    :try_start_2
    monitor-exit p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 131
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 132
    :catchall_1
    move-exception p0

    .line 133
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 136
    throw p0

    .line 137
    :cond_9
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 139
    const-string p2, "Bad ringer mode "

    .line 141
    invoke-static {p1, p2}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 144
    move-result-object p1

    .line 145
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 148
    throw p0

    .line 149
    :cond_a
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 151
    const-string p1, "Bad caller: "

    .line 153
    invoke-static {p1, p2}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 156
    move-result-object p1

    .line 157
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 160
    throw p0

    .line 161
    :cond_b
    :goto_4
    return-void
.end method

.method public final setRingerModeExt(I)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 6
    if-ne p1, v1, :cond_0

    .line 8
    monitor-exit v0

    .line 9
    return-void

    .line 10
    :catchall_0
    move-exception p0

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRingerModeExternal:I

    .line 14
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    const-string v0, "android.media.RINGER_MODE_CHANGED"

    .line 17
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(ILjava/lang/String;)V

    .line 20
    return-void

    .line 21
    :goto_0
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 22
    throw p0
.end method

.method public final setRingerModeExternal(ILjava/lang/String;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    .line 3
    const/16 v1, 0xc8

    .line 5
    invoke-virtual {v0, v1}, Lcom/android/server/audio/HardeningEnforcer;->blockVolumeMethod(I)Z

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 11
    return-void

    .line 12
    :cond_0
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    .line 15
    move-result v0

    .line 16
    if-eqz v0, :cond_2

    .line 18
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    .line 21
    move-result v0

    .line 22
    if-eqz v0, :cond_2

    .line 24
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 26
    invoke-virtual {v0, p2}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    .line 29
    move-result v0

    .line 30
    if-eqz v0, :cond_1

    .line 32
    goto :goto_0

    .line 33
    :cond_1
    new-instance p0, Ljava/lang/SecurityException;

    .line 35
    const-string p1, "Not allowed to change Do Not Disturb state"

    .line 37
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 40
    throw p0

    .line 41
    :cond_2
    :goto_0
    const/4 v0, 0x1

    .line 42
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 45
    return-void
.end method

.method public final setRingerModeInt(IZ)V
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget v1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 6
    const/4 v2, 0x1

    .line 7
    const/4 v3, 0x0

    .line 8
    if-eq v1, p1, :cond_0

    .line 10
    move v4, v2

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    move v4, v3

    .line 13
    :goto_0
    if-eqz v4, :cond_1

    .line 15
    iput v1, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 17
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 19
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 22
    move-result-object v10

    .line 23
    const/4 v8, 0x0

    .line 24
    const/4 v9, 0x0

    .line 25
    const/4 v11, 0x0

    .line 26
    const/16 v6, 0xace

    .line 28
    const/4 v7, 0x0

    .line 29
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 32
    goto :goto_1

    .line 33
    :catchall_0
    move-exception p0

    .line 34
    goto :goto_4

    .line 35
    :cond_1
    :goto_1
    iput p1, p0, Lcom/android/server/audio/AudioService;->mRingerMode:I

    .line 37
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->muteRingerModeStreams()V

    .line 40
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 41
    if-eqz p2, :cond_2

    .line 43
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 45
    const/4 v8, 0x0

    .line 46
    const/4 v9, 0x0

    .line 47
    const/4 v6, 0x3

    .line 48
    const/4 v7, 0x0

    .line 49
    const/4 v10, 0x0

    .line 50
    const/16 v11, 0x1f4

    .line 52
    invoke-static/range {v5 .. v11}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 55
    :cond_2
    if-eqz v4, :cond_5

    .line 57
    const-string p2, "android.media.INTERNAL_RINGER_MODE_CHANGED_ACTION"

    .line 59
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->broadcastRingerMode(ILjava/lang/String;)V

    .line 62
    iget-boolean p2, p0, Lcom/android/server/audio/AudioService;->mMuteMediaByVibrateOrSilentMode:Z

    .line 64
    if-eqz p2, :cond_5

    .line 66
    iget p2, p0, Lcom/android/server/audio/AudioService;->mPrevRingerMode:I

    .line 68
    const/4 v0, 0x2

    .line 69
    if-eq p2, v0, :cond_3

    .line 71
    if-eq p1, v0, :cond_3

    .line 73
    goto :goto_3

    .line 74
    :cond_3
    if-eq p1, v0, :cond_4

    .line 76
    goto :goto_2

    .line 77
    :cond_4
    move v2, v3

    .line 78
    :goto_2
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->muteMediaStreamOfSpeaker(Z)V

    .line 81
    :cond_5
    :goto_3
    return-void

    .line 82
    :goto_4
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 83
    throw p0
.end method

.method public final setRingerModeInternal(ILjava/lang/String;)V
    .locals 1

    .line 1
    const-string/jumbo v0, "setRingerModeInternal"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    const/4 v0, 0x0

    .line 8
    invoke-virtual {p0, p1, p2, v0}, Lcom/android/server/audio/AudioService;->setRingerMode(ILjava/lang/String;Z)V

    .line 11
    return-void
.end method

.method public final setRingtonePlayer(Landroid/media/IRingtonePlayer;)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setRingtonePlayer_enforcePermission()V

    .line 4
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mRingtonePlayer:Landroid/media/IRingtonePlayer;

    .line 6
    return-void
.end method

.method public final setRttEnabled(Z)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 11
    const-string p0, "AS.AudioService"

    .line 13
    new-instance p1, Ljava/lang/StringBuilder;

    .line 15
    const-string v0, "MODIFY_PHONE_STATE Permission Denial: setRttEnabled from pid="

    .line 17
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 20
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 23
    move-result v0

    .line 24
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 27
    const-string v0, ", uid="

    .line 29
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 32
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 35
    move-result v0

    .line 36
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 39
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    move-result-object p1

    .line 43
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    return-void

    .line 47
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 49
    monitor-enter v0

    .line 50
    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/audio/AudioService;->mRttEnabled:Z

    .line 52
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 55
    move-result-wide v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 56
    :try_start_1
    invoke-static {p1}, Landroid/media/AudioSystem;->setRttEnabled(Z)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 59
    :try_start_2
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 62
    monitor-exit v0

    .line 63
    return-void

    .line 64
    :catchall_0
    move-exception p0

    .line 65
    goto :goto_0

    .line 66
    :catchall_1
    move-exception p0

    .line 67
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 70
    throw p0

    .line 71
    :goto_0
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 72
    throw p0
.end method

.method public final setSoundSettingEventBroadcastIntent(ILandroid/app/PendingIntent;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    const-string v1, "AS.AudioService"

    if-eqz v0, :cond_0

    .line 2
    new-instance p0, Ljava/lang/StringBuilder;

    const-string p1, "MODIFY_PHONE_STATE Permission Denial from pid="

    invoke-direct {p0, p1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 3
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", uid="

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result p1

    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p0

    .line 4
    invoke-static {v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    return-void

    .line 5
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6
    :try_start_0
    invoke-virtual {p2}, Landroid/app/PendingIntent;->getIntent()Landroid/content/Intent;

    move-result-object p2

    invoke-virtual {p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object p2

    if-nez p2, :cond_1

    .line 7
    const-string p0, "Invalid argument"

    invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception p0

    goto :goto_0

    .line 9
    :cond_1
    :try_start_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService;->setSoundSettingEventBroadcastIntent(ILandroid/content/ComponentName;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :goto_0
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11
    throw p0
.end method

.method public final setSoundSettingEventBroadcastIntent(ILandroid/content/ComponentName;)V
    .locals 6

    .line 12
    const-string v0, "Success set receiver as type : "

    const-string v1, "Receiver removed, size : "

    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    monitor-enter v2

    .line 13
    :try_start_0
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mEventReceivers:Ljava/util/ArrayList;

    .line 14
    new-instance v4, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    .line 15
    invoke-direct {v4}, Ljava/lang/Object;-><init>()V

    .line 16
    iput p1, v4, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventType:I

    .line 17
    iput-object p2, v4, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventReceiver:Landroid/content/ComponentName;

    .line 18
    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v5

    if-nez p1, :cond_3

    if-gez v5, :cond_0

    .line 19
    monitor-exit v2

    return-void

    :catchall_0
    move-exception p0

    goto/16 :goto_1

    .line 20
    :cond_0
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 21
    iget-object p1, p1, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->this$0:Lcom/android/server/media/MediaSessionService;

    .line 22
    iget-object p1, p1, Lcom/android/server/media/MediaSessionService;->mVolumeKeyLongPressReceiver:Landroid/content/ComponentName;

    .line 23
    invoke-virtual {p2, p1}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result p1

    const/4 v0, 0x0

    if-eqz p1, :cond_1

    .line 24
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {p1, v0}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    .line 25
    :cond_1
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    .line 26
    iget-object p1, p1, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->this$0:Lcom/android/server/media/MediaSessionService;

    .line 27
    iget-object p1, p1, Lcom/android/server/media/MediaSessionService;->mHighPriorityMediaKeyReceiver:Landroid/content/ComponentName;

    .line 28
    invoke-virtual {p2, p1}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 29
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {p0, v0}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 30
    :cond_2
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 31
    const-string p0, "AS.AudioService"

    new-instance p1, Ljava/lang/StringBuilder;

    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result p2

    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    monitor-exit v2

    return-void

    :cond_3
    if-gez v5, :cond_4

    .line 33
    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 34
    :cond_4
    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$SoundEventReceiver;

    iput p1, v1, Lcom/android/server/audio/AudioService$SoundEventReceiver;->mEventType:I

    :goto_0
    and-int/lit8 v1, p1, 0x20

    if-eqz v1, :cond_5

    .line 35
    const-string v1, "AS.AudioService"

    const-string v4, "Set long press receiver"

    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 36
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {v1, p2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setVolumeLongPressReceiver(Landroid/content/ComponentName;)V

    :cond_5
    and-int/lit8 v1, p1, 0x40

    if-eqz v1, :cond_6

    .line 37
    const-string v1, "AS.AudioService"

    const-string v4, "Set media button receiver"

    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaSessionServiceInternal:Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;

    invoke-virtual {p0, p2}, Lcom/android/server/media/MediaSessionService$MediaSessionServiceInternal;->setMediaKeyEventReceiver(Landroid/content/ComponentName;)V

    .line 39
    :cond_6
    const-string p0, "AS.AudioService"

    new-instance p2, Ljava/lang/StringBuilder;

    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string p1, ", size : "

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result p1

    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-static {p0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 40
    monitor-exit v2

    return-void

    :goto_1
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p0
.end method

.method public final setSpatializerEnabled(Z)V
    .locals 0

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setSpatializerEnabled_enforcePermission()V

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    invoke-virtual {p0, p1}, Lcom/android/server/audio/SpatializerHelper;->setFeatureEnabled(Z)V

    .line 9
    return-void
.end method

.method public final setSpatializerGlobalTransform([F)V
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setSpatializerGlobalTransform_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    const-string/jumbo v0, "invalid array size"

    .line 12
    monitor-enter p0

    .line 13
    :try_start_0
    array-length v1, p1

    .line 14
    const/4 v2, 0x6

    .line 15
    if-ne v1, v2, :cond_1

    .line 17
    const-string/jumbo v0, "setGlobalTransform"

    .line 20
    invoke-virtual {p0, v0}, Lcom/android/server/audio/SpatializerHelper;->checkSpatializer(Ljava/lang/String;)Z

    .line 23
    move-result v0

    .line 24
    if-eqz v0, :cond_0

    .line 26
    iget-boolean v0, p0, Lcom/android/server/audio/SpatializerHelper;->mIsHeadTrackingSupported:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 28
    if-eqz v0, :cond_0

    .line 30
    :try_start_1
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 32
    invoke-interface {v0, p1}, Landroid/media/ISpatializer;->setGlobalTransform([F)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 35
    goto :goto_0

    .line 36
    :catchall_0
    move-exception p1

    .line 37
    goto :goto_2

    .line 38
    :catch_0
    move-exception p1

    .line 39
    :try_start_2
    const-string v0, "AS.SpatializerHelper"

    .line 41
    const-string v1, "Error calling setGlobalTransform"

    .line 43
    invoke-static {v0, v1, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 46
    :goto_0
    monitor-exit p0

    .line 47
    goto :goto_1

    .line 48
    :cond_0
    monitor-exit p0

    .line 49
    :goto_1
    return-void

    .line 50
    :cond_1
    :try_start_3
    new-instance v1, Ljava/lang/IllegalArgumentException;

    .line 52
    new-instance v2, Ljava/lang/StringBuilder;

    .line 54
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 57
    array-length p1, p1

    .line 58
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 61
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 64
    move-result-object p1

    .line 65
    invoke-direct {v1, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 68
    throw v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 69
    :goto_2
    monitor-exit p0

    .line 70
    throw p1
.end method

.method public final setSpatializerParameter(I[B)V
    .locals 5

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setSpatializerParameter_enforcePermission()V

    .line 4
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    const-string v0, "Error in setParameter for key:"

    .line 11
    const-string v1, "Can\'t set parameter key:"

    .line 13
    const-string/jumbo v2, "setParameter("

    .line 16
    monitor-enter p0

    .line 17
    :try_start_0
    iget v3, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 19
    if-eqz v3, :cond_2

    .line 21
    const/4 v4, 0x1

    .line 22
    if-eq v3, v4, :cond_2

    .line 24
    const/4 v1, 0x3

    .line 25
    if-eq v3, v1, :cond_0

    .line 27
    const/4 v1, 0x4

    .line 28
    if-eq v3, v1, :cond_0

    .line 30
    const/4 v1, 0x5

    .line 31
    if-eq v3, v1, :cond_0

    .line 33
    const/4 v1, 0x6

    .line 34
    if-eq v3, v1, :cond_0

    .line 36
    goto :goto_0

    .line 37
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 39
    if-nez v1, :cond_1

    .line 41
    const-string p2, "AS.SpatializerHelper"

    .line 43
    new-instance v0, Ljava/lang/StringBuilder;

    .line 45
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 48
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 51
    const-string p1, "): null spatializer in state: "

    .line 53
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 56
    iget p1, p0, Lcom/android/server/audio/SpatializerHelper;->mState:I

    .line 58
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 61
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 64
    move-result-object p1

    .line 65
    invoke-static {p2, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 68
    monitor-exit p0

    .line 69
    goto :goto_2

    .line 70
    :catchall_0
    move-exception p1

    .line 71
    goto :goto_3

    .line 72
    :cond_1
    :goto_0
    :try_start_1
    iget-object v1, p0, Lcom/android/server/audio/SpatializerHelper;->mSpat:Landroid/media/ISpatializer;

    .line 74
    invoke-interface {v1, p1, p2}, Landroid/media/ISpatializer;->setParameter(I[B)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 77
    goto :goto_1

    .line 78
    :catch_0
    move-exception p2

    .line 79
    :try_start_2
    const-string v1, "AS.SpatializerHelper"

    .line 81
    new-instance v2, Ljava/lang/StringBuilder;

    .line 83
    invoke-direct {v2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 86
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 89
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 92
    move-result-object p1

    .line 93
    invoke-static {v1, p1, p2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 96
    :goto_1
    monitor-exit p0

    .line 97
    :goto_2
    return-void

    .line 98
    :cond_2
    :try_start_3
    new-instance p2, Ljava/lang/IllegalStateException;

    .line 100
    new-instance v0, Ljava/lang/StringBuilder;

    .line 102
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 105
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 108
    const-string p1, " without a spatializer"

    .line 110
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 113
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 116
    move-result-object p1

    .line 117
    invoke-direct {p2, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 120
    throw p2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 121
    :goto_3
    monitor-exit p0

    .line 122
    throw p1
.end method

.method public final setSpeakerphoneOn(Landroid/os/IBinder;Z)V
    .locals 8

    .line 1
    const-string/jumbo v0, "setSpeakerphoneOn()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 13
    const-string v1, "android.permission.MODIFY_PHONE_STATE"

    .line 15
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 18
    move-result v0

    .line 19
    const/4 v1, 0x0

    .line 20
    if-nez v0, :cond_1

    .line 22
    const/4 v0, 0x1

    .line 23
    move v6, v0

    .line 24
    goto :goto_0

    .line 25
    :cond_1
    move v6, v1

    .line 26
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 29
    move-result v4

    .line 30
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 33
    move-result v0

    .line 34
    invoke-virtual {p0, v4}, Lcom/android/server/audio/AudioService;->getPackageName(I)[Ljava/lang/String;

    .line 37
    move-result-object v2

    .line 38
    aget-object v1, v2, v1

    .line 40
    const-string/jumbo v2, "setSpeakerphoneOn("

    .line 43
    const-string v3, ") from u/pid:"

    .line 45
    const-string v5, "/"

    .line 47
    invoke-static {v4, v2, v3, v5, p2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/StringBuilder;

    .line 50
    move-result-object v2

    .line 51
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 54
    const-string v3, " Package Name:"

    .line 56
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 59
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 62
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 65
    move-result-object v7

    .line 66
    new-instance v1, Landroid/media/MediaMetrics$Item;

    .line 68
    const-string v2, "audio.device.setSpeakerphoneOn"

    .line 70
    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 73
    invoke-virtual {v1, v4}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 76
    move-result-object v1

    .line 77
    invoke-virtual {v1, v0}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 80
    move-result-object v0

    .line 81
    sget-object v1, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 83
    if-eqz p2, :cond_2

    .line 85
    const-string/jumbo v2, "on"

    .line 88
    goto :goto_1

    .line 89
    :cond_2
    const-string/jumbo v2, "off"

    .line 92
    :goto_1
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 95
    move-result-object v0

    .line 96
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 99
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 102
    move-result-wide v0

    .line 103
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 105
    move-object v3, p1

    .line 106
    move v5, p2

    .line 107
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->setSpeakerphoneOn(Landroid/os/IBinder;IZZLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 110
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 113
    return-void

    .line 114
    :catchall_0
    move-exception p0

    .line 115
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 118
    throw p0
.end method

.method public final setStreamVolume(IIILjava/lang/String;)V
    .locals 6

    .line 1
    const/4 v5, 0x0

    .line 2
    move-object v0, p0

    .line 3
    move v1, p1

    .line 4
    move v2, p2

    .line 5
    move v3, p3

    .line 6
    move-object v4, p4

    .line 7
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V

    .line 10
    return-void
.end method

.method public final setStreamVolumeForDeviceWithAttribution(IIILjava/lang/String;Ljava/lang/String;I)V
    .locals 12

    .line 1
    move v6, p1

    .line 2
    move-object/from16 v7, p4

    .line 4
    const/16 v0, 0xa

    .line 6
    const-string v1, "AS.AudioService"

    .line 8
    if-ne v6, v0, :cond_0

    .line 10
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    .line 13
    move-result v0

    .line 14
    if-nez v0, :cond_0

    .line 16
    const-string v0, "Trying to call setStreamVolume() for a11y without CHANGE_ACCESSIBILITY_VOLUME  callingPackage="

    .line 18
    invoke-static {v0, v7, v1}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 21
    return-void

    .line 22
    :cond_0
    if-nez v6, :cond_1

    .line 24
    if-nez p2, :cond_1

    .line 26
    move-object v8, p0

    .line 27
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 29
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    .line 31
    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 34
    move-result v0

    .line 35
    if-eqz v0, :cond_2

    .line 37
    const-string v0, "Trying to call setStreamVolume() for STREAM_VOICE_CALL and index 0 without MODIFY_PHONE_STATE  callingPackage="

    .line 39
    invoke-static {v0, v7, v1}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 42
    return-void

    .line 43
    :cond_1
    move-object v8, p0

    .line 44
    :cond_2
    sget-object v9, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 46
    new-instance v10, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 48
    const/4 v1, 0x2

    .line 49
    move-object v0, v10

    .line 50
    move v2, p1

    .line 51
    move v3, p2

    .line 52
    move v4, p3

    .line 53
    move-object/from16 v5, p4

    .line 55
    invoke-direct/range {v0 .. v5}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIILjava/lang/String;)V

    .line 58
    invoke-virtual {v9, v10}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 61
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 64
    move-result v9

    .line 65
    const/4 v10, 0x1

    .line 66
    const/4 v11, 0x1

    .line 67
    const/4 v4, 0x0

    .line 68
    move-object v0, p0

    .line 69
    move v1, p1

    .line 70
    move v2, p2

    .line 71
    move v3, p3

    .line 72
    move-object/from16 v6, p4

    .line 74
    move-object/from16 v7, p5

    .line 76
    move v8, v9

    .line 77
    move v9, v10

    .line 78
    move v10, v11

    .line 79
    move/from16 v11, p6

    .line 81
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 84
    return-void
.end method

.method public final setStreamVolumeForUid(IIILjava/lang/String;IILandroid/os/UserHandle;I)V
    .locals 14

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 7
    if-ne v0, v1, :cond_1

    .line 9
    move-object v0, p0

    .line 10
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 12
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 14
    move/from16 v10, p5

    .line 16
    move/from16 v3, p6

    .line 18
    invoke-virtual {v1, v2, v3, v10}, Landroid/content/Context;->checkPermission(Ljava/lang/String;II)I

    .line 21
    move-result v1

    .line 22
    if-nez v1, :cond_0

    .line 24
    const/4 v1, 0x1

    .line 25
    :goto_0
    move v11, v1

    .line 26
    goto :goto_1

    .line 27
    :cond_0
    const/4 v1, 0x0

    .line 28
    goto :goto_0

    .line 29
    :goto_1
    const/4 v9, 0x0

    .line 30
    const/4 v12, 0x1

    .line 31
    const/4 v6, 0x0

    .line 32
    const/4 v13, 0x0

    .line 33
    move-object v2, p0

    .line 34
    move v3, p1

    .line 35
    move/from16 v4, p2

    .line 37
    move/from16 v5, p3

    .line 39
    move-object/from16 v7, p4

    .line 41
    move-object/from16 v8, p4

    .line 43
    move/from16 v10, p5

    .line 45
    invoke-virtual/range {v2 .. v13}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 48
    return-void

    .line 49
    :cond_1
    new-instance v0, Ljava/lang/SecurityException;

    .line 51
    const-string v1, "Should only be called from system process"

    .line 53
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 56
    throw v0
.end method

.method public final setStreamVolumeInt(Ljava/lang/String;IIIZZ)V
    .locals 8

    .line 1
    invoke-virtual {p0, p4}, Lcom/android/server/audio/AudioService;->isFullVolumeDevice(I)Z

    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 7
    return-void

    .line 8
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 10
    aget-object v6, v0, p2

    .line 12
    invoke-virtual {v6, p3, p4, p1, p6}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 15
    move-result p1

    .line 16
    if-nez p1, :cond_1

    .line 18
    if-eqz p5, :cond_2

    .line 20
    :cond_1
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 22
    const/4 v2, 0x0

    .line 23
    const/4 v3, 0x2

    .line 24
    const/4 v5, 0x0

    .line 25
    const/4 v7, 0x0

    .line 26
    move v4, p4

    .line 27
    invoke-static/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 30
    :cond_2
    return-void
.end method

.method public final setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V
    .locals 18

    move-object/from16 v8, p0

    move/from16 v9, p1

    move/from16 v0, p2

    move-object/from16 v1, p5

    move-object/from16 v10, p6

    move/from16 v2, p8

    move/from16 v3, p11

    .line 3
    const-string v4, "AS.AudioService"

    const-string/jumbo v5, "setStreamVolume(stream="

    const-string v6, ", index="

    const-string v7, ", calling="

    .line 4
    invoke-static {v9, v0, v5, v6, v7}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 5
    const-string v6, ", device="

    const-string v7, ")"

    .line 6
    invoke-static {v3, v1, v6, v7, v5}, Lcom/android/server/am/ActiveServices$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/String;

    move-result-object v5

    .line 7
    invoke-static {v4, v5}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 8
    iget-boolean v4, v8, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    if-eqz v4, :cond_0

    return-void

    :cond_0
    const/high16 v4, 0x100000

    and-int v4, p3, v4

    const/4 v11, 0x0

    if-eqz v4, :cond_1

    const v4, -0x100001

    and-int v4, p3, v4

    const/4 v6, 0x1

    goto :goto_0

    :cond_1
    move/from16 v4, p3

    move v6, v11

    :goto_0
    const/4 v12, 0x3

    if-ne v9, v12, :cond_3

    if-eqz v6, :cond_3

    .line 9
    iget-object v6, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v6, v6, v9

    iget v6, v6, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    if-le v0, v6, :cond_2

    move v6, v11

    goto :goto_1

    .line 10
    :cond_2
    rem-int/lit8 v6, v0, 0xa

    .line 11
    :goto_1
    div-int/lit8 v0, v0, 0xa

    goto :goto_2

    :cond_3
    move v6, v11

    .line 12
    :goto_2
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V

    .line 13
    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v13, v7, v9

    .line 14
    iget-object v7, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v14, v7, v13

    if-nez p4, :cond_4

    .line 15
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    move-result v7

    goto :goto_3

    :cond_4
    invoke-virtual/range {p4 .. p4}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    move-result v7

    :goto_3
    const/high16 v15, 0x800000

    if-nez v3, :cond_6

    if-ne v9, v12, :cond_5

    .line 16
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mMultiSoundManager:Lcom/samsung/android/server/audio/MultiSoundManager;

    invoke-virtual {v3, v2}, Lcom/samsung/android/server/audio/MultiSoundManager;->getAppDevice(I)I

    move-result v3

    if-eqz v3, :cond_5

    or-int/2addr v4, v15

    .line 17
    const-string v15, "AS.AudioService"

    const-string v5, "add FLAG_MULTI_SOUND device="

    .line 18
    invoke-static {v7, v5, v15}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    goto :goto_5

    :cond_5
    :goto_4
    move v15, v4

    goto :goto_6

    .line 19
    :cond_6
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isMultiSoundOnInternal()Z

    move-result v5

    if-eqz v5, :cond_7

    if-eq v7, v3, :cond_7

    if-ne v9, v12, :cond_7

    or-int/2addr v4, v15

    .line 20
    const-string v5, "AS.AudioService"

    const-string/jumbo v7, "device="

    const-string v15, " add FLAG_MULTI_SOUND "

    .line 21
    invoke-static {v3, v7, v15, v5}, Lcom/android/server/NetworkScoreService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    :cond_7
    :goto_5
    move v7, v3

    goto :goto_4

    .line 22
    :goto_6
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mScreenSharingHelper:Lcom/samsung/android/server/audio/ScreenSharingHelper;

    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 23
    const-string/jumbo v3, "com.sec.android.app.voicenote"

    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    const/16 v16, 0x2

    if-eqz v3, :cond_8

    move/from16 v7, v16

    .line 24
    :cond_8
    const-string/jumbo v3, "com.android.bluetooth"

    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_9

    if-nez v9, :cond_9

    .line 25
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    move-result v3

    if-eqz v3, :cond_9

    const/high16 v3, 0x20000000

    if-eq v7, v3, :cond_a

    const v3, 0x20000001

    if-ne v7, v3, :cond_9

    goto :goto_7

    :cond_9
    move/from16 v5, p9

    goto :goto_8

    .line 26
    :cond_a
    :goto_7
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, v9

    mul-int/lit8 v0, v0, 0xa

    move/from16 v5, p9

    .line 27
    invoke-virtual {v1, v0, v7, v10, v5}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 28
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setStreamVolumeWithAttribution sync BLE call volume index = "

    .line 29
    invoke-static {v0, v2, v1}, Lcom/android/server/DirEncryptService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 30
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    const/4 v1, 0x1

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/16 v4, 0x1f4

    move-object/from16 p0, v0

    move/from16 p1, v1

    move/from16 p2, v2

    move/from16 p3, v7

    move/from16 p4, v3

    move-object/from16 p5, v14

    move/from16 p6, v4

    invoke-static/range {p0 .. p6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    return-void

    .line 31
    :goto_8
    iget-boolean v3, v8, Lcom/android/server/audio/AudioService;->mVolumeLimitOn:Z

    if-eqz v3, :cond_d

    .line 32
    sget-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    aget v3, v3, v9

    if-ne v3, v12, :cond_d

    mul-int/lit8 v3, v0, 0xa

    add-int/2addr v3, v6

    .line 33
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    move-result v17

    mul-int/lit8 v4, v17, 0xa

    if-le v3, v4, :cond_d

    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    invoke-virtual {v3, v7}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    move-result v3

    if-eqz v3, :cond_d

    .line 34
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 35
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    if-nez v0, :cond_b

    goto :goto_9

    .line 36
    :cond_b
    :try_start_0
    invoke-interface {v0}, Landroid/media/IVolumeController;->displayVolumeLimiterToast()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_9

    :catch_0
    move-exception v0

    move-object v1, v0

    .line 37
    const-string v0, "VolumeController"

    const-string v2, "Error calling displayVolumeLimiterToast"

    invoke-static {v0, v2, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 38
    :goto_9
    const-string v0, "AS.AudioService"

    const-string v1, "SetStreamVolume : already reached at volume limit value"

    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v0, v0, v12

    invoke-virtual {v0, v7}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v0

    move-object/from16 p2, p0

    move/from16 p3, p1

    move/from16 p4, v0

    move/from16 p5, v0

    move/from16 p6, v15

    move/from16 p7, v7

    .line 40
    invoke-virtual/range {p2 .. p7}, Lcom/android/server/audio/AudioService;->sendVolumeChangedIntent(IIIII)V

    .line 41
    sget-object v1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_c

    .line 42
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/16 v2, 0xf

    .line 43
    invoke-virtual {v1, v2, v11, v0}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    :cond_c
    return-void

    .line 44
    :cond_d
    iget-object v3, v8, Lcom/android/server/audio/AudioService;->mFMRadioRecordingChecker:Lcom/android/server/audio/AudioService$13;

    invoke-virtual {v3}, Lcom/samsung/android/server/audio/FrequentWorker;->runOrSkip()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/Boolean;

    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v3

    .line 45
    sget-boolean v4, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO_RECORDING:Z

    if-eqz v4, :cond_10

    if-eqz v3, :cond_10

    const/high16 v11, 0x2000000

    if-eq v15, v11, :cond_f

    const/16 v11, 0x11

    if-ne v15, v11, :cond_e

    goto :goto_a

    :cond_e
    if-nez v15, :cond_10

    if-eq v9, v12, :cond_10

    :cond_f
    :goto_a
    return-void

    .line 46
    :cond_10
    sget-boolean v11, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FM_RADIO:Z

    if-eqz v11, :cond_12

    if-ne v13, v12, :cond_12

    const-string/jumbo v11, "com.sec.android.app.fm"

    .line 47
    invoke-virtual {v11, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_12

    .line 48
    iget v11, v8, Lcom/android/server/audio/AudioService;->mForcedUseForFMRadio:I

    const/4 v12, 0x1

    if-ne v11, v12, :cond_11

    move/from16 v11, v16

    goto :goto_b

    :cond_11
    move v11, v7

    :goto_b
    if-eq v11, v7, :cond_12

    .line 49
    const-string v12, "AS.AudioService"

    const-string/jumbo v5, "setStreamVolume : correct device ("

    const-string v10, " -> "

    move/from16 p2, v3

    const-string v3, ") because fm radio application calls"

    .line 50
    invoke-static {v7, v11, v5, v10, v3}, Lcom/android/server/DualAppManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 51
    invoke-static {v12, v3}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_c

    :cond_12
    move/from16 p2, v3

    move v11, v7

    .line 52
    :goto_c
    sget-object v3, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-interface {v3, v5}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_13

    sget-object v5, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_BLE_SET:Ljava/util/Set;

    .line 53
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-interface {v5, v7}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_13

    and-int/lit8 v5, v15, 0x40

    if-eqz v5, :cond_13

    return-void

    :cond_13
    const/16 v5, 0x3e8

    if-ne v2, v5, :cond_14

    .line 54
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    move-result v5

    invoke-static/range {p8 .. p8}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    invoke-static {v5, v2}, Landroid/os/UserHandle;->getUid(II)I

    move-result v2

    .line 55
    :cond_14
    sget-object v5, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_OPS:[I

    aget v5, v5, v13

    move-object/from16 v7, p7

    invoke-virtual {v8, v5, v2, v1, v7}, Lcom/android/server/audio/AudioService;->checkNoteAppOp(IILjava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    return-void

    .line 56
    :cond_15
    invoke-virtual {v8, v1}, Lcom/android/server/audio/AudioService;->isAndroidNPlus(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_17

    .line 57
    invoke-virtual {v8, v13, v0, v15}, Lcom/android/server/audio/AudioService;->getNewRingerMode(III)I

    move-result v2

    invoke-virtual {v8, v2}, Lcom/android/server/audio/AudioService;->wouldToggleZenMode(I)Z

    move-result v2

    if-eqz v2, :cond_17

    iget-object v2, v8, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 58
    invoke-virtual {v2, v1}, Landroid/app/NotificationManager;->isNotificationPolicyAccessGrantedForPackage(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_17

    .line 59
    const-string/jumbo v2, "com.samsung.android.secsoundpicker"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_17

    const-string/jumbo v2, "com.android.bluetooth"

    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_16

    goto :goto_d

    .line 60
    :cond_16
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Not allowed to change Do Not Disturb state"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 61
    :cond_17
    :goto_d
    invoke-virtual {v8, v13, v15}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByDnd(II)Z

    move-result v1

    if-nez v1, :cond_19

    and-int/lit8 v0, v15, 0x1

    if-eqz v0, :cond_18

    .line 62
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v0, v9, v15}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    :cond_18
    return-void

    .line 63
    :cond_19
    invoke-virtual {v8, v11, v9}, Lcom/android/server/audio/AudioService;->volumeAdjustmentAllowedByLeBroadcast(II)Z

    move-result v1

    if-nez v1, :cond_1b

    and-int/lit8 v1, v15, 0x1

    if-eqz v1, :cond_1a

    .line 64
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v1, v9, v15}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 65
    const-string v1, "AS.AudioService"

    new-instance v2, Ljava/lang/StringBuilder;

    const-string v3, "Not allowed to change the volume to "

    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", stream="

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    const-string v0, ", because of le broadcasting"

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_1a
    return-void

    .line 66
    :cond_1b
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 67
    iget-object v2, v1, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 68
    monitor-enter v2

    const/4 v5, 0x0

    .line 69
    :try_start_1
    iput-object v5, v1, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 70
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 71
    invoke-virtual {v14, v11}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v10

    mul-int/lit8 v0, v0, 0xa

    .line 72
    invoke-virtual {v8, v0, v9, v13}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    move-result v0

    const/4 v1, 0x3

    if-ne v9, v1, :cond_1c

    add-int/2addr v0, v6

    :cond_1c
    if-ne v13, v1, :cond_21

    .line 73
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-interface {v3, v1}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_21

    and-int/lit8 v1, v15, 0x40

    if-nez v1, :cond_21

    .line 74
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setStreamVolume postSetAvrcpAbsoluteVolumeIndex index="

    const-string/jumbo v3, "stream="

    .line 75
    invoke-static {v0, v9, v2, v3, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    if-eqz v4, :cond_1d

    if-nez p2, :cond_1e

    .line 76
    :cond_1d
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 77
    invoke-virtual {v1, v13, v0, v11}, Lcom/android/server/audio/SoundDoseHelper;->checkSafeMediaVolume(III)Z

    move-result v1

    if-nez v1, :cond_20

    .line 78
    :cond_1e
    const-string v1, ".setA2dpDeviceVolume"

    move-object/from16 v12, p6

    invoke-virtual {v12, v1}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1f

    .line 79
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioDeviceBroker;->updateIndividualA2dpVolumes(I)V

    .line 80
    :cond_1f
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v2, 0x0

    const/16 v3, 0xf

    .line 81
    invoke-virtual {v1, v3, v2, v0}, Lcom/android/server/audio/AudioDeviceBroker;->sendIMsgNoDelay(III)V

    goto :goto_e

    :cond_20
    move-object/from16 v12, p6

    goto :goto_e

    :cond_21
    move-object/from16 v12, p6

    .line 82
    invoke-virtual {v8, v11}, Lcom/android/server/audio/AudioService;->isAbsoluteVolumeDevice(I)Z

    move-result v1

    if-eqz v1, :cond_22

    and-int/lit16 v1, v15, 0x2000

    if-nez v1, :cond_22

    .line 83
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mAbsoluteVolumeDeviceInfoMap:Ljava/util/Map;

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    check-cast v1, Landroid/util/ArrayMap;

    invoke-virtual {v1, v2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;

    .line 84
    invoke-virtual {v8, v9, v1, v0}, Lcom/android/server/audio/AudioService;->dispatchAbsoluteVolumeChanged(ILcom/android/server/audio/AudioService$AbsoluteVolumeDeviceInfo;I)V

    .line 85
    :cond_22
    :goto_e
    invoke-static {v11}, Landroid/media/AudioSystem;->isLeAudioDeviceType(I)Z

    move-result v1

    if-eqz v1, :cond_23

    .line 86
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getBluetoothContextualVolumeStream()I

    move-result v1

    if-ne v9, v1, :cond_23

    and-int/lit8 v1, v15, 0x40

    if-nez v1, :cond_23

    .line 87
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setStreamVolume postSetLeAudioVolumeIndex index="

    const-string v3, " stream="

    .line 88
    invoke-static {v0, v9, v2, v3, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 89
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    iget-object v2, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v2, v2, v9

    .line 90
    iget v2, v2, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    .line 91
    invoke-virtual {v1, v0, v2, v9}, Lcom/android/server/audio/AudioDeviceBroker;->postSetLeAudioVolumeIndex(III)V

    :cond_23
    const/high16 v1, 0x8000000

    if-ne v11, v1, :cond_24

    .line 92
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getBluetoothContextualVolumeStream()I

    move-result v1

    if-ne v9, v1, :cond_24

    .line 93
    const-string v1, "AS.AudioService"

    const-string/jumbo v2, "setStreamVolume postSetHearingAidVolumeIndex index="

    const-string v3, " stream="

    .line 94
    invoke-static {v0, v9, v2, v3, v1}, Lcom/android/server/accounts/AccountsDb$CeDatabaseHelper$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 95
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/16 v2, 0xe

    const/4 v3, 0x0

    move v4, v0

    move/from16 v5, p1

    .line 96
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioDeviceBroker;->sendIILMsg(IIIILjava/lang/Object;I)V

    :cond_24
    and-int/lit8 v1, v15, -0x21

    const/4 v2, 0x3

    if-ne v13, v2, :cond_26

    .line 97
    invoke-virtual {v8, v11}, Lcom/android/server/audio/AudioService;->isFixedVolumeDevice(I)Z

    move-result v3

    if-eqz v3, :cond_26

    or-int/lit8 v1, v1, 0x20

    if-eqz v0, :cond_26

    .line 98
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 99
    iget v3, v0, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeState:I

    if-ne v3, v2, :cond_25

    .line 100
    invoke-virtual {v0, v11}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    move-result v2

    if-eqz v2, :cond_25

    .line 101
    invoke-virtual {v0, v11}, Lcom/android/server/audio/SoundDoseHelper;->safeMediaVolumeIndex(I)I

    move-result v0

    goto :goto_f

    :cond_25
    const/4 v0, -0x1

    :goto_f
    if-gez v0, :cond_26

    .line 102
    iget v0, v14, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMax:I

    :cond_26
    move v3, v0

    move v0, v1

    .line 103
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 104
    iget-object v4, v1, Lcom/android/server/audio/SoundDoseHelper;->mSafeMediaVolumeStateLock:Ljava/lang/Object;

    .line 105
    monitor-enter v4

    .line 106
    :try_start_2
    invoke-virtual {v1, v9, v3, v11}, Lcom/android/server/audio/SoundDoseHelper;->checkSafeMediaVolume_l(III)Z

    move-result v2

    if-eqz v2, :cond_27

    .line 107
    iget-object v2, v1, Lcom/android/server/audio/SoundDoseHelper;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    invoke-virtual {v2, v0}, Lcom/android/server/audio/AudioService$VolumeController;->postDisplaySafeVolumeWarning(I)V

    .line 108
    new-instance v2, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    invoke-direct {v2, v9, v3, v0, v11}, Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;-><init>(IIII)V

    iput-object v2, v1, Lcom/android/server/audio/SoundDoseHelper;->mPendingVolumeCommand:Lcom/android/server/audio/SoundDoseHelper$StreamVolumeCommand;

    .line 109
    monitor-exit v4

    :goto_10
    move v7, v3

    goto :goto_11

    :catchall_0
    move-exception v0

    goto/16 :goto_15

    .line 110
    :cond_27
    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-object/from16 v1, p0

    move/from16 v2, p1

    move-object/from16 v4, p6

    move v5, v0

    move v6, v11

    move/from16 v7, p9

    .line 111
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/audio/AudioService;->onSetStreamVolume(IILjava/lang/String;IIZ)V

    .line 112
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    aget-object v1, v1, v9

    invoke-virtual {v1, v11}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    move-result v3

    goto :goto_10

    .line 113
    :goto_11
    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    monitor-enter v1

    const/4 v2, 0x3

    if-ne v13, v2, :cond_28

    if-eq v10, v7, :cond_28

    const/4 v13, 0x0

    .line 114
    :try_start_3
    invoke-virtual {v8, v13}, Lcom/android/server/audio/AudioService;->maybeSendSystemAudioStatusCommand(Z)V

    goto :goto_12

    :catchall_1
    move-exception v0

    goto :goto_14

    :cond_28
    const/4 v13, 0x0

    .line 115
    :goto_12
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    if-eqz p10, :cond_29

    move-object/from16 v1, p0

    move/from16 v2, p1

    move v3, v10

    move v4, v7

    move v5, v0

    move v6, v11

    .line 116
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/audio/AudioService;->sendVolumeUpdate(IIIII)V

    .line 117
    :cond_29
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    if-eqz v0, :cond_2b

    .line 118
    const-string v1, "AudioService"

    iget-object v2, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mModule:Ljava/lang/String;

    invoke-static {v1, v2}, Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 119
    iget-object v0, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mSoundFunc:[Z

    aget-boolean v11, v0, v16

    goto :goto_13

    :cond_2a
    move v11, v13

    :goto_13
    if-eqz v11, :cond_2b

    const/4 v1, 0x3

    if-ne v9, v1, :cond_2b

    if-lez v10, :cond_2b

    if-nez v7, :cond_2b

    .line 120
    iget-object v0, v8, Lcom/android/server/audio/AudioService;->mGoodCatchManager:Lcom/samsung/android/server/audio/GoodCatchManager;

    iget-object v1, v8, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v1

    .line 121
    iget-object v0, v0, Lcom/samsung/android/server/audio/GoodCatchManager;->mSemGoodCatchManager:Lcom/samsung/android/sepunion/SemGoodCatchManager;

    .line 122
    sget-object v2, Lcom/samsung/android/server/audio/GoodCatchManager;->SOUND_FUNC:[Ljava/lang/String;

    aget-object v2, v2, v16

    const/4 v3, 0x0

    const-string v4, ""

    move-object/from16 p0, v0

    move-object/from16 p1, v2

    move-object/from16 p2, p6

    move/from16 p3, v3

    move-object/from16 p4, v4

    move-object/from16 p5, v1

    invoke-virtual/range {p0 .. p5}, Lcom/samsung/android/sepunion/SemGoodCatchManager;->update(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V

    :cond_2b
    return-void

    .line 123
    :goto_14
    :try_start_4
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0

    .line 124
    :goto_15
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    throw v0

    :catchall_2
    move-exception v0

    .line 125
    :try_start_6
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v0
.end method

.method public final setStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mHardeningEnforcer:Lcom/android/server/audio/HardeningEnforcer;

    const/16 v1, 0x64

    invoke-virtual {v0, v1}, Lcom/android/server/audio/HardeningEnforcer;->blockVolumeMethod(I)Z

    move-result v0

    if-eqz v0, :cond_0

    return-void

    :cond_0
    const/4 v5, 0x0

    const/4 v8, 0x1

    move-object v1, p0

    move v2, p1

    move v3, p2

    move v4, p3

    move-object v6, p4

    move-object v7, p5

    .line 2
    invoke-virtual/range {v1 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttributionInt(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Z)V

    return-void
.end method

.method public final setStreamVolumeWithAttributionInt(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Z)V
    .locals 13

    .line 1
    move-object v0, p0

    .line 2
    move v8, p1

    .line 3
    move-object/from16 v9, p5

    .line 5
    const/16 v1, 0xa

    .line 7
    const-string v2, "AS.AudioService"

    .line 9
    if-ne v8, v1, :cond_0

    .line 11
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->canChangeAccessibilityVolume()Z

    .line 14
    move-result v1

    .line 15
    if-nez v1, :cond_0

    .line 17
    const-string v0, "Trying to call setStreamVolume() for a11y without CHANGE_ACCESSIBILITY_VOLUME  callingPackage="

    .line 19
    invoke-static {v0, v9, v2}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 22
    return-void

    .line 23
    :cond_0
    if-nez v8, :cond_1

    .line 25
    if-nez p2, :cond_1

    .line 27
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 29
    const-string v3, "android.permission.MODIFY_PHONE_STATE"

    .line 31
    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 34
    move-result v1

    .line 35
    if-eqz v1, :cond_1

    .line 37
    const-string v0, "Trying to call setStreamVolume() for STREAM_VOICE_CALL and index 0 without MODIFY_PHONE_STATE  callingPackage="

    .line 39
    invoke-static {v0, v9, v2}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 42
    return-void

    .line 43
    :cond_1
    const/16 v1, 0xb

    .line 45
    if-ne v8, v1, :cond_2

    .line 47
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 49
    const-string v3, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 51
    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 54
    move-result v1

    .line 55
    if-eqz v1, :cond_2

    .line 57
    const-string v0, "Trying to call setStreamVolume() for STREAM_ASSISTANT without MODIFY_AUDIO_ROUTING  callingPackage="

    .line 59
    invoke-static {v0, v9, v2}, Lcom/android/server/NetworkScorerAppManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 62
    return-void

    .line 63
    :cond_2
    if-nez p4, :cond_3

    .line 65
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 68
    move-result v10

    .line 69
    sget-object v11, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 71
    new-instance v12, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 73
    invoke-virtual {p0, p1, v10}, Lcom/android/server/audio/AudioService;->getStreamVolume(II)I

    .line 76
    move-result v5

    .line 77
    const/4 v6, 0x0

    .line 78
    move-object v1, v12

    .line 79
    move v2, p1

    .line 80
    move v3, p2

    .line 81
    move/from16 v4, p3

    .line 83
    move-object/from16 v7, p5

    .line 85
    invoke-direct/range {v1 .. v7}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIIIILjava/lang/String;)V

    .line 88
    invoke-virtual {v11, v12}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 91
    new-instance v1, Landroid/media/AudioDeviceAttributes;

    .line 93
    const-string v2, ""

    .line 95
    invoke-direct {v1, v10, v2}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 98
    move-object v4, v1

    .line 99
    goto :goto_0

    .line 100
    :cond_3
    move-object/from16 v4, p4

    .line 102
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 105
    move-result v10

    .line 106
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 108
    const-string v2, "android.permission.MODIFY_AUDIO_SETTINGS"

    .line 110
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 113
    move-result v1

    .line 114
    if-nez v1, :cond_4

    .line 116
    const/4 v1, 0x1

    .line 117
    :goto_1
    move v11, v1

    .line 118
    goto :goto_2

    .line 119
    :cond_4
    const/4 v1, 0x0

    .line 120
    goto :goto_1

    .line 121
    :goto_2
    const/4 v12, 0x0

    .line 122
    move-object v0, p0

    .line 123
    move v1, p1

    .line 124
    move v2, p2

    .line 125
    move/from16 v3, p3

    .line 127
    move-object/from16 v5, p5

    .line 129
    move-object/from16 v6, p5

    .line 131
    move-object/from16 v7, p6

    .line 133
    move v8, v10

    .line 134
    move v9, v11

    .line 135
    move/from16 v10, p7

    .line 137
    move v11, v12

    .line 138
    invoke-virtual/range {v0 .. v11}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 141
    return-void
.end method

.method public final setSupportedSystemUsages([I)V
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setSupportedSystemUsages_enforcePermission()V

    .line 4
    const/4 v0, 0x0

    .line 5
    :goto_0
    array-length v1, p1

    .line 6
    if-ge v0, v1, :cond_1

    .line 8
    aget v1, p1, v0

    .line 10
    invoke-static {v1}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    .line 13
    move-result v1

    .line 14
    if-eqz v1, :cond_0

    .line 16
    add-int/lit8 v0, v0, 0x1

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 21
    new-instance v1, Ljava/lang/StringBuilder;

    .line 23
    const-string v2, "Non-system usage provided: "

    .line 25
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    aget p1, p1, v0

    .line 30
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 33
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 36
    move-result-object p1

    .line 37
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 40
    throw p0

    .line 41
    :cond_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsagesLock:Ljava/lang/Object;

    .line 43
    monitor-enter v0

    .line 44
    :try_start_0
    invoke-static {p1}, Landroid/media/AudioSystem;->setSupportedSystemUsages([I)I

    .line 47
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mSupportedSystemUsages:[I

    .line 49
    monitor-exit v0

    .line 50
    return-void

    .line 51
    :catchall_0
    move-exception p0

    .line 52
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 53
    throw p0
.end method

.method public final setSurroundFormatEnabled(IZ)Z
    .locals 5

    .line 1
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->isSurroundFormat(I)Z

    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_0

    .line 7
    const-string p0, "AS.AudioService"

    .line 9
    const-string p1, "audioFormat to enable is not a surround format."

    .line 11
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 14
    const/4 p0, 0x0

    .line 15
    return p0

    .line 16
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 18
    const-string v1, "android.permission.WRITE_SETTINGS"

    .line 20
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 23
    move-result v0

    .line 24
    if-nez v0, :cond_2

    .line 26
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getEnabledFormats()Ljava/util/HashSet;

    .line 29
    move-result-object v0

    .line 30
    if-eqz p2, :cond_1

    .line 32
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 35
    move-result-object p1

    .line 36
    invoke-virtual {v0, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 39
    goto :goto_0

    .line 40
    :cond_1
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 43
    move-result-object p1

    .line 44
    invoke-virtual {v0, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 47
    :goto_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 50
    move-result-wide p1

    .line 51
    :try_start_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 53
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 54
    :try_start_1
    iget-object v2, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 56
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 58
    const-string/jumbo v3, "encoded_surround_output_enabled_formats"

    .line 61
    const-string v4, ","

    .line 63
    invoke-static {v4, v0}, Landroid/text/TextUtils;->join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;

    .line 66
    move-result-object v0

    .line 67
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 70
    invoke-static {p0, v3, v0}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 73
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 74
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 77
    const/4 p0, 0x1

    .line 78
    return p0

    .line 79
    :catchall_0
    move-exception p0

    .line 80
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 81
    :try_start_3
    throw p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 82
    :catchall_1
    move-exception p0

    .line 83
    invoke-static {p1, p2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 86
    throw p0

    .line 87
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    .line 89
    const-string p1, "Missing WRITE_SETTINGS permission"

    .line 91
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 94
    throw p0
.end method

.method public final setTestDeviceConnectionState(Landroid/media/AudioDeviceAttributes;Z)V
    .locals 10

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p1

    .line 11
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 13
    iget-object v1, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 15
    monitor-enter v1

    .line 16
    :try_start_0
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 18
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 21
    new-instance v2, Lcom/android/server/audio/AudioDeviceInventory$WiredDeviceConnectionState;

    .line 23
    const-string/jumbo v3, "com.android.server.audio"

    .line 26
    invoke-direct {v2, p1, p2, v3}, Lcom/android/server/audio/AudioDeviceInventory$WiredDeviceConnectionState;-><init>(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 29
    const/4 p1, 0x1

    .line 30
    iput-boolean p1, v2, Lcom/android/server/audio/AudioDeviceInventory$WiredDeviceConnectionState;->mForTest:Z

    .line 32
    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioDeviceInventory;->onSetWiredDeviceConnectionState(Lcom/android/server/audio/AudioDeviceInventory$WiredDeviceConnectionState;)V

    .line 35
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 36
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 38
    const/4 v8, 0x0

    .line 39
    const/4 v9, 0x0

    .line 40
    const/16 v4, 0x29

    .line 42
    const/4 v5, 0x0

    .line 43
    const/4 v6, 0x0

    .line 44
    const/4 v7, 0x0

    .line 45
    invoke-static/range {v3 .. v9}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 48
    return-void

    .line 49
    :catchall_0
    move-exception p0

    .line 50
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 51
    throw p0
.end method

.method public final setUidDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I[I[Ljava/lang/String;)I
    .locals 3

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string/jumbo v2, "setUidDeviceAffinity for "

    .line 8
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    const-string v2, " uid:"

    .line 20
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object v1

    .line 30
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    monitor-enter v0

    .line 36
    :try_start_0
    const-string v1, "Cannot change device affinity in audio policy"

    .line 38
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 41
    move-result-object p0

    .line 42
    const/4 p1, -0x1

    .line 43
    if-nez p0, :cond_0

    .line 45
    monitor-exit v0

    .line 46
    return p1

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_0

    .line 49
    :cond_0
    invoke-virtual {p0, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixRoutedToDevices([I[Ljava/lang/String;)Z

    .line 52
    move-result v1

    .line 53
    if-nez v1, :cond_1

    .line 55
    monitor-exit v0

    .line 56
    return p1

    .line 57
    :cond_1
    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setUidDeviceAffinities(I[I[Ljava/lang/String;)I

    .line 60
    move-result p0

    .line 61
    monitor-exit v0

    .line 62
    return p0

    .line 63
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 64
    throw p0
.end method

.method public final setUserIdDeviceAffinity(Landroid/media/audiopolicy/IAudioPolicyCallback;I[I[Ljava/lang/String;)I
    .locals 3

    .line 1
    const-string v0, "AS.AudioService"

    .line 3
    new-instance v1, Ljava/lang/StringBuilder;

    .line 5
    const-string/jumbo v2, "setUserIdDeviceAffinity for "

    .line 8
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    const-string v2, " user:"

    .line 20
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 26
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    move-result-object v1

    .line 30
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 35
    monitor-enter v0

    .line 36
    :try_start_0
    const-string v1, "Cannot change device affinity in audio policy"

    .line 38
    invoke-virtual {p0, p1, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 41
    move-result-object p0

    .line 42
    const/4 p1, -0x1

    .line 43
    if-nez p0, :cond_0

    .line 45
    monitor-exit v0

    .line 46
    return p1

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_0

    .line 49
    :cond_0
    invoke-virtual {p0, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->hasMixRoutedToDevices([I[Ljava/lang/String;)Z

    .line 52
    move-result v1

    .line 53
    if-nez v1, :cond_1

    .line 55
    monitor-exit v0

    .line 56
    return p1

    .line 57
    :cond_1
    invoke-virtual {p0, p2, p3, p4}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->setUserIdDeviceAffinities(I[I[Ljava/lang/String;)I

    .line 60
    move-result p0

    .line 61
    monitor-exit v0

    .line 62
    return p0

    .line 63
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 64
    throw p0
.end method

.method public final setVibrateSetting(II)V
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 3
    if-nez v0, :cond_0

    .line 5
    return-void

    .line 6
    :cond_0
    iget v0, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 8
    invoke-static {v0, p1, p2}, Landroid/media/AudioSystem;->getValueForVibrateSetting(III)I

    .line 11
    move-result p2

    .line 12
    iput p2, p0, Lcom/android/server/audio/AudioService;->mVibrateSetting:I

    .line 14
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->broadcastVibrateSetting(I)V

    .line 17
    return-void
.end method

.method public final setVolumeController(Landroid/media/IVolumeController;)V
    .locals 3

    .line 1
    const-string/jumbo v0, "set the volume controller"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 9
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 11
    const/4 v1, 0x0

    .line 12
    if-nez v0, :cond_0

    .line 14
    move-object v0, v1

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    invoke-interface {v0}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 19
    move-result-object v0

    .line 20
    :goto_0
    if-nez p1, :cond_1

    .line 22
    goto :goto_1

    .line 23
    :cond_1
    invoke-interface {p1}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 26
    move-result-object v1

    .line 27
    :goto_1
    invoke-static {v0, v1}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 30
    move-result v0

    .line 31
    if-eqz v0, :cond_2

    .line 33
    return-void

    .line 34
    :cond_2
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 36
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 38
    if-nez v0, :cond_3

    .line 40
    goto :goto_2

    .line 41
    :cond_3
    :try_start_0
    invoke-interface {v0}, Landroid/media/IVolumeController;->dismiss()V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 44
    goto :goto_2

    .line 45
    :catch_0
    move-exception v0

    .line 46
    const-string v1, "VolumeController"

    .line 48
    const-string v2, "Error calling dismiss"

    .line 50
    invoke-static {v1, v2, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 53
    :goto_2
    const/4 v0, 0x0

    .line 54
    if-eqz p1, :cond_4

    .line 56
    :try_start_1
    invoke-interface {p1}, Landroid/media/IVolumeController;->asBinder()Landroid/os/IBinder;

    .line 59
    move-result-object v1

    .line 60
    new-instance v2, Lcom/android/server/audio/AudioService$9;

    .line 62
    invoke-direct {v2, p0, p1}, Lcom/android/server/audio/AudioService$9;-><init>(Lcom/android/server/audio/AudioService;Landroid/media/IVolumeController;)V

    .line 65
    invoke-interface {v1, v2, v0}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 68
    :catch_1
    :cond_4
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 70
    iput-object p1, v1, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 72
    iput-boolean v0, v1, Lcom/android/server/audio/AudioService$VolumeController;->mVisible:Z

    .line 74
    new-instance p1, Ljava/lang/StringBuilder;

    .line 76
    const-string v0, "Volume controller: "

    .line 78
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 81
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 83
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 86
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 89
    move-result-object p0

    .line 90
    const-string p1, "AS.AudioService"

    .line 92
    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 95
    return-void
.end method

.method public final setVolumeGroupVolumeIndex(IIILjava/lang/String;Ljava/lang/String;)V
    .locals 22

    .line 1
    move/from16 v0, p1

    .line 3
    invoke-virtual/range {p0 .. p0}, Landroid/media/IAudioService$Stub;->setVolumeGroupVolumeIndex_enforcePermission()V

    .line 6
    sget-object v1, Lcom/android/server/audio/AudioService;->sVolumeGroupStates:Landroid/util/SparseArray;

    .line 8
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->indexOfKey(I)I

    .line 11
    move-result v2

    .line 12
    if-gez v2, :cond_0

    .line 14
    const-string v1, "AS.AudioService"

    .line 16
    const-string v2, ": no volume group found for id "

    .line 18
    invoke-static {v0, v2, v1}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 21
    return-void

    .line 22
    :cond_0
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 25
    move-result-object v1

    .line 26
    check-cast v1, Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 28
    sget-object v2, Lcom/android/server/audio/AudioService;->sVolumeLogger:Lcom/android/server/utils/EventLogger;

    .line 30
    new-instance v9, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;

    .line 32
    iget-object v3, v1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 34
    invoke-virtual {v3}, Landroid/media/audiopolicy/AudioVolumeGroup;->name()Ljava/lang/String;

    .line 37
    move-result-object v7

    .line 38
    const-string v3, ", user "

    .line 40
    move-object/from16 v15, p4

    .line 42
    invoke-static {v15, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 45
    move-result-object v3

    .line 46
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 49
    move-result v4

    .line 50
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 53
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 56
    move-result-object v8

    .line 57
    const/16 v4, 0x8

    .line 59
    move-object v3, v9

    .line 60
    move/from16 v5, p2

    .line 62
    move/from16 v6, p3

    .line 64
    invoke-direct/range {v3 .. v8}, Lcom/android/server/audio/AudioServiceEvents$VolumeEvent;-><init>(IIILjava/lang/String;Ljava/lang/String;)V

    .line 67
    invoke-virtual {v2, v9}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 70
    iget-object v2, v1, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 72
    iget-object v2, v2, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 74
    monitor-enter v2

    .line 75
    :try_start_0
    const-class v3, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 77
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 78
    :try_start_1
    iget-object v4, v1, Lcom/android/server/audio/AudioService$VolumeGroupState;->this$0:Lcom/android/server/audio/AudioService;

    .line 80
    iget-boolean v5, v4, Lcom/android/server/audio/AudioService;->mUseFixedVolume:Z

    .line 82
    if-eqz v5, :cond_1

    .line 84
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 85
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 86
    move/from16 v5, p2

    .line 88
    move/from16 v6, p3

    .line 90
    goto :goto_0

    .line 91
    :catchall_0
    move-exception v0

    .line 92
    goto :goto_4

    .line 93
    :catchall_1
    move-exception v0

    .line 94
    goto :goto_3

    .line 95
    :cond_1
    :try_start_3
    iget v5, v1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mPublicStreamType:I

    .line 97
    invoke-virtual {v4, v5}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 100
    move-result v4

    .line 101
    move/from16 v5, p2

    .line 103
    move/from16 v6, p3

    .line 105
    invoke-virtual {v1, v5, v4, v6}, Lcom/android/server/audio/AudioService$VolumeGroupState;->setVolumeIndex(III)V

    .line 108
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 109
    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 110
    :goto_0
    iget-object v1, v1, Lcom/android/server/audio/AudioService$VolumeGroupState;->mAudioVolumeGroup:Landroid/media/audiopolicy/AudioVolumeGroup;

    .line 112
    invoke-virtual {v1}, Landroid/media/audiopolicy/AudioVolumeGroup;->getLegacyStreamTypes()[I

    .line 115
    move-result-object v1

    .line 116
    array-length v2, v1

    .line 117
    const/4 v3, 0x0

    .line 118
    :goto_1
    if-ge v3, v2, :cond_2

    .line 120
    aget v11, v1, v3

    .line 122
    move-object/from16 v4, p0

    .line 124
    :try_start_5
    invoke-virtual {v4, v11}, Lcom/android/server/audio/AudioService;->ensureValidStreamType(I)V
    :try_end_5
    .catch Ljava/lang/IllegalArgumentException; {:try_start_5 .. :try_end_5} :catch_0

    .line 127
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 130
    move-result v18

    .line 131
    const/16 v19, 0x1

    .line 133
    const/16 v20, 0x1

    .line 135
    const/4 v14, 0x0

    .line 136
    const/16 v21, 0x0

    .line 138
    move-object/from16 v10, p0

    .line 140
    move/from16 v12, p2

    .line 142
    move/from16 v13, p3

    .line 144
    move-object/from16 v15, p4

    .line 146
    move-object/from16 v16, p4

    .line 148
    move-object/from16 v17, p5

    .line 150
    invoke-virtual/range {v10 .. v21}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILandroid/media/AudioDeviceAttributes;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZZI)V

    .line 153
    goto :goto_2

    .line 154
    :catch_0
    const-string v7, "AS.AudioService"

    .line 156
    const-string/jumbo v8, "volume group "

    .line 159
    const-string v9, " has internal streams ("

    .line 161
    const-string v10, "), do not change associated stream volume"

    .line 163
    invoke-static {v0, v11, v8, v9, v10}, Lcom/android/server/DualAppManagerService$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 166
    move-result-object v8

    .line 167
    invoke-static {v7, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 170
    :goto_2
    add-int/lit8 v3, v3, 0x1

    .line 172
    move-object/from16 v15, p4

    .line 174
    goto :goto_1

    .line 175
    :cond_2
    return-void

    .line 176
    :goto_3
    :try_start_6
    monitor-exit v3
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 177
    :try_start_7
    throw v0

    .line 178
    :goto_4
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 179
    throw v0
.end method

.method public final setVolumeLevelToLimit(Ljava/lang/String;)V
    .locals 9

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getVolumeLimitValue()I

    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x3

    .line 6
    invoke-virtual {p0, v1}, Lcom/android/server/audio/AudioService;->getDeviceForStream(I)I

    .line 9
    move-result v2

    .line 10
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 12
    aget-object v1, v3, v1

    .line 14
    invoke-virtual {v1, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 17
    move-result v1

    .line 18
    mul-int/lit8 v5, v0, 0xa

    .line 20
    if-le v1, v5, :cond_0

    .line 22
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSoundDoseHelper:Lcom/android/server/audio/SoundDoseHelper;

    .line 24
    invoke-virtual {v0, v2}, Lcom/android/server/audio/SoundDoseHelper;->safeDevicesContains(I)Z

    .line 27
    move-result v0

    .line 28
    if-eqz v0, :cond_0

    .line 30
    new-instance v0, Landroid/view/ContextThemeWrapper;

    .line 32
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 34
    const v2, 0x103012b

    .line 37
    invoke-direct {v0, v1, v2}, Landroid/view/ContextThemeWrapper;-><init>(Landroid/content/Context;I)V

    .line 40
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 42
    new-instance v2, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda4;

    .line 44
    const/4 v3, 0x0

    .line 45
    invoke-direct {v2, v3, v0}, Lcom/android/server/audio/AudioService$$ExternalSyntheticLambda4;-><init>(ILjava/lang/Object;)V

    .line 48
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 51
    const/4 v4, 0x3

    .line 52
    const/high16 v6, 0x100000

    .line 54
    const/4 v8, 0x0

    .line 55
    move-object v3, p0

    .line 56
    move-object v7, p1

    .line 57
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/audio/AudioService;->setStreamVolumeWithAttribution(IIILjava/lang/String;Ljava/lang/String;)V

    .line 60
    :cond_0
    return-void
.end method

.method public final setVolumePolicy(Landroid/media/VolumePolicy;)V
    .locals 1

    .line 1
    const-string/jumbo v0, "set volume policy"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->enforceVolumeController(Ljava/lang/String;)V

    .line 7
    if-eqz p1, :cond_0

    .line 9
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 11
    invoke-virtual {p1, v0}, Landroid/media/VolumePolicy;->equals(Ljava/lang/Object;)Z

    .line 14
    move-result v0

    .line 15
    if-nez v0, :cond_0

    .line 17
    iput-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 19
    new-instance p1, Ljava/lang/StringBuilder;

    .line 21
    const-string v0, "Volume policy changed: "

    .line 23
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 26
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumePolicy:Landroid/media/VolumePolicy;

    .line 28
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 31
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 34
    move-result-object p0

    .line 35
    const-string p1, "AS.AudioService"

    .line 37
    invoke-static {p1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 40
    :cond_0
    return-void
.end method

.method public final setWiredDeviceConnectionState(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V
    .locals 10

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->setWiredDeviceConnectionState_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->retrieveBluetoothAddress(Landroid/media/AudioDeviceAttributes;)Landroid/media/AudioDeviceAttributes;

    .line 10
    move-result-object p1

    .line 11
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getType()I

    .line 14
    move-result v0

    .line 15
    const/16 v1, 0xa

    .line 17
    const/4 v2, 0x1

    .line 18
    if-ne v0, v1, :cond_0

    .line 20
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getRole()I

    .line 23
    move-result v0

    .line 24
    const/4 v1, 0x2

    .line 25
    if-ne v0, v1, :cond_0

    .line 27
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAudioDescriptors()Ljava/util/List;

    .line 30
    move-result-object v0

    .line 31
    invoke-interface {v0}, Ljava/util/List;->isEmpty()Z

    .line 34
    move-result v0

    .line 35
    if-eqz v0, :cond_0

    .line 37
    new-instance v0, Landroid/media/AudioDeviceAttributes;

    .line 39
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getRole()I

    .line 42
    move-result v4

    .line 43
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getType()I

    .line 46
    move-result v5

    .line 47
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 50
    move-result-object v6

    .line 51
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getName()Ljava/lang/String;

    .line 54
    move-result-object v7

    .line 55
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAudioProfiles()Ljava/util/List;

    .line 58
    move-result-object v8

    .line 59
    new-instance v9, Ljava/util/ArrayList;

    .line 61
    new-instance p1, Landroid/media/AudioDescriptor;

    .line 63
    const/4 v1, 0x0

    .line 64
    sget-object v3, Lcom/android/server/audio/AudioService;->DEFAULT_ARC_AUDIO_DESCRIPTOR:[B

    .line 66
    invoke-direct {p1, v2, v1, v3}, Landroid/media/AudioDescriptor;-><init>(II[B)V

    .line 69
    invoke-static {p1}, Ljava/util/Collections;->singletonList(Ljava/lang/Object;)Ljava/util/List;

    .line 72
    move-result-object p1

    .line 73
    invoke-direct {v9, p1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 76
    move-object v3, v0

    .line 77
    invoke-direct/range {v3 .. v9}, Landroid/media/AudioDeviceAttributes;-><init>(IILjava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V

    .line 80
    move-object p1, v0

    .line 81
    :cond_0
    if-eq p2, v2, :cond_2

    .line 83
    if-nez p2, :cond_1

    .line 85
    goto :goto_0

    .line 86
    :cond_1
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 88
    const-string p1, "Invalid state "

    .line 90
    invoke-static {p2, p1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 93
    move-result-object p1

    .line 94
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 97
    throw p0

    .line 98
    :cond_2
    :goto_0
    new-instance v0, Landroid/media/MediaMetrics$Item;

    .line 100
    const-string v1, "audio.service.setWiredDeviceConnectionState"

    .line 102
    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 105
    sget-object v1, Landroid/media/MediaMetrics$Property;->ADDRESS:Landroid/media/MediaMetrics$Key;

    .line 107
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getAddress()Ljava/lang/String;

    .line 110
    move-result-object v3

    .line 111
    invoke-virtual {v0, v1, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 114
    move-result-object v0

    .line 115
    sget-object v1, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 117
    invoke-virtual {v0, v1, p3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 120
    move-result-object v0

    .line 121
    sget-object v1, Landroid/media/MediaMetrics$Property;->DEVICE:Landroid/media/MediaMetrics$Key;

    .line 123
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 126
    move-result v3

    .line 127
    invoke-static {v3}, Landroid/media/AudioSystem;->getDeviceName(I)Ljava/lang/String;

    .line 130
    move-result-object v3

    .line 131
    invoke-virtual {v0, v1, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 134
    move-result-object v0

    .line 135
    sget-object v1, Landroid/media/MediaMetrics$Property;->NAME:Landroid/media/MediaMetrics$Key;

    .line 137
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getName()Ljava/lang/String;

    .line 140
    move-result-object v3

    .line 141
    invoke-virtual {v0, v1, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 144
    move-result-object v0

    .line 145
    sget-object v1, Landroid/media/MediaMetrics$Property;->STATE:Landroid/media/MediaMetrics$Key;

    .line 147
    if-ne p2, v2, :cond_3

    .line 149
    const-string/jumbo v2, "connected"

    .line 152
    goto :goto_1

    .line 153
    :cond_3
    const-string/jumbo v2, "disconnected"

    .line 156
    :goto_1
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 159
    move-result-object v0

    .line 160
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 163
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 165
    iget-object v1, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 167
    monitor-enter v1

    .line 168
    :try_start_0
    iget-object v0, v0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 170
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/audio/AudioDeviceInventory;->setWiredDeviceConnectionState(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 173
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 174
    invoke-virtual {p1}, Landroid/media/AudioDeviceAttributes;->getInternalType()I

    .line 177
    move-result p1

    .line 178
    const/high16 p2, -0x78000000

    .line 180
    if-ne p1, p2, :cond_4

    .line 182
    const-string p1, "AS.AudioService"

    .line 184
    const-string p2, "Hdmi Audio System Client is updated"

    .line 186
    invoke-static {p1, p2}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 189
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mHdmiClientLock:Ljava/lang/Object;

    .line 191
    monitor-enter p1

    .line 192
    :try_start_1
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mHdmiManager:Landroid/hardware/hdmi/HdmiControlManager;

    .line 194
    invoke-virtual {p2}, Landroid/hardware/hdmi/HdmiControlManager;->getAudioSystemClient()Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 197
    move-result-object p2

    .line 198
    iput-object p2, p0, Lcom/android/server/audio/AudioService;->mHdmiAudioSystemClient:Landroid/hardware/hdmi/HdmiAudioSystemClient;

    .line 200
    monitor-exit p1

    .line 201
    goto :goto_2

    .line 202
    :catchall_0
    move-exception p0

    .line 203
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 204
    throw p0

    .line 205
    :cond_4
    :goto_2
    return-void

    .line 206
    :catchall_1
    move-exception p0

    .line 207
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 208
    throw p0
.end method

.method public final shouldNotificationSoundPlay(Landroid/media/AudioAttributes;)Z
    .locals 6

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->shouldNotificationSoundPlay_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-static {p1}, Landroid/media/AudioAttributes;->toLegacyStreamType(Landroid/media/AudioAttributes;)I

    .line 10
    move-result v0

    .line 11
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->getStreamVolume(I)I

    .line 14
    move-result v1

    .line 15
    const/4 v2, 0x0

    .line 16
    if-nez v1, :cond_0

    .line 18
    const-string p0, "AS.AudioService"

    .line 20
    new-instance v1, Ljava/lang/StringBuilder;

    .line 22
    const-string/jumbo v3, "shouldNotificationSoundPlay false: muted stream:"

    .line 25
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 31
    const-string v0, " attr:"

    .line 33
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 36
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 39
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    move-result-object p1

    .line 43
    invoke-static {p0, p1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    return v2

    .line 47
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 49
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 52
    sget-object v1, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 54
    monitor-enter v1

    .line 55
    :try_start_0
    iget-object v3, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 57
    invoke-virtual {v3}, Ljava/util/Stack;->empty()Z

    .line 60
    move-result v3

    .line 61
    const/4 v4, -0x1

    .line 62
    if-eqz v3, :cond_1

    .line 64
    monitor-exit v1

    .line 65
    :goto_0
    move v0, v4

    .line 66
    goto :goto_1

    .line 67
    :catchall_0
    move-exception p0

    .line 68
    goto :goto_2

    .line 69
    :cond_1
    iget-object v0, v0, Lcom/android/server/audio/MediaFocusControl;->mFocusStack:Ljava/util/Stack;

    .line 71
    invoke-virtual {v0}, Ljava/util/Stack;->peek()Ljava/lang/Object;

    .line 74
    move-result-object v0

    .line 75
    check-cast v0, Lcom/android/server/audio/FocusRequester;

    .line 77
    iget v3, v0, Lcom/android/server/audio/FocusRequester;->mFocusGainRequest:I

    .line 79
    const/4 v5, 0x4

    .line 80
    if-eq v3, v5, :cond_2

    .line 82
    monitor-exit v1

    .line 83
    goto :goto_0

    .line 84
    :cond_2
    iget v0, v0, Lcom/android/server/audio/FocusRequester;->mCallingUid:I

    .line 86
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 87
    :goto_1
    const/4 v1, 0x1

    .line 88
    if-ne v0, v4, :cond_3

    .line 90
    return v1

    .line 91
    :cond_3
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 93
    invoke-virtual {p0, v0}, Lcom/android/server/audio/RecordingActivityMonitor;->isRecordingActiveForUid(I)Z

    .line 96
    move-result p0

    .line 97
    if-eqz p0, :cond_4

    .line 99
    const-string p0, "AS.AudioService"

    .line 101
    new-instance v1, Ljava/lang/StringBuilder;

    .line 103
    const-string/jumbo v3, "shouldNotificationSoundPlay false: exclusive focus owner recording  uid:"

    .line 106
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 109
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 112
    const-string v0, " attr:"

    .line 114
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 117
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 120
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 123
    move-result-object p1

    .line 124
    invoke-static {p0, p1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 127
    return v2

    .line 128
    :cond_4
    return v1

    .line 129
    :goto_2
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 130
    throw p0
.end method

.method public final shouldShowRingtoneVolume()Z
    .locals 0

    .line 1
    sget-boolean p0, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 3
    xor-int/lit8 p0, p0, 0x1

    .line 5
    return p0
.end method

.method public final shouldVibrate(I)Z
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mHasVibrator:Z

    .line 3
    const/4 v1, 0x0

    .line 4
    if-nez v0, :cond_0

    .line 6
    return v1

    .line 7
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->getVibrateSetting(I)I

    .line 10
    move-result p1

    .line 11
    const/4 v0, 0x1

    .line 12
    if-eq p1, v0, :cond_3

    .line 14
    const/4 v2, 0x2

    .line 15
    if-eq p1, v2, :cond_1

    .line 17
    return v1

    .line 18
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 21
    move-result p0

    .line 22
    if-ne p0, v0, :cond_2

    .line 24
    move v1, v0

    .line 25
    :cond_2
    return v1

    .line 26
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 29
    move-result p0

    .line 30
    if-eqz p0, :cond_4

    .line 32
    move v1, v0

    .line 33
    :cond_4
    return v1
.end method

.method public final startBluetoothSco(Landroid/os/IBinder;I)V
    .locals 5

    .line 1
    const-string/jumbo v0, "startBluetoothSco()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v0

    .line 15
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 18
    move-result v1

    .line 19
    const/16 v2, 0x12

    .line 21
    if-ge p2, v2, :cond_1

    .line 23
    const/4 p2, 0x0

    .line 24
    goto :goto_0

    .line 25
    :cond_1
    const/4 p2, -0x1

    .line 26
    :goto_0
    const-string/jumbo v2, "startBluetoothSco()) from u/pid:"

    .line 29
    const-string v3, "/"

    .line 31
    invoke-static {v0, v1, v2, v3}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 34
    move-result-object v2

    .line 35
    new-instance v3, Landroid/media/MediaMetrics$Item;

    .line 37
    const-string v4, "audio.bluetooth"

    .line 39
    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 42
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 45
    move-result-object v3

    .line 46
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 49
    move-result-object v1

    .line 50
    sget-object v3, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 52
    const-string/jumbo v4, "startBluetoothSco"

    .line 55
    invoke-virtual {v1, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 58
    move-result-object v1

    .line 59
    sget-object v3, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 61
    invoke-static {p2}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    .line 64
    move-result-object v4

    .line 65
    invoke-virtual {v1, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 68
    move-result-object v1

    .line 69
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 72
    invoke-virtual {p0, v0, p1, v2, p2}, Lcom/android/server/audio/AudioService;->startBluetoothScoInt(ILandroid/os/IBinder;Ljava/lang/String;I)V

    .line 75
    return-void
.end method

.method public final startBluetoothScoInt(ILandroid/os/IBinder;Ljava/lang/String;I)V
    .locals 13

    .line 1
    move-object v0, p0

    .line 2
    new-instance v1, Landroid/media/MediaMetrics$Item;

    .line 4
    const-string v2, "audio.bluetooth"

    .line 6
    invoke-direct {v1, v2}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 9
    sget-object v2, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 11
    const-string/jumbo v3, "startBluetoothScoInt"

    .line 14
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 17
    move-result-object v1

    .line 18
    sget-object v2, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 20
    invoke-static/range {p4 .. p4}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    .line 23
    move-result-object v3

    .line 24
    invoke-virtual {v1, v2, v3}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 27
    move-result-object v1

    .line 28
    const-string/jumbo v2, "startBluetoothSco()"

    .line 31
    invoke-virtual {p0, v2}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 34
    move-result v2

    .line 35
    if-eqz v2, :cond_2

    .line 37
    iget-boolean v2, v0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 39
    if-nez v2, :cond_0

    .line 41
    goto :goto_2

    .line 42
    :cond_0
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 44
    const-string v3, "android.permission.MODIFY_PHONE_STATE"

    .line 46
    invoke-virtual {v2, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 49
    move-result v2

    .line 50
    if-nez v2, :cond_1

    .line 52
    const/4 v2, 0x1

    .line 53
    :goto_0
    move v10, v2

    .line 54
    goto :goto_1

    .line 55
    :cond_1
    const/4 v2, 0x0

    .line 56
    goto :goto_0

    .line 57
    :goto_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 60
    move-result-wide v11

    .line 61
    :try_start_0
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 63
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 66
    new-instance v2, Ljava/lang/StringBuilder;

    .line 68
    const-string/jumbo v3, "startBluetoothScoForClient, uid: "

    .line 71
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 74
    move v5, p1

    .line 75
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 78
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 81
    move-result-object v2

    .line 82
    const-string v3, "AS.AudioDeviceBroker"

    .line 84
    invoke-static {v3, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 87
    new-instance v2, Lcom/android/server/audio/AudioDeviceBroker$CommunicationDeviceInfo;

    .line 89
    new-instance v6, Landroid/media/AudioDeviceAttributes;

    .line 91
    const-string v3, ""

    .line 93
    const/16 v4, 0x10

    .line 95
    invoke-direct {v6, v4, v3}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 98
    const/4 v7, 0x1

    .line 99
    move-object v3, v2

    .line 100
    move-object v4, p2

    .line 101
    move v5, p1

    .line 102
    move/from16 v8, p4

    .line 104
    move-object/from16 v9, p3

    .line 106
    invoke-direct/range {v3 .. v10}, Lcom/android/server/audio/AudioDeviceBroker$CommunicationDeviceInfo;-><init>(Landroid/os/IBinder;ILandroid/media/AudioDeviceAttributes;ZILjava/lang/String;Z)V

    .line 109
    const/16 v3, 0x2a

    .line 111
    const/4 v4, 0x2

    .line 112
    invoke-virtual {v0, v3, v4, v2}, Lcom/android/server/audio/AudioDeviceBroker;->sendLMsgNoDelay(IILjava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 115
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 118
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 121
    return-void

    .line 122
    :catchall_0
    move-exception v0

    .line 123
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 126
    throw v0

    .line 127
    :cond_2
    :goto_2
    sget-object v0, Landroid/media/MediaMetrics$Property;->EARLY_RETURN:Landroid/media/MediaMetrics$Key;

    .line 129
    const-string/jumbo v2, "permission or systemReady"

    .line 132
    invoke-virtual {v1, v0, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 135
    move-result-object v0

    .line 136
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 139
    return-void
.end method

.method public final startBluetoothScoVirtualCall(Landroid/os/IBinder;)V
    .locals 6

    .line 1
    const-string/jumbo v0, "startBluetoothScoVirtualCall()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-nez v0, :cond_0

    .line 10
    return-void

    .line 11
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 14
    move-result v0

    .line 15
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 18
    move-result v1

    .line 19
    const-string/jumbo v2, "startBluetoothScoVirtualCall()) from u/pid:"

    .line 22
    const-string v3, "/"

    .line 24
    invoke-static {v0, v1, v2, v3}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 27
    move-result-object v2

    .line 28
    new-instance v3, Landroid/media/MediaMetrics$Item;

    .line 30
    const-string v4, "audio.bluetooth"

    .line 32
    invoke-direct {v3, v4}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 35
    invoke-virtual {v3, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 38
    move-result-object v3

    .line 39
    invoke-virtual {v3, v1}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 42
    move-result-object v1

    .line 43
    sget-object v3, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 45
    const-string/jumbo v4, "startBluetoothScoVirtualCall"

    .line 48
    invoke-virtual {v1, v3, v4}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 51
    move-result-object v1

    .line 52
    sget-object v3, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 54
    const/4 v4, 0x0

    .line 55
    invoke-static {v4}, Lcom/android/server/audio/BtHelper;->scoAudioModeToString(I)Ljava/lang/String;

    .line 58
    move-result-object v5

    .line 59
    invoke-virtual {v1, v3, v5}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 62
    move-result-object v1

    .line 63
    invoke-virtual {v1}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 66
    invoke-virtual {p0, v0, p1, v2, v4}, Lcom/android/server/audio/AudioService;->startBluetoothScoInt(ILandroid/os/IBinder;Ljava/lang/String;I)V

    .line 69
    return-void
.end method

.method public final startLoudnessCodecUpdates(I)V
    .locals 6

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string v0, "Already started loudness updates for config: "

    .line 8
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 11
    move-result v1

    .line 12
    new-instance v2, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;

    .line 14
    invoke-direct {v2, p1, v1}, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;-><init>(II)V

    .line 17
    iget-object v3, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 19
    monitor-enter v3

    .line 20
    :try_start_0
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 22
    invoke-virtual {v4, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 25
    move-result v4

    .line 26
    if-eqz v4, :cond_0

    .line 28
    const-string p0, "AS.LoudnessCodecHelper"

    .line 30
    new-instance p1, Ljava/lang/StringBuilder;

    .line 32
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 35
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 38
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 41
    move-result-object p1

    .line 42
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 45
    monitor-exit v3

    .line 46
    goto :goto_0

    .line 47
    :catchall_0
    move-exception p0

    .line 48
    goto :goto_2

    .line 49
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 51
    new-instance v4, Ljava/util/HashSet;

    .line 53
    invoke-direct {v4}, Ljava/util/HashSet;-><init>()V

    .line 56
    invoke-virtual {v0, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 59
    new-instance v0, Ljava/util/HashSet;

    .line 61
    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    .line 64
    iget-object v4, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 66
    invoke-virtual {v4, v2, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 69
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 70
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 73
    move-result-object v2

    .line 74
    :try_start_1
    iget-object v3, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mAudioService:Lcom/android/server/audio/AudioService;

    .line 76
    invoke-virtual {v3}, Lcom/android/server/audio/AudioService;->getActivePlaybackConfigurations()Ljava/util/List;

    .line 79
    move-result-object v3

    .line 80
    invoke-interface {v3}, Ljava/util/List;->stream()Ljava/util/stream/Stream;

    .line 83
    move-result-object v3

    .line 84
    new-instance v4, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda1;

    .line 86
    const/4 v5, 0x0

    .line 87
    invoke-direct {v4, p1, v1, v5}, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda1;-><init>(III)V

    .line 90
    invoke-interface {v3, v4}, Ljava/util/stream/Stream;->filter(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;

    .line 93
    move-result-object p1

    .line 94
    new-instance v3, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda2;

    .line 96
    invoke-direct {v3, p0, v0, v1}, Lcom/android/server/audio/LoudnessCodecHelper$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/audio/LoudnessCodecHelper;Ljava/util/HashSet;I)V

    .line 99
    invoke-interface {p1, v3}, Ljava/util/stream/Stream;->forEach(Ljava/util/function/Consumer;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 102
    if-eqz v2, :cond_1

    .line 104
    invoke-interface {v2}, Landroid/media/permission/SafeCloseable;->close()V

    .line 107
    :cond_1
    :goto_0
    return-void

    .line 108
    :catchall_1
    move-exception p0

    .line 109
    if-eqz v2, :cond_2

    .line 111
    :try_start_2
    invoke-interface {v2}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 114
    goto :goto_1

    .line 115
    :catchall_2
    move-exception p1

    .line 116
    invoke-virtual {p0, p1}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 119
    :cond_2
    :goto_1
    throw p0

    .line 120
    :goto_2
    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 121
    throw p0
.end method

.method public final startWatchingRoutes(Landroid/media/IAudioRoutesObserver;)Landroid/media/AudioRoutesInfo;
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 3
    iget-object v0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceStateLock:Ljava/lang/Object;

    .line 5
    monitor-enter v0

    .line 6
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 8
    iget-object v1, p0, Lcom/android/server/audio/AudioDeviceInventory;->mCurAudioRoutes:Landroid/media/AudioRoutesInfo;

    .line 10
    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11
    :try_start_1
    new-instance v2, Landroid/media/AudioRoutesInfo;

    .line 13
    iget-object v3, p0, Lcom/android/server/audio/AudioDeviceInventory;->mCurAudioRoutes:Landroid/media/AudioRoutesInfo;

    .line 15
    invoke-direct {v2, v3}, Landroid/media/AudioRoutesInfo;-><init>(Landroid/media/AudioRoutesInfo;)V

    .line 18
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mRoutesObservers:Landroid/os/RemoteCallbackList;

    .line 20
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 23
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 24
    :try_start_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 25
    return-object v2

    .line 26
    :catchall_0
    move-exception p0

    .line 27
    goto :goto_0

    .line 28
    :catchall_1
    move-exception p0

    .line 29
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 30
    :try_start_4
    throw p0

    .line 31
    :goto_0
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 32
    throw p0
.end method

.method public final stopBluetoothSco(Landroid/os/IBinder;)V
    .locals 13

    .line 1
    const-string/jumbo v0, "stopBluetoothSco()"

    .line 4
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->checkAudioSettingsPermission(Ljava/lang/String;)Z

    .line 7
    move-result v0

    .line 8
    if-eqz v0, :cond_2

    .line 10
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 12
    if-nez v0, :cond_0

    .line 14
    goto/16 :goto_2

    .line 16
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 19
    move-result v0

    .line 20
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 23
    move-result v9

    .line 24
    const-string/jumbo v1, "stopBluetoothSco()) from u/pid:"

    .line 27
    const-string v2, "/"

    .line 29
    invoke-static {v0, v9, v1, v2}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 32
    move-result-object v7

    .line 33
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 35
    const-string v2, "android.permission.MODIFY_PHONE_STATE"

    .line 37
    invoke-virtual {v1, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    .line 40
    move-result v1

    .line 41
    if-nez v1, :cond_1

    .line 43
    const/4 v1, 0x1

    .line 44
    :goto_0
    move v8, v1

    .line 45
    goto :goto_1

    .line 46
    :cond_1
    const/4 v1, 0x0

    .line 47
    goto :goto_0

    .line 48
    :goto_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 51
    move-result-wide v10

    .line 52
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 54
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 57
    new-instance v1, Ljava/lang/StringBuilder;

    .line 59
    const-string/jumbo v2, "stopBluetoothScoForClient, uid: "

    .line 62
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 65
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 68
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 71
    move-result-object v1

    .line 72
    const-string v2, "AS.AudioDeviceBroker"

    .line 74
    invoke-static {v2, v1}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    new-instance v12, Lcom/android/server/audio/AudioDeviceBroker$CommunicationDeviceInfo;

    .line 79
    new-instance v4, Landroid/media/AudioDeviceAttributes;

    .line 81
    const-string v1, ""

    .line 83
    const/16 v2, 0x10

    .line 85
    invoke-direct {v4, v2, v1}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 88
    const/4 v5, 0x0

    .line 89
    const/4 v6, -0x1

    .line 90
    move-object v1, v12

    .line 91
    move-object v2, p1

    .line 92
    move v3, v0

    .line 93
    invoke-direct/range {v1 .. v8}, Lcom/android/server/audio/AudioDeviceBroker$CommunicationDeviceInfo;-><init>(Landroid/os/IBinder;ILandroid/media/AudioDeviceAttributes;ZILjava/lang/String;Z)V

    .line 96
    const/16 p1, 0x2a

    .line 98
    const/4 v1, 0x2

    .line 99
    invoke-virtual {p0, p1, v1, v12}, Lcom/android/server/audio/AudioDeviceBroker;->sendLMsgNoDelay(IILjava/lang/Object;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 102
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 105
    new-instance p0, Landroid/media/MediaMetrics$Item;

    .line 107
    const-string p1, "audio.bluetooth"

    .line 109
    invoke-direct {p0, p1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 112
    invoke-virtual {p0, v0}, Landroid/media/MediaMetrics$Item;->setUid(I)Landroid/media/MediaMetrics$Item;

    .line 115
    move-result-object p0

    .line 116
    invoke-virtual {p0, v9}, Landroid/media/MediaMetrics$Item;->setPid(I)Landroid/media/MediaMetrics$Item;

    .line 119
    move-result-object p0

    .line 120
    sget-object p1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 122
    const-string/jumbo v0, "stopBluetoothSco"

    .line 125
    invoke-virtual {p0, p1, v0}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 128
    move-result-object p0

    .line 129
    sget-object p1, Landroid/media/MediaMetrics$Property;->SCO_AUDIO_MODE:Landroid/media/MediaMetrics$Key;

    .line 131
    const-string v0, "SCO_MODE_UNDEFINED"

    .line 133
    invoke-virtual {p0, p1, v0}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 136
    move-result-object p0

    .line 137
    invoke-virtual {p0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 140
    return-void

    .line 141
    :catchall_0
    move-exception p0

    .line 142
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 145
    throw p0

    .line 146
    :cond_2
    :goto_2
    return-void
.end method

.method public final stopLoudnessCodecUpdates(I)V
    .locals 8

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string v0, "Loudness updates are already stopped config: "

    .line 8
    const-string v1, "Loudness updates are already stopped config: "

    .line 10
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 13
    move-result v2

    .line 14
    new-instance v3, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;

    .line 16
    invoke-direct {v3, p1, v2}, Lcom/android/server/audio/LoudnessCodecHelper$LoudnessTrackId;-><init>(II)V

    .line 19
    iget-object p1, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLock:Ljava/lang/Object;

    .line 21
    monitor-enter p1

    .line 22
    :try_start_0
    iget-object v2, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 24
    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 27
    move-result v2

    .line 28
    if-nez v2, :cond_0

    .line 30
    const-string p0, "AS.LoudnessCodecHelper"

    .line 32
    new-instance v0, Ljava/lang/StringBuilder;

    .line 34
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 37
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 43
    move-result-object v0

    .line 44
    invoke-static {p0, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    monitor-exit p1

    .line 48
    goto :goto_1

    .line 49
    :catchall_0
    move-exception p0

    .line 50
    goto :goto_2

    .line 51
    :cond_0
    iget-object v1, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 53
    invoke-virtual {v1, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 56
    move-result-object v1

    .line 57
    check-cast v1, Ljava/util/Set;

    .line 59
    if-nez v1, :cond_1

    .line 61
    const-string p0, "AS.LoudnessCodecHelper"

    .line 63
    new-instance v1, Ljava/lang/StringBuilder;

    .line 65
    invoke-direct {v1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 68
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 71
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 74
    move-result-object v0

    .line 75
    invoke-static {p0, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 78
    monitor-exit p1

    .line 79
    goto :goto_1

    .line 80
    :cond_1
    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    .line 83
    move-result-object v0

    .line 84
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 87
    move-result v1

    .line 88
    if-eqz v1, :cond_2

    .line 90
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 93
    move-result-object v1

    .line 94
    check-cast v1, Ljava/lang/Integer;

    .line 96
    sget-object v2, Lcom/android/server/audio/LoudnessCodecHelper;->sLogger:Lcom/android/server/utils/EventLogger;

    .line 98
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 101
    move-result v4

    .line 102
    iget-object v5, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToPidCache:Landroid/util/SparseIntArray;

    .line 104
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 107
    move-result v6

    .line 108
    const/4 v7, -0x1

    .line 109
    invoke-virtual {v5, v6, v7}, Landroid/util/SparseIntArray;->get(II)I

    .line 112
    move-result v5

    .line 113
    new-instance v6, Lcom/android/server/audio/AudioServiceEvents$LoudnessEvent;

    .line 115
    const/4 v7, 0x1

    .line 116
    invoke-direct {v6, v7, v4, v5}, Lcom/android/server/audio/AudioServiceEvents$LoudnessEvent;-><init>(III)V

    .line 119
    invoke-virtual {v2, v6}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 122
    iget-object v2, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToDeviceIdCache:Landroid/util/SparseIntArray;

    .line 124
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 127
    move-result v4

    .line 128
    invoke-virtual {v2, v4}, Landroid/util/SparseIntArray;->delete(I)V

    .line 131
    iget-object v2, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mPiidToPidCache:Landroid/util/SparseIntArray;

    .line 133
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 136
    move-result v1

    .line 137
    invoke-virtual {v2, v1}, Landroid/util/SparseIntArray;->delete(I)V

    .line 140
    goto :goto_0

    .line 141
    :cond_2
    iget-object v0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigPiids:Ljava/util/HashMap;

    .line 143
    invoke-virtual {v0, v3}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 146
    iget-object p0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mStartedConfigInfo:Ljava/util/HashMap;

    .line 148
    invoke-virtual {p0, v3}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 151
    monitor-exit p1

    .line 152
    :goto_1
    return-void

    .line 153
    :goto_2
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 154
    throw p0
.end method

.method public final supportsBluetoothVariableLatency()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->supportsBluetoothVariableLatency_enforcePermission()V

    .line 4
    invoke-static {}, Landroid/media/permission/ClearCallingIdentityContext;->create()Landroid/media/permission/SafeCloseable;

    .line 7
    move-result-object p0

    .line 8
    :try_start_0
    invoke-static {}, Landroid/media/AudioSystem;->supportsBluetoothVariableLatency()Z

    .line 11
    move-result v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12
    if-eqz p0, :cond_0

    .line 14
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V

    .line 17
    :cond_0
    return v0

    .line 18
    :catchall_0
    move-exception v0

    .line 19
    if-eqz p0, :cond_1

    .line 21
    :try_start_1
    invoke-interface {p0}, Landroid/media/permission/SafeCloseable;->close()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 24
    goto :goto_0

    .line 25
    :catchall_1
    move-exception p0

    .line 26
    invoke-virtual {v0, p0}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 29
    :cond_1
    :goto_0
    throw v0
.end method

.method public final trackPlayer(Landroid/media/PlayerBase$PlayerIdCard;)I
    .locals 5

    .line 1
    if-eqz p1, :cond_0

    .line 3
    iget-object v0, p1, Landroid/media/PlayerBase$PlayerIdCard;->mAttributes:Landroid/media/AudioAttributes;

    .line 5
    if-eqz v0, :cond_0

    .line 7
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V

    .line 10
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 12
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 15
    invoke-static {}, Landroid/media/AudioSystem;->newAudioPlayerId()I

    .line 18
    move-result v0

    .line 19
    const-string v1, "AS.PlaybackActivityMon"

    .line 21
    new-instance v2, Ljava/lang/StringBuilder;

    .line 23
    const-string/jumbo v3, "trackPlayer() new piid="

    .line 26
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 29
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 32
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 35
    move-result-object v2

    .line 36
    invoke-static {v1, v2}, Landroid/util/Log;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    const/4 v1, -0x1

    .line 40
    if-ne v0, v1, :cond_1

    .line 42
    const-string p0, "AS.PlaybackActivityMon"

    .line 44
    const-string/jumbo p1, "invalid piid assigned from AudioSystem"

    .line 47
    invoke-static {p0, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 50
    goto/16 :goto_2

    .line 52
    :cond_1
    new-instance v1, Landroid/media/AudioPlaybackConfiguration;

    .line 54
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 57
    move-result v2

    .line 58
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 61
    move-result v3

    .line 62
    invoke-direct {v1, p1, v0, v2, v3}, Landroid/media/AudioPlaybackConfiguration;-><init>(Landroid/media/PlayerBase$PlayerIdCard;III)V

    .line 65
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 68
    move-result-object p1

    .line 69
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getTags()Ljava/util/Set;

    .line 72
    move-result-object p1

    .line 73
    const-string v2, "FAST_PRE_OPEN"

    .line 75
    invoke-interface {p1, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 78
    move-result p1

    .line 79
    if-eqz p1, :cond_2

    .line 81
    const-string p0, "AS.PlaybackActivityMon"

    .line 83
    new-instance p1, Ljava/lang/StringBuilder;

    .line 85
    const-string v1, "Skip piid "

    .line 87
    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 90
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 93
    const-string v1, " by dummy audio for fast pre open"

    .line 95
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 98
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 101
    move-result-object p1

    .line 102
    invoke-static {p0, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 105
    goto/16 :goto_2

    .line 107
    :cond_2
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->init()V

    .line 110
    iget-object p1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 112
    monitor-enter p1

    .line 113
    :try_start_0
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    .line 116
    move-result v2

    .line 117
    iget-object v3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 119
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 122
    move-result-object v4

    .line 123
    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 126
    move-result v3

    .line 127
    if-eqz v3, :cond_4

    .line 129
    iget-object v3, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mAllowedCapturePolicies:Ljava/util/HashMap;

    .line 131
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 134
    move-result-object v2

    .line 135
    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 138
    move-result-object v2

    .line 139
    check-cast v2, Ljava/lang/Integer;

    .line 141
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 144
    move-result v2

    .line 145
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 148
    move-result-object v3

    .line 149
    invoke-virtual {v3}, Landroid/media/AudioAttributes;->getAllowedCapturePolicy()I

    .line 152
    move-result v3

    .line 153
    if-lt v3, v2, :cond_3

    .line 155
    goto :goto_0

    .line 156
    :cond_3
    new-instance v3, Landroid/media/AudioAttributes$Builder;

    .line 158
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 161
    move-result-object v4

    .line 162
    invoke-direct {v3, v4}, Landroid/media/AudioAttributes$Builder;-><init>(Landroid/media/AudioAttributes;)V

    .line 165
    invoke-virtual {v3, v2}, Landroid/media/AudioAttributes$Builder;->setAllowedCapturePolicy(I)Landroid/media/AudioAttributes$Builder;

    .line 168
    move-result-object v2

    .line 169
    invoke-virtual {v2}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 172
    move-result-object v2

    .line 173
    invoke-virtual {v1, v2}, Landroid/media/AudioPlaybackConfiguration;->handleAudioAttributesEvent(Landroid/media/AudioAttributes;)Z

    .line 176
    goto :goto_0

    .line 177
    :catchall_0
    move-exception p0

    .line 178
    goto :goto_3

    .line 179
    :cond_4
    :goto_0
    monitor-exit p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 180
    iget-object p1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mContext:Landroid/content/Context;

    .line 182
    invoke-virtual {p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 185
    move-result-object p1

    .line 186
    invoke-virtual {v1}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    .line 189
    move-result v2

    .line 190
    invoke-virtual {p1, v2}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;

    .line 193
    move-result-object p1

    .line 194
    sget-object v2, Lcom/android/server/audio/PlaybackActivityMonitor;->sEventLogger:Lcom/android/server/utils/EventLogger;

    .line 196
    new-instance v3, Lcom/android/server/audio/PlaybackActivityMonitor$NewPlayerEvent;

    .line 198
    if-eqz p1, :cond_5

    .line 200
    array-length v4, p1

    .line 201
    if-lez v4, :cond_5

    .line 203
    const/4 v4, 0x0

    .line 204
    aget-object p1, p1, v4

    .line 206
    goto :goto_1

    .line 207
    :cond_5
    const/4 p1, 0x0

    .line 208
    :goto_1
    invoke-direct {v3, v1, p1}, Lcom/android/server/audio/PlaybackActivityMonitor$NewPlayerEvent;-><init>(Landroid/media/AudioPlaybackConfiguration;Ljava/lang/String;)V

    .line 211
    invoke-virtual {v2, v3}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 214
    iget-object v2, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayerLock:Ljava/lang/Object;

    .line 216
    monitor-enter v2

    .line 217
    :try_start_1
    iget-object p1, p0, Lcom/android/server/audio/PlaybackActivityMonitor;->mPlayers:Ljava/util/HashMap;

    .line 219
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 222
    move-result-object v3

    .line 223
    invoke-virtual {p1, v3, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 226
    invoke-virtual {p0, v1}, Lcom/android/server/audio/PlaybackActivityMonitor;->maybeMutePlayerAwaitingConnection(Landroid/media/AudioPlaybackConfiguration;)V

    .line 229
    monitor-exit v2

    .line 230
    :goto_2
    return v0

    .line 231
    :catchall_1
    move-exception p0

    .line 232
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 233
    throw p0

    .line 234
    :goto_3
    :try_start_2
    monitor-exit p1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 235
    throw p0
.end method

.method public final trackRecorder(Landroid/os/IBinder;)I
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const/4 v0, -0x1

    .line 7
    if-nez p1, :cond_0

    .line 9
    const-string p0, "AudioService.RecordingActivityMonitor"

    .line 11
    const-string/jumbo p1, "trackRecorder called with null token"

    .line 14
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 17
    goto :goto_0

    .line 18
    :cond_0
    invoke-static {}, Landroid/media/AudioSystem;->newAudioRecorderId()I

    .line 21
    move-result v1

    .line 22
    new-instance v2, Lcom/android/server/audio/RecordingActivityMonitor$RecorderDeathHandler;

    .line 24
    invoke-direct {v2, v1, p1}, Lcom/android/server/audio/RecordingActivityMonitor$RecorderDeathHandler;-><init>(ILandroid/os/IBinder;)V

    .line 27
    const/4 v3, 0x0

    .line 28
    :try_start_0
    invoke-interface {p1, v2, v3}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 31
    iget-object p1, p0, Lcom/android/server/audio/RecordingActivityMonitor;->mRecordStates:Ljava/util/List;

    .line 33
    monitor-enter p1

    .line 34
    :try_start_1
    iget-object p0, p0, Lcom/android/server/audio/RecordingActivityMonitor;->mRecordStates:Ljava/util/List;

    .line 36
    new-instance v0, Lcom/android/server/audio/RecordingActivityMonitor$RecordingState;

    .line 38
    invoke-direct {v0, v1, v2}, Lcom/android/server/audio/RecordingActivityMonitor$RecordingState;-><init>(ILcom/android/server/audio/RecordingActivityMonitor$RecorderDeathHandler;)V

    .line 41
    check-cast p0, Ljava/util/ArrayList;

    .line 43
    invoke-virtual {p0, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 46
    monitor-exit p1

    .line 47
    move v0, v1

    .line 48
    goto :goto_0

    .line 49
    :catchall_0
    move-exception p0

    .line 50
    monitor-exit p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 51
    throw p0

    .line 52
    :catch_0
    move-exception p0

    .line 53
    const-string p1, "AudioService.RecordingActivityMonitor"

    .line 55
    const-string v1, "Could not link to recorder death"

    .line 57
    invoke-static {p1, v1, p0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 60
    :goto_0
    return v0
.end method

.method public final unloadSoundEffects()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 3
    const/4 v5, 0x0

    .line 4
    const/4 v6, 0x0

    .line 5
    const/16 v1, 0xf

    .line 7
    const/4 v2, 0x2

    .line 8
    const/4 v3, 0x0

    .line 9
    const/4 v4, 0x0

    .line 10
    invoke-static/range {v0 .. v6}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 13
    return-void
.end method

.method public final unregisterAudioFocusClient(Ljava/lang/String;)V
    .locals 3

    .line 1
    new-instance v0, Landroid/media/MediaMetrics$Item;

    .line 3
    const-string v1, "audio.service.focus"

    .line 5
    invoke-direct {v0, v1}, Landroid/media/MediaMetrics$Item;-><init>(Ljava/lang/String;)V

    .line 8
    sget-object v1, Landroid/media/MediaMetrics$Property;->CLIENT_NAME:Landroid/media/MediaMetrics$Key;

    .line 10
    invoke-virtual {v0, v1, p1}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 13
    move-result-object v0

    .line 14
    sget-object v1, Landroid/media/MediaMetrics$Property;->EVENT:Landroid/media/MediaMetrics$Key;

    .line 16
    const-string/jumbo v2, "unregisterAudioFocusClient"

    .line 19
    invoke-virtual {v0, v1, v2}, Landroid/media/MediaMetrics$Item;->set(Landroid/media/MediaMetrics$Key;Ljava/lang/Object;)Landroid/media/MediaMetrics$Item;

    .line 22
    move-result-object v0

    .line 23
    invoke-virtual {v0}, Landroid/media/MediaMetrics$Item;->record()Z

    .line 26
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mMediaFocusControl:Lcom/android/server/audio/MediaFocusControl;

    .line 28
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 31
    sget-object v0, Lcom/android/server/audio/MediaFocusControl;->mAudioFocusLock:Ljava/lang/Object;

    .line 33
    monitor-enter v0

    .line 34
    const/4 v1, 0x0

    .line 35
    const/4 v2, 0x1

    .line 36
    :try_start_0
    invoke-virtual {p0, p1, v1, v2}, Lcom/android/server/audio/MediaFocusControl;->removeFocusStackEntry(Ljava/lang/String;ZZ)V

    .line 39
    monitor-exit v0

    .line 40
    return-void

    .line 41
    :catchall_0
    move-exception p0

    .line 42
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 43
    throw p0
.end method

.method public final unregisterAudioPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    const-string/jumbo v0, "unregisterAudioPolicy"

    .line 7
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->unregisterAudioPolicyInt(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)V

    .line 10
    return-void
.end method

.method public final unregisterAudioPolicyAsync(Landroid/media/audiopolicy/IAudioPolicyCallback;)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    const-string/jumbo v0, "unregisterAudioPolicyAsync"

    .line 7
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService;->unregisterAudioPolicyInt(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)V

    .line 10
    return-void
.end method

.method public final unregisterAudioPolicyInt(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)V
    .locals 4

    .line 1
    const-string v0, "Trying to unregister unknown audio policy for pid "

    .line 3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mDynPolicyLogger:Lcom/android/server/utils/EventLogger;

    .line 5
    new-instance v2, Lcom/android/server/utils/EventLogger$StringEvent;

    .line 7
    const-string v3, " for "

    .line 9
    invoke-static {p2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 12
    move-result-object p2

    .line 13
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 16
    move-result-object v3

    .line 17
    invoke-virtual {p2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 20
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 23
    move-result-object p2

    .line 24
    invoke-direct {v2, p2}, Lcom/android/server/utils/EventLogger$StringEvent;-><init>(Ljava/lang/String;)V

    .line 27
    const-string p2, "AS.AudioService"

    .line 29
    const/4 v3, 0x0

    .line 30
    invoke-virtual {v2, v3, p2}, Lcom/android/server/utils/EventLogger$Event;->printLog(ILjava/lang/String;)Lcom/android/server/utils/EventLogger$Event;

    .line 33
    invoke-virtual {v1, v2}, Lcom/android/server/utils/EventLogger;->enqueue(Lcom/android/server/utils/EventLogger$Event;)V

    .line 36
    iget-object p2, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 38
    monitor-enter p2

    .line 39
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 41
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 44
    move-result-object v1

    .line 45
    invoke-virtual {p0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 48
    move-result-object p0

    .line 49
    check-cast p0, Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 51
    if-nez p0, :cond_0

    .line 53
    const-string p0, "AS.AudioService"

    .line 55
    new-instance p1, Ljava/lang/StringBuilder;

    .line 57
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 60
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 63
    move-result v0

    .line 64
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 67
    const-string v0, " / uid "

    .line 69
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 72
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 75
    move-result v0

    .line 76
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 79
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    move-result-object p1

    .line 83
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    monitor-exit p2

    .line 87
    return-void

    .line 88
    :catchall_0
    move-exception p0

    .line 89
    goto :goto_0

    .line 90
    :cond_0
    invoke-interface {p1}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 93
    move-result-object p1

    .line 94
    invoke-interface {p1, p0, v3}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 97
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->release()V

    .line 100
    monitor-exit p2

    .line 101
    return-void

    .line 102
    :goto_0
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 103
    throw p0
.end method

.method public final unregisterAudioServerStateDispatcher(Landroid/media/IAudioServerStateDispatcher;)V
    .locals 3

    .line 1
    const-string v0, "Trying to unregister unknown audioserver state dispatcher for pid "

    .line 3
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->checkMonitorAudioServerStatePermission()V

    .line 6
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 8
    monitor-enter v1

    .line 9
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioServerStateListeners:Ljava/util/HashMap;

    .line 11
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {p0, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 18
    move-result-object p0

    .line 19
    check-cast p0, Lcom/android/server/audio/AudioService$AsdProxy;

    .line 21
    if-nez p0, :cond_0

    .line 23
    const-string p0, "AS.AudioService"

    .line 25
    new-instance p1, Ljava/lang/StringBuilder;

    .line 27
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 30
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 33
    move-result v0

    .line 34
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 37
    const-string v0, " / uid "

    .line 39
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 45
    move-result v0

    .line 46
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 49
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 52
    move-result-object p1

    .line 53
    invoke-static {p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 56
    monitor-exit v1

    .line 57
    return-void

    .line 58
    :catchall_0
    move-exception p0

    .line 59
    goto :goto_0

    .line 60
    :cond_0
    invoke-interface {p1}, Landroid/media/IAudioServerStateDispatcher;->asBinder()Landroid/os/IBinder;

    .line 63
    move-result-object p1

    .line 64
    const/4 v0, 0x0

    .line 65
    invoke-interface {p1, p0, v0}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 68
    monitor-exit v1

    .line 69
    return-void

    .line 70
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 71
    throw p0
.end method

.method public final unregisterCapturePresetDevicesRoleDispatcher(Landroid/media/ICapturePresetDevicesRoleDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mDevRoleCapturePresetDispatchers:Landroid/os/RemoteCallbackList;

    .line 13
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 16
    return-void
.end method

.method public final unregisterCommunicationDeviceDispatcher(Landroid/media/ICommunicationDeviceDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 6
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mCommDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 8
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 11
    return-void
.end method

.method public final unregisterHeadToSoundstagePoseCallback(Landroid/media/ISpatializerHeadToSoundStagePoseCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->unregisterHeadToSoundstagePoseCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadPoseCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final unregisterLoudnessCodecUpdatesDispatcher(Landroid/media/ILoudnessCodecUpdatesDispatcher;)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mLoudnessCodecHelper:Lcom/android/server/audio/LoudnessCodecHelper;

    .line 3
    iget-object p0, p0, Lcom/android/server/audio/LoudnessCodecHelper;->mLoudnessUpdateDispatchers:Lcom/android/server/audio/LoudnessCodecHelper$LoudnessRemoteCallbackList;

    .line 5
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 8
    return-void
.end method

.method public final unregisterModeDispatcher(Landroid/media/IAudioModeDispatcher;)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mModeDispatchers:Landroid/os/RemoteCallbackList;

    .line 3
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 6
    return-void
.end method

.method public final unregisterPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPlaybackMonitor:Lcom/android/server/audio/PlaybackActivityMonitor;

    .line 3
    invoke-virtual {p0, p1}, Lcom/android/server/audio/PlaybackActivityMonitor;->unregisterPlaybackCallback(Landroid/media/IPlaybackConfigDispatcher;)V

    .line 6
    return-void
.end method

.method public final unregisterPreferredMixerAttributesDispatcher(Landroid/media/IPreferredMixerAttributesDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mPrefMixerAttrDispatcher:Landroid/os/RemoteCallbackList;

    .line 6
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 9
    return-void
.end method

.method public final unregisterRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mRecordMonitor:Lcom/android/server/audio/RecordingActivityMonitor;

    .line 3
    invoke-virtual {p0, p1}, Lcom/android/server/audio/RecordingActivityMonitor;->unregisterRecordingCallback(Landroid/media/IRecordingConfigDispatcher;)V

    .line 6
    return-void
.end method

.method public final unregisterSpatializerCallback(Landroid/media/ISpatializerCallback;)V
    .locals 1

    .line 1
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 4
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 6
    monitor-enter p0

    .line 7
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mStateCallbacks:Landroid/os/RemoteCallbackList;

    .line 9
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12
    monitor-exit p0

    .line 13
    return-void

    .line 14
    :catchall_0
    move-exception p1

    .line 15
    monitor-exit p0

    .line 16
    throw p1
.end method

.method public final unregisterSpatializerHeadTrackingCallback(Landroid/media/ISpatializerHeadTrackingModeCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->unregisterSpatializerHeadTrackingCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mHeadTrackingModeCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final unregisterSpatializerOutputCallback(Landroid/media/ISpatializerOutputCallback;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->unregisterSpatializerOutputCallback_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mSpatializerHelper:Lcom/android/server/audio/SpatializerHelper;

    .line 9
    monitor-enter p0

    .line 10
    :try_start_0
    iget-object v0, p0, Lcom/android/server/audio/SpatializerHelper;->mOutputCallbacks:Landroid/os/RemoteCallbackList;

    .line 12
    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15
    monitor-exit p0

    .line 16
    return-void

    .line 17
    :catchall_0
    move-exception p1

    .line 18
    monitor-exit p0

    .line 19
    throw p1
.end method

.method public final unregisterStrategyNonDefaultDevicesDispatcher(Landroid/media/IStrategyNonDefaultDevicesDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mNonDefDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 13
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 16
    return-void
.end method

.method public final unregisterStrategyPreferredDevicesDispatcher(Landroid/media/IStrategyPreferredDevicesDispatcher;)V
    .locals 0

    .line 1
    if-nez p1, :cond_0

    .line 3
    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->enforceModifyAudioRoutingPermission()V

    .line 7
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 9
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceBroker;->mDeviceInventory:Lcom/android/server/audio/AudioDeviceInventory;

    .line 11
    iget-object p0, p0, Lcom/android/server/audio/AudioDeviceInventory;->mPrefDevDispatchers:Landroid/os/RemoteCallbackList;

    .line 13
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    .line 16
    return-void
.end method

.method public final updateA11yVolumeAlias(Z)V
    .locals 2

    .line 1
    const-string v0, "Accessibility volume enabled = "

    .line 3
    const-string v1, "AS.AudioService"

    .line 5
    invoke-static {v0, v1, p1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Z)V

    .line 8
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 10
    if-eqz v0, :cond_0

    .line 12
    const-string p0, "Accessibility volume is not set on single volume device"

    .line 14
    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 17
    return-void

    .line 18
    :cond_0
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 20
    if-eq v0, p1, :cond_2

    .line 22
    sput-boolean p1, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 24
    const/4 p1, 0x1

    .line 25
    invoke-virtual {p0, v1, p1}, Lcom/android/server/audio/AudioService;->updateStreamVolumeAlias(Ljava/lang/String;Z)V

    .line 28
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 30
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 32
    iget-object p1, p1, Lcom/android/server/audio/AudioService$VolumeController;->mController:Landroid/media/IVolumeController;

    .line 34
    if-nez p1, :cond_1

    .line 36
    goto :goto_0

    .line 37
    :cond_1
    :try_start_0
    invoke-interface {p1, v0}, Landroid/media/IVolumeController;->setA11yMode(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 40
    goto :goto_0

    .line 41
    :catch_0
    move-exception p1

    .line 42
    const-string v0, "VolumeController"

    .line 44
    const-string v1, "Error calling setA11Mode"

    .line 46
    invoke-static {v0, v1, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 49
    :goto_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mVolumeController:Lcom/android/server/audio/AudioService$VolumeController;

    .line 51
    const/16 p1, 0xa

    .line 53
    const/4 v0, 0x0

    .line 54
    invoke-virtual {p0, p1, v0}, Lcom/android/server/audio/AudioService$VolumeController;->postVolumeChanged(II)V

    .line 57
    :cond_2
    return-void
.end method

.method public final updateActiveAssistantServiceUids()V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mActiveAssistantServiceUids:[I

    .line 6
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 7
    invoke-static {p0}, Landroid/media/AudioSystem;->setActiveAssistantServicesUids([I)I

    .line 10
    return-void

    .line 11
    :catchall_0
    move-exception p0

    .line 12
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13
    throw p0
.end method

.method public final updateAssistantUIdLocked(Z)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mRoleObserver:Lcom/android/server/audio/AudioService$RoleObserver;

    .line 3
    const-string v1, ""

    .line 5
    if-eqz v0, :cond_1

    .line 7
    iget-object v0, v0, Lcom/android/server/audio/AudioService$RoleObserver;->mRm:Landroid/app/role/RoleManager;

    .line 9
    if-eqz v0, :cond_1

    .line 11
    const-string v2, "android.app.role.ASSISTANT"

    .line 13
    invoke-virtual {v0, v2}, Landroid/app/role/RoleManager;->getRoleHolders(Ljava/lang/String;)Ljava/util/List;

    .line 16
    move-result-object v0

    .line 17
    invoke-interface {v0}, Ljava/util/List;->size()I

    .line 20
    move-result v2

    .line 21
    if-nez v2, :cond_0

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    const/4 v1, 0x0

    .line 25
    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 28
    move-result-object v0

    .line 29
    move-object v1, v0

    .line 30
    check-cast v1, Ljava/lang/String;

    .line 32
    :cond_1
    :goto_0
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 35
    move-result v0

    .line 36
    const-string v2, "AS.AudioService"

    .line 38
    if-eqz v0, :cond_4

    .line 40
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 42
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 44
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 47
    const-string/jumbo v0, "voice_interaction_service"

    .line 50
    const/4 v4, -0x2

    .line 51
    invoke-static {v3, v0, v4}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    .line 54
    move-result-object v0

    .line 55
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 58
    move-result v3

    .line 59
    if-eqz v3, :cond_2

    .line 61
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 63
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 65
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 68
    const-string v0, "assistant"

    .line 70
    invoke-static {v3, v0, v4}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    .line 73
    move-result-object v0

    .line 74
    :cond_2
    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 77
    move-result v3

    .line 78
    if-nez v3, :cond_4

    .line 80
    invoke-static {v0}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    .line 83
    move-result-object v1

    .line 84
    if-nez v1, :cond_3

    .line 86
    const-string p0, "Invalid service name for voice_interaction_service: "

    .line 88
    invoke-static {p0, v0, v2}, Lcom/android/server/HeimdAllFsService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 91
    return-void

    .line 92
    :cond_3
    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 95
    move-result-object v1

    .line 96
    :cond_4
    invoke-static {v1}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

    .line 99
    move-result v0

    .line 100
    if-nez v0, :cond_5

    .line 102
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 104
    invoke-virtual {v0}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 107
    move-result-object v0

    .line 108
    const-string v3, "android.permission.CAPTURE_AUDIO_HOTWORD"

    .line 110
    invoke-virtual {v0, v3, v1}, Landroid/content/pm/PackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I

    .line 113
    move-result v3

    .line 114
    if-nez v3, :cond_5

    .line 116
    :try_start_0
    invoke-static {}, Lcom/android/server/audio/AudioService;->getCurrentUserId()I

    .line 119
    move-result v3

    .line 120
    invoke-virtual {v0, v1, v3}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    .line 123
    move-result v0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 124
    goto :goto_1

    .line 125
    :catch_0
    const-string/jumbo v0, "updateAssistantUId() could not find UID for package: "

    .line 128
    invoke-static {v0, v1, v2}, Lcom/android/server/StorageManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 131
    :cond_5
    const/4 v0, -0x1

    .line 132
    :goto_1
    iget v1, p0, Lcom/android/server/audio/AudioService;->mPrimaryAssistantUid:I

    .line 134
    if-ne v1, v0, :cond_6

    .line 136
    if-eqz p1, :cond_7

    .line 138
    :cond_6
    iget-object p1, p0, Lcom/android/server/audio/AudioService;->mAssistantUids:Landroid/util/ArraySet;

    .line 140
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 143
    move-result-object v1

    .line 144
    invoke-virtual {p1, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 147
    iput v0, p0, Lcom/android/server/audio/AudioService;->mPrimaryAssistantUid:I

    .line 149
    filled-new-array {v0}, [I

    .line 152
    move-result-object p1

    .line 153
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->addAssistantServiceUidsLocked([I)V

    .line 156
    :cond_7
    return-void
.end method

.method public final updateAudioModeHandlers(Ljava/util/List;Ljava/util/List;)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 3
    iget-object v1, v0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 5
    iget-object v1, v1, Lcom/android/server/audio/AudioDeviceBroker;->mSetModeLock:Ljava/lang/Object;

    .line 7
    monitor-enter v1

    .line 8
    :try_start_0
    iget-object v2, v0, Lcom/android/server/audio/AudioService;->mSetModeDeathHandlers:Ljava/util/ArrayList;

    .line 10
    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 13
    move-result-object v2

    .line 14
    const/4 v3, 0x2

    .line 15
    const/4 v4, 0x0

    .line 16
    const/16 v5, 0x1770

    .line 18
    move v8, v3

    .line 19
    move v12, v5

    .line 20
    move v5, v4

    .line 21
    :cond_0
    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    .line 24
    move-result v6

    .line 25
    if-eqz v6, :cond_7

    .line 27
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 30
    move-result-object v6

    .line 31
    check-cast v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 33
    invoke-virtual {v6}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->isActive()Z

    .line 36
    move-result v7

    .line 37
    const/4 v9, 0x1

    .line 38
    if-eqz p1, :cond_3

    .line 40
    iput-boolean v4, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPlaybackActive:Z

    .line 42
    invoke-interface/range {p1 .. p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 45
    move-result-object v10

    .line 46
    :cond_1
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    .line 49
    move-result v11

    .line 50
    if-eqz v11, :cond_3

    .line 52
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 55
    move-result-object v11

    .line 56
    check-cast v11, Landroid/media/AudioPlaybackConfiguration;

    .line 58
    invoke-virtual {v11}, Landroid/media/AudioPlaybackConfiguration;->getAudioAttributes()Landroid/media/AudioAttributes;

    .line 61
    move-result-object v13

    .line 62
    invoke-virtual {v13}, Landroid/media/AudioAttributes;->getUsage()I

    .line 65
    move-result v13

    .line 66
    invoke-virtual {v11}, Landroid/media/AudioPlaybackConfiguration;->getClientUid()I

    .line 69
    move-result v14

    .line 70
    iget v15, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUid:I

    .line 72
    if-ne v14, v15, :cond_1

    .line 74
    if-eq v13, v3, :cond_2

    .line 76
    const/4 v14, 0x3

    .line 77
    if-ne v13, v14, :cond_1

    .line 79
    :cond_2
    invoke-virtual {v11}, Landroid/media/AudioPlaybackConfiguration;->isActive()Z

    .line 82
    move-result v11

    .line 83
    if-eqz v11, :cond_1

    .line 85
    iput-boolean v9, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mPlaybackActive:Z

    .line 87
    goto :goto_1

    .line 88
    :catchall_0
    move-exception v0

    .line 89
    goto :goto_2

    .line 90
    :cond_3
    :goto_1
    if-eqz p2, :cond_5

    .line 92
    iput-boolean v4, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mRecordingActive:Z

    .line 94
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 97
    move-result-object v10

    .line 98
    :cond_4
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    .line 101
    move-result v11

    .line 102
    if-eqz v11, :cond_5

    .line 104
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 107
    move-result-object v11

    .line 108
    check-cast v11, Landroid/media/AudioRecordingConfiguration;

    .line 110
    invoke-virtual {v11}, Landroid/media/AudioRecordingConfiguration;->getClientUid()I

    .line 113
    move-result v13

    .line 114
    iget v14, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mUid:I

    .line 116
    if-ne v13, v14, :cond_4

    .line 118
    invoke-virtual {v11}, Landroid/media/AudioRecordingConfiguration;->isClientSilenced()Z

    .line 121
    move-result v13

    .line 122
    if-nez v13, :cond_4

    .line 124
    invoke-virtual {v11}, Landroid/media/AudioRecordingConfiguration;->getAudioSource()I

    .line 127
    move-result v11

    .line 128
    const/4 v13, 0x7

    .line 129
    if-ne v11, v13, :cond_4

    .line 131
    iput-boolean v9, v6, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->mRecordingActive:Z

    .line 133
    :cond_5
    invoke-virtual {v6}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->isActive()Z

    .line 136
    move-result v10

    .line 137
    if-eq v7, v10, :cond_0

    .line 139
    invoke-virtual {v6}, Lcom/android/server/audio/AudioService$SetModeDeathHandler;->isActive()Z

    .line 142
    move-result v5

    .line 143
    if-eqz v5, :cond_6

    .line 145
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getAudioModeOwnerHandler()Lcom/android/server/audio/AudioService$SetModeDeathHandler;

    .line 148
    move-result-object v5

    .line 149
    if-ne v6, v5, :cond_6

    .line 151
    move v8, v4

    .line 152
    move v12, v8

    .line 153
    :cond_6
    move v5, v9

    .line 154
    goto/16 :goto_0

    .line 156
    :cond_7
    if-eqz v5, :cond_8

    .line 158
    iget-object v6, v0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 160
    invoke-static {}, Landroid/os/Process;->myPid()I

    .line 163
    move-result v10

    .line 164
    iget-object v0, v0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 166
    invoke-virtual {v0}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    .line 169
    move-result-object v11

    .line 170
    const/16 v7, 0x24

    .line 172
    const/4 v9, -0x1

    .line 173
    invoke-static/range {v6 .. v12}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 176
    :cond_8
    monitor-exit v1

    .line 177
    return-void

    .line 178
    :goto_2
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 179
    throw v0
.end method

.method public final updateDefaultVolumes()V
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    :goto_0
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 4
    array-length v1, v1

    .line 5
    if-ge v0, v1, :cond_4

    .line 7
    sget-object v1, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 9
    aget v1, v1, v0

    .line 11
    iget-boolean v2, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 13
    if-eqz v2, :cond_2

    .line 15
    sget-object v1, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    .line 17
    aget v2, v1, v0

    .line 19
    const/4 v3, -0x1

    .line 20
    if-eq v2, v3, :cond_0

    .line 22
    goto :goto_1

    .line 23
    :cond_0
    const/4 v2, 0x3

    .line 24
    aget v1, v1, v2

    .line 26
    mul-int/lit8 v1, v1, 0xa

    .line 28
    invoke-virtual {p0, v1, v2, v0}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    .line 31
    move-result v1

    .line 32
    add-int/lit8 v1, v1, 0x5

    .line 34
    div-int/lit8 v1, v1, 0xa

    .line 36
    sget-object v3, Lcom/android/server/audio/AudioService;->MIN_STREAM_VOLUME:[I

    .line 38
    aget v3, v3, v0

    .line 40
    if-lt v1, v3, :cond_1

    .line 42
    sget-object v3, Lcom/android/server/audio/AudioService;->MAX_STREAM_VOLUME:[I

    .line 44
    aget v3, v3, v0

    .line 46
    if-gt v1, v3, :cond_1

    .line 48
    sget-object v2, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    .line 50
    aput v1, v2, v0

    .line 52
    goto :goto_1

    .line 53
    :cond_1
    move v1, v2

    .line 54
    :cond_2
    if-eq v0, v1, :cond_3

    .line 56
    sget-object v2, Landroid/media/AudioSystem;->DEFAULT_STREAM_VOLUME:[I

    .line 58
    aget v3, v2, v1

    .line 60
    mul-int/lit8 v3, v3, 0xa

    .line 62
    invoke-virtual {p0, v3, v1, v0}, Lcom/android/server/audio/AudioService;->rescaleIndex(III)I

    .line 65
    move-result v1

    .line 66
    add-int/lit8 v1, v1, 0x5

    .line 68
    div-int/lit8 v1, v1, 0xa

    .line 70
    aput v1, v2, v0

    .line 72
    :cond_3
    :goto_1
    add-int/lit8 v0, v0, 0x1

    .line 74
    goto :goto_0

    .line 75
    :cond_4
    return-void
.end method

.method public final updateFlagsForSamsungVolume(IIII)I
    .locals 2

    .line 1
    invoke-static {}, Lcom/samsung/android/server/audio/FactoryUtils;->isFactoryMode()Z

    .line 4
    move-result v0

    .line 5
    const-string v1, "AS.AudioService"

    .line 7
    if-eqz v0, :cond_0

    .line 9
    const/4 v0, 0x2

    .line 10
    if-ne v0, p1, :cond_0

    .line 12
    if-nez p2, :cond_0

    .line 14
    if-lez p3, :cond_0

    .line 16
    const-string/jumbo v0, "sendVolumeUpdate: enforce to FLAG_PLAY_SOUND volume index = "

    .line 19
    invoke-static {p3, v0, v1}, Lcom/android/server/ExtendedEthernetServiceImpl$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 22
    or-int/lit8 p2, p2, 0x4

    .line 24
    :cond_0
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 26
    iget-object p3, p3, Lcom/android/server/audio/AudioDeviceBroker;->mDualA2dpManager:Lcom/samsung/android/server/audio/DualA2dpVolumeManager;

    .line 28
    iget-boolean p3, p3, Lcom/samsung/android/server/audio/DualA2dpVolumeManager;->mDualModeEnabled:Z

    .line 30
    if-eqz p3, :cond_1

    .line 32
    const/high16 p3, 0x80000

    .line 34
    or-int/2addr p2, p3

    .line 35
    const-string p3, "Add isDualA2dpMode"

    .line 37
    invoke-static {v1, p3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 40
    :cond_1
    sget-boolean p3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_FIXED_SCO_VOLUME:Z

    .line 42
    if-eqz p3, :cond_2

    .line 44
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isBluetoothScoOn()Z

    .line 47
    move-result p3

    .line 48
    if-eqz p3, :cond_2

    .line 50
    iget-object p3, p0, Lcom/android/server/audio/AudioService;->mDeviceBroker:Lcom/android/server/audio/AudioDeviceBroker;

    .line 52
    invoke-virtual {p3}, Lcom/android/server/audio/AudioDeviceBroker;->isRemoteVolumeControlSupported()Z

    .line 55
    move-result p3

    .line 56
    if-nez p3, :cond_2

    .line 58
    const/high16 p3, 0x40000

    .line 60
    or-int/2addr p2, p3

    .line 61
    const-string/jumbo p3, "this BT doesn\'t support Remote volume control. hence, SCO volume fixed"

    .line 64
    invoke-static {v1, p3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 67
    :cond_2
    sget-boolean p3, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_REMOTE_MIC:Z

    .line 69
    if-eqz p3, :cond_3

    .line 71
    iget-boolean p3, p0, Lcom/android/server/audio/AudioService;->mRemoteMic:Z

    .line 73
    if-eqz p3, :cond_3

    .line 75
    const/high16 p3, 0x4000000

    .line 77
    or-int/2addr p2, p3

    .line 78
    const-string p3, "Add FLAG_REMOTE_MIC"

    .line 80
    invoke-static {v1, p3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 83
    :cond_3
    const/4 p3, 0x3

    .line 84
    if-ne p1, p3, :cond_4

    .line 86
    sget-object p1, Landroid/media/AudioSystem;->DEVICE_OUT_ALL_A2DP_SET:Ljava/util/Set;

    .line 88
    invoke-static {p4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 91
    move-result-object p3

    .line 92
    invoke-interface {p1, p3}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    .line 95
    move-result p1

    .line 96
    if-eqz p1, :cond_4

    .line 98
    and-int/lit8 p1, p2, 0x40

    .line 100
    if-eqz p1, :cond_4

    .line 102
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 105
    move-result p0

    .line 106
    if-eqz p0, :cond_4

    .line 108
    and-int/lit8 p2, p2, -0x2

    .line 110
    const-string p0, "The show UI flag is off in the incall state and A2DP BT Connection"

    .line 112
    invoke-static {v1, p0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 115
    :cond_4
    return p2
.end method

.method public final updateHdmiCecSinkLocked(Z)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 3
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 5
    new-instance v2, Ljava/lang/StringBuilder;

    .line 7
    const-string v3, "AudioService_DeviceVolumeBehavior_"

    .line 9
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 12
    const/16 v7, 0x400

    .line 14
    invoke-static {v7}, Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;

    .line 17
    move-result-object v3

    .line 18
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 24
    move-result-object v2

    .line 25
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 28
    const/4 v0, -0x2

    .line 29
    const/4 v3, -0x1

    .line 30
    invoke-static {v1, v2, v3, v0}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 33
    move-result v0

    .line 34
    if-eq v0, v3, :cond_0

    .line 36
    goto :goto_1

    .line 37
    :cond_0
    const-string v0, "AudioService.updateHdmiCecSinkLocked()"

    .line 39
    const-string v1, ""

    .line 41
    const-string v2, "AS.AudioService"

    .line 43
    if-eqz p1, :cond_1

    .line 45
    const-string p1, "CEC sink: setting HDMI as full vol device"

    .line 47
    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 50
    new-instance p1, Landroid/media/AudioDeviceAttributes;

    .line 52
    invoke-direct {p1, v7, v1}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 55
    const/4 v1, 0x1

    .line 56
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 59
    goto :goto_0

    .line 60
    :cond_1
    const-string p1, "TV, no CEC: setting HDMI as regular vol device"

    .line 62
    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 65
    new-instance p1, Landroid/media/AudioDeviceAttributes;

    .line 67
    invoke-direct {p1, v7, v1}, Landroid/media/AudioDeviceAttributes;-><init>(ILjava/lang/String;)V

    .line 70
    const/4 v1, 0x0

    .line 71
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/audio/AudioService;->setDeviceVolumeBehaviorInternal(Landroid/media/AudioDeviceAttributes;ILjava/lang/String;)V

    .line 74
    :goto_0
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 76
    const/16 v5, 0x21

    .line 78
    const/4 v6, 0x2

    .line 79
    const/4 v8, 0x0

    .line 80
    const-string v9, "HdmiPlaybackClient.DisplayStatusCallback"

    .line 82
    const/4 v10, 0x0

    .line 83
    invoke-static/range {v4 .. v10}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 86
    :goto_1
    return-void
.end method

.method public final updateMasterBalance(Landroid/content/ContentResolver;)V
    .locals 5

    .line 1
    const-string/jumbo v0, "master_balance"

    .line 4
    const/4 v1, 0x0

    .line 5
    const/4 v2, -0x2

    .line 6
    invoke-static {p1, v0, v1, v2}, Landroid/provider/Settings$System;->getFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)F

    .line 9
    move-result p1

    .line 10
    invoke-static {p1}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    .line 13
    move-result-object v0

    .line 14
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 17
    move-result-object v0

    .line 18
    const-string v3, "Master balance %f"

    .line 20
    invoke-static {v3, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 23
    move-result-object v0

    .line 24
    const-string v3, "AS.AudioService"

    .line 26
    invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 29
    invoke-static {p1}, Landroid/media/AudioSystem;->setMasterBalance(F)I

    .line 32
    move-result v0

    .line 33
    if-eqz v0, :cond_0

    .line 35
    invoke-static {p1}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    .line 38
    move-result-object v0

    .line 39
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 42
    move-result-object v0

    .line 43
    const-string/jumbo v4, "setMasterBalance failed for %f"

    .line 46
    invoke-static {v4, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 49
    move-result-object v0

    .line 50
    invoke-static {v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 53
    :cond_0
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 55
    iget-object v0, p0, Lcom/android/server/audio/AudioServiceExt;->mCr:Landroid/content/ContentResolver;

    .line 57
    const-string/jumbo v3, "speaker_balance"

    .line 60
    invoke-static {v0, v3, v1, v2}, Landroid/provider/Settings$System;->getFloatForUser(Landroid/content/ContentResolver;Ljava/lang/String;FI)F

    .line 63
    move-result v0

    .line 64
    new-instance v1, Ljava/lang/StringBuilder;

    .line 66
    const-string/jumbo v2, "l_speaker_balance="

    .line 69
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 72
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 75
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 78
    move-result-object v0

    .line 79
    iget-object v1, p0, Lcom/android/server/audio/AudioServiceExt;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 81
    invoke-virtual {v1, v0}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 84
    iput p1, p0, Lcom/android/server/audio/AudioServiceExt;->mMainBalance:F

    .line 86
    iget-object p1, p0, Lcom/android/server/audio/AudioServiceExt;->mSettingsHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 88
    const-string/jumbo v0, "sound_balance"

    .line 91
    const/16 v1, 0x32

    .line 93
    invoke-virtual {p1, v1, v0}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 96
    move-result v2

    .line 97
    sub-int/2addr v2, v1

    .line 98
    int-to-float v1, v2

    .line 99
    const/high16 v2, 0x42480000    # 50.0f

    .line 101
    div-float/2addr v1, v2

    .line 102
    iget p0, p0, Lcom/android/server/audio/AudioServiceExt;->mMainBalance:F

    .line 104
    invoke-static {p0, v1}, Ljava/lang/Float;->compare(FF)I

    .line 107
    move-result p0

    .line 108
    if-eqz p0, :cond_1

    .line 110
    invoke-virtual {p1, v0}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 113
    :cond_1
    return-void
.end method

.method public final updateMasterMono(Landroid/content/ContentResolver;)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    const-string/jumbo v0, "master_mono"

    .line 9
    const/4 v1, 0x0

    .line 10
    const/4 v2, -0x2

    .line 11
    invoke-static {p1, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 14
    move-result v0

    .line 15
    const/4 v3, 0x1

    .line 16
    if-ne v0, v3, :cond_0

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    move v3, v1

    .line 20
    :goto_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 22
    const-string v4, "Master mono "

    .line 24
    invoke-direct {v0, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 27
    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 30
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 33
    move-result-object v0

    .line 34
    const-string v4, "AS.AudioService"

    .line 36
    invoke-static {v4, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    invoke-static {v3}, Landroid/media/AudioSystem;->setMasterMono(Z)I

    .line 42
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 44
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 47
    const-string/jumbo v0, "mono_audio_type"

    .line 50
    invoke-static {p1, v0, v1, v2}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 53
    move-result p1

    .line 54
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 56
    new-instance v2, Ljava/lang/StringBuilder;

    .line 58
    const-string/jumbo v4, "l_mono_type="

    .line 61
    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 64
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 67
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 70
    move-result-object p1

    .line 71
    invoke-virtual {v0, p1}, Lcom/android/server/audio/AudioSystemAdapter;->setParameters(Ljava/lang/String;)V

    .line 74
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mExt:Lcom/android/server/audio/AudioServiceExt;

    .line 76
    iput v3, p0, Lcom/android/server/audio/AudioServiceExt;->mMainMono:I

    .line 78
    iget-object p0, p0, Lcom/android/server/audio/AudioServiceExt;->mSettingsHelper:Lcom/samsung/android/server/audio/AudioSettingsHelper;

    .line 80
    const-string/jumbo p1, "mono_audio_db"

    .line 83
    invoke-virtual {p0, v1, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->getIntValue(ILjava/lang/String;)I

    .line 86
    move-result v0

    .line 87
    if-eq v3, v0, :cond_1

    .line 89
    invoke-virtual {p0, p1}, Lcom/samsung/android/server/audio/AudioSettingsHelper;->removeValue(Ljava/lang/String;)I

    .line 92
    :cond_1
    return-void
.end method

.method public final updateMixingRulesForPolicy([Landroid/media/audiopolicy/AudioMix;[Landroid/media/audiopolicy/AudioMixingRule;Landroid/media/audiopolicy/IAudioPolicyCallback;)I
    .locals 4

    .line 1
    invoke-virtual {p0}, Landroid/media/IAudioService$Stub;->updateMixingRulesForPolicy_enforcePermission()V

    .line 4
    invoke-static {p1}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 7
    invoke-static {p2}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 10
    invoke-static {p3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 13
    array-length v0, p1

    .line 14
    array-length v1, p2

    .line 15
    const/4 v2, -0x1

    .line 16
    if-eq v0, v1, :cond_0

    .line 18
    const-string p0, "AS.AudioService"

    .line 20
    new-instance p3, Ljava/lang/StringBuilder;

    .line 22
    const-string v0, "Provided list of audio mixes to update and corresponding mixing rules have mismatching length (mixesToUpdate.length = "

    .line 24
    invoke-direct {p3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 27
    array-length p1, p1

    .line 28
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 31
    const-string p1, ", updatedMixingRules.length = "

    .line 33
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 36
    array-length p1, p2

    .line 37
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 40
    const-string p1, ")."

    .line 42
    invoke-virtual {p3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 45
    invoke-virtual {p3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 48
    move-result-object p1

    .line 49
    invoke-static {p0, p1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 52
    return v2

    .line 53
    :cond_0
    const-string v0, "AS.AudioService"

    .line 55
    new-instance v1, Ljava/lang/StringBuilder;

    .line 57
    const-string/jumbo v3, "updateMixingRules for "

    .line 60
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 63
    invoke-interface {p3}, Landroid/media/audiopolicy/IAudioPolicyCallback;->asBinder()Landroid/os/IBinder;

    .line 66
    move-result-object v3

    .line 67
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 70
    const-string/jumbo v3, "with mix rules: "

    .line 73
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 76
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 79
    move-result-object v1

    .line 80
    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 83
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioPolicies:Ljava/util/HashMap;

    .line 85
    monitor-enter v0

    .line 86
    :try_start_0
    const-string v1, "Cannot add AudioMix in audio policy"

    .line 88
    invoke-virtual {p0, p3, v1}, Lcom/android/server/audio/AudioService;->checkUpdateForPolicy(Landroid/media/audiopolicy/IAudioPolicyCallback;Ljava/lang/String;)Lcom/android/server/audio/AudioService$AudioPolicyProxy;

    .line 91
    move-result-object p0

    .line 92
    if-nez p0, :cond_1

    .line 94
    monitor-exit v0

    .line 95
    return v2

    .line 96
    :catchall_0
    move-exception p0

    .line 97
    goto :goto_0

    .line 98
    :cond_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/audio/AudioService$AudioPolicyProxy;->updateMixingRules([Landroid/media/audiopolicy/AudioMix;[Landroid/media/audiopolicy/AudioMixingRule;)I

    .line 101
    move-result p0

    .line 102
    if-nez p0, :cond_2

    .line 104
    const/4 v2, 0x0

    .line 105
    :cond_2
    monitor-exit v0

    .line 106
    return v2

    .line 107
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 108
    throw p0
.end method

.method public final updateRingerAndZenModeAffectedStreams()Z
    .locals 10

    .line 1
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mSystemReady:Z

    .line 3
    const/4 v1, 0x1

    .line 4
    const/4 v2, 0x2

    .line 5
    const/4 v3, 0x0

    .line 6
    if-nez v0, :cond_1

    .line 8
    :cond_0
    move v0, v3

    .line 9
    goto :goto_3

    .line 10
    :cond_1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 12
    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    .line 15
    move-result v0

    .line 16
    if-ne v0, v2, :cond_2

    .line 18
    const/16 v0, 0x3e

    .line 20
    goto :goto_2

    .line 21
    :cond_2
    const/4 v4, 0x3

    .line 22
    if-ne v0, v4, :cond_3

    .line 24
    const/16 v0, 0x26

    .line 26
    goto :goto_2

    .line 27
    :cond_3
    if-ne v0, v1, :cond_8

    .line 29
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 31
    invoke-virtual {v0}, Landroid/app/NotificationManager;->getConsolidatedNotificationPolicy()Landroid/app/NotificationManager$Policy;

    .line 34
    move-result-object v0

    .line 35
    iget v4, v0, Landroid/app/NotificationManager$Policy;->priorityCategories:I

    .line 37
    and-int/lit8 v5, v4, 0x20

    .line 39
    if-nez v5, :cond_4

    .line 41
    const/16 v5, 0x10

    .line 43
    goto :goto_0

    .line 44
    :cond_4
    move v5, v3

    .line 45
    :goto_0
    and-int/lit8 v6, v4, 0x40

    .line 47
    if-nez v6, :cond_5

    .line 49
    or-int/lit8 v5, v5, 0x8

    .line 51
    :cond_5
    and-int/lit16 v4, v4, 0x80

    .line 53
    if-nez v4, :cond_6

    .line 55
    or-int/lit8 v4, v5, 0x2

    .line 57
    goto :goto_1

    .line 58
    :cond_6
    move v4, v5

    .line 59
    :goto_1
    invoke-static {v0}, Landroid/service/notification/ZenModeConfig;->areAllPriorityOnlyRingerSoundsMuted(Landroid/app/NotificationManager$Policy;)Z

    .line 62
    move-result v0

    .line 63
    if-eqz v0, :cond_7

    .line 65
    or-int/lit8 v0, v4, 0x24

    .line 67
    goto :goto_2

    .line 68
    :cond_7
    move v0, v4

    .line 69
    goto :goto_2

    .line 70
    :cond_8
    move v0, v3

    .line 71
    :goto_2
    iget v4, p0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 73
    if-eq v4, v0, :cond_0

    .line 75
    iput v0, p0, Lcom/android/server/audio/AudioService;->mZenModeAffectedStreams:I

    .line 77
    move v0, v1

    .line 78
    :goto_3
    iget-object v4, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 80
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 82
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 85
    const-string/jumbo v4, "mode_ringer_streams_affected"

    .line 88
    const/16 v6, 0xa6

    .line 90
    const/4 v7, -0x2

    .line 91
    invoke-static {v5, v4, v6, v7}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 94
    move-result v5

    .line 95
    iget-boolean v6, p0, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 97
    if-eqz v6, :cond_9

    .line 99
    move v5, v3

    .line 100
    goto :goto_4

    .line 101
    :cond_9
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mRingerModeDelegate:Landroid/media/AudioManagerInternal$RingerModeDelegate;

    .line 103
    if-eqz v6, :cond_a

    .line 105
    invoke-interface {v6, v5}, Landroid/media/AudioManagerInternal$RingerModeDelegate;->getRingerModeAffectedStreams(I)I

    .line 108
    move-result v5

    .line 109
    :cond_a
    :goto_4
    and-int/lit16 v6, v5, -0x89

    .line 111
    sget-object v8, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 113
    const/16 v9, 0x8

    .line 115
    aget v8, v8, v9

    .line 117
    if-ne v8, v2, :cond_b

    .line 119
    or-int/lit16 v2, v6, 0x100

    .line 121
    goto :goto_5

    .line 122
    :cond_b
    and-int/lit16 v2, v5, -0x189

    .line 124
    :goto_5
    invoke-static {}, Lcom/android/media/audio/Flags;->ringerModeAffectsAlarm()Z

    .line 127
    iget-boolean v5, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectsAlarm:Z

    .line 129
    if-eqz v5, :cond_d

    .line 131
    iget-object v5, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 133
    iget-object v6, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 135
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 138
    const-string/jumbo v5, "mute_alarm_stream_with_ringer_mode"

    .line 141
    invoke-static {v6, v5, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 144
    move-result v3

    .line 145
    if-eqz v3, :cond_c

    .line 147
    or-int/lit8 v2, v2, 0x10

    .line 149
    goto :goto_6

    .line 150
    :cond_c
    and-int/lit8 v2, v2, -0x11

    .line 152
    :cond_d
    :goto_6
    iget v3, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 154
    if-eq v2, v3, :cond_e

    .line 156
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mSettings:Lcom/android/server/audio/SettingsAdapter;

    .line 158
    iget-object v3, p0, Lcom/android/server/audio/AudioService;->mContentResolver:Landroid/content/ContentResolver;

    .line 160
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 163
    invoke-static {v3, v4, v2, v7}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 166
    iput v2, p0, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 168
    return v1

    .line 169
    :cond_e
    return v0
.end method

.method public final updateStreamVolumeAlias(Ljava/lang/String;Z)V
    .locals 24

    .line 1
    move-object/from16 v1, p0

    .line 3
    move-object/from16 v0, p1

    .line 5
    sget-boolean v2, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 7
    const/4 v3, 0x3

    .line 8
    const/16 v4, 0xa

    .line 10
    if-eqz v2, :cond_0

    .line 12
    move v2, v4

    .line 13
    goto :goto_0

    .line 14
    :cond_0
    move v2, v3

    .line 15
    :goto_0
    iget-object v5, v1, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 17
    invoke-virtual {v5}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 20
    move-result-object v5

    .line 21
    const v6, 0x111026e

    .line 24
    invoke-virtual {v5, v6}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 27
    move-result v5

    .line 28
    const/16 v6, 0xb

    .line 30
    if-eqz v5, :cond_1

    .line 32
    move v5, v6

    .line 33
    goto :goto_1

    .line 34
    :cond_1
    move v5, v3

    .line 35
    :goto_1
    iget-boolean v7, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 37
    const/16 v8, 0x8

    .line 39
    if-eqz v7, :cond_2

    .line 41
    iget-object v7, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_TELEVISION:[I

    .line 43
    invoke-virtual {v7}, [I->clone()Ljava/lang/Object;

    .line 46
    move-result-object v7

    .line 47
    check-cast v7, [I

    .line 49
    sput-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 51
    goto :goto_3

    .line 52
    :cond_2
    iget-boolean v7, v1, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 54
    if-eqz v7, :cond_3

    .line 56
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_NONE:[I

    .line 58
    invoke-virtual {v3}, [I->clone()Ljava/lang/Object;

    .line 61
    move-result-object v3

    .line 62
    check-cast v3, [I

    .line 64
    sput-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 66
    move v3, v8

    .line 67
    goto :goto_3

    .line 68
    :cond_3
    iget v7, v1, Lcom/android/server/audio/AudioService;->mPlatformType:I

    .line 70
    const/4 v9, 0x1

    .line 71
    const/4 v10, 0x5

    .line 72
    if-eq v7, v9, :cond_4

    .line 74
    iget-object v7, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_DEFAULT:[I

    .line 76
    invoke-virtual {v7}, [I->clone()Ljava/lang/Object;

    .line 79
    move-result-object v7

    .line 80
    check-cast v7, [I

    .line 82
    sput-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 84
    sget-boolean v7, Lcom/samsung/android/audio/Rune;->SEC_AUDIO_DEFAULT_STREAM_NOTIFICATION:Z

    .line 86
    if-eqz v7, :cond_5

    .line 88
    move v3, v10

    .line 89
    goto :goto_2

    .line 90
    :cond_4
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    .line 92
    invoke-virtual {v3}, [I->clone()Ljava/lang/Object;

    .line 95
    move-result-object v3

    .line 96
    check-cast v3, [I

    .line 98
    sput-object v3, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 100
    const/4 v3, 0x2

    .line 101
    :cond_5
    :goto_2
    iget-boolean v7, v1, Lcom/android/server/audio/AudioService;->mNotifAliasRing:Z

    .line 103
    if-nez v7, :cond_6

    .line 105
    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 107
    aput v10, v7, v10

    .line 109
    :cond_6
    :goto_3
    iget-boolean v7, v1, Lcom/android/server/audio/AudioService;->mIsSingleVolume:Z

    .line 111
    const/4 v9, 0x0

    .line 112
    if-eqz v7, :cond_7

    .line 114
    iput v9, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 116
    goto :goto_4

    .line 117
    :cond_7
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->isInCommunication()Z

    .line 120
    move-result v7

    .line 121
    if-eqz v7, :cond_8

    .line 123
    iget v3, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 125
    and-int/lit16 v3, v3, -0x101

    .line 127
    iput v3, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 129
    move v3, v9

    .line 130
    goto :goto_4

    .line 131
    :cond_8
    iget v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 133
    or-int/lit16 v7, v7, 0x100

    .line 135
    iput v7, v1, Lcom/android/server/audio/AudioService;->mRingerModeAffectedStreams:I

    .line 137
    :goto_4
    sget-object v7, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 139
    aput v3, v7, v8

    .line 141
    aput v2, v7, v4

    .line 143
    aput v5, v7, v6

    .line 145
    if-eqz p2, :cond_b

    .line 147
    iget-object v5, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 149
    if-eqz v5, :cond_b

    .line 151
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->updateDefaultVolumes()V

    .line 154
    iget-object v5, v1, Lcom/android/server/audio/AudioService;->mSettingsLock:Ljava/lang/Object;

    .line 156
    monitor-enter v5

    .line 157
    :try_start_0
    const-class v6, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 159
    monitor-enter v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 160
    :try_start_1
    iget-object v7, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 162
    aget-object v10, v7, v8

    .line 164
    aget-object v3, v7, v3

    .line 166
    invoke-virtual {v10, v3, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 169
    iget-object v3, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 171
    aget-object v7, v3, v4

    .line 173
    sget-object v10, Landroid/provider/Settings$System;->VOLUME_SETTINGS_INT:[Ljava/lang/String;

    .line 175
    aget-object v10, v10, v2

    .line 177
    iput-object v10, v7, Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeIndexSettingName:Ljava/lang/String;

    .line 179
    iget-object v11, v7, Lcom/android/server/audio/AudioService$VolumeStreamState;->mVolumeGroupState:Lcom/android/server/audio/AudioService$VolumeGroupState;

    .line 181
    if-eqz v11, :cond_9

    .line 183
    iput-object v10, v11, Lcom/android/server/audio/AudioService$VolumeGroupState;->mSettingName:Ljava/lang/String;

    .line 185
    :cond_9
    aget-object v2, v3, v2

    .line 187
    invoke-virtual {v7, v2, v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setAllIndexes(Lcom/android/server/audio/AudioService$VolumeStreamState;Ljava/lang/String;)V

    .line 190
    monitor-exit v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 191
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 192
    sget-boolean v0, Lcom/android/server/audio/AudioService;->sIndependentA11yVolume:Z

    .line 194
    if-eqz v0, :cond_a

    .line 196
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 198
    aget-object v0, v0, v4

    .line 200
    invoke-virtual {v0}, Lcom/android/server/audio/AudioService$VolumeStreamState;->readSettings()V

    .line 203
    :cond_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/audio/AudioService;->getRingerModeInternal()I

    .line 206
    move-result v0

    .line 207
    invoke-virtual {v1, v0, v9}, Lcom/android/server/audio/AudioService;->setRingerModeInt(IZ)V

    .line 210
    iget-object v10, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 212
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 214
    aget-object v15, v0, v8

    .line 216
    const/4 v13, 0x0

    .line 217
    const/4 v14, 0x0

    .line 218
    const/16 v11, 0xa

    .line 220
    const/4 v12, 0x2

    .line 221
    const/16 v16, 0x0

    .line 223
    invoke-static/range {v10 .. v16}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 226
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mAudioHandler:Lcom/android/server/audio/AudioService$AudioHandler;

    .line 228
    iget-object v2, v1, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 230
    aget-object v22, v2, v4

    .line 232
    const/16 v20, 0x0

    .line 234
    const/16 v21, 0x0

    .line 236
    const/16 v18, 0xa

    .line 238
    const/16 v19, 0x2

    .line 240
    const/16 v23, 0x0

    .line 242
    move-object/from16 v17, v0

    .line 244
    invoke-static/range {v17 .. v23}, Lcom/android/server/audio/AudioService;->sendMsg(Landroid/os/Handler;IIIILjava/lang/Object;I)V

    .line 247
    goto :goto_6

    .line 248
    :catchall_0
    move-exception v0

    .line 249
    goto :goto_5

    .line 250
    :catchall_1
    move-exception v0

    .line 251
    :try_start_3
    monitor-exit v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 252
    :try_start_4
    throw v0

    .line 253
    :goto_5
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 254
    throw v0

    .line 255
    :cond_b
    :goto_6
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 257
    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    .line 260
    move-result v2

    .line 261
    :goto_7
    if-ge v9, v2, :cond_c

    .line 263
    :try_start_5
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 265
    invoke-virtual {v0, v9}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    .line 268
    move-result-object v0

    .line 269
    check-cast v0, Landroid/media/IStreamAliasingDispatcher;

    .line 271
    invoke-interface {v0}, Landroid/media/IStreamAliasingDispatcher;->dispatchStreamAliasingChanged()V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0

    .line 274
    goto :goto_8

    .line 275
    :catch_0
    move-exception v0

    .line 276
    const-string v3, "AS.AudioService"

    .line 278
    const-string v4, "Error on stream alias update dispatch"

    .line 280
    invoke-static {v3, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 283
    :goto_8
    add-int/lit8 v9, v9, 0x1

    .line 285
    goto :goto_7

    .line 286
    :cond_c
    iget-object v0, v1, Lcom/android/server/audio/AudioService;->mStreamAliasingDispatchers:Landroid/os/RemoteCallbackList;

    .line 288
    invoke-virtual {v0}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 291
    return-void
.end method

.method public final updateVibratorInfos()V
    .locals 8

    .line 1
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mContext:Landroid/content/Context;

    .line 3
    const-class v0, Landroid/os/VibratorManager;

    .line 5
    invoke-virtual {p0, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 8
    move-result-object p0

    .line 9
    check-cast p0, Landroid/os/VibratorManager;

    .line 11
    const-string v0, "AS.AudioService"

    .line 13
    if-nez p0, :cond_0

    .line 15
    const-string p0, "Vibrator manager is not found"

    .line 17
    invoke-static {v0, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 20
    return-void

    .line 21
    :cond_0
    invoke-virtual {p0}, Landroid/os/VibratorManager;->getVibratorIds()[I

    .line 24
    move-result-object v1

    .line 25
    array-length v2, v1

    .line 26
    if-nez v2, :cond_1

    .line 28
    const-string p0, "No vibrator found"

    .line 30
    invoke-static {v0, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    return-void

    .line 34
    :cond_1
    new-instance v2, Ljava/util/ArrayList;

    .line 36
    array-length v3, v1

    .line 37
    invoke-direct {v2, v3}, Ljava/util/ArrayList;-><init>(I)V

    .line 40
    array-length v3, v1

    .line 41
    const/4 v4, 0x0

    .line 42
    :goto_0
    if-ge v4, v3, :cond_3

    .line 44
    aget v5, v1, v4

    .line 46
    invoke-virtual {p0, v5}, Landroid/os/VibratorManager;->getVibrator(I)Landroid/os/Vibrator;

    .line 49
    move-result-object v6

    .line 50
    if-eqz v6, :cond_2

    .line 52
    invoke-virtual {v2, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 55
    goto :goto_1

    .line 56
    :cond_2
    const-string v6, "Vibrator("

    .line 58
    const-string v7, ") is not found"

    .line 60
    invoke-static {v5, v6, v7, v0}, Lcom/android/server/accessibility/BrailleDisplayConnection$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 63
    :goto_1
    add-int/lit8 v4, v4, 0x1

    .line 65
    goto :goto_0

    .line 66
    :cond_3
    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    .line 69
    move-result p0

    .line 70
    if-eqz p0, :cond_4

    .line 72
    const-string p0, "Cannot find any available vibrator"

    .line 74
    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    return-void

    .line 78
    :cond_4
    invoke-static {v2}, Landroid/media/AudioSystem;->setVibratorInfos(Ljava/util/List;)I

    .line 81
    return-void
.end method

.method public final updateVolumeStates(IILjava/lang/String;)V
    .locals 5

    .line 1
    const/high16 v0, 0x400000

    .line 3
    if-ne p1, v0, :cond_0

    .line 5
    const/4 p1, 0x2

    .line 6
    :cond_0
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 8
    aget-object v0, v0, p2

    .line 10
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 13
    const-class v1, Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 15
    monitor-enter v1

    .line 16
    :try_start_0
    iget-object v0, v0, Lcom/android/server/audio/AudioService$VolumeStreamState;->mIndexMap:Lcom/android/server/audio/AudioService$VolumeStreamState$1;

    .line 18
    const/4 v2, -0x1

    .line 19
    invoke-virtual {v0, p1, v2}, Landroid/util/SparseIntArray;->get(II)I

    .line 22
    move-result v0

    .line 23
    const/4 v3, 0x0

    .line 24
    const/4 v4, 0x1

    .line 25
    if-eq v0, v2, :cond_1

    .line 27
    move v0, v4

    .line 28
    goto :goto_0

    .line 29
    :cond_1
    move v0, v3

    .line 30
    :goto_0
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 31
    if-nez v0, :cond_2

    .line 33
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 35
    aget-object v1, v0, p2

    .line 37
    sget-object v2, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 39
    aget v2, v2, p2

    .line 41
    aget-object v0, v0, v2

    .line 43
    const/high16 v2, 0x40000000    # 2.0f

    .line 45
    invoke-virtual {v0, v2}, Lcom/android/server/audio/AudioService$VolumeStreamState;->getIndex(I)I

    .line 48
    move-result v0

    .line 49
    invoke-virtual {v1, v0, p1, p3, v4}, Lcom/android/server/audio/AudioService$VolumeStreamState;->setIndex(IILjava/lang/String;Z)Z

    .line 52
    :cond_2
    new-instance v0, Landroid/media/AudioAttributes$Builder;

    .line 54
    invoke-direct {v0}, Landroid/media/AudioAttributes$Builder;-><init>()V

    .line 57
    invoke-virtual {v0, p2}, Landroid/media/AudioAttributes$Builder;->setInternalLegacyStreamType(I)Landroid/media/AudioAttributes$Builder;

    .line 60
    move-result-object v0

    .line 61
    invoke-virtual {v0}, Landroid/media/AudioAttributes$Builder;->build()Landroid/media/AudioAttributes;

    .line 64
    move-result-object v0

    .line 65
    invoke-virtual {p0, v0, v4}, Lcom/android/server/audio/AudioService;->getDevicesForAttributesInt(Landroid/media/AudioAttributes;Z)Ljava/util/ArrayList;

    .line 68
    move-result-object v0

    .line 69
    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 72
    move-result-object v0

    .line 73
    :cond_3
    :goto_1
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    .line 76
    move-result v1

    .line 77
    if-eqz v1, :cond_4

    .line 79
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 82
    move-result-object v1

    .line 83
    check-cast v1, Landroid/media/AudioDeviceAttributes;

    .line 85
    invoke-virtual {v1}, Landroid/media/AudioDeviceAttributes;->getType()I

    .line 88
    move-result v1

    .line 89
    invoke-static {p1}, Landroid/media/AudioDeviceInfo;->convertInternalDeviceToDeviceType(I)I

    .line 92
    move-result v2

    .line 93
    if-ne v1, v2, :cond_3

    .line 95
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 97
    aget-object v1, v1, p2

    .line 99
    invoke-virtual {v1}, Lcom/android/server/audio/AudioService$VolumeStreamState;->checkFixedVolumeDevices()V

    .line 102
    invoke-virtual {p0, p2}, Lcom/android/server/audio/AudioService;->isStreamMute(I)Z

    .line 105
    move-result v1

    .line 106
    if-eqz v1, :cond_3

    .line 108
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mFullVolumeDevices:Ljava/util/Set;

    .line 110
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 113
    move-result-object v2

    .line 114
    check-cast v1, Ljava/util/HashSet;

    .line 116
    invoke-virtual {v1, v2}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 119
    move-result v1

    .line 120
    if-eqz v1, :cond_3

    .line 122
    iget-object v1, p0, Lcom/android/server/audio/AudioService;->mStreamStates:[Lcom/android/server/audio/AudioService$VolumeStreamState;

    .line 124
    aget-object v1, v1, p2

    .line 126
    new-instance v2, Ljava/lang/StringBuilder;

    .line 128
    const-string/jumbo v4, "updateVolumeStates("

    .line 131
    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 134
    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 137
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 140
    move-result-object v2

    .line 141
    invoke-virtual {v1, v2, v3}, Lcom/android/server/audio/AudioService$VolumeStreamState;->mute(Ljava/lang/String;Z)Z

    .line 144
    goto :goto_1

    .line 145
    :cond_4
    return-void

    .line 146
    :catchall_0
    move-exception p0

    .line 147
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 148
    throw p0
.end method

.method public final validateAudioAttributesUsage(Landroid/media/AudioAttributes;)V
    .locals 2

    .line 1
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getSystemUsage()I

    .line 4
    move-result v0

    .line 5
    invoke-static {v0}, Landroid/media/AudioAttributes;->isSystemUsage(I)Z

    .line 8
    move-result v1

    .line 9
    if-eqz v1, :cond_4

    .line 11
    const/16 v1, 0x11

    .line 13
    if-ne v0, v1, :cond_0

    .line 15
    invoke-virtual {p1}, Landroid/media/AudioAttributes;->getAllFlags()I

    .line 18
    move-result p1

    .line 19
    const/high16 v1, 0x10000

    .line 21
    and-int/2addr p1, v1

    .line 22
    if-eqz p1, :cond_0

    .line 24
    const-string p1, "android.permission.CALL_AUDIO_INTERCEPTION"

    .line 26
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 29
    move-result p1

    .line 30
    if-nez p1, :cond_1

    .line 32
    :cond_0
    const-string p1, "android.permission.MODIFY_AUDIO_ROUTING"

    .line 34
    invoke-virtual {p0, p1}, Lcom/android/server/audio/AudioService;->callerHasPermission(Ljava/lang/String;)Z

    .line 37
    move-result p1

    .line 38
    if-eqz p1, :cond_3

    .line 40
    :cond_1
    invoke-virtual {p0, v0}, Lcom/android/server/audio/AudioService;->isSupportedSystemUsage(I)Z

    .line 43
    move-result p0

    .line 44
    if-eqz p0, :cond_2

    .line 46
    goto :goto_0

    .line 47
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 49
    new-instance p1, Ljava/lang/StringBuilder;

    .line 51
    const-string v1, "Unsupported usage "

    .line 53
    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 56
    invoke-static {v0}, Landroid/media/AudioAttributes;->usageToString(I)Ljava/lang/String;

    .line 59
    move-result-object v0

    .line 60
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 63
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 66
    move-result-object p1

    .line 67
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 70
    throw p0

    .line 71
    :cond_3
    new-instance p0, Ljava/lang/SecurityException;

    .line 73
    const-string p1, "Missing MODIFY_AUDIO_ROUTING permission"

    .line 75
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 78
    throw p0

    .line 79
    :cond_4
    :goto_0
    return-void
.end method

.method public final volumeAdjustmentAllowedByDnd(II)Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mNm:Landroid/app/NotificationManager;

    .line 3
    invoke-virtual {v0}, Landroid/app/NotificationManager;->getZenMode()I

    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x2

    .line 8
    const/4 v2, 0x1

    .line 9
    if-eq v0, v2, :cond_0

    .line 11
    if-eq v0, v1, :cond_0

    .line 13
    const/4 v3, 0x3

    .line 14
    if-eq v0, v3, :cond_0

    .line 16
    return v2

    .line 17
    :cond_0
    invoke-static {p1}, Lcom/android/server/audio/AudioService;->isStreamMutedByRingerOrZenMode(I)Z

    .line 20
    move-result v0

    .line 21
    if-eqz v0, :cond_4

    .line 23
    iget-boolean v0, p0, Lcom/android/server/audio/AudioService;->mUseVolumeGroupAliases:Z

    .line 25
    if-eqz v0, :cond_1

    .line 27
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->STREAM_VOLUME_ALIAS_VOICE:[I

    .line 29
    aget p1, p0, p1

    .line 31
    aget p0, p0, v1

    .line 33
    if-ne p1, p0, :cond_2

    .line 35
    goto :goto_0

    .line 36
    :cond_1
    sget-object p0, Lcom/android/server/audio/AudioService;->mStreamVolumeAlias:[I

    .line 38
    aget p0, p0, v1

    .line 40
    if-ne p1, p0, :cond_2

    .line 42
    goto :goto_0

    .line 43
    :cond_2
    and-int/lit8 p0, p2, 0x2

    .line 45
    if-eqz p0, :cond_3

    .line 47
    goto :goto_0

    .line 48
    :cond_3
    const/4 v2, 0x0

    .line 49
    :cond_4
    :goto_0
    return v2
.end method

.method public final volumeAdjustmentAllowedByLeBroadcast(II)Z
    .locals 2

    .line 1
    const v0, 0x20000002

    .line 4
    const/4 v1, 0x1

    .line 5
    if-eq p1, v0, :cond_0

    .line 7
    return v1

    .line 8
    :cond_0
    const/4 p1, 0x0

    .line 9
    if-eq p2, v1, :cond_4

    .line 11
    const/4 v0, 0x5

    .line 12
    if-ne p2, v0, :cond_1

    .line 14
    goto :goto_0

    .line 15
    :cond_1
    const/4 v0, 0x3

    .line 16
    if-eq p2, v0, :cond_2

    .line 18
    const/16 v0, 0xb

    .line 20
    if-ne p2, v0, :cond_3

    .line 22
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->isLeBroadcastWithoutLeDevice()Z

    .line 25
    move-result p0

    .line 26
    if-eqz p0, :cond_3

    .line 28
    move p1, v1

    .line 29
    :cond_3
    xor-int/lit8 p0, p1, 0x1

    .line 31
    return p0

    .line 32
    :cond_4
    :goto_0
    return p1
.end method

.method public final wasStreamActiveRecently(II)Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    invoke-static {p1, p2}, Landroid/media/AudioSystem;->isStreamActive(II)Z

    .line 9
    move-result v0

    .line 10
    if-nez v0, :cond_1

    .line 12
    iget-object p0, p0, Lcom/android/server/audio/AudioService;->mAudioSystem:Lcom/android/server/audio/AudioSystemAdapter;

    .line 14
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 17
    invoke-static {p1, p2}, Landroid/media/AudioSystem;->isStreamActiveRemotely(II)Z

    .line 20
    move-result p0

    .line 21
    if-eqz p0, :cond_0

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    const/4 p0, 0x0

    .line 25
    goto :goto_1

    .line 26
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 27
    :goto_1
    return p0
.end method

.method public final wouldToggleZenMode(I)Z
    .locals 2

    .line 1
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x1

    .line 6
    if-nez v0, :cond_0

    .line 8
    if-eqz p1, :cond_0

    .line 10
    return v1

    .line 11
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/audio/AudioService;->getRingerModeExternal()I

    .line 14
    move-result p0

    .line 15
    if-eqz p0, :cond_1

    .line 17
    if-nez p1, :cond_1

    .line 19
    return v1

    .line 20
    :cond_1
    const/4 p0, 0x0

    .line 21
    return p0
.end method
